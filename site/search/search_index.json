{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"\u672c\u7ad9 \u00b6 \u4e2a\u4eba\u5b66\u4e60\u7b14\u8bb0 \u5173\u4e8e\u6211 \u00b6 \u975e\u8ba1\u7b97\u673a\u76f8\u5173\u4e13\u4e1a\u83dc\u9e1f... \u8054\u7cfb\u6211 \u00b6 github\uff1a https://github.com/sufangmu \u535a\u5ba2\u56ed\uff1a https://www.cnblogs.com/sufangmu \u90ae\u7bb1\uff1a sufangmu8377@163.com \u5fae\u4fe1\uff1a","title":"\u9996\u9875"},{"location":"#_1","text":"\u4e2a\u4eba\u5b66\u4e60\u7b14\u8bb0","title":"\u672c\u7ad9"},{"location":"#_2","text":"\u975e\u8ba1\u7b97\u673a\u76f8\u5173\u4e13\u4e1a\u83dc\u9e1f...","title":"\u5173\u4e8e\u6211"},{"location":"#_3","text":"github\uff1a https://github.com/sufangmu \u535a\u5ba2\u56ed\uff1a https://www.cnblogs.com/sufangmu \u90ae\u7bb1\uff1a sufangmu8377@163.com \u5fae\u4fe1\uff1a","title":"\u8054\u7cfb\u6211"},{"location":"CICD/Ansible/ansible/","text":"Ansible\u662f\u4e3b\u6d41\u7684\u81ea\u52a8\u5316\u8fd0\u7ef4\u5de5\u5177\u4e4b\u4e00\uff0c\u7c7b\u4f3c\u4ea7\u54c1\u8fd8\u6709Chef\u3001Puppet\u3001SaltStack\u7b49\u3002\u7b2c\u4e00\u4e2a\u7248\u672c\u662f0.0.1,\u53d1\u5e03\u4e8e2012\u5e743\u67089\u65e5\u3002 \u4e00\u3001Ansible\u7b80\u4ecb \u00b6 1\u3001Ansible\u67b6\u6784 \u00b6 \u5f15\u64ce\uff1aAnsible \u6a21\u5757\uff1a \u6838\u5fc3\u6a21\u5757\uff08core modules\uff09:\u81ea\u5e26\u6a21\u5757 \u81ea\u5b9a\u4e49\u6a21\u5757\uff08custom modules\uff09 \u63d2\u4ef6\uff08plugins\uff09:\u6a21\u5757\u529f\u80fd\u7684\u8865\u5145\uff0c\u501f\u52a9\u63d2\u4ef6\u5b8c\u6210\u8bb0\u5f55\u65e5\u5fd7\u3001\u90ae\u4ef6\u529f\u80fd \u5267\u672c\uff08playbooks\uff09:\u4efb\u52a1\u914d\u7f6e\u6587\u4ef6\uff0c\u53ef\u4ee5\u5305\u542b\u591a\u4e2a\u4efb\u52a1\u3002 \u8fde\u63a5\u63d2\u4ef6\uff08connectior plugins\uff09:\u901a\u8fc7\u8fde\u63a5\u63d2\u4ef6\u8fde\u63a5\u5230\u88ab\u7ba1\u7406\u4e3b\u673a\uff0c\u9ed8\u8ba4\u4f7f\u7528SSH\u3002\u8fd8\u652f\u6301Zeromq\u3001local\u8fde\u63a5\u65b9\u5f0f \u4e3b\u673a\u6e05\u5355\uff08host inventory\uff09:\u5b9a\u4e49\u88ab\u7ba1\u7406\u8282\u70b9 2\u3001Ansible\u5b9e\u73b0\u539f\u7406 \u00b6 Ansible\u6267\u884c\u547d\u4ee4\u65f6\uff0c\u901a\u8fc7\u5176\u5e95\u5c42\u4f20\u8f93\u6a21\u5757\uff0c\u5c06\u4e00\u4e2a\u6216\u591a\u4e2a\u6587\u4ef6\uff0c\u6216\u8005\u5b9a\u4e49\u4e00\u4e2aPlay\u6216Command\u547d\u4ee4\u4f20\u8f93\u5230\u8fdc\u7a0b\u670d\u52a1\u5668\u7684/tmp\u76ee\u5f55\u7684\u4e34\u65f6\u6587\u4ef6\uff0c\u5e76\u5728\u8fdc\u7a0b\u6267\u884c\u8fd9\u4e9bPlay/Command\uff0c\u7136\u540e\u5220\u9664\u4e34\u65f6\u6587\u4ef6\u5e76\u8fd4\u56de\u547d\u4ee4\u7684\u6267\u884c\u7ed3\u679c Ansible\u7684\u901a\u4fe1\u53d1\u5c55\u53f2\uff1a \u4f7f\u7528Paramiko OpenSSH(1.3\u9ed8\u8ba4\u4f7f\u7528) accelerate\u52a0\u901f\u6a21\u5f0f Faster OpenSSH in Ansible 1.5+(pipelining\u52a0\u901f\u65b9\u5f0f) 3\u3001Ansible\u7279\u70b9 \u00b6 \u8bed\u6cd5\u7b80\u5355\uff1a\u57fa\u4e8eYAML \u65e0\u5ba2\u6237\u7aef\uff1a\u4e0d\u9700\u8981\u5b89\u88c5\u5ba2\u6237\u7aef\uff0c\u901a\u8fc7SSH\u8fde\u63a5\u88ab\u7ba1\u7406\u4e3b\u673a Push\u9000\u9001 \u5927\u91cf\u5185\u7f6e\u6a21\u5757\uff1a\u201cansible-doc -l\u201d\u53ef\u4ee5\u67e5\u770b\u5df2\u6709\u7684\u6a21\u5757 \u7b49\u5e42\u6027\uff08idempotent\uff09\uff1a\u5df2\u7ecf\u5728\u88ab\u7ba1\u7406\u7aef\u6267\u884c\u8fc7\u7684\u5267\u672c\u4e0d\u4f1a\u518d\u6267\u884c 4\u3001\u4e3b\u8981\u7528\u9014 \u00b6 \u5e94\u7528\u90e8\u7f72 \u914d\u7f6e\u7ba1\u7406 \u4efb\u52a1\u6d41\u7f16\u6392 5\u3001\u5b89\u88c5 \u00b6 \u5728Ubuntu\u4e0a\u5b89\u88c5 1 2 3 4 5 sudo apt update sudo apt-get install software-properties-common sudo apt-add-repository --yes ppa:ansible/ansible:2.7.6 sudo apt update sudo apt-get install ansible 6\u3001\u76ee\u5f55\u7ed3\u6784 \u00b6 \u914d\u7f6e\u76ee\u5f55\uff1a/etc/ansible\uff0c\u529f\u80fd\uff1aInventory\u4e3b\u673a\u4fe1\u606f\u914d\u7f6e\uff0cAnsible\u5de5\u5177\u914d\u7f6e \u6267\u884c\u76ee\u5f55\uff1a/usr/bin/\uff0c\u529f\u80fd\uff1aansible\u9ed8\u8ba4\u547d\u4ee4\u5b58\u653e\u76ee\u5f55 lib\u5e93\u4f9d\u8d56\u76ee\u5f55:/usr/lib/python2.7/dist-packages/ansible/* \u5e2e\u52a9\u6587\u6863\u76ee\u5f55\uff1a/usr/share/doc/ansible/* man\u6587\u6863\u76ee\u5f55\uff1a/usr/share/man/man1/ 7\u3001\u4e0e\u5176\u4ed6\u5de5\u5177\u7684\u5bf9\u6bd4 \u00b6 \u5de5\u5177 Ansible Puppet Chef SaltStack \u8bed\u8a00 Python Ruby Ruby Python \u67b6\u6784 \u65e0Client C/S C/S C/S 8\u3001Ansible\u7684\u914d\u7f6e\u6587\u4ef6\u8bfb\u53d6 \u00b6 \u73af\u5883\u53d8\u91cf\u4e2d\u7684ANSIBLE_CONFIG \u5f53\u524d\u76ee\u5f55\u4e0b\u7684ansible.cfg ~/.ansible.cfg /etc/ansible/ansible.cfg \u4e8c\u3001\u57fa\u672c\u7528\u6cd5 \u00b6 1\u3001Ansible\u547d\u4ee4\u6267\u884c\u65b9\u5f0f\uff1a \u00b6 Ad-Doc \u7528\u4e8e\u6267\u884c\u4e34\u65f6\u547d\u4ee4 Ansible-playbooks Tower\uff08\u56fe\u5f62\u5316\uff0c\u5546\u4e1a\u7248\uff09 \u4f7f\u7528\u524d\u5148\u8ba4\u8bc1\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 ubuntu@server:~$ ssh-copy-id ubuntu@172.16.10.101 /usr/bin/ssh-copy-id: ERROR: No identities found ubuntu@server:~$ ssh-keygen Generating public/private rsa key pair. Enter file in which to save the key ( /home/ubuntu/.ssh/id_rsa ) : Created directory '/home/ubuntu/.ssh' . Enter passphrase ( empty for no passphrase ) : Enter same passphrase again: Your identification has been saved in /home/ubuntu/.ssh/id_rsa. Your public key has been saved in /home/ubuntu/.ssh/id_rsa.pub. The key fingerprint is: c6:31:74:1b:03:56:63:00:24:1f:45:10:79:60:cf:e8 ubuntu@server The key 's randomart image is: +--[ RSA 2048]----+ | ..OOB+B | | +.B.o = | | o.= . | | . . o | | E S | | . | | | | | | | +-----------------+ ubuntu@server:~$ ssh-copy-id ubuntu@172.16.10.101 The authenticity of host ' 172 .16.10.101 ( 172 .16.10.101 ) ' can' t be established. ECDSA key fingerprint is cd:f2:2a:0b:33:25:ba:94:36:6b:43:f7:02:e4:1c:d2. Are you sure you want to continue connecting ( yes/no ) ? yes /usr/bin/ssh-copy-id: INFO: attempting to log in with the new key ( s ) , to filter out any that are already installed /usr/bin/ssh-copy-id: INFO: 1 key ( s ) remain to be installed -- if you are prompted now it is to install the new keys ubuntu@172.16.10.101 's password: Number of key(s) added: 1 Now try logging into the machine, with: \"ssh ' ubuntu@172.16.10.101 ' \" and check to make sure that only the key(s) you wanted were added. 2\u3001ansible\u7cfb\u5217\u547d\u4ee4 \u00b6 ansible \u4f7f\u7528\u573a\u666f\uff1a\u4e34\u65f6\u4e00\u6b21\u6027\u64cd\u4f5c\u3001\u4e8c\u6b21\u5f00\u53d1\u63a5\u53e3\u8c03\u7528 ansible-galaxy \u4f7f\u7528\u573a\u666f\uff1a\u4ece https://galaxy.ansible.com \u4e0b\u8f7dRoles ansible-pull \u4f7f\u7528\u573a\u666f\uff1a\u9700\u8981\u914d\u7f6e\u7684\u673a\u5668\u6570\u91cf\u5de8\u5927 ansible-doc \u4f7f\u7528\u573a\u666f\uff1a\u67e5\u770bansible\u6a21\u5757\u7684\u8bf4\u660e \u67e5\u770b\u652f\u6301\u7684\u6a21\u5757\uff1a bash ubuntu@server:~$ ansible-doc -l | wc -l 2080 ansible-playbook \u4f7f\u7528\u573a\u666f\uff1a\u8bfb\u53d6\u9884\u5148\u7f16\u5199\u7684playbook\u6587\u4ef6\u5b9e\u73b0\u6279\u91cf\u7ba1\u7406 ansible-vault \u4f7f\u7528\u573a\u666f\uff1a\u914d\u7f6e\u6587\u4ef6\u52a0\u5bc6 1 2 # \u52a0\u5bc6yml\u6587\u4ef6 ansible-vault encrypt example.yml ansible-console \u4f7f\u7528\u573a\u666f\uff1a\u4ea4\u4e92\u5f0f\u4f7f\u7528ansible\u547d\u4ee4 3\u3001 Ansible Inventory\u914d\u7f6e \u00b6 Inventory\u662fAnsible\u914d\u7f6e\u4e3b\u673a\u4fe1\u606f\u7684\u914d\u7f6e\u6587\u4ef6\u3002\u9ed8\u8ba4\u5b58\u653e\u5728/etc/ansible/hosts,\u4f7f\u7528\u65f6\u53ef\u4ee5\u4f7f\u7528-i\u6307\u5b9a\u6587\u4ef6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 # 1. \u76f4\u63a5\u4e3aIP\u5730\u5740 192 .168.1.100 # 2. \u4e3b\u673a\u540d\u65b9\u5f0f mysql.company.com # 3. ssh\u7aef\u53e3\u4e0d\u662f22\u7684\u4e3b\u673a\u5b9a\u4e49 mysql.company.com:2222 # 4. \u6709\u89c4\u5f8b\u7684\u4e3b\u673a 192 .168.1. [ 101 :103 ] # \u8868\u793a101 102 103 mysql [ abc ] .company.com # mysqla mysqlb mysqlc # 5. \u5b9a\u4e49\u7ec4 [ web ] web1.company.com web2.company.com web3.company.com # 6. \u7ec4\u5d4c\u5957 [ nginx ] node1.company.com node2.company.com [ tomcat ] node4.company.com node5.company.com [ web:children ] nginx tomcat 4. \u53d8\u91cf \u00b6 \u53d8\u91cf\u68c0\u7d22\u987a\u5e8f Inventory\u914d\u7f6e\u6587\u4ef6 Playbook\u4e2dvar\u5b9a\u4e49\u7684\u533a\u57df Roles\u4e2dvars\u76ee\u5f55\u4e0b\u7684\u6587\u4ef6 Roles\u540c\u7ea7\u76ee\u5f55group_vars\u548chosts_vars\u76ee\u5f55\u4e0b\u7684\u6587\u4ef6 1 2 3 4 5 6 7 # 1. \u4e3b\u673a\u53d8\u91cf [ web ] host1 http_port = 80 # 2. \u7ec4\u53d8\u91cf [ web:vars ] ntp_server = ntp.atlanta.example.com 5. Ad-Hoc\u4f7f\u7528 \u00b6 \u57fa\u672c\u6a21\u5757\u4f7f\u7528\uff1a \u6267\u884csudo ansible sw3 -m command -b -K -a \"docker images\" ansible all -m command -i hosts -a \"free -h\" \u4f7f\u7528\u573a\u666f \u5bf9\u670d\u52a1\u5668\u8fdb\u884c\u5065\u5eb7\u68c0\u67e5 \u5176\u4e2d\u4e00\u4e2a\u6216\u4e00\u7ec4\u4e3b\u673a\u8fdb\u884c\u66f4\u6539 \u4e09\u3001Playbook \u00b6 ansible\u7684\u4efb\u52a1\u914d\u7f6e\u6587\u4ef6\u79f0\u4e3aplaybook(\u5267\u672c)\uff0c\u6bcf\u4e00\u4e2a\u5267\u672c\u90fd\u5305\u542b\u4e00\u7cfb\u5217\u7684play\u3002 1. \u683c\u5f0f \u00b6 ansible\u91c7\u7528YAML\u8bed\u6cd5\u7f16\u5199\uff0c\u6709\u4e24\u79cd\u683c\u5f0f\uff1a \u591a\u884c\u7f29\u8fdb(\u5efa\u8bae\u4f7f\u7528) \u5b98\u65b9\u793a\u4f8b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 --- # \u9700\u8981\u4ee5---\u5f00\u59cb\uff0c\u4e14\u8981\u9876\u884c\u9996\u5199 # \u53ef\u4ee5\u5728\u8fd9\u91cc\u7b80\u8981\u8bf4\u660eplaybook\u7684\u529f\u80fd(\u53ef\u9009) - hosts : webservers # \u9009\u62e9\u5728\u54ea\u4e9b\u4e3b\u673a\u6267\u884c\u4e0b\u9762\u7684play vars : # \u5b9a\u4e49\u7684\u53d8\u91cf http_port : 80 max_clients : 200 remote_user : root tasks : # \u6307\u5b9a\u4e00\u7cfb\u5217\u5c06\u8981\u8fd0\u884c\u7684\u4efb\u52a1 - name : ensure apache is at the latest version yum : name : httpd state : latest - name : write the apache config file template : src : /srv/httpd.j2 dest : /etc/httpd.conf notify : - restart apache - name : ensure apache is running service : name : httpd state : started handlers : - name : restart apache service : name : httpd state : restarted \u5355\u884c\u7f29\u5199 2. Handler\uff1a \u00b6 1.notify \u89e6\u53d1handler \u00b6 1 2 3 4 5 6 7 8 9 10 tasks : - name : \u5f00\u542fapache rewrite apache2_module : name : rewrite state : present handlers : - name : restart apache service : name : httpd state : restarted 2.handler \u8c03\u7528 handler \u00b6 1 2 3 4 5 6 7 8 9 10 11 handlers : - name : restart apache service : name : httpd state : restarted notify : restart memcached - name : restart memcached service : name : memcached state : restarted \u6ce8\u610f\uff1a handler\u53ea\u6709\u5728\u5176\u6240\u5728\u7684\u4efb\u52a1\u88ab\u6267\u884c\u65f6\uff0c\u624d\u4f1a\u88ab\u8fd0\u884c handler\u53ea\u4f1a\u5728play\u7684\u672b\u5c3e\u8fd0\u884c\u4e00\u6b21 3. \u53d8\u91cf \u00b6 1.\u547d\u540d\u89c4\u5219 \u00b6 \u4ee5\u82f1\u6587\u5927\u5c0f\u5199\u5b57\u6bcd\u5f00\u5934 \u4e2d\u95f4\u53ef\u4ee5\u5305\u542b\u4e0b\u5212\u7ebf(_)\u548c\u6570\u5b57 2.\u53d8\u91cf\u7684\u5b9a\u4e49 \u00b6 1.\u5728vars\u4ee3\u7801\u5757\u5b9a\u4e49\u53d8\u91cf \u00b6 1 2 3 4 5 6 --- - hosts : test vars : foo : bar tasks : - debug : msg=\"var foo is set to {{ foo }}\" 2. \u628a\u53d8\u91cf\u5b9a\u4e49\u5230\u5355\u72ec\u7684\u6587\u4ef6\u4e2d \u00b6 1 2 3 $ cat vars.yml --- foo: bar 1 2 3 4 5 6 --- - hosts : test vars_files : - vars.yml tasks : - debug : msg=\"var foo is set to {{ foo }}\" 3. \u5728Inventory\u6587\u4ef6\u4e2d\u5b9a\u4e49\u53d8\u91cf\uff08\u4e0d\u5efa\u8bae\uff09 \u00b6 \u4e3a\u67d0\u53f0\u4e3b\u673a\u6307\u5b9a\u53d8\u91cf 1 app1.example.com proxy_state=present \u4e3a\u4e3b\u673a\u7ec4\u5b9a\u4e49\u53d8\u91cf 1 2 3 4 5 [ web ] node1 node2 [web:vars] http_port : 80 \u5728\u6267\u884cansible\u547d\u4ee4\u65f6\uff0cansible\u9ed8\u8ba4\u4f1a\u4ece/etc/ansible/host_vars\u548c/etc/ansible/group_vars\u4e24\u4e2a\u76ee\u5f55\u4e0b\u8bfb\u53d6\u53d8\u91cf\u5b9a\u4e49\uff0c\u53ef\u4ee5\u5728 \u8fd9\u4e24\u4e2a\u76ee\u5f55\u4e2d\u521b\u5efa\u4e0ehosts\u6587\u4ef6\u4e2d\u4e3b\u673a\u540d\u6216\u7ec4\u540d\u540c\u540d\u7684\u6587\u4ef6\u6765\u5b9a\u4e49\u53d8\u91cf\uff0c\u4f8b\u5982\uff1a 1 2 3 $ cat /etc/ansible/group_vars/web --- http_port: 80 4. \u6ce8\u518c\u53d8\u91cf \u00b6 \u5c06\u64cd\u4f5c\u7684\u7ed3\u679c\uff0c\u5305\u62ec\u6807\u51c6\u8f93\u51fa\u548c\u6807\u51c6\u9519\u8bef\u8f93\u51fa\u4fdd\u5b58\u5230\u53d8\u91cf\u4e2d\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u7528\u6765\u4fdd\u5b58\u64cd\u4f5c\u7ed3\u679c\u7684\u53d8\u91cf\u5c31\u53eb \u6ce8\u518c\u53d8\u91cf \u3002 \u5728playbook\u4e2d\u4f7f\u7528register\u6765\u58f0\u660e\u4e00\u4e2a\u53d8\u91cf\u4e3a\u6ce8\u518c\u53d8\u91cf\u3002 1 2 - shell : my_command_here register : my_command_result \u4f7f\u7528stdout\u65b9\u6cd5\u6765\u8bfb\u53d6\u6807\u51c6\u8f93\u51fa\u5185\u5bb9\uff1amy_command_result.stdout \u4f7f\u7528stderr\u65b9\u6cd5\u6765\u8bfb\u53d6\u9519\u8bef\u8f93\u51fa\u5185\u5bb9\uff1amy_command_result.stderr 5. facts\u4fe1\u606f \u00b6 \u5728\u8fd0\u884c\u4efb\u4f55\u4e00\u4e2aplaybook\u4e4b\u524d\uff0cansible\u9ed8\u8ba4\u4f1a\u5148\u6293\u53d6playbook\u4e2d\u6240\u6307\u5b9a\u7684\u6240\u6709\u4e3b\u673a\u7684\u7cfb\u7edf\u4fe1\u606f\uff0c\u8fd9\u4e9b\u4fe1\u606f\u79f0\u4e3afacts\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 ubuntu@server:~/test$ ansible-playbook test.yml PLAY [ web ] ************************************************************************************************************************************************************************************************************************* TASK [ Gathering Facts ] ************************************************************************************************************************************************************************************************************* ok: [ 172 .16.10.100 ] TASK [ debug ] *********************************************************************************************************************************************************************************************************************** ok: [ 172 .16.10.100 ] = > { \"msg\" : \"var http_port is set to 80\" } PLAY RECAP ************************************************************************************************************************************************************************************************************************* 172 .16.10.100 : ok = 2 changed = 0 unreachable = 0 failed = 0 facts\u4fe1\u606f\u7684\u83b7\u53d6 1 2 3 4 5 6 7 8 9 10 11 $ ansible web -m setup 172 .16.10.100 | SUCCESS = > { \"ansible_facts\" : { \"ansible_all_ipv4_addresses\" : [ \"172.16.10.100\" , \"10.0.3.15\" ] , \"ansible_all_ipv6_addresses\" : [ \"fe80::a00:27ff:fe15:7966\" , \"fe80::a00:27ff:fef4:8f74\" ] , \u5e38\u7528\u7684facts\u53d8\u91cf\uff1aansible_os_family,ansible_hostname,ansible_memtotal_mb\u3002 \u5982\u679c\u9700\u8981\u5728\u6267\u884cplaybook\u4e4b\u524d\u8df3\u8fc7\u6536\u96c6facts\u4fe1\u606f\u8fd9\u4e00\u4e0d\u53ef\u4ee5\u5728playbook\u4e2d\u8bbe\u7f6egather_facts\uff1a 1 2 3 --- - hosts : web gather_facts : no \u672c\u5730facts\u53d8\u91cf \u5728\u8fdc\u7a0b\u4e3b\u673a\u672c\u5730\u5b9a\u4e49facts\u53d8\u91cf \u9700\u8981\u628a\u5b9a\u4e49\u7684\u53d8\u91cf\u5199\u8fdb\u4e00\u4e2a\u4ee5.fact\u7ed3\u5c3e\u7684\u6587\u4ef6\u4e2d\uff08\u653e\u5728/etc/ansible/facts.d/\uff09\uff0c\u8fd9\u4e2a\u6587\u4ef6\u53ef\u4ee5\u662fjson\u6216ini\u6587\u4ef6\uff0c\u6216\u8005\u662f\u53ef\u4ee5\u8fd4\u56dejson\u4ee3\u7801\u7684\u53ef\u6267\u884c\u6587\u4ef6 6. \u53d8\u91cf\u7684\u4f18\u5148\u7ea7 \u00b6 \u7531\u9ad8\u5230\u4f4e\u6392\u5e8f \u5728\u547d\u4ee4\u884c\u4e2d\u5b9a\u4e49\u7684\u53d8\u91cf(\u5373\u7528-e\u5b9a\u4e49\u7684\u53d8\u91cf) \u5728Inventory\u4e2d\u5b9a\u4e49\u7684\u8fde\u63a5\u53d8\u91cf\uff0c\u5982ansible_ssh_user \u5927\u591a\u6570\u5176\u4ed6\u53d8\u91cf(play\u4e2d\u7684\u53d8\u91cf\uff0cincluded\u4e2d\u7684\u53d8\u91cf\uff0crole\u4e2d\u7684\u53d8\u91cf) \u5728Inventory\u4e2d\u5b9a\u4e49\u7684\u53d8\u91cf \u7531\u7cfb\u7edf\u901agather_facts\u65b9\u6cd5\u53d1\u73b0\u7684\u53d8\u91cf role\u9ed8\u8ba4\u53d8\u91cf 4. \u6d41\u7a0b\u63a7\u5236 if/then/when \u00b6 when \u00b6 \u5728\u7279\u5b9a\u7684\u6761\u4ef6\u4e0b\u6267\u884c\u4efb\u52a1 1 2 3 4 5 6 7 8 9 10 --- - hosts : web tasks : - name : \u6d4b\u8bd5php\u662f\u5426\u5b89\u88c5 shell : php --version register : php_version - name : \u5982\u679c\u5b89\u88c5\u5c31\u6267\u884c\u4e0b\u9762\u7684\u64cd\u4f5c debug : msg : \"php \u5b89\u88c5\u4e86\" when : \"'7.0' in php_version.stdout\" changed_when\u3001failed_when \u00b6 \u6839\u636e\u4efb\u52a1\u8fd0\u884c\u8fd4\u56de\u7ed3\u679c\u5224\u65ad\u4efb\u52a1\u7684\u8fd0\u884c\u7ed3\u679c\u662f\u5426\u771f\u7684\u7b26\u5408\u6211\u4eec\u7684\u9884\u671f 5. \u4efb\u52a1\u95f4\u6d41\u7a0b\u63a7\u5236 \u00b6 1.\u4efb\u52a1\u6682\u505c \u00b6 \u4e00\u4e9b\u670d\u52a1\u7684\u8fd0\u884c\u9700\u8981\u7b49\u5f85\u4e00\u4e9b\u72b6\u6001\u7684\u6062\u590d\uff0c\u6bd4\u5982\u4e00\u53f0\u4e3b\u673a\u6216\u5e94\u7528\u521a\u91cd\u542f\uff0c\u9700\u8981\u7b49\u5f85\u5b83\u4e0a\u9762\u7684\u7aef\u53e3\u5f00\u542f\uff0c\u6b64\u65f6 \u5c31\u4e0d\u5f97\u4e0d\u5c06\u6b63\u5728\u8fd0\u884c\u7684\u4efb\u52a1\u6682\u505c\uff0c\u76f4\u5230\u72b6\u6001\u6ee1\u8db3\u6211\u4eec\u7684\u9700\u6c42 1 2 3 4 5 6 7 8 9 10 11 12 13 14 --- - hosts : web tasks : - name : \u7b49\u5f85web\u91cd\u542f local_action : module : wait_for host : nginx port : 80 delay : 10 timeout : 300 state : started - name : \u91cd\u542f\u540e\u7ee7\u7eed debug : msg : \"\u91cd\u542f\u540e\u6267\u884c\u540e\u7eed\u64cd\u4f5c\" 6. \u4ea4\u4e92\u5f0f\u63d0\u793a \u00b6 vars_prompt\u6a21\u5757\u4f1a\u5728\u6240\u6709play\u6267\u884c\u524d\u5148\u6267\u884c\uff0c\u5176\u4f18\u5148\u7ea7\u9ad8\u4e8eGathering Facts\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 --- - hosts : web vars_prompt : - name : username prompt : \"username\" default : \"root\" # \u8bbe\u7f6e\u9ed8\u8ba4\u503c - name : password prompt : \"password\" private : yes # \u8f93\u5165\u5bc6\u7801\u4e0d\u53ef\u89c1 confirm : yes # \u8981\u6c42\u8f93\u5165\u4e24\u6b21 tasks : - name : \u8f93\u51fa\u5bc6\u7801 debug : msg : \"{{ username }} {{ password }}\" 7. \u6807\u7b7e \u00b6 \u6807\u7b7e\u529f\u80fd\u53ef\u4ee5\u7ed9\u89d2\u8272\u3001\u6587\u4ef6\u3001\u5355\u72ec\u7684\u4efb\u52a1\u6253\u4e0a\u6807\u7b7e\uff0c\u7136\u540e\u5229\u7528\u6807\u7b7e\u6765\u6307\u5b9a\u8981\u8fd0\u884cplaybook\u4e2d\u7684\u4e2a\u522b\u4efb\u52a1\u6216\u4e0d\u6267\u884c\u6307\u5b9a\u7684\u4efb\u52a1\u3002 1 2 3 4 - hosts : rabbitmq tags : rabbitmq roles : - rabbitmq \u6267\u884c\u5e26\u6307\u5b9a\u6807\u7b7e\u7684\u4efb\u52a1 1 ansible-playbook --tags \"rabbitmq\" test.yml \u8df3\u8fc7\u5e26\u6307\u5b9a\u6807\u7b7e\u7684\u4efb\u52a1 1 ansible-playbook --skip-tags \"rabbitmq\" test.yml \u53ef\u4ee5\u52a0\u591a\u4e2a\u6807\u7b7e 1 2 3 4 5 6 7 tags : - one - two # or tags : [ 'one' , 'two' ] 8. block\u5757 \u00b6 2.0\u4ee5\u540e\u7684\u7248\u672c\u5f15\u5165\uff0c\u5757\u529f\u80fd\u53ef\u4ee5\u5c06\u4efb\u52a1\u8fdb\u884c\u5206\u7ec4\uff0c\u5e76\u4e14\u53ef\u4ee5\u5728\u5757\u7ea7\u522b\u4e0a\u5e94\u7528\u4efb\u52a1\u53d8\u91cf\u3002\u5757\u8fd8\u53ef\u4ee5\u5757\u5185\u90e8\u7684\u4efb\u52a1\u5f02\u5e38 1.\u793a\u4f8b \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 tasks : - name : Install Apache block : - yum : name : \"{{ item }}\" state : installed with_items : - httpd - memcached - template : src : templates/src.j2 dest : /etc/foo.conf - service : name : bar state : started enabled : True when : ansible_facts['distribution'] == 'CentOS' become : true become_user : root 2.\u9519\u8bef\u5904\u7406 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 - name : Attempt and graceful roll back demo block : - debug : msg : 'I execute normally' - name : i force a failure command : /bin/false - debug : msg : 'I never execute, due to the above task failing, :-(' rescue : # \u51fa\u9519\u65f6\u6267\u884c - debug : msg : 'I caught an error' - name : i force a failure in middle of recovery! >:-) command : /bin/false - debug : msg : 'I also never execute :-(' always : # \u65e0\u8bba\u7ed3\u679c\u5982\u4f55\u90fd\u6267\u884c - debug : msg : \"This always executes\" 9. Include \u00b6 1. \u57fa\u672c\u7528\u6cd5 \u00b6 1 2 tasks : - include : other.yml 2. \u52a8\u6001\u52a0\u8f7d \u00b6 \u5728\u6ee1\u8db3\u4e00\u5b9a\u6761\u4ef6\u65f6\u52a0\u8f7dInclude 1 2 - include : test.yml when :","title":"Ansible\u57fa\u7840"},{"location":"CICD/Ansible/ansible/#ansible","text":"","title":"\u4e00\u3001Ansible\u7b80\u4ecb"},{"location":"CICD/Ansible/ansible/#1ansible","text":"\u5f15\u64ce\uff1aAnsible \u6a21\u5757\uff1a \u6838\u5fc3\u6a21\u5757\uff08core modules\uff09:\u81ea\u5e26\u6a21\u5757 \u81ea\u5b9a\u4e49\u6a21\u5757\uff08custom modules\uff09 \u63d2\u4ef6\uff08plugins\uff09:\u6a21\u5757\u529f\u80fd\u7684\u8865\u5145\uff0c\u501f\u52a9\u63d2\u4ef6\u5b8c\u6210\u8bb0\u5f55\u65e5\u5fd7\u3001\u90ae\u4ef6\u529f\u80fd \u5267\u672c\uff08playbooks\uff09:\u4efb\u52a1\u914d\u7f6e\u6587\u4ef6\uff0c\u53ef\u4ee5\u5305\u542b\u591a\u4e2a\u4efb\u52a1\u3002 \u8fde\u63a5\u63d2\u4ef6\uff08connectior plugins\uff09:\u901a\u8fc7\u8fde\u63a5\u63d2\u4ef6\u8fde\u63a5\u5230\u88ab\u7ba1\u7406\u4e3b\u673a\uff0c\u9ed8\u8ba4\u4f7f\u7528SSH\u3002\u8fd8\u652f\u6301Zeromq\u3001local\u8fde\u63a5\u65b9\u5f0f \u4e3b\u673a\u6e05\u5355\uff08host inventory\uff09:\u5b9a\u4e49\u88ab\u7ba1\u7406\u8282\u70b9","title":"1\u3001Ansible\u67b6\u6784"},{"location":"CICD/Ansible/ansible/#2ansible","text":"Ansible\u6267\u884c\u547d\u4ee4\u65f6\uff0c\u901a\u8fc7\u5176\u5e95\u5c42\u4f20\u8f93\u6a21\u5757\uff0c\u5c06\u4e00\u4e2a\u6216\u591a\u4e2a\u6587\u4ef6\uff0c\u6216\u8005\u5b9a\u4e49\u4e00\u4e2aPlay\u6216Command\u547d\u4ee4\u4f20\u8f93\u5230\u8fdc\u7a0b\u670d\u52a1\u5668\u7684/tmp\u76ee\u5f55\u7684\u4e34\u65f6\u6587\u4ef6\uff0c\u5e76\u5728\u8fdc\u7a0b\u6267\u884c\u8fd9\u4e9bPlay/Command\uff0c\u7136\u540e\u5220\u9664\u4e34\u65f6\u6587\u4ef6\u5e76\u8fd4\u56de\u547d\u4ee4\u7684\u6267\u884c\u7ed3\u679c Ansible\u7684\u901a\u4fe1\u53d1\u5c55\u53f2\uff1a \u4f7f\u7528Paramiko OpenSSH(1.3\u9ed8\u8ba4\u4f7f\u7528) accelerate\u52a0\u901f\u6a21\u5f0f Faster OpenSSH in Ansible 1.5+(pipelining\u52a0\u901f\u65b9\u5f0f)","title":"2\u3001Ansible\u5b9e\u73b0\u539f\u7406"},{"location":"CICD/Ansible/ansible/#3ansible","text":"\u8bed\u6cd5\u7b80\u5355\uff1a\u57fa\u4e8eYAML \u65e0\u5ba2\u6237\u7aef\uff1a\u4e0d\u9700\u8981\u5b89\u88c5\u5ba2\u6237\u7aef\uff0c\u901a\u8fc7SSH\u8fde\u63a5\u88ab\u7ba1\u7406\u4e3b\u673a Push\u9000\u9001 \u5927\u91cf\u5185\u7f6e\u6a21\u5757\uff1a\u201cansible-doc -l\u201d\u53ef\u4ee5\u67e5\u770b\u5df2\u6709\u7684\u6a21\u5757 \u7b49\u5e42\u6027\uff08idempotent\uff09\uff1a\u5df2\u7ecf\u5728\u88ab\u7ba1\u7406\u7aef\u6267\u884c\u8fc7\u7684\u5267\u672c\u4e0d\u4f1a\u518d\u6267\u884c","title":"3\u3001Ansible\u7279\u70b9"},{"location":"CICD/Ansible/ansible/#4","text":"\u5e94\u7528\u90e8\u7f72 \u914d\u7f6e\u7ba1\u7406 \u4efb\u52a1\u6d41\u7f16\u6392","title":"4\u3001\u4e3b\u8981\u7528\u9014"},{"location":"CICD/Ansible/ansible/#5","text":"\u5728Ubuntu\u4e0a\u5b89\u88c5 1 2 3 4 5 sudo apt update sudo apt-get install software-properties-common sudo apt-add-repository --yes ppa:ansible/ansible:2.7.6 sudo apt update sudo apt-get install ansible","title":"5\u3001\u5b89\u88c5"},{"location":"CICD/Ansible/ansible/#6","text":"\u914d\u7f6e\u76ee\u5f55\uff1a/etc/ansible\uff0c\u529f\u80fd\uff1aInventory\u4e3b\u673a\u4fe1\u606f\u914d\u7f6e\uff0cAnsible\u5de5\u5177\u914d\u7f6e \u6267\u884c\u76ee\u5f55\uff1a/usr/bin/\uff0c\u529f\u80fd\uff1aansible\u9ed8\u8ba4\u547d\u4ee4\u5b58\u653e\u76ee\u5f55 lib\u5e93\u4f9d\u8d56\u76ee\u5f55:/usr/lib/python2.7/dist-packages/ansible/* \u5e2e\u52a9\u6587\u6863\u76ee\u5f55\uff1a/usr/share/doc/ansible/* man\u6587\u6863\u76ee\u5f55\uff1a/usr/share/man/man1/","title":"6\u3001\u76ee\u5f55\u7ed3\u6784"},{"location":"CICD/Ansible/ansible/#7","text":"\u5de5\u5177 Ansible Puppet Chef SaltStack \u8bed\u8a00 Python Ruby Ruby Python \u67b6\u6784 \u65e0Client C/S C/S C/S","title":"7\u3001\u4e0e\u5176\u4ed6\u5de5\u5177\u7684\u5bf9\u6bd4"},{"location":"CICD/Ansible/ansible/#8ansible","text":"\u73af\u5883\u53d8\u91cf\u4e2d\u7684ANSIBLE_CONFIG \u5f53\u524d\u76ee\u5f55\u4e0b\u7684ansible.cfg ~/.ansible.cfg /etc/ansible/ansible.cfg","title":"8\u3001Ansible\u7684\u914d\u7f6e\u6587\u4ef6\u8bfb\u53d6"},{"location":"CICD/Ansible/ansible/#_1","text":"","title":"\u4e8c\u3001\u57fa\u672c\u7528\u6cd5"},{"location":"CICD/Ansible/ansible/#1ansible_1","text":"Ad-Doc \u7528\u4e8e\u6267\u884c\u4e34\u65f6\u547d\u4ee4 Ansible-playbooks Tower\uff08\u56fe\u5f62\u5316\uff0c\u5546\u4e1a\u7248\uff09 \u4f7f\u7528\u524d\u5148\u8ba4\u8bc1\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 ubuntu@server:~$ ssh-copy-id ubuntu@172.16.10.101 /usr/bin/ssh-copy-id: ERROR: No identities found ubuntu@server:~$ ssh-keygen Generating public/private rsa key pair. Enter file in which to save the key ( /home/ubuntu/.ssh/id_rsa ) : Created directory '/home/ubuntu/.ssh' . Enter passphrase ( empty for no passphrase ) : Enter same passphrase again: Your identification has been saved in /home/ubuntu/.ssh/id_rsa. Your public key has been saved in /home/ubuntu/.ssh/id_rsa.pub. The key fingerprint is: c6:31:74:1b:03:56:63:00:24:1f:45:10:79:60:cf:e8 ubuntu@server The key 's randomart image is: +--[ RSA 2048]----+ | ..OOB+B | | +.B.o = | | o.= . | | . . o | | E S | | . | | | | | | | +-----------------+ ubuntu@server:~$ ssh-copy-id ubuntu@172.16.10.101 The authenticity of host ' 172 .16.10.101 ( 172 .16.10.101 ) ' can' t be established. ECDSA key fingerprint is cd:f2:2a:0b:33:25:ba:94:36:6b:43:f7:02:e4:1c:d2. Are you sure you want to continue connecting ( yes/no ) ? yes /usr/bin/ssh-copy-id: INFO: attempting to log in with the new key ( s ) , to filter out any that are already installed /usr/bin/ssh-copy-id: INFO: 1 key ( s ) remain to be installed -- if you are prompted now it is to install the new keys ubuntu@172.16.10.101 's password: Number of key(s) added: 1 Now try logging into the machine, with: \"ssh ' ubuntu@172.16.10.101 ' \" and check to make sure that only the key(s) you wanted were added.","title":"1\u3001Ansible\u547d\u4ee4\u6267\u884c\u65b9\u5f0f\uff1a"},{"location":"CICD/Ansible/ansible/#2ansible_1","text":"ansible \u4f7f\u7528\u573a\u666f\uff1a\u4e34\u65f6\u4e00\u6b21\u6027\u64cd\u4f5c\u3001\u4e8c\u6b21\u5f00\u53d1\u63a5\u53e3\u8c03\u7528 ansible-galaxy \u4f7f\u7528\u573a\u666f\uff1a\u4ece https://galaxy.ansible.com \u4e0b\u8f7dRoles ansible-pull \u4f7f\u7528\u573a\u666f\uff1a\u9700\u8981\u914d\u7f6e\u7684\u673a\u5668\u6570\u91cf\u5de8\u5927 ansible-doc \u4f7f\u7528\u573a\u666f\uff1a\u67e5\u770bansible\u6a21\u5757\u7684\u8bf4\u660e \u67e5\u770b\u652f\u6301\u7684\u6a21\u5757\uff1a bash ubuntu@server:~$ ansible-doc -l | wc -l 2080 ansible-playbook \u4f7f\u7528\u573a\u666f\uff1a\u8bfb\u53d6\u9884\u5148\u7f16\u5199\u7684playbook\u6587\u4ef6\u5b9e\u73b0\u6279\u91cf\u7ba1\u7406 ansible-vault \u4f7f\u7528\u573a\u666f\uff1a\u914d\u7f6e\u6587\u4ef6\u52a0\u5bc6 1 2 # \u52a0\u5bc6yml\u6587\u4ef6 ansible-vault encrypt example.yml ansible-console \u4f7f\u7528\u573a\u666f\uff1a\u4ea4\u4e92\u5f0f\u4f7f\u7528ansible\u547d\u4ee4","title":"2\u3001ansible\u7cfb\u5217\u547d\u4ee4"},{"location":"CICD/Ansible/ansible/#3-ansible-inventory","text":"Inventory\u662fAnsible\u914d\u7f6e\u4e3b\u673a\u4fe1\u606f\u7684\u914d\u7f6e\u6587\u4ef6\u3002\u9ed8\u8ba4\u5b58\u653e\u5728/etc/ansible/hosts,\u4f7f\u7528\u65f6\u53ef\u4ee5\u4f7f\u7528-i\u6307\u5b9a\u6587\u4ef6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 # 1. \u76f4\u63a5\u4e3aIP\u5730\u5740 192 .168.1.100 # 2. \u4e3b\u673a\u540d\u65b9\u5f0f mysql.company.com # 3. ssh\u7aef\u53e3\u4e0d\u662f22\u7684\u4e3b\u673a\u5b9a\u4e49 mysql.company.com:2222 # 4. \u6709\u89c4\u5f8b\u7684\u4e3b\u673a 192 .168.1. [ 101 :103 ] # \u8868\u793a101 102 103 mysql [ abc ] .company.com # mysqla mysqlb mysqlc # 5. \u5b9a\u4e49\u7ec4 [ web ] web1.company.com web2.company.com web3.company.com # 6. \u7ec4\u5d4c\u5957 [ nginx ] node1.company.com node2.company.com [ tomcat ] node4.company.com node5.company.com [ web:children ] nginx tomcat","title":"3\u3001 Ansible Inventory\u914d\u7f6e"},{"location":"CICD/Ansible/ansible/#4_1","text":"\u53d8\u91cf\u68c0\u7d22\u987a\u5e8f Inventory\u914d\u7f6e\u6587\u4ef6 Playbook\u4e2dvar\u5b9a\u4e49\u7684\u533a\u57df Roles\u4e2dvars\u76ee\u5f55\u4e0b\u7684\u6587\u4ef6 Roles\u540c\u7ea7\u76ee\u5f55group_vars\u548chosts_vars\u76ee\u5f55\u4e0b\u7684\u6587\u4ef6 1 2 3 4 5 6 7 # 1. \u4e3b\u673a\u53d8\u91cf [ web ] host1 http_port = 80 # 2. \u7ec4\u53d8\u91cf [ web:vars ] ntp_server = ntp.atlanta.example.com","title":"4. \u53d8\u91cf"},{"location":"CICD/Ansible/ansible/#5-ad-hoc","text":"\u57fa\u672c\u6a21\u5757\u4f7f\u7528\uff1a \u6267\u884csudo ansible sw3 -m command -b -K -a \"docker images\" ansible all -m command -i hosts -a \"free -h\" \u4f7f\u7528\u573a\u666f \u5bf9\u670d\u52a1\u5668\u8fdb\u884c\u5065\u5eb7\u68c0\u67e5 \u5176\u4e2d\u4e00\u4e2a\u6216\u4e00\u7ec4\u4e3b\u673a\u8fdb\u884c\u66f4\u6539","title":"5. Ad-Hoc\u4f7f\u7528"},{"location":"CICD/Ansible/ansible/#playbook","text":"ansible\u7684\u4efb\u52a1\u914d\u7f6e\u6587\u4ef6\u79f0\u4e3aplaybook(\u5267\u672c)\uff0c\u6bcf\u4e00\u4e2a\u5267\u672c\u90fd\u5305\u542b\u4e00\u7cfb\u5217\u7684play\u3002","title":"\u4e09\u3001Playbook"},{"location":"CICD/Ansible/ansible/#1","text":"ansible\u91c7\u7528YAML\u8bed\u6cd5\u7f16\u5199\uff0c\u6709\u4e24\u79cd\u683c\u5f0f\uff1a \u591a\u884c\u7f29\u8fdb(\u5efa\u8bae\u4f7f\u7528) \u5b98\u65b9\u793a\u4f8b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 --- # \u9700\u8981\u4ee5---\u5f00\u59cb\uff0c\u4e14\u8981\u9876\u884c\u9996\u5199 # \u53ef\u4ee5\u5728\u8fd9\u91cc\u7b80\u8981\u8bf4\u660eplaybook\u7684\u529f\u80fd(\u53ef\u9009) - hosts : webservers # \u9009\u62e9\u5728\u54ea\u4e9b\u4e3b\u673a\u6267\u884c\u4e0b\u9762\u7684play vars : # \u5b9a\u4e49\u7684\u53d8\u91cf http_port : 80 max_clients : 200 remote_user : root tasks : # \u6307\u5b9a\u4e00\u7cfb\u5217\u5c06\u8981\u8fd0\u884c\u7684\u4efb\u52a1 - name : ensure apache is at the latest version yum : name : httpd state : latest - name : write the apache config file template : src : /srv/httpd.j2 dest : /etc/httpd.conf notify : - restart apache - name : ensure apache is running service : name : httpd state : started handlers : - name : restart apache service : name : httpd state : restarted \u5355\u884c\u7f29\u5199","title":"1. \u683c\u5f0f"},{"location":"CICD/Ansible/ansible/#2-handler","text":"","title":"2. Handler\uff1a"},{"location":"CICD/Ansible/ansible/#1notify-handler","text":"1 2 3 4 5 6 7 8 9 10 tasks : - name : \u5f00\u542fapache rewrite apache2_module : name : rewrite state : present handlers : - name : restart apache service : name : httpd state : restarted","title":"1.notify \u89e6\u53d1handler"},{"location":"CICD/Ansible/ansible/#2handler-handler","text":"1 2 3 4 5 6 7 8 9 10 11 handlers : - name : restart apache service : name : httpd state : restarted notify : restart memcached - name : restart memcached service : name : memcached state : restarted \u6ce8\u610f\uff1a handler\u53ea\u6709\u5728\u5176\u6240\u5728\u7684\u4efb\u52a1\u88ab\u6267\u884c\u65f6\uff0c\u624d\u4f1a\u88ab\u8fd0\u884c handler\u53ea\u4f1a\u5728play\u7684\u672b\u5c3e\u8fd0\u884c\u4e00\u6b21","title":"2.handler \u8c03\u7528 handler"},{"location":"CICD/Ansible/ansible/#3","text":"","title":"3. \u53d8\u91cf"},{"location":"CICD/Ansible/ansible/#1_1","text":"\u4ee5\u82f1\u6587\u5927\u5c0f\u5199\u5b57\u6bcd\u5f00\u5934 \u4e2d\u95f4\u53ef\u4ee5\u5305\u542b\u4e0b\u5212\u7ebf(_)\u548c\u6570\u5b57","title":"1.\u547d\u540d\u89c4\u5219"},{"location":"CICD/Ansible/ansible/#2","text":"","title":"2.\u53d8\u91cf\u7684\u5b9a\u4e49"},{"location":"CICD/Ansible/ansible/#1vars","text":"1 2 3 4 5 6 --- - hosts : test vars : foo : bar tasks : - debug : msg=\"var foo is set to {{ foo }}\"","title":"1.\u5728vars\u4ee3\u7801\u5757\u5b9a\u4e49\u53d8\u91cf"},{"location":"CICD/Ansible/ansible/#2_1","text":"1 2 3 $ cat vars.yml --- foo: bar 1 2 3 4 5 6 --- - hosts : test vars_files : - vars.yml tasks : - debug : msg=\"var foo is set to {{ foo }}\"","title":"2. \u628a\u53d8\u91cf\u5b9a\u4e49\u5230\u5355\u72ec\u7684\u6587\u4ef6\u4e2d"},{"location":"CICD/Ansible/ansible/#3-inventory","text":"\u4e3a\u67d0\u53f0\u4e3b\u673a\u6307\u5b9a\u53d8\u91cf 1 app1.example.com proxy_state=present \u4e3a\u4e3b\u673a\u7ec4\u5b9a\u4e49\u53d8\u91cf 1 2 3 4 5 [ web ] node1 node2 [web:vars] http_port : 80 \u5728\u6267\u884cansible\u547d\u4ee4\u65f6\uff0cansible\u9ed8\u8ba4\u4f1a\u4ece/etc/ansible/host_vars\u548c/etc/ansible/group_vars\u4e24\u4e2a\u76ee\u5f55\u4e0b\u8bfb\u53d6\u53d8\u91cf\u5b9a\u4e49\uff0c\u53ef\u4ee5\u5728 \u8fd9\u4e24\u4e2a\u76ee\u5f55\u4e2d\u521b\u5efa\u4e0ehosts\u6587\u4ef6\u4e2d\u4e3b\u673a\u540d\u6216\u7ec4\u540d\u540c\u540d\u7684\u6587\u4ef6\u6765\u5b9a\u4e49\u53d8\u91cf\uff0c\u4f8b\u5982\uff1a 1 2 3 $ cat /etc/ansible/group_vars/web --- http_port: 80","title":"3. \u5728Inventory\u6587\u4ef6\u4e2d\u5b9a\u4e49\u53d8\u91cf\uff08\u4e0d\u5efa\u8bae\uff09"},{"location":"CICD/Ansible/ansible/#4_2","text":"\u5c06\u64cd\u4f5c\u7684\u7ed3\u679c\uff0c\u5305\u62ec\u6807\u51c6\u8f93\u51fa\u548c\u6807\u51c6\u9519\u8bef\u8f93\u51fa\u4fdd\u5b58\u5230\u53d8\u91cf\u4e2d\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u7528\u6765\u4fdd\u5b58\u64cd\u4f5c\u7ed3\u679c\u7684\u53d8\u91cf\u5c31\u53eb \u6ce8\u518c\u53d8\u91cf \u3002 \u5728playbook\u4e2d\u4f7f\u7528register\u6765\u58f0\u660e\u4e00\u4e2a\u53d8\u91cf\u4e3a\u6ce8\u518c\u53d8\u91cf\u3002 1 2 - shell : my_command_here register : my_command_result \u4f7f\u7528stdout\u65b9\u6cd5\u6765\u8bfb\u53d6\u6807\u51c6\u8f93\u51fa\u5185\u5bb9\uff1amy_command_result.stdout \u4f7f\u7528stderr\u65b9\u6cd5\u6765\u8bfb\u53d6\u9519\u8bef\u8f93\u51fa\u5185\u5bb9\uff1amy_command_result.stderr","title":"4. \u6ce8\u518c\u53d8\u91cf"},{"location":"CICD/Ansible/ansible/#5-facts","text":"\u5728\u8fd0\u884c\u4efb\u4f55\u4e00\u4e2aplaybook\u4e4b\u524d\uff0cansible\u9ed8\u8ba4\u4f1a\u5148\u6293\u53d6playbook\u4e2d\u6240\u6307\u5b9a\u7684\u6240\u6709\u4e3b\u673a\u7684\u7cfb\u7edf\u4fe1\u606f\uff0c\u8fd9\u4e9b\u4fe1\u606f\u79f0\u4e3afacts\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 ubuntu@server:~/test$ ansible-playbook test.yml PLAY [ web ] ************************************************************************************************************************************************************************************************************************* TASK [ Gathering Facts ] ************************************************************************************************************************************************************************************************************* ok: [ 172 .16.10.100 ] TASK [ debug ] *********************************************************************************************************************************************************************************************************************** ok: [ 172 .16.10.100 ] = > { \"msg\" : \"var http_port is set to 80\" } PLAY RECAP ************************************************************************************************************************************************************************************************************************* 172 .16.10.100 : ok = 2 changed = 0 unreachable = 0 failed = 0 facts\u4fe1\u606f\u7684\u83b7\u53d6 1 2 3 4 5 6 7 8 9 10 11 $ ansible web -m setup 172 .16.10.100 | SUCCESS = > { \"ansible_facts\" : { \"ansible_all_ipv4_addresses\" : [ \"172.16.10.100\" , \"10.0.3.15\" ] , \"ansible_all_ipv6_addresses\" : [ \"fe80::a00:27ff:fe15:7966\" , \"fe80::a00:27ff:fef4:8f74\" ] , \u5e38\u7528\u7684facts\u53d8\u91cf\uff1aansible_os_family,ansible_hostname,ansible_memtotal_mb\u3002 \u5982\u679c\u9700\u8981\u5728\u6267\u884cplaybook\u4e4b\u524d\u8df3\u8fc7\u6536\u96c6facts\u4fe1\u606f\u8fd9\u4e00\u4e0d\u53ef\u4ee5\u5728playbook\u4e2d\u8bbe\u7f6egather_facts\uff1a 1 2 3 --- - hosts : web gather_facts : no \u672c\u5730facts\u53d8\u91cf \u5728\u8fdc\u7a0b\u4e3b\u673a\u672c\u5730\u5b9a\u4e49facts\u53d8\u91cf \u9700\u8981\u628a\u5b9a\u4e49\u7684\u53d8\u91cf\u5199\u8fdb\u4e00\u4e2a\u4ee5.fact\u7ed3\u5c3e\u7684\u6587\u4ef6\u4e2d\uff08\u653e\u5728/etc/ansible/facts.d/\uff09\uff0c\u8fd9\u4e2a\u6587\u4ef6\u53ef\u4ee5\u662fjson\u6216ini\u6587\u4ef6\uff0c\u6216\u8005\u662f\u53ef\u4ee5\u8fd4\u56dejson\u4ee3\u7801\u7684\u53ef\u6267\u884c\u6587\u4ef6","title":"5. facts\u4fe1\u606f"},{"location":"CICD/Ansible/ansible/#6_1","text":"\u7531\u9ad8\u5230\u4f4e\u6392\u5e8f \u5728\u547d\u4ee4\u884c\u4e2d\u5b9a\u4e49\u7684\u53d8\u91cf(\u5373\u7528-e\u5b9a\u4e49\u7684\u53d8\u91cf) \u5728Inventory\u4e2d\u5b9a\u4e49\u7684\u8fde\u63a5\u53d8\u91cf\uff0c\u5982ansible_ssh_user \u5927\u591a\u6570\u5176\u4ed6\u53d8\u91cf(play\u4e2d\u7684\u53d8\u91cf\uff0cincluded\u4e2d\u7684\u53d8\u91cf\uff0crole\u4e2d\u7684\u53d8\u91cf) \u5728Inventory\u4e2d\u5b9a\u4e49\u7684\u53d8\u91cf \u7531\u7cfb\u7edf\u901agather_facts\u65b9\u6cd5\u53d1\u73b0\u7684\u53d8\u91cf role\u9ed8\u8ba4\u53d8\u91cf","title":"6. \u53d8\u91cf\u7684\u4f18\u5148\u7ea7"},{"location":"CICD/Ansible/ansible/#4-ifthenwhen","text":"","title":"4. \u6d41\u7a0b\u63a7\u5236 if/then/when"},{"location":"CICD/Ansible/ansible/#when","text":"\u5728\u7279\u5b9a\u7684\u6761\u4ef6\u4e0b\u6267\u884c\u4efb\u52a1 1 2 3 4 5 6 7 8 9 10 --- - hosts : web tasks : - name : \u6d4b\u8bd5php\u662f\u5426\u5b89\u88c5 shell : php --version register : php_version - name : \u5982\u679c\u5b89\u88c5\u5c31\u6267\u884c\u4e0b\u9762\u7684\u64cd\u4f5c debug : msg : \"php \u5b89\u88c5\u4e86\" when : \"'7.0' in php_version.stdout\"","title":"when"},{"location":"CICD/Ansible/ansible/#changed_whenfailed_when","text":"\u6839\u636e\u4efb\u52a1\u8fd0\u884c\u8fd4\u56de\u7ed3\u679c\u5224\u65ad\u4efb\u52a1\u7684\u8fd0\u884c\u7ed3\u679c\u662f\u5426\u771f\u7684\u7b26\u5408\u6211\u4eec\u7684\u9884\u671f","title":"changed_when\u3001failed_when"},{"location":"CICD/Ansible/ansible/#5_1","text":"","title":"5. \u4efb\u52a1\u95f4\u6d41\u7a0b\u63a7\u5236"},{"location":"CICD/Ansible/ansible/#1_2","text":"\u4e00\u4e9b\u670d\u52a1\u7684\u8fd0\u884c\u9700\u8981\u7b49\u5f85\u4e00\u4e9b\u72b6\u6001\u7684\u6062\u590d\uff0c\u6bd4\u5982\u4e00\u53f0\u4e3b\u673a\u6216\u5e94\u7528\u521a\u91cd\u542f\uff0c\u9700\u8981\u7b49\u5f85\u5b83\u4e0a\u9762\u7684\u7aef\u53e3\u5f00\u542f\uff0c\u6b64\u65f6 \u5c31\u4e0d\u5f97\u4e0d\u5c06\u6b63\u5728\u8fd0\u884c\u7684\u4efb\u52a1\u6682\u505c\uff0c\u76f4\u5230\u72b6\u6001\u6ee1\u8db3\u6211\u4eec\u7684\u9700\u6c42 1 2 3 4 5 6 7 8 9 10 11 12 13 14 --- - hosts : web tasks : - name : \u7b49\u5f85web\u91cd\u542f local_action : module : wait_for host : nginx port : 80 delay : 10 timeout : 300 state : started - name : \u91cd\u542f\u540e\u7ee7\u7eed debug : msg : \"\u91cd\u542f\u540e\u6267\u884c\u540e\u7eed\u64cd\u4f5c\"","title":"1.\u4efb\u52a1\u6682\u505c"},{"location":"CICD/Ansible/ansible/#6_2","text":"vars_prompt\u6a21\u5757\u4f1a\u5728\u6240\u6709play\u6267\u884c\u524d\u5148\u6267\u884c\uff0c\u5176\u4f18\u5148\u7ea7\u9ad8\u4e8eGathering Facts\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 --- - hosts : web vars_prompt : - name : username prompt : \"username\" default : \"root\" # \u8bbe\u7f6e\u9ed8\u8ba4\u503c - name : password prompt : \"password\" private : yes # \u8f93\u5165\u5bc6\u7801\u4e0d\u53ef\u89c1 confirm : yes # \u8981\u6c42\u8f93\u5165\u4e24\u6b21 tasks : - name : \u8f93\u51fa\u5bc6\u7801 debug : msg : \"{{ username }} {{ password }}\"","title":"6. \u4ea4\u4e92\u5f0f\u63d0\u793a"},{"location":"CICD/Ansible/ansible/#7_1","text":"\u6807\u7b7e\u529f\u80fd\u53ef\u4ee5\u7ed9\u89d2\u8272\u3001\u6587\u4ef6\u3001\u5355\u72ec\u7684\u4efb\u52a1\u6253\u4e0a\u6807\u7b7e\uff0c\u7136\u540e\u5229\u7528\u6807\u7b7e\u6765\u6307\u5b9a\u8981\u8fd0\u884cplaybook\u4e2d\u7684\u4e2a\u522b\u4efb\u52a1\u6216\u4e0d\u6267\u884c\u6307\u5b9a\u7684\u4efb\u52a1\u3002 1 2 3 4 - hosts : rabbitmq tags : rabbitmq roles : - rabbitmq \u6267\u884c\u5e26\u6307\u5b9a\u6807\u7b7e\u7684\u4efb\u52a1 1 ansible-playbook --tags \"rabbitmq\" test.yml \u8df3\u8fc7\u5e26\u6307\u5b9a\u6807\u7b7e\u7684\u4efb\u52a1 1 ansible-playbook --skip-tags \"rabbitmq\" test.yml \u53ef\u4ee5\u52a0\u591a\u4e2a\u6807\u7b7e 1 2 3 4 5 6 7 tags : - one - two # or tags : [ 'one' , 'two' ]","title":"7. \u6807\u7b7e"},{"location":"CICD/Ansible/ansible/#8-block","text":"2.0\u4ee5\u540e\u7684\u7248\u672c\u5f15\u5165\uff0c\u5757\u529f\u80fd\u53ef\u4ee5\u5c06\u4efb\u52a1\u8fdb\u884c\u5206\u7ec4\uff0c\u5e76\u4e14\u53ef\u4ee5\u5728\u5757\u7ea7\u522b\u4e0a\u5e94\u7528\u4efb\u52a1\u53d8\u91cf\u3002\u5757\u8fd8\u53ef\u4ee5\u5757\u5185\u90e8\u7684\u4efb\u52a1\u5f02\u5e38","title":"8. block\u5757"},{"location":"CICD/Ansible/ansible/#1_3","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 tasks : - name : Install Apache block : - yum : name : \"{{ item }}\" state : installed with_items : - httpd - memcached - template : src : templates/src.j2 dest : /etc/foo.conf - service : name : bar state : started enabled : True when : ansible_facts['distribution'] == 'CentOS' become : true become_user : root","title":"1.\u793a\u4f8b"},{"location":"CICD/Ansible/ansible/#2_2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 - name : Attempt and graceful roll back demo block : - debug : msg : 'I execute normally' - name : i force a failure command : /bin/false - debug : msg : 'I never execute, due to the above task failing, :-(' rescue : # \u51fa\u9519\u65f6\u6267\u884c - debug : msg : 'I caught an error' - name : i force a failure in middle of recovery! >:-) command : /bin/false - debug : msg : 'I also never execute :-(' always : # \u65e0\u8bba\u7ed3\u679c\u5982\u4f55\u90fd\u6267\u884c - debug : msg : \"This always executes\"","title":"2.\u9519\u8bef\u5904\u7406"},{"location":"CICD/Ansible/ansible/#9-include","text":"","title":"9. Include"},{"location":"CICD/Ansible/ansible/#1_4","text":"1 2 tasks : - include : other.yml","title":"1. \u57fa\u672c\u7528\u6cd5"},{"location":"CICD/Ansible/ansible/#2_3","text":"\u5728\u6ee1\u8db3\u4e00\u5b9a\u6761\u4ef6\u65f6\u52a0\u8f7dInclude 1 2 - include : test.yml when :","title":"2. \u52a8\u6001\u52a0\u8f7d"},{"location":"CICD/Git/Git/","text":"Git \u00b6 2014\u7531Linus Torvalds\u5f00\u53d1\u7684\u5206\u652f\u7ba1\u7406\u7cfb\u7edf\u3002 \u4e00\u3001git\u57fa\u672c\u6982\u5ff5 \u00b6 1. 3\u4e2a\u533a\u57df \u00b6 \u5de5\u4f5c\u533a\uff1a .git \u7248\u672c\u5e93\u6240\u5728\u7684\u76ee\u5f55 \u6682\u5b58\u533a\uff1a\u4e5f\u53eb\u7f13\u5b58\u533a\uff0c\u6216\u7d22\u5f15( .git/index )\u3002\u662f\u4e00\u4e2a\u6587\u4ef6\uff0c\u4fdd\u5b58\u4e86\u4e0b\u6b21\u5c06\u63d0\u4ea4\u7684\u6587\u4ef6\u5217\u8868\u4fe1\u606f\uff0c\u4e00\u822c\u5728 Git \u4ed3\u5e93\u76ee\u5f55\u4e2d \u7248\u672c\u5e93\uff1a\u7528\u6765\u4fdd\u5b58\u9879\u76ee\u7684\u5143\u6570\u636e\u548c\u5bf9\u8c61\u6570\u636e\u5e93\u7684\u5730\u65b9\uff0c .git \u76ee\u5f55\u5c31\u662f\u7248\u672c\u5e93\u3002 2. 3\u4e2a\u5bf9\u8c61 \u00b6 git\u5bf9\u8c61 \u6811\u5bf9\u8c61 \u63d0\u4ea4\u5bf9\u8c61 3. 3\u79cd\u72b6\u6001 \u00b6 \u5df2\u4fee\u6539\uff08modified\uff09\uff1a\u8868\u793a\u4fee\u6539\u4e86\u6587\u4ef6\uff0c\u4f46\u8fd8\u6ca1\u4fdd\u5b58\u5230\u6570\u636e\u5e93\u4e2d\u3002 \u5df2\u6682\u5b58\uff08staged\uff09\uff1a\u8868\u793a\u5bf9\u4e00\u4e2a\u5df2\u4fee\u6539\u6587\u4ef6\u7684\u5f53\u524d\u7248\u672c\u505a\u4e86\u6807\u8bb0\uff0c\u4f7f\u4e4b\u5305\u542b\u5728\u4e0b\u6b21\u63d0\u4ea4\u7684\u5feb\u7167\u4e2d\u3002 \u5df2\u63d0\u4ea4\uff08committed\uff09\uff1a\u8868\u793a\u6570\u636e\u5df2\u7ecf\u5b89\u5168\u7684\u4fdd\u5b58\u5728\u672c\u5730\u6570\u636e\u5e93\u4e2d\u3002 4. Git\u57fa\u672c\u7684\u5de5\u4f5c\u6d41\u7a0b \u00b6 \u5728\u5de5\u4f5c\u76ee\u5f55\u4e2d\u4fee\u6539\u6587\u4ef6\u3002 \u6682\u5b58\u6587\u4ef6\uff0c\u5c06\u6587\u4ef6\u7684\u5feb\u7167\u653e\u5165\u6682\u5b58\u533a\u57df\u3002 \u63d0\u4ea4\u66f4\u65b0\uff0c\u627e\u5230\u6682\u5b58\u533a\u57df\u7684\u6587\u4ef6\uff0c\u5c06\u5feb\u7167\u6c38\u4e45\u6027\u5b58\u50a8\u5230 Git \u4ed3\u5e93\u76ee\u5f55\u3002 5. Git\u5de5\u4f5c\u533a\u76ee\u5f55 \u00b6 1 2 3 4 5 6 7 8 9 10 11 $ tree -FL 1 .git .git \u251c\u2500\u2500 branches/ \u251c\u2500\u2500 config # \u9879\u76ee\u7279\u6709\u7684\u914d\u7f6e\u9879 \u251c\u2500\u2500 description # \u5bf9\u4ed3\u5e93\u7684\u63cf\u8ff0\u4fe1\u606f \u251c\u2500\u2500 HEAD # \u76ee\u524d\u88ab\u68c0\u51fa\u7684\u5206\u652f \u251c\u2500\u2500 hooks/ # \u5305\u542b\u5ba2\u6237\u7aef\u6216\u670d\u52a1\u7aef\u7684\u94a9\u5b50\u811a\u672c \u251c\u2500\u2500 info/ # \u5305\u542b\u5168\u5c40\u6027\u7684\u6392\u51fa\u6587\u4ef6 \u251c\u2500\u2500 objects/ # \u5b58\u50a8\u6240\u6709\u7684\u6570\u636e\u5185\u5bb9 \u251c\u2500\u2500 index # \u5305\u542b\u6587\u4ef6\u7d22\u5f15\u7684\u76ee\u5f55\u6811\uff0c\u8bb0\u5f55\u4e86\u6587\u4ef6\u540d\u548c\u6587\u4ef6\u7684\u72b6\u6001\u4fe1\u606f\uff08\u65f6\u95f4\u6233\u548c\u6587\u4ef6\u957f\u5ea6\u7b49\uff09 \u2514\u2500\u2500 refs/ # \u5b58\u50a8\u6307\u5411\u6570\u636e\uff08\u5206\u652f\uff09\u63d0\u4ea4\u5bf9\u8c61\u7684\u6307\u9488 \u4e8c\u3001Git\u914d\u7f6e \u00b6 1. Git\u914d\u7f6e\u6587\u4ef6 \u00b6 \u914d\u7f6e\u6587\u4ef6\u7684\u4e09\u4e2a\u5b58\u50a8\u4f4d\u7f6e /etc/gitconfig \uff1a\u9488\u5bf9\u6240\u6709\u7528\u6237\u7684\u901a\u7528\u914d\u7f6e\uff0c\u4f7f\u7528 git config --system \u914d\u7f6e ~/.gitconfig \u6216 ~/.config/git/config \uff1a\u9488\u5bf9\u5f53\u524d\u7528\u6237\uff0c\u4f7f\u7528 git config --global \u914d\u7f6e .git/config \uff1a\u9488\u5bf9\u672c\u4ed3\u5e93\uff0c\u4f7f\u7528 git config --local \u914d\u7f6e \u8fd9\u4e09\u4e2a\u914d\u7f6e\u6587\u4ef6\u7684\u4f18\u5148\u7ea7\u7531\u4f4e\u5230\u9ad8 2. \u67e5\u770bgit\u5f53\u524d\u914d\u7f6e \u00b6 1 git config --list 3. \u5e38\u7528\u914d\u7f6e \u00b6 1. \u7528\u6237\u540d\u79f0\u4e0e\u90ae\u4ef6\u5730\u5740 \u00b6 1 2 git config --global user.name 'yuanzhigao' git config --global user.email ' gaopeng0214@126.com 2. \u914d\u7f6e\u9ed8\u8ba4\u6587\u672c\u7f16\u8f91\u5668 \u00b6 1 git config --global core.editor vim 3. \u67e5\u770b\u5177\u4f53\u67d0\u4e00\u9879\u914d\u7f6e \u00b6 1 2 $ git config user.name yuanzhigao 4. \u522b\u540d \u00b6 1 2 3 4 git config --global alias.co checkout git config --global alias.br branch git config --global alias.ci commit git config --global alias.st status 5. \u5176\u4ed6\u914d\u7f6e \u00b6 1 2 3 4 # \u89e3\u51b3\u4e2d\u6587\u540d\u7684\u663e\u793a\u95ee\u9898 git config --global core.quotepath false # \u8f93\u51fa\u4e2d\u5f00\u542f\u989c\u8272\u663e\u793a git config --global color.ui true \u4e09\u3001\u4ed3\u5e93\u7ba1\u7406 \u00b6 1. \u65b0\u5efaGit\u4ed3\u5e93 \u00b6 1. \u5728\u5f53\u524d\u76ee\u5f55\u521d\u59cb\u5316Git\u4ed3\u5e93 \u00b6 1 git init 2. \u65b0\u5efa\u4e00\u4e2a\u76ee\u5f55\u5e76\u5c06\u5176\u521d\u59cb\u5316\u4e3aGit\u4ed3\u5e93 \u00b6 1 git init Demo 3. \u514b\u9686\u4e00\u4e2aGit\u4ed3\u5e93 \u00b6 1 2 3 4 # git\u534f\u8bae git clone git@gitee.com:gaoyuanzhi/Demo.git # https\u534f\u8bae git clone https://gitee.com/gaoyuanzhi/python3-notes.git \u56db\u3001\u6587\u4ef6\u7ba1\u7406 \u00b6 1. \u67e5\u770b\u5f53\u524d\u6587\u4ef6\u72b6\u6001 \u00b6 1 2 3 4 5 6 7 8 # \u8be6\u7ec6\u72b6\u6001 $ git status # \u7b80\u77ed\u72b6\u6001 $ git status -s M README # \u6587\u4ef6\u88ab\u4fee\u6539\u4e86\u5e76\u653e\u5165\u4e86\u6682\u5b58\u533a A lib/git.rb # \u65b0\u6dfb\u52a0\u5230\u6682\u5b58\u533a\u4e2d\u7684\u6587\u4ef6 M lib/simplegit.rb # \u6587\u4ef6\u88ab\u4fee\u6539\u4e86\u4f46\u662f\u8fd8\u6ca1\u653e\u5165\u6682\u5b58\u533a ?? LICENSE.txt # \u65b0\u6dfb\u52a0\u7684\u672a\u8ddf\u8e2a\u6587\u4ef6 git status \u7684\u51e0\u79cd\u72b6\u6001 changes to be commited(\u88ab\u63d0\u4ea4\u7684\u4fee\u6539)\uff1a\u4e0b\u6b21\u63d0\u4ea4\u4e2d\u88ab\u7eb3\u5165\u7248\u672c\u5e93\u4e2d\u7684\u88ab\u4fee\u6539\u7684\u6587\u4ef6\u3002 changed but not updated(\u4e0d\u4f1a\u88ab\u66f4\u65b0\u7684\u4fee\u6539)\uff1a\u5df2\u7ecf\u88ab\u4fee\u6539\u4f46\u5c1a\u672a\u6ce8\u518c\u5230\u4e0b\u6b21\u63d0\u4ea4\u4e2d\u7684\u6587\u4ef6\u3002 untracked files(\u672a\u88ab\u8ddf\u8e2a\u7684\u6587\u4ef6)\uff1a\u65b0\u589e\u6587\u4ef6 \u5f53\u6267\u884c git status \u6216 git diff \u626b\u63cf\u5de5\u4f5c\u533a\u6539\u52a8\u7684\u65f6\u5019\uff0c\u5148\u4f9d\u636e.git/index\u6587\u4ef6\u4e2d\u8bb0\u5f55\u7684\u65f6\u95f4\u6233\uff0c\u957f\u5ea6\u7b49\u4fe1\u606f\u5224\u65ad\u5de5\u4f5c\u533a\u6587\u4ef6\u662f\u5426\u6539\u53d8\uff0c\u5982\u679c\u5de5\u4f5c\u533a\u6587\u4ef6\u7684\u65f6\u95f4\u6233\u6539\u53d8\u4e86\uff0c\u8bf4\u660e\u6587\u4ef6\u7684\u5185\u5bb9\u53ef\u80fd\u88ab\u53d8\u4e86\uff0c\u9700\u8981\u6253\u5f00\u6587\u4ef6\uff0c\u8bfb\u53d6\u6587\u4ef6\u5185\u5bb9\uff0c\u4e0e\u66f4\u6539\u524d\u7684\u539f\u59cb\u6587\u4ef6\u76f8\u6bd4\u8f83\uff0c\u5224\u65ad\u6587\u4ef6\u662f\u5426\u6539\u53d8\u3002\u5982\u679c\u6587\u4ef6\u5185\u5bb9\u6ca1\u6709\u6539\u53d8\uff0c\u5219\u5c06\u6587\u4ef6\u65b0\u7684\u65f6\u95f4\u6233\u8bb0\u5f55\u5230.git/index\u6587\u4ef6\u4e2d\u3002 2. \u6dfb\u52a0\u5185\u5bb9\u5230\u6682\u5b58\u533a \u00b6 1 2 3 4 5 6 # \u6dfb\u52a0\u6307\u5b9a\u6587\u4ef6\u5230\u6682\u5b58\u533a\uff0c\u4e00\u6b21\u53ef\u4ee5\u6dfb\u52a0\u591a\u4e2a\u6587\u4ef6 $ git add [ file1 ] [ file2 ] # \u6dfb\u52a0\u6307\u5b9a\u76ee\u5f55\u5230\u6682\u5b58\u533a $ git add [ dir ] # \u6dfb\u52a0\u5f53\u524d\u76ee\u5f55\u4e0b\u7684\u6240\u6709\u6587\u4ef6\u5230\u6682\u5b58\u533a $ git add . \u6e05\u9664\u5de5\u4f5c\u533a \u00b6 1 2 # \u6e05\u9664\u5de5\u4f5c\u533a\u5f53\u524d\u7684\u6539\u52a8 git clean -df 3. \u5ffd\u7565\u6587\u4ef6 \u00b6 \u4e00\u822c\u6211\u4eec\u603b\u4f1a\u6709\u4e9b\u6587\u4ef6\u65e0\u9700\u7eb3\u5165 Git \u7684\u7ba1\u7406\uff0c\u4e5f\u4e0d\u5e0c\u671b\u5b83\u4eec\u603b\u51fa\u73b0\u5728\u672a\u8ddf\u8e2a\u6587\u4ef6\u5217\u8868\u3002 \u901a\u5e38 \u90fd\u662f\u4e9b\u81ea\u52a8\u751f\u6210\u7684\u6587\u4ef6\uff0c\u6bd4\u5982\u65e5\u5fd7\u6587\u4ef6\uff0c\u6216\u8005\u7f16\u8bd1\u8fc7\u7a0b\u4e2d\u521b\u5efa\u7684\u4e34\u65f6\u6587\u4ef6\u7b49\u3002 \u5728\u8fd9\u79cd\u60c5\u51b5 \u4e0b\uff0c\u6211\u4eec\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a .gitignore \u7684\u6587\u4ef6\uff0c\u5217\u51fa\u8981\u5ffd\u7565\u7684\u6587\u4ef6\u6a21\u5f0f\u3002 \u6587\u4ef6 .gitignore \u7684\u683c\u5f0f\u89c4\u8303\u5982\u4e0b\uff1a \u6240\u6709\u7a7a\u884c\u6216\u8005\u4ee5 \uff03 \u5f00\u5934\u7684\u884c\u90fd\u4f1a\u88ab Git \u5ffd\u7565\u3002 \u53ef\u4ee5\u4f7f\u7528shell \u6240\u4f7f\u7528\u7684\u7b80\u5316\u4e86\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u6a21\u5f0f\u5339\u914d\u3002 \u5339\u914d\u6a21\u5f0f\u53ef\u4ee5\u4ee5\uff08 / \uff09\u5f00\u5934\u9632\u6b62\u9012\u5f52\u3002 \u5339\u914d\u6a21\u5f0f\u53ef\u4ee5\u4ee5\uff08 / \uff09\u7ed3\u5c3e\u6307\u5b9a\u76ee\u5f55\u3002 \u8981\u5ffd\u7565\u6307\u5b9a\u6a21\u5f0f\u4ee5\u5916\u7684\u6587\u4ef6\u6216\u76ee\u5f55\uff0c\u53ef\u4ee5\u5728\u6a21\u5f0f\u524d\u52a0\u4e0a\u60ca\u53f9\u53f7\uff08 ! \uff09\u53d6\u53cd\u3002 https://github.com/github/gitignore \u6709\u5341\u79cd\u9879\u76ee\u53ca\u8bed\u8a00\u7684 .gitignore \u6587\u4ef6\u5217\u8868 \u5dee\u5f02 \u00b6 1 2 3 4 5 6 # \u5de5\u4f5c\u533a\u548c\u6682\u5b58\u533a\u4e2d\u7684\u5dee\u5f02 git diff # \u6682\u5b58\u533a\u548c\u7248\u672c\u5e93\u4e2d\u7684\u5dee\u5f02 git diff --cached # \u5de5\u4f5c\u533a\u548cHEAD\uff08\u5f53\u524d\u5de5\u4f5c\u5206\u652f\uff09\u7684\u5dee\u5f02 git diff HEAD 4. \u79fb\u9664\u6587\u4ef6 \u00b6 1 2 3 4 # \u540c\u65f6\u5220\u9664\u6682\u5b58\u533a\u548c\u5de5\u4f5c\u533a\u7684\u6587\u4ef6 $ git rm [ file ] # \u4ece\u6682\u5b58\u533a\u57df\u79fb\u9664\u4f46\u662f\u5728\u5de5\u4f5c\u533a\u4fdd\u7559 $ git rm --cached [ file ] 5. \u79fb\u52a8\u6587\u4ef6 \u00b6 1 2 # \u91cd\u547d\u540d\u6216\u79fb\u52a8\u6587\u4ef6 $ git mv <src> <dest> \u4fdd\u5b58\u5de5\u4f5c\u8fdb\u5ea6 \u00b6 1 $ git stash \u4e94\u3001\u63d0\u4ea4\u66f4\u65b0 \u00b6 1. \u63d0\u4ea4\u66f4\u65b0 \u00b6 1 2 3 4 5 6 7 8 # \u542f\u52a8\u6587\u672c\u7f16\u8f91\u5668\u4ee5\u4fbf\u8f93\u5165\u672c\u6b21\u63d0\u4ea4\u7684\u8bf4\u660e $ git commit # \u5c06\u63d0\u4ea4\u4fe1\u606f\u4e0e\u547d\u4ee4\u653e\u5728\u540c\u4e00\u884c $ git commit -m \"Story 182: Fix benchmarks for speed\" # \u628a\u6240\u6709\u5df2\u7ecf\u8ddf\u8e2a\u8fc7\u7684\u6587\u4ef6\u6682\u5b58\u8d77\u6765\u4e00\u5e76\u63d0\u4ea4\uff0c\u4ece\u800c\u8df3\u8fc7 git add \u6b65\u9aa4 $ git commit -a -m 'added new benchmarks' # \u4ece\u65b0\u63d0\u4ea4 $ git commit --amend 2. \u67e5\u770b\u5386\u53f2\u63d0\u4ea4 \u00b6 1 2 # \u67e5\u770b\u5386\u53f2\u63d0\u4ea4 $ git log \u5e38\u7528\u9009\u9879 \u9009\u9879 \u8bf4\u660e -p \u6309\u8865\u4e01\u683c\u5f0f\u663e\u793a\u6bcf\u4e2a\u66f4\u65b0\u4e4b\u95f4\u7684\u5dee\u5f02 --stat \u663e\u793a\u6bcf\u6b21\u66f4\u65b0\u7684\u6587\u4ef6\u4fee\u6539\u7edf\u8ba1\u4fe1\u606f\u3002 --shortstat \u53ea\u663e\u793a --stat \u4e2d\u6700\u540e\u7684\u884c\u6570\u4fee\u6539\u6dfb\u52a0\u79fb\u9664\u7edf\u8ba1 --name-only \u4ec5\u5728\u63d0\u4ea4\u4fe1\u606f\u540e\u663e\u793a\u5df2\u4fee\u6539\u7684\u6587\u4ef6\u6e05\u5355\u3002 --name- status \u663e\u793a\u65b0\u589e\u3001\u4fee\u6539\u3001\u5220\u9664\u7684\u6587\u4ef6\u6e05\u5355 --relative-date \u4f7f\u7528\u8f83\u77ed\u7684\u76f8\u5bf9\u65f6\u95f4\u663e\u793a\uff08\u6bd4\u5982\uff0c\u201c2 weeks ago\u201d\uff09 --graph \u663e\u793a ASCII \u56fe\u5f62\u8868\u793a\u7684\u5206\u652f\u5408\u5e76\u5386\u53f2 --pretty \u4f7f\u7528\u5176\u4ed6\u683c\u5f0f\u663e\u793a\u5386\u53f2\u63d0\u4ea4\u4fe1\u606f\u3002\u53ef\u7528\u7684\u9009\u9879\u5305\u62ec oneline\uff0cshort\uff0c full\uff0cfuller \u548c format\uff08\u540e\u8ddf\u6307\u5b9a\u683c\u5f0f\uff09 --decorate \u67e5\u770b\u5404\u4e2a\u5206\u652f\u5f53\u524d\u6240\u6307\u7684\u5bf9\u8c61 -(n) \u4ec5\u663e\u793a\u6700\u8fd1\u7684 n \u6761\u63d0\u4ea4 --since , --after \u4ec5\u663e\u793a\u6307\u5b9a\u65f6\u95f4\u4e4b\u540e\u7684\u63d0\u4ea4 --until , --before \u4ec5\u663e\u793a\u6307\u5b9a\u65f6\u95f4\u4e4b\u524d\u7684\u63d0\u4ea4 --author \u4ec5\u663e\u793a\u6307\u5b9a\u4f5c\u8005\u76f8\u5173\u7684\u63d0\u4ea4 --committer \u4ec5\u663e\u793a\u6307\u5b9a\u63d0\u4ea4\u8005\u76f8\u5173\u7684\u63d0\u4ea4 --grep \u4ec5\u663e\u793a\u542b\u6307\u5b9a\u5173\u952e\u5b57\u7684\u63d0\u4ea4 -S \u4ec5\u663e\u793a\u6dfb\u52a0\u6216\u79fb\u9664\u4e86\u67d0\u4e2a\u5173\u952e\u5b57\u7684\u63d0\u4ea4 1 2 # \u4f8b $ git log --since = '2020-2-10' --until = '2020-2-15' --pretty = oneline \u516d\u3001\u8fdc\u7a0b\u4ed3\u5e93 \u00b6 1. \u67e5\u770b\u8fdc\u7a0b\u4ed3\u5e93 \u00b6 1 2 3 4 5 $ git remote # \u663e\u793a\u8fdc\u7a0b\u4ed3\u5e93URL $ git remote -v # \u67e5\u770b\u66f4\u591a\u4fe1\u606f\uff0cURL\u548c\u5206\u652f\u7b49 $ git remote show origin 2. \u6dfb\u52a0\u8fdc\u7a0b\u4ed3\u5e93 \u00b6 1 2 # \u6dfb\u52a0\u8fdc\u7a0b\u4ed3\u5e93\u5e76\u8d77\u4e00\u4e2a\u522b\u540d $ git remote add python3-notes git@gitee.com:gaoyuanzhi/python3-notes.git 3. \u62c9\u53d6\u8fdc\u7a0b\u4ed3\u5e93 \u00b6 1 2 3 4 5 # \u65b9\u6cd5\u4e00 $ git pull # \u65b9\u6cd5\u4e8c $ git fetch <remote_name> $ git merge \u4e24\u79cd\u65b9\u5f0f\u7684\u533a\u522b\uff1a \u5f53 git fetch \u547d\u4ee4\u4ece\u670d\u52a1\u5668\u4e0a\u6293\u53d6\u672c\u5730\u6ca1\u6709\u7684\u6570\u636e\u65f6\uff0c\u5b83\u5e76\u4e0d\u4f1a\u4fee\u6539\u5de5\u4f5c\u76ee\u5f55\u4e2d\u7684\u5185\u5bb9\u3002 \u5b83\u53ea\u4f1a\u83b7\u53d6\u6570\u636e\u7136\u540e\u8ba9\u4f60\u81ea\u5df1\u5408\u5e76\u30022. git pull \u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u5b83\u7684\u542b\u4e49\u662f\u4e00\u4e2a git fetch \u7d27\u63a5\u7740\u4e00\u4e2a git merge \u547d\u4ee4\uff0c git pull \u4f1a\u67e5\u627e\u5f53\u524d\u5206\u652f\u6240\u8ddf\u8e2a\u7684\u670d\u52a1\u5668\u4e0e\u5206\u652f\uff0c\u4ece\u670d\u52a1\u5668\u4e0a\u6293\u53d6\u6570\u636e\u7136\u540e\u5c1d\u8bd5\u5408\u5e76\u5165\u90a3\u4e2a\u8fdc\u7a0b\u5206\u652f\u3002 4. \u63a8\u9001\u5230\u8fdc\u7a0b\u4ed3\u5e93 \u00b6 1 2 3 4 $ git push origin <\u5206\u652f\u540d\u79f0> # git\u4f1a\u5c06<\u5206\u652f\u540d\u79f0>\u5c55\u5f00refs/heads/<\u5206\u652f\u540d\u79f0>:refs/heads/<\u5206\u652f\u540d\u79f0> # \u5982\u679c\u672c\u5730\u5206\u652f\u548c\u8fdc\u7a0b\u5206\u652f\u540d\u5b57\u4e0d\u540c\uff0c\u53ef\u4ee5\u5199\u6210\u5982\u4e0b\u65b9\u5f0f $ git push origin <\u672c\u5730\u5206\u652f\u540d\u79f0>:<\u8fdc\u7a0b\u5206\u652f\u540d\u79f0> 5. \u91cd\u547d\u540d\u8fdc\u7a0b\u4ed3\u5e93 \u00b6 1 git remote rename old_name new_name 6. \u5220\u9664\u8fdc\u7a0b\u4ed3\u5e93 \u00b6 1 git remote rm python3-notes \u4e03\u3001\u6807\u7b7e \u00b6 1. \u6807\u7b7e\u7684\u5206\u7c7b \u00b6 \u8f7b\u91cf\u6807\u7b7e\uff1a\u4e00\u4e2a\u8f7b\u91cf\u6807\u7b7e\u5f88\u50cf\u4e00\u4e2a\u4e0d\u4f1a\u6539\u53d8\u7684\u5206\u652f\uff0c\u5b83\u53ea\u662f\u4e00\u4e2a\u7279\u5b9a\u63d0\u4ea4\u7684\u5f15\u7528 \u9644\u6ce8\u6807\u7b7e\uff1a\u5b58\u50a8\u5728Git\u6570\u636e\u5e93\u4e2d\u7684\u4e00\u4e2a\u5b8c\u6574\u5bf9\u8c61 \u9644\u6ce8\u6807\u7b7e\u5305\u542b\u6253\u6807\u7b7e\u8005\u7684\u540d\u5b57\u3001\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u3001\u65e5\u671f\u65f6\u95f4\uff1b\u8fd8\u6709\u4e00\u4e2a\u6807\u7b7e\u4fe1\u606f\uff1b\u5e76\u4e14\u53ef\u4ee5\u4f7f\u7528 GNU Privacy Guard \uff08GPG\uff09\u7b7e\u540d\u4e0e\u9a8c\u8bc1\u3002 \u8f7b\u91cf\u6807\u7b7e\u672c\u8d28\u4e0a\u662f\u5c06\u63d0\u4ea4\u6821\u9a8c\u548c\u5b58\u50a8\u5230\u4e00\u4e2a\u6587 \u4ef6\u4e2d - \u6ca1\u6709\u4fdd\u5b58\u4efb\u4f55\u5176\u4ed6\u4fe1\u606f 2. \u67e5\u770b\u6807\u7b7e \u00b6 1 2 3 4 # \u5217\u51fa\u6240\u6709\u6807\u7b7e $ git tag # \u67e5\u770b\u6807\u7b7e\u7684\u8be6\u7ec6\u4fe1\u606f git show v1.4 3. \u521b\u5efa\u6807\u7b7e \u00b6 1 2 3 4 5 6 # \u521b\u5efa\u9644\u6ce8\u6807\u7b7e $ git tag -a v1.4 -m 'my version 1.4' # \u521b\u5efa\u8f7b\u91cf\u6807\u7b7e git tag v1.4-lw # \u7ed9\u4e4b\u524d\u7684\u63d0\u4ea4\u6253\u6807\u7b7e $ git tag -a v1.2 9fceb02 4. \u5171\u4eab\u6807\u7b7e \u00b6 1 2 3 4 # \u628a\u6307\u5b9a\u6807\u7b7e\u63a8\u9001\u7684\u8fdc\u7a0b\u4ed3\u5e93 $ git push origin [ tagname ] # \u63a8\u9001\u6240\u6709\u4e0d\u5728\u8fdc\u7a0b\u4ed3\u5e93\u670d\u52a1\u5668\u4e0a\u7684\u6807\u7b7e $ git push origin --tags 5. \u68c0\u51fa\u6807\u7b7e \u00b6 1 2 # \u5e76\u4e0d\u80fd\u771f\u7684\u68c0\u51fa\u4e00\u4e2a\u6807\u7b7e\uff0c\u53ea\u80fd\u5728\u7279\u5b9a\u7684\u6807\u7b7e\u4e0a\u521b\u5efa\u4e00\u4e2a\u65b0\u5206\u652f $ git checkout -b version2 v2.0.0 \u516b\u3001\u5206\u652f \u00b6 1. \u672c\u5730\u5206\u652f \u00b6 1. \u521b\u5efa\u5206\u652f \u00b6 1 2 # \u521b\u5efa\u5206\u652f $ git branch <\u5206\u652f\u540d\u79f0> # \u5728\u5f53\u524d\u6240\u5728\u7684\u63d0\u4ea4\u5bf9\u8c61\u4e0a\u521b\u5efa\u4e00\u4e2a\u6307\u9488 2. \u67e5\u770b\u5206\u652f\u5217\u8868 \u00b6 1 2 3 4 5 6 7 8 9 $ git branch gh-pages * master # `*`\u8868\u793a\u5f53\u524d\u5206\u652f # \u67e5\u770b\u6bcf\u4e00\u4e2a\u5206\u652f\u7684\u6700\u540e\u4e00\u6b21\u63d0\u4ea4 $ git branch -v # \u8981\u67e5\u770b\u54ea\u4e9b\u5206\u652f\u5df2\u7ecf\u5408\u5e76\u5230\u5f53\u524d\u5206\u652f $ git branch --merged # \u67e5\u770b\u6240\u6709\u5305\u542b\u672a\u5408\u5e76\u5de5\u4f5c\u7684\u5206\u652f $ git branch --no-merged 3. \u5207\u6362\u5206\u652f \u00b6 1 2 3 $ git checkout <\u5206\u652f\u540d\u79f0> # HEAD \u6307\u5411\u5f53\u524d\u5206\u652f # \u65b0\u5efa\u4e00\u4e2a\u5206\u652f\u5e76 \u540c\u65f6\u5207\u6362\u5230\u90a3\u4e2a\u5206\u652f\u4e0a $ git checkout -b iss53 git checkout master \u505a\u4e86\u4e24\u4ef6\u4e8b\uff1a1.\u662f\u4f7f HEAD \u6307\u56de master \u5206\u652f\uff0c2\u3001\u5c06\u5de5\u4f5c\u76ee\u5f55\u6062\u590d\u6210 master \u5206\u652f\u6240\u6307\u5411\u7684\u5feb\u7167\u5185\u5bb9 4. \u5408\u5e76\u5206\u652f \u00b6 1 2 3 $ git merge <\u5206\u652f\u540d\u79f0> # \u5408\u5e76\u8fdc\u7a0b\u5206\u652f\u5230\u5f53\u524d\u5206\u652f $ git merge origin/<\u8fdc\u7a0b\u5206\u652f\u540d\u79f0> 5. \u5220\u9664\u5206\u652f \u00b6 1 2 # \u5220\u9664\u5206\u652f $ git branch -d <\u5206\u652f\u540d\u79f0> 2.\u8fdc\u7a0b\u5206\u652f \u00b6 \u8fdc\u7a0b\u5f15\u7528\uff1a\u662f\u5bf9\u8fdc\u7a0b\u4ed3\u5e93\u7684\u5f15\u7528\uff08\u6307\u9488\uff09\uff0c\u5305\u62ec\u5206\u652f\u3001\u6807\u7b7e\u7b49\u7b49\u3002 \u8fdc\u7a0b\u8ddf\u8e2a\u5206\u652f\uff1a\u662f\u8fdc\u7a0b\u5206\u652f\u72b6\u6001\u7684\u5f15\u7528\uff0c\u4ee5 (remote)/(branch) \u5f62\u5f0f\u547d\u540d 1. \u67e5\u770b\u8fdc\u7a0b\u5206\u652f \u00b6 1 2 3 $ git remote # \u67e5\u770b\u6240\u6709\u7684\u8ddf\u8e2a\u5206\u652f $ git branch -vv 2. \u66f4\u65b0\u8fdc\u7a0b\u4ed3\u5e93\u7684\u5f15\u7528 \u00b6 1 2 # \u4ece\u8fdc\u5904\u4ed3\u5e93\u62c9\u53d6 $ git fetch <\u8fdc\u7a0b\u4ed3\u5e93\u540d> 3. \u5408\u5e76\u5206\u652f \u00b6 1 2 # \u5408\u5e76\u5206\u652f $ git merge origin/<\u8fdc\u7a0b\u5206\u652f\u540d> 4. \u57fa\u4e8e\u8fdc\u7a0b\u8ddf\u8e2a\u5206\u652f\u521b\u5efa\u672c\u5730\u5206\u652f \u00b6 1 2 3 $ git checkout -b <\u5206\u652f\u540d\u79f0> origin/<\u5206\u652f\u540d\u79f0> # \u6216\u8005\u4f7f\u7528 $ git checkout --track origin/<\u5206\u652f\u540d\u79f0> 5. \u4fee\u6539\u6b63\u5728\u8ddf\u8e2a\u7684\u4e0a\u6e38\u5206\u652f\u6216\u8bbe\u7f6e\u5df2\u6709\u7684\u672c\u5730\u5206\u652f\u8ddf\u8e2a\u4e00\u4e2a\u521a\u521a\u62c9\u53d6\u4e0b\u6765\u7684\u8fdc\u7a0b\u5206\u652f \u00b6 1 2 # $ git branch -u origin/<\u5206\u652f\u540d\u79f0> 6. \u5220\u9664\u8fdc\u7a0b\u5206\u652f \u00b6 1 2 # \u5220\u9664\u8fdc\u7a0b\u5206\u652f $ git push origin --delete <\u5206\u652f\u540d\u79f0> 3.\u5408\u5e76\u5206\u652f \u00b6 1. \u5408\u5e76\u7b97\u6cd5 \u00b6 \u9012\u5f52\u7b97\u6cd5 3\u8def\u7b97\u6cd5 \u201coctpus\u201d\u7b97\u6cd5 \u53d8\u57fa \u00b6 \u5c06\u63d0\u4ea4\u5230\u67d0\u4e00\u5206\u652f\u4e0a\u7684\u6240\u6709\u4fee\u6539\u90fd\u79fb\u81f3\u53e6\u4e00\u5206\u652f\u4e0a Git\u539f\u7406 \u00b6 git\u7684\u6838\u5fc3\u662f\u4e00\u4e2a\u5bf9\u8c61\u6570\u636e\u5e93\uff0c\u8be5\u6570\u636e\u5e93\u53ef\u4ee5\u7528\u6765\u5b58\u50a8\u6587\u672c\u6216\u4e8c\u8fdb\u5236\u6570\u636e\u3002 \u5e95\u5c42\u547d\u540d \u00b6 1. git rev-parse \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 # \u663e\u793a\u7248\u672c\u5e93\u76ee\u5f55\u6240\u5728\u4f4d\u7f6e $ git rev-parse --git-dir E:/notes/python3-notes/.git # \u663e\u793a\u5de5\u4f5c\u533a\u6839\u76ee\u5f55 $ git rev-parse --show-toplevel E:/notes/python3-notes # \u663e\u793a\u76f8\u5bf9\u4e8e\u8ddf\u76ee\u5f55\u7684\u76f8\u5bf9\u76ee\u5f55 $ git rev-parse --show-prefix docs/img/ # \u663e\u793a\u4ece\u5f53\u524d\u76ee\u5f55\u540e\u9000\u5230\u5de5\u4f5c\u76ee\u5f55\u7684\u6df1\u5ea6 $ git rev-parse --show-cdup ../../ \u6267\u884c git add \u64cd\u4f5c\u65f6\uff0c\u6682\u5b58\u533a\u7684\u76ee\u5f55\u6811\u5c06\u88ab\u66f4\u65b0\uff0c\u540c\u65f6\u5de5\u4f5c\u533a\u4fee\u6539\u7684\u6587\u4ef6\u5185\u5bb9\u4f1a\u88ab\u5199\u5165\u5230\u5bf9\u8c61\u5e93\u4e2d\u7684\u4e00\u4e2a\u65b0\u7684\u5bf9\u8c61\u4e2d\u3002 \u5f53\u6267\u884c git commit \u65f6\uff0c\u6682\u5b58\u533a\u7684\u76ee\u5f55\u6811\u4f1a\u5199\u5165\u5230\u7248\u672c\u5e93\u4e2d\uff0cmaster\u5206\u652f\u4f1a\u505a\u76f8\u5e94\u7684\u66f4\u65b0\uff0c\u5373master\u6700\u65b0\u6307\u5411\u7684\u76ee\u5f55\u6811\u5c31\u662f\u63d0\u4ea4\u65f6\u539f\u6682\u5b58\u533a\u7684\u76ee\u5f55\u6811\u3002 \u5f53\u6267\u884c git reset HEAD \u65f6\uff0c\u6682\u5b58\u533a\u7684\u76ee\u5f55\u6811\u4f1a\u88ab\u91cd\u65b0\uff0c\u4f1a\u88abmaster\u5206\u652f\u6307\u5411\u7684\u76ee\u5f55\u6811\u6240\u66ff\u6362\uff0c\u5de5\u4f5c\u533a\u4e0d\u53d7\u5f71\u54cd\u3002 \u5f53\u6267\u884c git rm --cached <file> \u65f6\uff0c\u4f1a\u76f4\u63a5\u4ece\u6682\u5b58\u533a\u5220\u9664\u6587\u4ef6\uff0c\u5de5\u4f5c\u533a\u5219\u4e0d\u505a\u51fa\u6539\u53d8\u3002 \u5f53\u6267\u884c git checkout . \u6216 git checkout -- <file> \u65f6\uff0c\u4f1a\u7528\u6682\u5b58\u533a\u5168\u90e8\u7684\u6587\u4ef6\u6216\u6307\u5b9a\u7684\u6587\u4ef6\u66ff\u6362\u5de5\u4f5c\u533a\u7684\u6587\u4ef6\u3002 \u5f53\u6267\u884c git checkout HEAD . \u6216 git checkout HEAD <file> \u65f6\uff0c\u4f1a\u7528HEAD\u6307\u5411\u7684master\u5206\u652f\u4e2d\u7684\u5168\u90e8\u6216\u90e8\u5206\u6587\u4ef6\u66ff\u6362\u6682\u5b58\u533a\u548c\u5de5\u4f5c\u533a\u4e2d\u7684\u6587\u4ef6\u3002 1 2 3 4 5 6 # \u663e\u793aHEAD\u6307\u5411\u7684\u76ee\u5f55\u6811 $ git ls-tree -l HEAD 100644 blob 4eeb754bb5131ccbe8de9cd73907a5215901aa15 15 .gitignore 040000 tree 46fee821db1551e8341cf406271062eff4718c64 - docs 100644 blob 38d625ec66862f756ebe09b4af1a9b057f226e54 1249 mkdocs.yml #\u6587\u4ef6\u5c5e\u6027 blob\u5bf9\u8c61 SHA1\u683c\u5f0f\u7684ID\u503c \u6587\u4ef6\u5927\u5c0f \u6587\u4ef6\u540d 1 2 3 4 5 # \u663e\u793a\u6682\u5b58\u533a\u76ee\u5f55\u6811 $ git ls-files -s 100644 4eeb754bb5131ccbe8de9cd73907a5215901aa15 0 .gitignore 100644 5c53539c2d6ec00fe3335ba9b86339ab2cdbc705 0 docs/about.md \u6682\u5b58\u533a\u7f16\u53f7 Git\u5bf9\u8c61 Git LFS \u00b6","title":"Git"},{"location":"CICD/Git/Git/#git","text":"2014\u7531Linus Torvalds\u5f00\u53d1\u7684\u5206\u652f\u7ba1\u7406\u7cfb\u7edf\u3002","title":"Git"},{"location":"CICD/Git/Git/#git_1","text":"","title":"\u4e00\u3001git\u57fa\u672c\u6982\u5ff5"},{"location":"CICD/Git/Git/#1-3","text":"\u5de5\u4f5c\u533a\uff1a .git \u7248\u672c\u5e93\u6240\u5728\u7684\u76ee\u5f55 \u6682\u5b58\u533a\uff1a\u4e5f\u53eb\u7f13\u5b58\u533a\uff0c\u6216\u7d22\u5f15( .git/index )\u3002\u662f\u4e00\u4e2a\u6587\u4ef6\uff0c\u4fdd\u5b58\u4e86\u4e0b\u6b21\u5c06\u63d0\u4ea4\u7684\u6587\u4ef6\u5217\u8868\u4fe1\u606f\uff0c\u4e00\u822c\u5728 Git \u4ed3\u5e93\u76ee\u5f55\u4e2d \u7248\u672c\u5e93\uff1a\u7528\u6765\u4fdd\u5b58\u9879\u76ee\u7684\u5143\u6570\u636e\u548c\u5bf9\u8c61\u6570\u636e\u5e93\u7684\u5730\u65b9\uff0c .git \u76ee\u5f55\u5c31\u662f\u7248\u672c\u5e93\u3002","title":"1. 3\u4e2a\u533a\u57df"},{"location":"CICD/Git/Git/#2-3","text":"git\u5bf9\u8c61 \u6811\u5bf9\u8c61 \u63d0\u4ea4\u5bf9\u8c61","title":"2. 3\u4e2a\u5bf9\u8c61"},{"location":"CICD/Git/Git/#3-3","text":"\u5df2\u4fee\u6539\uff08modified\uff09\uff1a\u8868\u793a\u4fee\u6539\u4e86\u6587\u4ef6\uff0c\u4f46\u8fd8\u6ca1\u4fdd\u5b58\u5230\u6570\u636e\u5e93\u4e2d\u3002 \u5df2\u6682\u5b58\uff08staged\uff09\uff1a\u8868\u793a\u5bf9\u4e00\u4e2a\u5df2\u4fee\u6539\u6587\u4ef6\u7684\u5f53\u524d\u7248\u672c\u505a\u4e86\u6807\u8bb0\uff0c\u4f7f\u4e4b\u5305\u542b\u5728\u4e0b\u6b21\u63d0\u4ea4\u7684\u5feb\u7167\u4e2d\u3002 \u5df2\u63d0\u4ea4\uff08committed\uff09\uff1a\u8868\u793a\u6570\u636e\u5df2\u7ecf\u5b89\u5168\u7684\u4fdd\u5b58\u5728\u672c\u5730\u6570\u636e\u5e93\u4e2d\u3002","title":"3. 3\u79cd\u72b6\u6001"},{"location":"CICD/Git/Git/#4-git","text":"\u5728\u5de5\u4f5c\u76ee\u5f55\u4e2d\u4fee\u6539\u6587\u4ef6\u3002 \u6682\u5b58\u6587\u4ef6\uff0c\u5c06\u6587\u4ef6\u7684\u5feb\u7167\u653e\u5165\u6682\u5b58\u533a\u57df\u3002 \u63d0\u4ea4\u66f4\u65b0\uff0c\u627e\u5230\u6682\u5b58\u533a\u57df\u7684\u6587\u4ef6\uff0c\u5c06\u5feb\u7167\u6c38\u4e45\u6027\u5b58\u50a8\u5230 Git \u4ed3\u5e93\u76ee\u5f55\u3002","title":"4. Git\u57fa\u672c\u7684\u5de5\u4f5c\u6d41\u7a0b"},{"location":"CICD/Git/Git/#5-git","text":"1 2 3 4 5 6 7 8 9 10 11 $ tree -FL 1 .git .git \u251c\u2500\u2500 branches/ \u251c\u2500\u2500 config # \u9879\u76ee\u7279\u6709\u7684\u914d\u7f6e\u9879 \u251c\u2500\u2500 description # \u5bf9\u4ed3\u5e93\u7684\u63cf\u8ff0\u4fe1\u606f \u251c\u2500\u2500 HEAD # \u76ee\u524d\u88ab\u68c0\u51fa\u7684\u5206\u652f \u251c\u2500\u2500 hooks/ # \u5305\u542b\u5ba2\u6237\u7aef\u6216\u670d\u52a1\u7aef\u7684\u94a9\u5b50\u811a\u672c \u251c\u2500\u2500 info/ # \u5305\u542b\u5168\u5c40\u6027\u7684\u6392\u51fa\u6587\u4ef6 \u251c\u2500\u2500 objects/ # \u5b58\u50a8\u6240\u6709\u7684\u6570\u636e\u5185\u5bb9 \u251c\u2500\u2500 index # \u5305\u542b\u6587\u4ef6\u7d22\u5f15\u7684\u76ee\u5f55\u6811\uff0c\u8bb0\u5f55\u4e86\u6587\u4ef6\u540d\u548c\u6587\u4ef6\u7684\u72b6\u6001\u4fe1\u606f\uff08\u65f6\u95f4\u6233\u548c\u6587\u4ef6\u957f\u5ea6\u7b49\uff09 \u2514\u2500\u2500 refs/ # \u5b58\u50a8\u6307\u5411\u6570\u636e\uff08\u5206\u652f\uff09\u63d0\u4ea4\u5bf9\u8c61\u7684\u6307\u9488","title":"5. Git\u5de5\u4f5c\u533a\u76ee\u5f55"},{"location":"CICD/Git/Git/#git_2","text":"","title":"\u4e8c\u3001Git\u914d\u7f6e"},{"location":"CICD/Git/Git/#1-git","text":"\u914d\u7f6e\u6587\u4ef6\u7684\u4e09\u4e2a\u5b58\u50a8\u4f4d\u7f6e /etc/gitconfig \uff1a\u9488\u5bf9\u6240\u6709\u7528\u6237\u7684\u901a\u7528\u914d\u7f6e\uff0c\u4f7f\u7528 git config --system \u914d\u7f6e ~/.gitconfig \u6216 ~/.config/git/config \uff1a\u9488\u5bf9\u5f53\u524d\u7528\u6237\uff0c\u4f7f\u7528 git config --global \u914d\u7f6e .git/config \uff1a\u9488\u5bf9\u672c\u4ed3\u5e93\uff0c\u4f7f\u7528 git config --local \u914d\u7f6e \u8fd9\u4e09\u4e2a\u914d\u7f6e\u6587\u4ef6\u7684\u4f18\u5148\u7ea7\u7531\u4f4e\u5230\u9ad8","title":"1. Git\u914d\u7f6e\u6587\u4ef6"},{"location":"CICD/Git/Git/#2-git","text":"1 git config --list","title":"2. \u67e5\u770bgit\u5f53\u524d\u914d\u7f6e"},{"location":"CICD/Git/Git/#3","text":"","title":"3. \u5e38\u7528\u914d\u7f6e"},{"location":"CICD/Git/Git/#1","text":"1 2 git config --global user.name 'yuanzhigao' git config --global user.email ' gaopeng0214@126.com","title":"1. \u7528\u6237\u540d\u79f0\u4e0e\u90ae\u4ef6\u5730\u5740"},{"location":"CICD/Git/Git/#2","text":"1 git config --global core.editor vim","title":"2. \u914d\u7f6e\u9ed8\u8ba4\u6587\u672c\u7f16\u8f91\u5668"},{"location":"CICD/Git/Git/#3_1","text":"1 2 $ git config user.name yuanzhigao","title":"3. \u67e5\u770b\u5177\u4f53\u67d0\u4e00\u9879\u914d\u7f6e"},{"location":"CICD/Git/Git/#4","text":"1 2 3 4 git config --global alias.co checkout git config --global alias.br branch git config --global alias.ci commit git config --global alias.st status","title":"4. \u522b\u540d"},{"location":"CICD/Git/Git/#5","text":"1 2 3 4 # \u89e3\u51b3\u4e2d\u6587\u540d\u7684\u663e\u793a\u95ee\u9898 git config --global core.quotepath false # \u8f93\u51fa\u4e2d\u5f00\u542f\u989c\u8272\u663e\u793a git config --global color.ui true","title":"5. \u5176\u4ed6\u914d\u7f6e"},{"location":"CICD/Git/Git/#_1","text":"","title":"\u4e09\u3001\u4ed3\u5e93\u7ba1\u7406"},{"location":"CICD/Git/Git/#1-git_1","text":"","title":"1. \u65b0\u5efaGit\u4ed3\u5e93"},{"location":"CICD/Git/Git/#1-git_2","text":"1 git init","title":"1. \u5728\u5f53\u524d\u76ee\u5f55\u521d\u59cb\u5316Git\u4ed3\u5e93"},{"location":"CICD/Git/Git/#2-git_1","text":"1 git init Demo","title":"2. \u65b0\u5efa\u4e00\u4e2a\u76ee\u5f55\u5e76\u5c06\u5176\u521d\u59cb\u5316\u4e3aGit\u4ed3\u5e93"},{"location":"CICD/Git/Git/#3-git","text":"1 2 3 4 # git\u534f\u8bae git clone git@gitee.com:gaoyuanzhi/Demo.git # https\u534f\u8bae git clone https://gitee.com/gaoyuanzhi/python3-notes.git","title":"3. \u514b\u9686\u4e00\u4e2aGit\u4ed3\u5e93"},{"location":"CICD/Git/Git/#_2","text":"","title":"\u56db\u3001\u6587\u4ef6\u7ba1\u7406"},{"location":"CICD/Git/Git/#1_1","text":"1 2 3 4 5 6 7 8 # \u8be6\u7ec6\u72b6\u6001 $ git status # \u7b80\u77ed\u72b6\u6001 $ git status -s M README # \u6587\u4ef6\u88ab\u4fee\u6539\u4e86\u5e76\u653e\u5165\u4e86\u6682\u5b58\u533a A lib/git.rb # \u65b0\u6dfb\u52a0\u5230\u6682\u5b58\u533a\u4e2d\u7684\u6587\u4ef6 M lib/simplegit.rb # \u6587\u4ef6\u88ab\u4fee\u6539\u4e86\u4f46\u662f\u8fd8\u6ca1\u653e\u5165\u6682\u5b58\u533a ?? LICENSE.txt # \u65b0\u6dfb\u52a0\u7684\u672a\u8ddf\u8e2a\u6587\u4ef6 git status \u7684\u51e0\u79cd\u72b6\u6001 changes to be commited(\u88ab\u63d0\u4ea4\u7684\u4fee\u6539)\uff1a\u4e0b\u6b21\u63d0\u4ea4\u4e2d\u88ab\u7eb3\u5165\u7248\u672c\u5e93\u4e2d\u7684\u88ab\u4fee\u6539\u7684\u6587\u4ef6\u3002 changed but not updated(\u4e0d\u4f1a\u88ab\u66f4\u65b0\u7684\u4fee\u6539)\uff1a\u5df2\u7ecf\u88ab\u4fee\u6539\u4f46\u5c1a\u672a\u6ce8\u518c\u5230\u4e0b\u6b21\u63d0\u4ea4\u4e2d\u7684\u6587\u4ef6\u3002 untracked files(\u672a\u88ab\u8ddf\u8e2a\u7684\u6587\u4ef6)\uff1a\u65b0\u589e\u6587\u4ef6 \u5f53\u6267\u884c git status \u6216 git diff \u626b\u63cf\u5de5\u4f5c\u533a\u6539\u52a8\u7684\u65f6\u5019\uff0c\u5148\u4f9d\u636e.git/index\u6587\u4ef6\u4e2d\u8bb0\u5f55\u7684\u65f6\u95f4\u6233\uff0c\u957f\u5ea6\u7b49\u4fe1\u606f\u5224\u65ad\u5de5\u4f5c\u533a\u6587\u4ef6\u662f\u5426\u6539\u53d8\uff0c\u5982\u679c\u5de5\u4f5c\u533a\u6587\u4ef6\u7684\u65f6\u95f4\u6233\u6539\u53d8\u4e86\uff0c\u8bf4\u660e\u6587\u4ef6\u7684\u5185\u5bb9\u53ef\u80fd\u88ab\u53d8\u4e86\uff0c\u9700\u8981\u6253\u5f00\u6587\u4ef6\uff0c\u8bfb\u53d6\u6587\u4ef6\u5185\u5bb9\uff0c\u4e0e\u66f4\u6539\u524d\u7684\u539f\u59cb\u6587\u4ef6\u76f8\u6bd4\u8f83\uff0c\u5224\u65ad\u6587\u4ef6\u662f\u5426\u6539\u53d8\u3002\u5982\u679c\u6587\u4ef6\u5185\u5bb9\u6ca1\u6709\u6539\u53d8\uff0c\u5219\u5c06\u6587\u4ef6\u65b0\u7684\u65f6\u95f4\u6233\u8bb0\u5f55\u5230.git/index\u6587\u4ef6\u4e2d\u3002","title":"1. \u67e5\u770b\u5f53\u524d\u6587\u4ef6\u72b6\u6001"},{"location":"CICD/Git/Git/#2_1","text":"1 2 3 4 5 6 # \u6dfb\u52a0\u6307\u5b9a\u6587\u4ef6\u5230\u6682\u5b58\u533a\uff0c\u4e00\u6b21\u53ef\u4ee5\u6dfb\u52a0\u591a\u4e2a\u6587\u4ef6 $ git add [ file1 ] [ file2 ] # \u6dfb\u52a0\u6307\u5b9a\u76ee\u5f55\u5230\u6682\u5b58\u533a $ git add [ dir ] # \u6dfb\u52a0\u5f53\u524d\u76ee\u5f55\u4e0b\u7684\u6240\u6709\u6587\u4ef6\u5230\u6682\u5b58\u533a $ git add .","title":"2. \u6dfb\u52a0\u5185\u5bb9\u5230\u6682\u5b58\u533a"},{"location":"CICD/Git/Git/#_3","text":"1 2 # \u6e05\u9664\u5de5\u4f5c\u533a\u5f53\u524d\u7684\u6539\u52a8 git clean -df","title":"\u6e05\u9664\u5de5\u4f5c\u533a"},{"location":"CICD/Git/Git/#3_2","text":"\u4e00\u822c\u6211\u4eec\u603b\u4f1a\u6709\u4e9b\u6587\u4ef6\u65e0\u9700\u7eb3\u5165 Git \u7684\u7ba1\u7406\uff0c\u4e5f\u4e0d\u5e0c\u671b\u5b83\u4eec\u603b\u51fa\u73b0\u5728\u672a\u8ddf\u8e2a\u6587\u4ef6\u5217\u8868\u3002 \u901a\u5e38 \u90fd\u662f\u4e9b\u81ea\u52a8\u751f\u6210\u7684\u6587\u4ef6\uff0c\u6bd4\u5982\u65e5\u5fd7\u6587\u4ef6\uff0c\u6216\u8005\u7f16\u8bd1\u8fc7\u7a0b\u4e2d\u521b\u5efa\u7684\u4e34\u65f6\u6587\u4ef6\u7b49\u3002 \u5728\u8fd9\u79cd\u60c5\u51b5 \u4e0b\uff0c\u6211\u4eec\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u540d\u4e3a .gitignore \u7684\u6587\u4ef6\uff0c\u5217\u51fa\u8981\u5ffd\u7565\u7684\u6587\u4ef6\u6a21\u5f0f\u3002 \u6587\u4ef6 .gitignore \u7684\u683c\u5f0f\u89c4\u8303\u5982\u4e0b\uff1a \u6240\u6709\u7a7a\u884c\u6216\u8005\u4ee5 \uff03 \u5f00\u5934\u7684\u884c\u90fd\u4f1a\u88ab Git \u5ffd\u7565\u3002 \u53ef\u4ee5\u4f7f\u7528shell \u6240\u4f7f\u7528\u7684\u7b80\u5316\u4e86\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u6a21\u5f0f\u5339\u914d\u3002 \u5339\u914d\u6a21\u5f0f\u53ef\u4ee5\u4ee5\uff08 / \uff09\u5f00\u5934\u9632\u6b62\u9012\u5f52\u3002 \u5339\u914d\u6a21\u5f0f\u53ef\u4ee5\u4ee5\uff08 / \uff09\u7ed3\u5c3e\u6307\u5b9a\u76ee\u5f55\u3002 \u8981\u5ffd\u7565\u6307\u5b9a\u6a21\u5f0f\u4ee5\u5916\u7684\u6587\u4ef6\u6216\u76ee\u5f55\uff0c\u53ef\u4ee5\u5728\u6a21\u5f0f\u524d\u52a0\u4e0a\u60ca\u53f9\u53f7\uff08 ! \uff09\u53d6\u53cd\u3002 https://github.com/github/gitignore \u6709\u5341\u79cd\u9879\u76ee\u53ca\u8bed\u8a00\u7684 .gitignore \u6587\u4ef6\u5217\u8868","title":"3. \u5ffd\u7565\u6587\u4ef6"},{"location":"CICD/Git/Git/#_4","text":"1 2 3 4 5 6 # \u5de5\u4f5c\u533a\u548c\u6682\u5b58\u533a\u4e2d\u7684\u5dee\u5f02 git diff # \u6682\u5b58\u533a\u548c\u7248\u672c\u5e93\u4e2d\u7684\u5dee\u5f02 git diff --cached # \u5de5\u4f5c\u533a\u548cHEAD\uff08\u5f53\u524d\u5de5\u4f5c\u5206\u652f\uff09\u7684\u5dee\u5f02 git diff HEAD","title":"\u5dee\u5f02"},{"location":"CICD/Git/Git/#4_1","text":"1 2 3 4 # \u540c\u65f6\u5220\u9664\u6682\u5b58\u533a\u548c\u5de5\u4f5c\u533a\u7684\u6587\u4ef6 $ git rm [ file ] # \u4ece\u6682\u5b58\u533a\u57df\u79fb\u9664\u4f46\u662f\u5728\u5de5\u4f5c\u533a\u4fdd\u7559 $ git rm --cached [ file ]","title":"4. \u79fb\u9664\u6587\u4ef6"},{"location":"CICD/Git/Git/#5_1","text":"1 2 # \u91cd\u547d\u540d\u6216\u79fb\u52a8\u6587\u4ef6 $ git mv <src> <dest>","title":"5. \u79fb\u52a8\u6587\u4ef6"},{"location":"CICD/Git/Git/#_5","text":"1 $ git stash","title":"\u4fdd\u5b58\u5de5\u4f5c\u8fdb\u5ea6"},{"location":"CICD/Git/Git/#_6","text":"","title":"\u4e94\u3001\u63d0\u4ea4\u66f4\u65b0"},{"location":"CICD/Git/Git/#1_2","text":"1 2 3 4 5 6 7 8 # \u542f\u52a8\u6587\u672c\u7f16\u8f91\u5668\u4ee5\u4fbf\u8f93\u5165\u672c\u6b21\u63d0\u4ea4\u7684\u8bf4\u660e $ git commit # \u5c06\u63d0\u4ea4\u4fe1\u606f\u4e0e\u547d\u4ee4\u653e\u5728\u540c\u4e00\u884c $ git commit -m \"Story 182: Fix benchmarks for speed\" # \u628a\u6240\u6709\u5df2\u7ecf\u8ddf\u8e2a\u8fc7\u7684\u6587\u4ef6\u6682\u5b58\u8d77\u6765\u4e00\u5e76\u63d0\u4ea4\uff0c\u4ece\u800c\u8df3\u8fc7 git add \u6b65\u9aa4 $ git commit -a -m 'added new benchmarks' # \u4ece\u65b0\u63d0\u4ea4 $ git commit --amend","title":"1. \u63d0\u4ea4\u66f4\u65b0"},{"location":"CICD/Git/Git/#2_2","text":"1 2 # \u67e5\u770b\u5386\u53f2\u63d0\u4ea4 $ git log \u5e38\u7528\u9009\u9879 \u9009\u9879 \u8bf4\u660e -p \u6309\u8865\u4e01\u683c\u5f0f\u663e\u793a\u6bcf\u4e2a\u66f4\u65b0\u4e4b\u95f4\u7684\u5dee\u5f02 --stat \u663e\u793a\u6bcf\u6b21\u66f4\u65b0\u7684\u6587\u4ef6\u4fee\u6539\u7edf\u8ba1\u4fe1\u606f\u3002 --shortstat \u53ea\u663e\u793a --stat \u4e2d\u6700\u540e\u7684\u884c\u6570\u4fee\u6539\u6dfb\u52a0\u79fb\u9664\u7edf\u8ba1 --name-only \u4ec5\u5728\u63d0\u4ea4\u4fe1\u606f\u540e\u663e\u793a\u5df2\u4fee\u6539\u7684\u6587\u4ef6\u6e05\u5355\u3002 --name- status \u663e\u793a\u65b0\u589e\u3001\u4fee\u6539\u3001\u5220\u9664\u7684\u6587\u4ef6\u6e05\u5355 --relative-date \u4f7f\u7528\u8f83\u77ed\u7684\u76f8\u5bf9\u65f6\u95f4\u663e\u793a\uff08\u6bd4\u5982\uff0c\u201c2 weeks ago\u201d\uff09 --graph \u663e\u793a ASCII \u56fe\u5f62\u8868\u793a\u7684\u5206\u652f\u5408\u5e76\u5386\u53f2 --pretty \u4f7f\u7528\u5176\u4ed6\u683c\u5f0f\u663e\u793a\u5386\u53f2\u63d0\u4ea4\u4fe1\u606f\u3002\u53ef\u7528\u7684\u9009\u9879\u5305\u62ec oneline\uff0cshort\uff0c full\uff0cfuller \u548c format\uff08\u540e\u8ddf\u6307\u5b9a\u683c\u5f0f\uff09 --decorate \u67e5\u770b\u5404\u4e2a\u5206\u652f\u5f53\u524d\u6240\u6307\u7684\u5bf9\u8c61 -(n) \u4ec5\u663e\u793a\u6700\u8fd1\u7684 n \u6761\u63d0\u4ea4 --since , --after \u4ec5\u663e\u793a\u6307\u5b9a\u65f6\u95f4\u4e4b\u540e\u7684\u63d0\u4ea4 --until , --before \u4ec5\u663e\u793a\u6307\u5b9a\u65f6\u95f4\u4e4b\u524d\u7684\u63d0\u4ea4 --author \u4ec5\u663e\u793a\u6307\u5b9a\u4f5c\u8005\u76f8\u5173\u7684\u63d0\u4ea4 --committer \u4ec5\u663e\u793a\u6307\u5b9a\u63d0\u4ea4\u8005\u76f8\u5173\u7684\u63d0\u4ea4 --grep \u4ec5\u663e\u793a\u542b\u6307\u5b9a\u5173\u952e\u5b57\u7684\u63d0\u4ea4 -S \u4ec5\u663e\u793a\u6dfb\u52a0\u6216\u79fb\u9664\u4e86\u67d0\u4e2a\u5173\u952e\u5b57\u7684\u63d0\u4ea4 1 2 # \u4f8b $ git log --since = '2020-2-10' --until = '2020-2-15' --pretty = oneline","title":"2. \u67e5\u770b\u5386\u53f2\u63d0\u4ea4"},{"location":"CICD/Git/Git/#_7","text":"","title":"\u516d\u3001\u8fdc\u7a0b\u4ed3\u5e93"},{"location":"CICD/Git/Git/#1_3","text":"1 2 3 4 5 $ git remote # \u663e\u793a\u8fdc\u7a0b\u4ed3\u5e93URL $ git remote -v # \u67e5\u770b\u66f4\u591a\u4fe1\u606f\uff0cURL\u548c\u5206\u652f\u7b49 $ git remote show origin","title":"1. \u67e5\u770b\u8fdc\u7a0b\u4ed3\u5e93"},{"location":"CICD/Git/Git/#2_3","text":"1 2 # \u6dfb\u52a0\u8fdc\u7a0b\u4ed3\u5e93\u5e76\u8d77\u4e00\u4e2a\u522b\u540d $ git remote add python3-notes git@gitee.com:gaoyuanzhi/python3-notes.git","title":"2. \u6dfb\u52a0\u8fdc\u7a0b\u4ed3\u5e93"},{"location":"CICD/Git/Git/#3_3","text":"1 2 3 4 5 # \u65b9\u6cd5\u4e00 $ git pull # \u65b9\u6cd5\u4e8c $ git fetch <remote_name> $ git merge \u4e24\u79cd\u65b9\u5f0f\u7684\u533a\u522b\uff1a \u5f53 git fetch \u547d\u4ee4\u4ece\u670d\u52a1\u5668\u4e0a\u6293\u53d6\u672c\u5730\u6ca1\u6709\u7684\u6570\u636e\u65f6\uff0c\u5b83\u5e76\u4e0d\u4f1a\u4fee\u6539\u5de5\u4f5c\u76ee\u5f55\u4e2d\u7684\u5185\u5bb9\u3002 \u5b83\u53ea\u4f1a\u83b7\u53d6\u6570\u636e\u7136\u540e\u8ba9\u4f60\u81ea\u5df1\u5408\u5e76\u30022. git pull \u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u5b83\u7684\u542b\u4e49\u662f\u4e00\u4e2a git fetch \u7d27\u63a5\u7740\u4e00\u4e2a git merge \u547d\u4ee4\uff0c git pull \u4f1a\u67e5\u627e\u5f53\u524d\u5206\u652f\u6240\u8ddf\u8e2a\u7684\u670d\u52a1\u5668\u4e0e\u5206\u652f\uff0c\u4ece\u670d\u52a1\u5668\u4e0a\u6293\u53d6\u6570\u636e\u7136\u540e\u5c1d\u8bd5\u5408\u5e76\u5165\u90a3\u4e2a\u8fdc\u7a0b\u5206\u652f\u3002","title":"3. \u62c9\u53d6\u8fdc\u7a0b\u4ed3\u5e93"},{"location":"CICD/Git/Git/#4_2","text":"1 2 3 4 $ git push origin <\u5206\u652f\u540d\u79f0> # git\u4f1a\u5c06<\u5206\u652f\u540d\u79f0>\u5c55\u5f00refs/heads/<\u5206\u652f\u540d\u79f0>:refs/heads/<\u5206\u652f\u540d\u79f0> # \u5982\u679c\u672c\u5730\u5206\u652f\u548c\u8fdc\u7a0b\u5206\u652f\u540d\u5b57\u4e0d\u540c\uff0c\u53ef\u4ee5\u5199\u6210\u5982\u4e0b\u65b9\u5f0f $ git push origin <\u672c\u5730\u5206\u652f\u540d\u79f0>:<\u8fdc\u7a0b\u5206\u652f\u540d\u79f0>","title":"4. \u63a8\u9001\u5230\u8fdc\u7a0b\u4ed3\u5e93"},{"location":"CICD/Git/Git/#5_2","text":"1 git remote rename old_name new_name","title":"5. \u91cd\u547d\u540d\u8fdc\u7a0b\u4ed3\u5e93"},{"location":"CICD/Git/Git/#6","text":"1 git remote rm python3-notes","title":"6. \u5220\u9664\u8fdc\u7a0b\u4ed3\u5e93"},{"location":"CICD/Git/Git/#_8","text":"","title":"\u4e03\u3001\u6807\u7b7e"},{"location":"CICD/Git/Git/#1_4","text":"\u8f7b\u91cf\u6807\u7b7e\uff1a\u4e00\u4e2a\u8f7b\u91cf\u6807\u7b7e\u5f88\u50cf\u4e00\u4e2a\u4e0d\u4f1a\u6539\u53d8\u7684\u5206\u652f\uff0c\u5b83\u53ea\u662f\u4e00\u4e2a\u7279\u5b9a\u63d0\u4ea4\u7684\u5f15\u7528 \u9644\u6ce8\u6807\u7b7e\uff1a\u5b58\u50a8\u5728Git\u6570\u636e\u5e93\u4e2d\u7684\u4e00\u4e2a\u5b8c\u6574\u5bf9\u8c61 \u9644\u6ce8\u6807\u7b7e\u5305\u542b\u6253\u6807\u7b7e\u8005\u7684\u540d\u5b57\u3001\u7535\u5b50\u90ae\u4ef6\u5730\u5740\u3001\u65e5\u671f\u65f6\u95f4\uff1b\u8fd8\u6709\u4e00\u4e2a\u6807\u7b7e\u4fe1\u606f\uff1b\u5e76\u4e14\u53ef\u4ee5\u4f7f\u7528 GNU Privacy Guard \uff08GPG\uff09\u7b7e\u540d\u4e0e\u9a8c\u8bc1\u3002 \u8f7b\u91cf\u6807\u7b7e\u672c\u8d28\u4e0a\u662f\u5c06\u63d0\u4ea4\u6821\u9a8c\u548c\u5b58\u50a8\u5230\u4e00\u4e2a\u6587 \u4ef6\u4e2d - \u6ca1\u6709\u4fdd\u5b58\u4efb\u4f55\u5176\u4ed6\u4fe1\u606f","title":"1. \u6807\u7b7e\u7684\u5206\u7c7b"},{"location":"CICD/Git/Git/#2_4","text":"1 2 3 4 # \u5217\u51fa\u6240\u6709\u6807\u7b7e $ git tag # \u67e5\u770b\u6807\u7b7e\u7684\u8be6\u7ec6\u4fe1\u606f git show v1.4","title":"2. \u67e5\u770b\u6807\u7b7e"},{"location":"CICD/Git/Git/#3_4","text":"1 2 3 4 5 6 # \u521b\u5efa\u9644\u6ce8\u6807\u7b7e $ git tag -a v1.4 -m 'my version 1.4' # \u521b\u5efa\u8f7b\u91cf\u6807\u7b7e git tag v1.4-lw # \u7ed9\u4e4b\u524d\u7684\u63d0\u4ea4\u6253\u6807\u7b7e $ git tag -a v1.2 9fceb02","title":"3. \u521b\u5efa\u6807\u7b7e"},{"location":"CICD/Git/Git/#4_3","text":"1 2 3 4 # \u628a\u6307\u5b9a\u6807\u7b7e\u63a8\u9001\u7684\u8fdc\u7a0b\u4ed3\u5e93 $ git push origin [ tagname ] # \u63a8\u9001\u6240\u6709\u4e0d\u5728\u8fdc\u7a0b\u4ed3\u5e93\u670d\u52a1\u5668\u4e0a\u7684\u6807\u7b7e $ git push origin --tags","title":"4. \u5171\u4eab\u6807\u7b7e"},{"location":"CICD/Git/Git/#5_3","text":"1 2 # \u5e76\u4e0d\u80fd\u771f\u7684\u68c0\u51fa\u4e00\u4e2a\u6807\u7b7e\uff0c\u53ea\u80fd\u5728\u7279\u5b9a\u7684\u6807\u7b7e\u4e0a\u521b\u5efa\u4e00\u4e2a\u65b0\u5206\u652f $ git checkout -b version2 v2.0.0","title":"5. \u68c0\u51fa\u6807\u7b7e"},{"location":"CICD/Git/Git/#_9","text":"","title":"\u516b\u3001\u5206\u652f"},{"location":"CICD/Git/Git/#1_5","text":"","title":"1. \u672c\u5730\u5206\u652f"},{"location":"CICD/Git/Git/#1_6","text":"1 2 # \u521b\u5efa\u5206\u652f $ git branch <\u5206\u652f\u540d\u79f0> # \u5728\u5f53\u524d\u6240\u5728\u7684\u63d0\u4ea4\u5bf9\u8c61\u4e0a\u521b\u5efa\u4e00\u4e2a\u6307\u9488","title":"1. \u521b\u5efa\u5206\u652f"},{"location":"CICD/Git/Git/#2_5","text":"1 2 3 4 5 6 7 8 9 $ git branch gh-pages * master # `*`\u8868\u793a\u5f53\u524d\u5206\u652f # \u67e5\u770b\u6bcf\u4e00\u4e2a\u5206\u652f\u7684\u6700\u540e\u4e00\u6b21\u63d0\u4ea4 $ git branch -v # \u8981\u67e5\u770b\u54ea\u4e9b\u5206\u652f\u5df2\u7ecf\u5408\u5e76\u5230\u5f53\u524d\u5206\u652f $ git branch --merged # \u67e5\u770b\u6240\u6709\u5305\u542b\u672a\u5408\u5e76\u5de5\u4f5c\u7684\u5206\u652f $ git branch --no-merged","title":"2. \u67e5\u770b\u5206\u652f\u5217\u8868"},{"location":"CICD/Git/Git/#3_5","text":"1 2 3 $ git checkout <\u5206\u652f\u540d\u79f0> # HEAD \u6307\u5411\u5f53\u524d\u5206\u652f # \u65b0\u5efa\u4e00\u4e2a\u5206\u652f\u5e76 \u540c\u65f6\u5207\u6362\u5230\u90a3\u4e2a\u5206\u652f\u4e0a $ git checkout -b iss53 git checkout master \u505a\u4e86\u4e24\u4ef6\u4e8b\uff1a1.\u662f\u4f7f HEAD \u6307\u56de master \u5206\u652f\uff0c2\u3001\u5c06\u5de5\u4f5c\u76ee\u5f55\u6062\u590d\u6210 master \u5206\u652f\u6240\u6307\u5411\u7684\u5feb\u7167\u5185\u5bb9","title":"3. \u5207\u6362\u5206\u652f"},{"location":"CICD/Git/Git/#4_4","text":"1 2 3 $ git merge <\u5206\u652f\u540d\u79f0> # \u5408\u5e76\u8fdc\u7a0b\u5206\u652f\u5230\u5f53\u524d\u5206\u652f $ git merge origin/<\u8fdc\u7a0b\u5206\u652f\u540d\u79f0>","title":"4. \u5408\u5e76\u5206\u652f"},{"location":"CICD/Git/Git/#5_4","text":"1 2 # \u5220\u9664\u5206\u652f $ git branch -d <\u5206\u652f\u540d\u79f0>","title":"5. \u5220\u9664\u5206\u652f"},{"location":"CICD/Git/Git/#2_6","text":"\u8fdc\u7a0b\u5f15\u7528\uff1a\u662f\u5bf9\u8fdc\u7a0b\u4ed3\u5e93\u7684\u5f15\u7528\uff08\u6307\u9488\uff09\uff0c\u5305\u62ec\u5206\u652f\u3001\u6807\u7b7e\u7b49\u7b49\u3002 \u8fdc\u7a0b\u8ddf\u8e2a\u5206\u652f\uff1a\u662f\u8fdc\u7a0b\u5206\u652f\u72b6\u6001\u7684\u5f15\u7528\uff0c\u4ee5 (remote)/(branch) \u5f62\u5f0f\u547d\u540d","title":"2.\u8fdc\u7a0b\u5206\u652f"},{"location":"CICD/Git/Git/#1_7","text":"1 2 3 $ git remote # \u67e5\u770b\u6240\u6709\u7684\u8ddf\u8e2a\u5206\u652f $ git branch -vv","title":"1. \u67e5\u770b\u8fdc\u7a0b\u5206\u652f"},{"location":"CICD/Git/Git/#2_7","text":"1 2 # \u4ece\u8fdc\u5904\u4ed3\u5e93\u62c9\u53d6 $ git fetch <\u8fdc\u7a0b\u4ed3\u5e93\u540d>","title":"2. \u66f4\u65b0\u8fdc\u7a0b\u4ed3\u5e93\u7684\u5f15\u7528"},{"location":"CICD/Git/Git/#3_6","text":"1 2 # \u5408\u5e76\u5206\u652f $ git merge origin/<\u8fdc\u7a0b\u5206\u652f\u540d>","title":"3. \u5408\u5e76\u5206\u652f"},{"location":"CICD/Git/Git/#4_5","text":"1 2 3 $ git checkout -b <\u5206\u652f\u540d\u79f0> origin/<\u5206\u652f\u540d\u79f0> # \u6216\u8005\u4f7f\u7528 $ git checkout --track origin/<\u5206\u652f\u540d\u79f0>","title":"4. \u57fa\u4e8e\u8fdc\u7a0b\u8ddf\u8e2a\u5206\u652f\u521b\u5efa\u672c\u5730\u5206\u652f"},{"location":"CICD/Git/Git/#5_5","text":"1 2 # $ git branch -u origin/<\u5206\u652f\u540d\u79f0>","title":"5. \u4fee\u6539\u6b63\u5728\u8ddf\u8e2a\u7684\u4e0a\u6e38\u5206\u652f\u6216\u8bbe\u7f6e\u5df2\u6709\u7684\u672c\u5730\u5206\u652f\u8ddf\u8e2a\u4e00\u4e2a\u521a\u521a\u62c9\u53d6\u4e0b\u6765\u7684\u8fdc\u7a0b\u5206\u652f"},{"location":"CICD/Git/Git/#6_1","text":"1 2 # \u5220\u9664\u8fdc\u7a0b\u5206\u652f $ git push origin --delete <\u5206\u652f\u540d\u79f0>","title":"6. \u5220\u9664\u8fdc\u7a0b\u5206\u652f"},{"location":"CICD/Git/Git/#3_7","text":"","title":"3.\u5408\u5e76\u5206\u652f"},{"location":"CICD/Git/Git/#1_8","text":"\u9012\u5f52\u7b97\u6cd5 3\u8def\u7b97\u6cd5 \u201coctpus\u201d\u7b97\u6cd5","title":"1. \u5408\u5e76\u7b97\u6cd5"},{"location":"CICD/Git/Git/#_10","text":"\u5c06\u63d0\u4ea4\u5230\u67d0\u4e00\u5206\u652f\u4e0a\u7684\u6240\u6709\u4fee\u6539\u90fd\u79fb\u81f3\u53e6\u4e00\u5206\u652f\u4e0a","title":"\u53d8\u57fa"},{"location":"CICD/Git/Git/#git_3","text":"git\u7684\u6838\u5fc3\u662f\u4e00\u4e2a\u5bf9\u8c61\u6570\u636e\u5e93\uff0c\u8be5\u6570\u636e\u5e93\u53ef\u4ee5\u7528\u6765\u5b58\u50a8\u6587\u672c\u6216\u4e8c\u8fdb\u5236\u6570\u636e\u3002","title":"Git\u539f\u7406"},{"location":"CICD/Git/Git/#_11","text":"","title":"\u5e95\u5c42\u547d\u540d"},{"location":"CICD/Git/Git/#1-git-rev-parse","text":"1 2 3 4 5 6 7 8 9 10 11 12 # \u663e\u793a\u7248\u672c\u5e93\u76ee\u5f55\u6240\u5728\u4f4d\u7f6e $ git rev-parse --git-dir E:/notes/python3-notes/.git # \u663e\u793a\u5de5\u4f5c\u533a\u6839\u76ee\u5f55 $ git rev-parse --show-toplevel E:/notes/python3-notes # \u663e\u793a\u76f8\u5bf9\u4e8e\u8ddf\u76ee\u5f55\u7684\u76f8\u5bf9\u76ee\u5f55 $ git rev-parse --show-prefix docs/img/ # \u663e\u793a\u4ece\u5f53\u524d\u76ee\u5f55\u540e\u9000\u5230\u5de5\u4f5c\u76ee\u5f55\u7684\u6df1\u5ea6 $ git rev-parse --show-cdup ../../ \u6267\u884c git add \u64cd\u4f5c\u65f6\uff0c\u6682\u5b58\u533a\u7684\u76ee\u5f55\u6811\u5c06\u88ab\u66f4\u65b0\uff0c\u540c\u65f6\u5de5\u4f5c\u533a\u4fee\u6539\u7684\u6587\u4ef6\u5185\u5bb9\u4f1a\u88ab\u5199\u5165\u5230\u5bf9\u8c61\u5e93\u4e2d\u7684\u4e00\u4e2a\u65b0\u7684\u5bf9\u8c61\u4e2d\u3002 \u5f53\u6267\u884c git commit \u65f6\uff0c\u6682\u5b58\u533a\u7684\u76ee\u5f55\u6811\u4f1a\u5199\u5165\u5230\u7248\u672c\u5e93\u4e2d\uff0cmaster\u5206\u652f\u4f1a\u505a\u76f8\u5e94\u7684\u66f4\u65b0\uff0c\u5373master\u6700\u65b0\u6307\u5411\u7684\u76ee\u5f55\u6811\u5c31\u662f\u63d0\u4ea4\u65f6\u539f\u6682\u5b58\u533a\u7684\u76ee\u5f55\u6811\u3002 \u5f53\u6267\u884c git reset HEAD \u65f6\uff0c\u6682\u5b58\u533a\u7684\u76ee\u5f55\u6811\u4f1a\u88ab\u91cd\u65b0\uff0c\u4f1a\u88abmaster\u5206\u652f\u6307\u5411\u7684\u76ee\u5f55\u6811\u6240\u66ff\u6362\uff0c\u5de5\u4f5c\u533a\u4e0d\u53d7\u5f71\u54cd\u3002 \u5f53\u6267\u884c git rm --cached <file> \u65f6\uff0c\u4f1a\u76f4\u63a5\u4ece\u6682\u5b58\u533a\u5220\u9664\u6587\u4ef6\uff0c\u5de5\u4f5c\u533a\u5219\u4e0d\u505a\u51fa\u6539\u53d8\u3002 \u5f53\u6267\u884c git checkout . \u6216 git checkout -- <file> \u65f6\uff0c\u4f1a\u7528\u6682\u5b58\u533a\u5168\u90e8\u7684\u6587\u4ef6\u6216\u6307\u5b9a\u7684\u6587\u4ef6\u66ff\u6362\u5de5\u4f5c\u533a\u7684\u6587\u4ef6\u3002 \u5f53\u6267\u884c git checkout HEAD . \u6216 git checkout HEAD <file> \u65f6\uff0c\u4f1a\u7528HEAD\u6307\u5411\u7684master\u5206\u652f\u4e2d\u7684\u5168\u90e8\u6216\u90e8\u5206\u6587\u4ef6\u66ff\u6362\u6682\u5b58\u533a\u548c\u5de5\u4f5c\u533a\u4e2d\u7684\u6587\u4ef6\u3002 1 2 3 4 5 6 # \u663e\u793aHEAD\u6307\u5411\u7684\u76ee\u5f55\u6811 $ git ls-tree -l HEAD 100644 blob 4eeb754bb5131ccbe8de9cd73907a5215901aa15 15 .gitignore 040000 tree 46fee821db1551e8341cf406271062eff4718c64 - docs 100644 blob 38d625ec66862f756ebe09b4af1a9b057f226e54 1249 mkdocs.yml #\u6587\u4ef6\u5c5e\u6027 blob\u5bf9\u8c61 SHA1\u683c\u5f0f\u7684ID\u503c \u6587\u4ef6\u5927\u5c0f \u6587\u4ef6\u540d 1 2 3 4 5 # \u663e\u793a\u6682\u5b58\u533a\u76ee\u5f55\u6811 $ git ls-files -s 100644 4eeb754bb5131ccbe8de9cd73907a5215901aa15 0 .gitignore 100644 5c53539c2d6ec00fe3335ba9b86339ab2cdbc705 0 docs/about.md \u6682\u5b58\u533a\u7f16\u53f7 Git\u5bf9\u8c61","title":"1. git rev-parse"},{"location":"CICD/Git/Git/#git-lfs","text":"","title":"Git LFS"},{"location":"CICD/Jenkins/Jenkins%E5%9F%BA%E7%A1%80/","text":"Jenkins\u5b89\u88c5 \u51fa\u73b0\u7684\u95ee\u9898 Please wait while Jenkins is getting ready to work... 1 2 3 4 5 6 7 8 ubuntu@jenkins:~$ cat .jenkins/hudson.model.UpdateCenter.xml <?xml version = '1.1' encoding = 'UTF-8' ?> <sites> <site> <id>default</id> <url>https://mirrors.huaweicloud.com/jenkins/updates/stable-2.222/update-center.json</url> </site> </sites> \u5b89\u88c5\u63d2\u4ef6\u65f6\uff1a ubuntu@jenkins:~/.jenkins/updates$ cat /home/ubuntu/.jenkins/secrets/initialAdminPassword 23c8d7503d1449ab8734c384db8a4c60 sed -i 's#updates.jenkins-ci.org/download#mirrors.huaweicloud.com/jenkins#g' .jenkins/updates/default.json","title":"Jenkins\u57fa\u7840"},{"location":"CICD/Jenkins/jenkins-pipeline-syntax/","text":"Declarative Pipeline \u00b6 Declarative Pipeline is a relatively recent addition to Jenkins Pipeline [ 1 ] which presents a more simplified and opinionated syntax on top of the Pipeline sub-systems. All valid Declarative Pipelines must be enclosed within a pipeline block, for example: groovy pipeline { /* insert Declarative Pipeline here */ } The basic statements and expressions which are valid in Declarative Pipeline follow the same rules as Groovy\u2019s syntax with the following exceptions: The top-level of the Pipeline must be a block , specifically: pipeline { } . No semicolons as statement separators. Each statement has to be on its own line. Blocks must only consist of Sections , Directives , Steps , or assignment statements. A property reference statement is treated as a no-argument method invocation. So, for example, input is treated as input() . You can use the Declarative Directive Generator to help you get started with configuring the directives and sections in your Declarative Pipeline. Sections \u00b6 Sections in Declarative Pipeline typically contain one or more Directives or Steps . agent \u00b6 The agent section specifies where the entire Pipeline, or a specific stage, will execute in the Jenkins environment depending on where the agent section is placed. The section must be defined at the top-level inside the pipeline block, but stage-level usage is optional. Required Yes Parameters Described below Allowed In the top-level pipeline block and each stage block. Differences between top and stage level Agents \u00b6 There are some nuances when adding an agent to the top level or a stage level, and this when the options directive is applied. Top Level Agents \u00b6 In agents declared at the outermost level of the Pipeline, the options are invoked after entering the agent. As an example, when using timeout it will be only applied to the execution within the agent. 1 2 3 4 5 6 7 8 node ( \"myAgent\" ) { timeout ( unit: 'SECONDS' , time: 5 ) { stage ( \"One\" ){ sleep 10 echo 'hello' } } } Stage Agents \u00b6 In agents declared within a stage, the options are invoked before entering the agent and before checking any when conditions. In this case, when using timeout , it is applied before the agent is allocated. 1 2 3 4 5 6 7 8 timeout ( unit: 'SECONDS' , time: 5 ) { stage ( \"One\" ){ node { sleep 10 echo 'Hello' } } } This timeout will include the agent provisioning time. Because the timeout includes the agent provisioning time, the Pipeline may fail in cases where agent allocation is delayed. Parameters \u00b6 In order to support the wide variety of use-cases Pipeline authors may have, the agent section supports a few different types of parameters. These parameters can be applied at the top-level of the pipeline block, or within each stage directive. any Execute the Pipeline, or stage, on any available agent. For example: agent any none When applied at the top-level of the pipeline block no global agent will be allocated for the entire Pipeline run and each stage section will need to contain its own agent section. For example: agent none label Execute the Pipeline, or stage, on an agent available in the Jenkins environment with the provided label. For example: agent { label 'my-defined-label' } Label conditions can also be used. For example: agent { label 'my-label1 && my-label2' } or agent { label 'my-label1 || my-label2' } node agent { node { label 'labelName' } } behaves the same as agent { label 'labelName' } , but node allows for additional options (such as customWorkspace ). docker Execute the Pipeline, or stage, with the given container which will be dynamically provisioned on a node pre-configured to accept Docker-based Pipelines, or on a node matching the optionally defined label parameter. docker also optionally accepts an args parameter which may contain arguments to pass directly to a docker run invocation, and an alwaysPull option, which will force a docker pull even if the image name is already present. For example: agent { docker 'maven:3-alpine' } or 1 2 3 4 5 6 7 8 9 ```groovy agent { docker { image 'maven:3-alpine' label 'my-defined-label' args '-v /tmp:/tmp' } } ``` docker also optionally accepts a registryUrl and registryCredentialsId parameters which will help to specify the Docker Registry to use and its credentials. The parameter registryCredentialsId could be used alone for private repositories within the docker hub. For example: groovy agent { docker { image 'myregistry.com/node' label 'my-defined-label' registryUrl 'https://myregistry.com/' registryCredentialsId 'myPredefinedCredentialsInJenkins' } } dockerfile Execute the Pipeline, or stage, with a container built from a Dockerfile contained in the source repository. In order to use this option, the Jenkinsfile must be loaded from either a Multibranch Pipeline or a Pipeline from SCM . Conventionally this is the Dockerfile in the root of the source repository: agent { dockerfile true } . If building a Dockerfile in another directory, use the dir option: agent { dockerfile { dir 'someSubDir' } } . If your Dockerfile has another name, you can specify the file name with the filename option. You can pass additional arguments to the docker build \u2026 command with the additionalBuildArgs option, like agent { dockerfile { additionalBuildArgs '--build-arg foo=bar' } } . For example, a repository with the file build/Dockerfile.build , expecting a build argument version : groovy agent { // Equivalent to \"docker build -f Dockerfile.build --build-arg version=1.0.2 ./build/ dockerfile { filename 'Dockerfile.build' dir 'build' label 'my-defined-label' additionalBuildArgs '--build-arg version=1.0.2' args '-v /tmp:/tmp' } } dockerfile also optionally accepts a registryUrl and registryCredentialsId parameters which will help to specify the Docker Registry to use and its credentials. For example: groovy agent { dockerfile { filename 'Dockerfile.build' dir 'build' label 'my-defined-label' registryUrl 'https://myregistry.com/' registryCredentialsId 'myPredefinedCredentialsInJenkins' } } kubernetes Execute the Pipeline, or stage, inside a pod deployed on a Kubernetes cluster. In order to use this option, the Jenkinsfile must be loaded from either a Multibranch Pipeline or a Pipeline from SCM . The Pod template is defined inside the kubernetes { } block. For example, if you want a pod with a Kaniko container inside it, you would define it as follows: groovy agent { kubernetes { label podlabel yaml \"\"\" kind: Pod metadata: name: jenkins-agent spec: containers: - name: kaniko image: gcr.io/kaniko-project/executor:debug imagePullPolicy: Always command: - /busybox/cat tty: true volumeMounts: - name: aws-secret mountPath: /root/.aws/ - name: docker-registry-config mountPath: /kaniko/.docker restartPolicy: Never volumes: - name: aws-secret secret: secretName: aws-secret - name: docker-registry-config configMap: name: docker-registry-config \"\"\" } You will need to create a secret aws-secret for Kaniko to be able to authenticate with ECR. This secret should contain the contents of ~/.aws/credentials . The other volume is a ConfigMap which should contain the endpoint of your ECR registry. For example: groovy { \"credHelpers\": { \".dkr.ecr.eu-central-1.amazonaws.com\": \"ecr-login\" } } Refer to the following example for reference: https://github.com/jenkinsci/kubernetes-plugin/blob/master/examples/kaniko.groovy Common Options \u00b6 These are a few options that can be applied to two or more agent implementations. They are not required unless explicitly stated. label A string. The label or label condition on which to run the Pipeline or individual stage .This option is valid for node , docker , and dockerfile , and is required for node . customWorkspace A string. Run the Pipeline or individual stage this agent is applied to within this custom workspace, rather than the default. It can be either a relative path, in which case the custom workspace will be under the workspace root on the node, or an absolute path. For example: groovy agent { node { label 'my-defined-label' customWorkspace '/some/other/path' } } This option is valid for node , docker , and dockerfile . reuseNode A boolean, false by default. If true, run the container on the node specified at the top-level of the Pipeline, in the same workspace, rather than on a new node entirely.This option is valid for docker and dockerfile , and only has an effect when used on an agent for an individual stage . args A string. Runtime arguments to pass to docker run .This option is valid for docker and dockerfile . Example 1. Docker Agent, Declarative Pipeline 1 2 3 4 5 6 7 8 9 10 pipeline { agent { docker 'maven:3-alpine' } // \u2460 stages { stage ( 'Example Build' ) { steps { sh 'mvn -B clean verify' } } } } \u2460Execute all the steps defined in this Pipeline within a newly created container of the given name and tag ( maven:3-alpine ). Example 2. Stage-level Agent Section 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 pipeline { agent none // \u2460 stages { stage ( 'Example Build' ) { agent { docker 'maven:3-alpine' } // \u2461 steps { echo 'Hello, Maven' sh 'mvn --version' } } stage ( 'Example Test' ) { agent { docker 'openjdk:8-jre' } //\u2462 steps { echo 'Hello, JDK' sh 'java -version' } } } } \u2460 Defining agent none at the top-level of the Pipeline ensures that an Executor will not be assigned unnecessarily. Using agent none also forces each stage section to contain its own agent section. \u2461 Execute the steps in this stage in a newly created container using this image. \u2462 Execute the steps in this stage in a newly created container using a different image from the previous stage. post \u00b6 The post section defines one or more additional steps that are run upon the completion of a Pipeline\u2019s or stage\u2019s run (depending on the location of the post section within the Pipeline). post can support any of the following post-condition blocks: always , changed , fixed , regression , aborted , failure , success , unstable , unsuccessful , and cleanup . These condition blocks allow the execution of steps inside each condition depending on the completion status of the Pipeline or stage. The condition blocks are executed in the order shown below. Required No Parameters None Allowed In the top-level pipeline block and each stage block. Conditions \u00b6 always Run the steps in the post section regardless of the completion status of the Pipeline\u2019s or stage\u2019s run. changed Only run the steps in post if the current Pipeline\u2019s or stage\u2019s run has a different completion status from its previous run. fixed Only run the steps in post if the current Pipeline\u2019s or stage\u2019s run is successful and the previous run failed or was unstable. regression Only run the steps in post if the current Pipeline\u2019s or stage\u2019s run\u2019s status is failure, unstable, or aborted and the previous run was successful. aborted Only run the steps in post if the current Pipeline\u2019s or stage\u2019s run has an \"aborted\" status, usually due to the Pipeline being manually aborted. This is typically denoted by gray in the web UI. failure Only run the steps in post if the current Pipeline\u2019s or stage\u2019s run has a \"failed\" status, typically denoted by red in the web UI. success Only run the steps in post if the current Pipeline\u2019s or stage\u2019s run has a \"success\" status, typically denoted by blue or green in the web UI. unstable Only run the steps in post if the current Pipeline\u2019s or stage\u2019s run has an \"unstable\" status, usually caused by test failures, code violations, etc. This is typically denoted by yellow in the web UI. unsuccessful Only run the steps in post if the current Pipeline\u2019s or stage\u2019s run has not a \"success\" status. This is typically denoted in the web UI depending on the status previously mentioned. cleanup Run the steps in this post condition after every other post condition has been evaluated, regardless of the Pipeline or stage\u2019s status. Example 3. Post Section, Declarative Pipeline 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 pipeline { agent any stages { stage ( 'Example' ) { steps { echo 'Hello World' } } } post { // \u2460 always { // \u2461 echo 'I will always say Hello again!' } } } \u2460 Conventionally, the post section should be placed at the end of the Pipeline. \u2461 Post-condition blocks contain steps the same as the steps section. stages \u00b6 Containing a sequence of one or more stage directives, the stages section is where the bulk of the \"work\" described by a Pipeline will be located. At a minimum, it is recommended that stages contain at least one stage directive for each discrete part of the continuous delivery process, such as Build, Test, and Deploy. Required Yes Parameters None Allowed Only once, inside the pipeline block. Example 4. Stages, Declarative Pipeline 1 2 3 4 5 6 7 8 9 10 pipeline { agent any stages { // \u2460 stage ( 'Example' ) { steps { echo 'Hello World' } } } } \u2460 The stages section will typically follow the directives such as agent , options , etc. steps \u00b6 The steps section defines a series of one or more steps to be executed in a given stage directive. Required Yes Parameters None Allowed Inside each stage block. Example 5. Single Step, Declarative Pipeline 1 2 3 4 5 6 7 8 9 10 pipeline { agent any stages { stage ( 'Example' ) { steps { // \u2460 echo 'Hello World' } } } } \u2460 The steps section must contain one or more steps. Directives \u00b6 environment \u00b6 The environment directive specifies a sequence of key-value pairs which will be defined as environment variables for all steps, or stage-specific steps, depending on where the environment directive is located within the Pipeline. This directive supports a special helper method credentials() which can be used to access pre-defined Credentials by their identifier in the Jenkins environment. Required No Parameters None Allowed Inside the pipeline block, or within stage directives. Supported Credentials Type \u00b6 Secret Text the environment variable specified will be set to the Secret Text content Secret File the environment variable specified will be set to the location of the File file that is temporarily created Username and password the environment variable specified will be set to username:password and two additional environment variables will be automatically defined: MYVARNAME_USR and MYVARNAME_PSW respectively. SSH with Private Key the environment variable specified will be set to the location of the SSH key file that is temporarily created and two additional environment variables may be automatically defined: MYVARNAME_USR and MYVARNAME_PSW (holding the passphrase). Unsupported credentials type causes the pipeline to fail with the message: org.jenkinsci.plugins.credentialsbinding.impl.CredentialNotFoundException: No suitable binding handler could be found for type . Example 6. Secret Text Credentials, Declarative Pipeline 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 pipeline { agent any environment { // \u2460 CC = 'clang' } stages { stage ( 'Example' ) { environment { // \u2461 AN_ACCESS_KEY = credentials ( 'my-predefined-secret-text' ) // \u2462 } steps { sh 'printenv' } } } } \u2460 An environment directive used in the top-level pipeline block will apply to all steps within the Pipeline. \u2461 An environment directive defined within a stage will only apply the given environment variables to steps within the stage . \u2462 The environment block has a helper method credentials() defined which can be used to access pre-defined Credentials by their identifier in the Jenkins environment. Example 7. Username and Password Credentials 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 pipeline { agent any stages { stage ( 'Example Username/Password' ) { environment { SERVICE_CREDS = credentials ( 'my-predefined-username-password' ) } steps { sh 'echo \"Service user is $SERVICE_CREDS_USR\"' sh 'echo \"Service password is $SERVICE_CREDS_PSW\"' sh 'curl -u $SERVICE_CREDS https://myservice.example.com' } } stage ( 'Example SSH Username with private key' ) { environment { SSH_CREDS = credentials ( 'my-predefined-ssh-creds' ) } steps { sh 'echo \"SSH private key is located at $SSH_CREDS\"' sh 'echo \"SSH user is $SSH_CREDS_USR\"' sh 'echo \"SSH passphrase is $SSH_CREDS_PSW\"' } } } } options \u00b6 The options directive allows configuring Pipeline-specific options from within the Pipeline itself. Pipeline provides a number of these options, such as buildDiscarder , but they may also be provided by plugins, such as timestamps . Required No Parameters None Allowed Only once, inside the pipeline block. Available Options \u00b6 buildDiscarder Persist artifacts and console output for the specific number of recent Pipeline runs. For example: options { buildDiscarder(logRotator(numToKeepStr: '1')) } checkoutToSubdirectory Perform the automatic source control checkout in a subdirectory of the workspace. For example: options { checkoutToSubdirectory('foo') } disableConcurrentBuilds Disallow concurrent executions of the Pipeline. Can be useful for preventing simultaneous accesses to shared resources, etc. For example: options { disableConcurrentBuilds() } disableResume Do not allow the pipeline to resume if the controller restarts. For example: options { disableResume() } newContainerPerStage Used with docker or dockerfile top-level agent. When specified, each stage will run in a new container instance on the same node, rather than all stages running in the same container instance. overrideIndexTriggers Allows overriding default treatment of branch indexing triggers. If branch indexing triggers are disabled at the multibranch or organization label, options { overrideIndexTriggers(true) } will enable them for this job only. Otherwise, options { overrideIndexTriggers(false) } will disable branch indexing triggers for this job only. preserveStashes Preserve stashes from completed builds, for use with stage restarting. For example: options { preserveStashes() } to preserve the stashes from the most recent completed build, or options { preserveStashes(buildCount: 5) } to preserve the stashes from the five most recent completed builds. quietPeriod Set the quiet period, in seconds, for the Pipeline, overriding the global default. For example: options { quietPeriod(30) } retry On failure, retry the entire Pipeline the specified number of times. For example: options { retry(3) } skipDefaultCheckout Skip checking out code from source control by default in the agent directive. For example: options { skipDefaultCheckout() } skipStagesAfterUnstable Skip stages once the build status has gone to UNSTABLE. For example: options { skipStagesAfterUnstable() } timeout Set a timeout period for the Pipeline run, after which Jenkins should abort the Pipeline. For example: options { timeout(time: 1, unit: 'HOURS') } Example 8. Global Timeout, Declarative Pipeline 1 2 3 4 5 6 7 8 9 10 11 12 13 pipeline { agent any options { timeout ( time: 1 , unit: 'HOURS' ) // \u2460 } stages { stage ( 'Example' ) { steps { echo 'Hello World' } } } } \u2460 Specifying a global execution timeout of one hour, after which Jenkins will abort the Pipeline run. timestamps Prepend all console output generated by the Pipeline run with the time at which the line was emitted. For example: options { timestamps() } parallelsAlwaysFailFast Set failfast true for all subsequent parallel stages in the pipeline. For example: options { parallelsAlwaysFailFast() } A comprehensive list of available options is pending the completion of INFRA-1503 . stage options \u00b6 The options directive for a stage is similar to the options directive at the root of the Pipeline. However, the stage -level options can only contain steps like retry , timeout , or timestamps , or Declarative options that are relevant to a stage , like skipDefaultCheckout . Inside a stage , the steps in the options directive are invoked before entering the agent or checking any when conditions. Available Stage Options \u00b6 skipDefaultCheckout Skip checking out code from source control by default in the agent directive. For example: options { skipDefaultCheckout() } timeout Set a timeout period for this stage, after which Jenkins should abort the stage. For example: options { timeout(time: 1, unit: 'HOURS') } Example 9. Stage Timeout, Declarative Pipeline 1 2 3 4 5 6 7 8 9 10 11 12 13 pipeline { agent any stages { stage ( 'Example' ) { options { timeout ( time: 1 , unit: 'HOURS' ) // \u2460 } steps { echo 'Hello World' } } } } \u2460 Specifying an execution timeout of one hour for the Example stage, after which Jenkins will abort the Pipeline run. retry On failure, retry this stage the specified number of times. For example: options { retry(3) } timestamps Prepend all console output generated during this stage with the time at which the line was emitted. For example: options { timestamps() } parameters \u00b6 The parameters directive provides a list of parameters that a user should provide when triggering the Pipeline. The values for these user-specified parameters are made available to Pipeline steps via the params object, see the Parameters, Declarative Pipeline for its specific usage. Required No Parameters None Allowed Only once, inside the pipeline block. Available Parameters \u00b6 string A parameter of a string type, for example: parameters { string(name: 'DEPLOY_ENV', defaultValue: 'staging', description: '') } text A text parameter, which can contain multiple lines, for example: parameters { text(name: 'DEPLOY_TEXT', defaultValue: 'One\\nTwo\\nThree\\n', description: '') } booleanParam A boolean parameter, for example: parameters { booleanParam(name: 'DEBUG_BUILD', defaultValue: true, description: '') } choice A choice parameter, for example: parameters { choice(name: 'CHOICES', choices: ['one', 'two', 'three'], description: '') } password A password parameter, for example: parameters { password(name: 'PASSWORD', defaultValue: 'SECRET', description: 'A secret password') } Example 10. Parameters, Declarative Pipeline 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 pipeline { agent any parameters { string ( name: 'PERSON' , defaultValue: 'Mr Jenkins' , description: 'Who should I say hello to?' ) text ( name: 'BIOGRAPHY' , defaultValue: '' , description: 'Enter some information about the person' ) booleanParam ( name: 'TOGGLE' , defaultValue: true , description: 'Toggle this value' ) choice ( name: 'CHOICE' , choices: [ 'One' , 'Two' , 'Three' ], description: 'Pick something' ) password ( name: 'PASSWORD' , defaultValue: 'SECRET' , description: 'Enter a password' ) } stages { stage ( 'Example' ) { steps { echo \"Hello ${params.PERSON}\" echo \"Biography: ${params.BIOGRAPHY}\" echo \"Toggle: ${params.TOGGLE}\" echo \"Choice: ${params.CHOICE}\" echo \"Password: ${params.PASSWORD}\" } } } } A comprehensive list of available parameters is pending the completion of INFRA-1503 . triggers \u00b6 The triggers directive defines the automated ways in which the Pipeline should be re-triggered. For Pipelines which are integrated with a source such as GitHub or BitBucket, triggers may not be necessary as webhooks-based integration will likely already be present. The triggers currently available are cron , pollSCM and upstream . Required No Parameters None Allowed Only once, inside the pipeline block. cron Accepts a cron-style string to define a regular interval at which the Pipeline should be re-triggered, for example: triggers { cron('H */4 * * 1-5') } pollSCM Accepts a cron-style string to define a regular interval at which Jenkins should check for new source changes. If new changes exist, the Pipeline will be re-triggered. For example: triggers { pollSCM('H */4 * * 1-5') } upstream Accepts a comma-separated string of jobs and a threshold. When any job in the string finishes with the minimum threshold, the Pipeline will be re-triggered. For example: triggers { upstream(upstreamProjects: 'job1,job2', threshold: hudson.model.Result.SUCCESS) } The pollSCM trigger is only available in Jenkins 2.22 or later. Example 11. Triggers, Declarative Pipeline 1 2 3 4 5 6 7 8 9 10 11 12 13 14 // Declarative // pipeline { agent any triggers { cron ( 'H */4 * * 1-5' ) } stages { stage ( 'Example' ) { steps { echo 'Hello World' } } } } Jenkins cron syntax \u00b6 The Jenkins cron syntax follows the syntax of the cron utility (with minor differences). Specifically, each line consists of 5 fields separated by TAB or whitespace: MINUTE HOUR DOM MONTH DOW Minutes within the hour (0\u201359) The hour of the day (0\u201323) The day of the month (1\u201331) The month (1\u201312) The day of the week (0\u20137) where 0 and 7 are Sunday. To specify multiple values for one field, the following operators are available. In the order of precedence, * specifies all valid values M-N specifies a range of values M-N/X or */X steps by intervals of X through the specified range or whole valid range A,B,\u2026,Z enumerates multiple values To allow periodically scheduled tasks to produce even load on the system, the symbol H (for \u201chash\u201d) should be used wherever possible. For example, using 0 0 * * * for a dozen daily jobs will cause a large spike at midnight. In contrast, using H H * * * would still execute each job once a day, but not all at the same time, better using limited resources. The H symbol can be used with a range. For example, H H(0-7) * * * means some time between 12:00 AM (midnight) to 7:59 AM. You can also use step intervals with H , with or without ranges. The H symbol can be thought of as a random value over a range, but it actually is a hash of the job name, not a random function, so that the value remains stable for any given project. Beware that for the day of month field, short cycles such as */3 or H/3 will not work consistently near the end of most months, due to variable month lengths. For example, */3 will run on the 1st, 4th, \u202631st days of a long month, then again the next day of the next month. Hashes are always chosen in the 1-28 range, so H/3 will produce a gap between runs of between 3 and 6 days at the end of a month. (Longer cycles will also have inconsistent lengths but the effect may be relatively less noticeable.) Empty lines and lines that start with # will be ignored as comments. In addition, @yearly , @annually , @monthly , @weekly , @daily , @midnight , and @hourly are supported as convenient aliases. These use the hash system for automatic balancing. For example, @hourly is the same as H * * * * and could mean at any time during the hour. @midnight actually means some time between 12:00 AM and 2:59 AM. example every fifteen minutes (perhaps at :07, :22, :37, :52) triggers{ cron('H/15 * * * *') } every ten minutes in the first half of every hour (three times, perhaps at :04, :14, :24) triggers{ cron('H(0-29)/10 * * * *') } once every two hours at 45 minutes past the hour starting at 9:45 AM and finishing at 3:45 PM every weekday. triggers{ cron('45 9-16/2 * * 1-5') } once in every two hours slot between 9 AM and 5 PM every weekday (perhaps at 10:38 AM, 12:38 PM, 2:38 PM, 4:38 PM) triggers{ cron('H H(9-16)/2 * * 1-5') } once a day on the 1st and 15th of every month except December triggers{ cron('H H 1,15 1-11 *') } stage \u00b6 The stage directive goes in the stages section and should contain a steps section, an optional agent section, or other stage-specific directives. Practically speaking, all of the real work done by a Pipeline will be wrapped in one or more stage directives. Required At least one Parameters One mandatory parameter, a string for the name of the stage. Allowed Inside the stages section. Example 12. Stage, Declarative Pipeline 1 2 3 4 5 6 7 8 9 10 11 // Declarative // pipeline { agent any stages { stage ( 'Example' ) { steps { echo 'Hello World' } } } } tools \u00b6 A section defining tools to auto-install and put on the PATH . This is ignored if agent none is specified. Required No Parameters None Allowed Inside the pipeline block or a stage block. Supported Tools \u00b6 maven jdk gradle Example 13. Tools, Declarative Pipeline 1 2 3 4 5 6 7 8 9 10 11 12 13 pipeline { agent any tools { maven 'apache-maven-3.0.1' // \u2460 } stages { stage ( 'Example' ) { steps { sh 'mvn --version' } } } } The tool name must be pre-configured in Jenkins under Manage Jenkins \u2192 Global Tool Configuration . input \u00b6 The input directive on a stage allows you to prompt for input, using the input step . The stage will pause after any options have been applied, and before entering the agent block for that stage or evaluating the when condition of the stage . If the input is approved, the stage will then continue. Any parameters provided as part of the input submission will be available in the environment for the rest of the stage . Configuration options \u00b6 message Required. This will be presented to the user when they go to submit the input . id An optional identifier for this input . Defaults to the stage name. ok Optional text for the \"ok\" button on the input form. submitter An optional comma-separated list of users or external group names who are allowed to submit this input . Defaults to allowing any user. submitterParameter An optional name of an environment variable to set with the submitter name, if present. parameters An optional list of parameters to prompt the submitter to provide. See parameters for more information. Example 14. Input Step, Declarative Pipeline 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 pipeline { agent any stages { stage ( 'Example' ) { input { message \"Should we continue?\" ok \"Yes, we should.\" submitter \"alice,bob\" parameters { string ( name: 'PERSON' , defaultValue: 'Mr Jenkins' , description: 'Who should I say hello to?' ) } } steps { echo \"Hello, ${PERSON}, nice to meet you.\" } } } } when \u00b6 The when directive allows the Pipeline to determine whether the stage should be executed depending on the given condition. The when directive must contain at least one condition. If the when directive contains more than one condition, all the child conditions must return true for the stage to execute. This is the same as if the child conditions were nested in an allOf condition (see the examples below). If an anyOf condition is used, note that the condition skips remaining tests as soon as the first \"true\" condition is found. More complex conditional structures can be built using the nesting conditions: not , allOf , or anyOf . Nesting conditions may be nested to any arbitrary depth. Required No Parameters None Allowed Inside a stage directive Built-in Conditions \u00b6 branch Execute the stage when the branch being built matches the branch pattern (ANT style path glob) given, for example: when { branch 'master' } . Note that this only works on a multibranch Pipeline.The optional parameter comparator may be added after an attribute to specify how any patterns are evaluated for a match: EQUALS for a simple string comparison, GLOB (the default) for an ANT style path glob (same as for example changeset ), or REGEXP for regular expression matching. For example: when { branch pattern: \"release-\\\\d+\", comparator: \"REGEXP\"} buildingTag Execute the stage when the build is building a tag. Example: when { buildingTag() } changelog Execute the stage if the build\u2019s SCM changelog contains a given regular expression pattern, for example: when { changelog '.*^\\\\[DEPENDENCY\\\\] .+$' } changeset Execute the stage if the build\u2019s SCM changeset contains one or more files matching the given pattern. Example: when { changeset \"**/*.js\" } The optional parameter comparator may be added after an attribute to specify how any patterns are evaluated for a match: EQUALS for a simple string comparison, GLOB (the default) for an ANT style path glob case insensitive, this can be turned off with the caseSensitive parameter, or REGEXP for regular expression matching. For example: when { changeset pattern: \".**TEST\\\\.java\", comparator: \"REGEXP\" }** or when { changeset pattern: \" */*TEST.java\", caseSensitive: true } changeRequest Executes the stage if the current build is for a \"change request\" (a.k.a. Pull Request on GitHub and Bitbucket, Merge Request on GitLab, Change in Gerrit, etc.). When no parameters are passed the stage runs on every change request, for example: when { changeRequest() } .By adding a filter attribute with parameter to the change request, the stage can be made to run only on matching change requests. Possible attributes are id , target , branch , fork , url , title , author , authorDisplayName , and authorEmail . Each of these corresponds to a CHANGE_* environment variable, for example: when { changeRequest target: 'master' } .The optional parameter comparator may be added after an attribute to specify how any patterns are evaluated for a match: EQUALS for a simple string comparison (the default), GLOB for an ANT style path glob (same as for example changeset ), or REGEXP for regular expression matching. Example: when { changeRequest authorEmail: \"[\\\\w_-.]+@example.com\", comparator: 'REGEXP' } environment Execute the stage when the specified environment variable is set to the given value, for example: when { environment name: 'DEPLOY_TO', value: 'production' } equals Execute the stage when the expected value is equal to the actual value, for example: when { equals expected: 2, actual: currentBuild.number } expression Execute the stage when the specified Groovy expression evaluates to true, for example: when { expression { return params.DEBUG_BUILD } } Note that when returning strings from your expressions they must be converted to booleans or return null to evaluate to false. Simply returning \"0\" or \"false\" will still evaluate to \"true\". tag Execute the stage if the TAG_NAME variable matches the given pattern. Example: when { tag \"release-*\" } . If an empty pattern is provided the stage will execute if the TAG_NAME variable exists (same as buildingTag() ).The optional parameter comparator may be added after an attribute to specify how any patterns are evaluated for a match: EQUALS for a simple string comparison, GLOB (the default) for an ANT style path glob (same as for example changeset ), or REGEXP for regular expression matching. For example: when { tag pattern: \"release-\\\\d+\", comparator: \"REGEXP\"} not Execute the stage when the nested condition is false. Must contain one condition. For example: when { not { branch 'master' } } allOf Execute the stage when all of the nested conditions are true. Must contain at least one condition. For example: when { allOf { branch 'master'; environment name: 'DEPLOY_TO', value: 'production' } } anyOf Execute the stage when at least one of the nested conditions is true. Must contain at least one condition. For example: when { anyOf { branch 'master'; branch 'staging' } } triggeredBy Execute the stage when the current build has been triggered by the param given. For example: when { triggeredBy 'SCMTrigger' } when { triggeredBy 'TimerTrigger' } when { triggeredBy 'UpstreamCause' } when { triggeredBy cause: \"UserIdCause\", detail: \"vlinde\" } Evaluating when before entering agent in a stage \u00b6 By default, the when condition for a stage will be evaluated after entering the agent for that stage , if one is defined. However, this can be changed by specifying the beforeAgent option within the when block. If beforeAgent is set to true , the when condition will be evaluated first, and the agent will only be entered if the when condition evaluates to true. Evaluating when before the input directive \u00b6 By default, the when condition for a stage will not be evaluated before the input, if one is defined. However, this can be changed by specifying the beforeInput option within the when block. If beforeInput is set to true, the when condition will be evaluated first, and the input will only be entered if the when condition evaluates to true. beforeInput true takes precedence over beforeAgent true . Evaluating when before the options directive \u00b6 By default, the when condition for a stage will be evaluated after entering the options for that stage , if any are defined. However, this can be changed by specifying the beforeOptions option within the when block. If beforeOptions is set to true , the when condition will be evaluated first, and the options will only be entered if the when condition evaluates to true. beforeOptions true takes precedence over beforeInput true and beforeAgent true . Example 15. Single Condition, Declarative Pipeline 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 pipeline { agent any stages { stage ( 'Example Build' ) { steps { echo 'Hello World' } } stage ( 'Example Deploy' ) { when { branch 'production' } steps { echo 'Deploying' } } } } Example 16. Multiple Condition, Declarative Pipeline 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 pipeline { agent any stages { stage ( 'Example Build' ) { steps { echo 'Hello World' } } stage ( 'Example Deploy' ) { when { branch 'production' environment name: 'DEPLOY_TO' , value: 'production' } steps { echo 'Deploying' } } } } Example 17. Nested condition (same behavior as previous example) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 pipeline { agent any stages { stage ( 'Example Build' ) { steps { echo 'Hello World' } } stage ( 'Example Deploy' ) { when { allOf { branch 'production' environment name: 'DEPLOY_TO' , value: 'production' } } steps { echo 'Deploying' } } } } Example 18. Multiple condition and nested condition 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 pipeline { agent any stages { stage ( 'Example Build' ) { steps { echo 'Hello World' } } stage ( 'Example Deploy' ) { when { branch 'production' anyOf { environment name: 'DEPLOY_TO' , value: 'production' environment name: 'DEPLOY_TO' , value: 'staging' } } steps { echo 'Deploying' } } } } Example 19. Expression condition and nested condition 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 pipeline { agent any stages { stage ( 'Example Build' ) { steps { echo 'Hello World' } } stage ( 'Example Deploy' ) { when { expression { BRANCH_NAME ==~ /(production|staging)/ } anyOf { environment name: 'DEPLOY_TO' , value: 'production' environment name: 'DEPLOY_TO' , value: 'staging' } } steps { echo 'Deploying' } } } } Example 20. beforeAgent 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 pipeline { agent none stages { stage ( 'Example Build' ) { steps { echo 'Hello World' } } stage ( 'Example Deploy' ) { agent { label \"some-label\" } when { beforeAgent true branch 'production' } steps { echo 'Deploying' } } } } Example 21. beforeInput 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 pipeline { agent none stages { stage ( 'Example Build' ) { steps { echo 'Hello World' } } stage ( 'Example Deploy' ) { when { beforeInput true branch 'production' } input { message \"Deploy to production?\" id \"simple-input\" } steps { echo 'Deploying' } } } } Example 22. beforeOptions 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 pipeline { agent none stages { stage ( 'Example Build' ) { steps { echo 'Hello World' } } stage ( 'Example Deploy' ) { when { beforeOptions true branch 'testing' } options { lock label: 'testing-deploy-envs' , quantity: 1 , variable: 'deployEnv' } steps { echo \"Deploying to ${deployEnv}\" } } } } Example 23. triggeredBy 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 pipeline { agent none stages { stage ( 'Example Build' ) { steps { echo 'Hello World' } } stage ( 'Example Deploy' ) { when { triggeredBy \"TimerTrigger\" } steps { echo 'Deploying' } } } } Sequential Stages \u00b6 Stages in Declarative Pipeline may have a stages section containing a list of nested stages to be run in sequential order. Note that a stage must have one and only one of steps , stages , parallel , or matrix . It is not possible to nest a parallel or matrix block within a stage directive if that stage directive is nested within a parallel or matrix block itself. However, a stage directive within a parallel or matrix block can use all other functionality of a stage , including agent , tools , when , etc. Example 24. Sequential Stages, Declarative Pipeline 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 pipeline { agent none stages { stage ( 'Non-Sequential Stage' ) { agent { label 'for-non-sequential' } steps { echo \"On Non-Sequential Stage\" } } stage ( 'Sequential' ) { agent { label 'for-sequential' } environment { FOR_SEQUENTIAL = \"some-value\" } stages { stage ( 'In Sequential 1' ) { steps { echo \"In Sequential 1\" } } stage ( 'In Sequential 2' ) { steps { echo \"In Sequential 2\" } } stage ( 'Parallel In Sequential' ) { parallel { stage ( 'In Parallel 1' ) { steps { echo \"In Parallel 1\" } } stage ( 'In Parallel 2' ) { steps { echo \"In Parallel 2\" } } } } } } } } Parallel \u00b6 Stages in Declarative Pipeline may have a parallel section containing a list of nested stages to be run in parallel. Note that a stage must have one and only one of steps , stages , parallel , or matrix . It is not possible to nest a parallel or matrix block within a stage directive if that stage directive is nested within a parallel or matrix block itself. However, a stage directive within a parallel or matrix block can use all other functionality of a stage , including agent , tools , when , etc. In addition, you can force your parallel stages to all be aborted when any one of them fails, by adding failFast true to the stage containing the parallel . Another option for adding failfast is adding an option to the pipeline definition: parallelsAlwaysFailFast() Example 25. Parallel Stages, Declarative Pipeline 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 pipeline { agent any stages { stage ( 'Non-Parallel Stage' ) { steps { echo 'This stage will be executed first.' } } stage ( 'Parallel Stage' ) { when { branch 'master' } failFast true parallel { stage ( 'Branch A' ) { agent { label \"for-branch-a\" } steps { echo \"On Branch A\" } } stage ( 'Branch B' ) { agent { label \"for-branch-b\" } steps { echo \"On Branch B\" } } stage ( 'Branch C' ) { agent { label \"for-branch-c\" } stages { stage ( 'Nested 1' ) { steps { echo \"In stage Nested 1 within Branch C\" } } stage ( 'Nested 2' ) { steps { echo \"In stage Nested 2 within Branch C\" } } } } } } } } Example 26. parallelsAlwaysFailFast 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 pipeline { agent any options { parallelsAlwaysFailFast () } stages { stage ( 'Non-Parallel Stage' ) { steps { echo 'This stage will be executed first.' } } stage ( 'Parallel Stage' ) { when { branch 'master' } parallel { stage ( 'Branch A' ) { agent { label \"for-branch-a\" } steps { echo \"On Branch A\" } } stage ( 'Branch B' ) { agent { label \"for-branch-b\" } steps { echo \"On Branch B\" } } stage ( 'Branch C' ) { agent { label \"for-branch-c\" } stages { stage ( 'Nested 1' ) { steps { echo \"In stage Nested 1 within Branch C\" } } stage ( 'Nested 2' ) { steps { echo \"In stage Nested 2 within Branch C\" } } } } } } } } Matrix \u00b6 Stages in Declarative Pipeline may have a matrix section defining a multi-dimensional matrix of name-value combinations to be run in parallel. We\u2019ll refer these combinations as \"cells\" in a matrix. Each cell in a matrix can include one or more stages to be run sequentially using the configuration for that cell. Note that a stage must have one and only one of steps , stages , parallel , or matrix . It is not possible to nest a parallel or matrix block within a stage directive if that stage directive is nested within a parallel or matrix block itself. However, a stage directive within a parallel or matrix block can use all other functionality of a stage , including agent , tools , when , etc. In addition, you can force your matrix cells to all be aborted when any one of them fails, by adding failFast true to the stage containing the matrix . Another option for adding failfast is adding an option to the pipeline definition: parallelsAlwaysFailFast() The matrix section must include an axes section and a stages section. The axes section defines the values for each axis in the matrix. The stages section defines a list of stage s to run sequentially in each cell. A matrix may have an excludes section to remove invalid cells from the matrix. Many of the directives available on stage , including agent , tools , when , etc., can also be added to matrix to control the behavior of each cell. axes \u00b6 The axes section specifies one or more axis directives. Each axis consists of a name and a list of values . All the values from each axis are combined with the others to produce the cells. Example 27. One-axis with 3 cells 1 2 3 4 5 6 7 8 9 matrix { axes { axis { name 'PLATFORM' values 'linux' , 'mac' , 'windows' } } // ... } Example 28. Two-axis with 12 cells (three by four) 1 2 3 4 5 6 7 8 9 10 11 12 13 matrix { axes { axis { name 'PLATFORM' values 'linux' , 'mac' , 'windows' } axis { name 'BROWSER' values 'chrome' , 'edge' , 'firefox' , 'safari' } } // ... } Example 29. Three-axis matrix with 24 cells (three by four by two) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 matrix { axes { axis { name 'PLATFORM' values 'linux' , 'mac' , 'windows' } axis { name 'BROWSER' values 'chrome' , 'edge' , 'firefox' , 'safari' } axis { name 'ARCHITECTURE' values '32-bit' , '64-bit' } } // ... } stages \u00b6 The stages section specifies one or more stage s to be executed sequentially in each cell. This section is identical to any other stages section . Example 30. One-axis with 3 cells, each cell runs three stages - \"build\", \"test\", and \"deploy\" 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 matrix { axes { axis { name 'PLATFORM' values 'linux' , 'mac' , 'windows' } } stages { stage ( 'build' ) { // ... } stage ( 'test' ) { // ... } stage ( 'deploy' ) { // ... } } } Example 31. Two-axis with 12 cells (three by four) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 matrix { axes { axis { name 'PLATFORM' values 'linux' , 'mac' , 'windows' } axis { name 'BROWSER' values 'chrome' , 'edge' , 'firefox' , 'safari' } } stages { stage ( 'build-and-test' ) { // ... } } } excludes (optional) \u00b6 The optional excludes section lets authors specify one or more exclude filter expressions that select cells to be excluded from the expanded set of matrix cells (aka, sparsening). Filters are constructed using a basic directive structure of one or more of exclude axis directives each with a name and values list. The axis directives inside an exclude generate a set of combinations (similar to generating the matrix cells). The matrix cells that match all the values from an exclude combination are removed from the matrix. If more than one exclude directive is supplied, each is evaluated separately to remove cells. When dealing with a long list of values to exclude, exclude axis directives can use notValues instead of values . These will exclude cells that do not match one of the values passed to notValues . Example 32. Three-axis matrix with 24 cells, exclude '32-bit, mac' (4 cells excluded) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 matrix { axes { axis { name 'PLATFORM' values 'linux' , 'mac' , 'windows' } axis { name 'BROWSER' values 'chrome' , 'edge' , 'firefox' , 'safari' } axis { name 'ARCHITECTURE' values '32-bit' , '64-bit' } } excludes { exclude { axis { name 'PLATFORM' values 'mac' } axis { name 'ARCHITECTURE' values '32-bit' } } } // ... } Exclude the linux, safari combination and exclude any platform that is not windows with the edge browser. Example 33. Three-axis matrix with 24 cells, exclude '32-bit, mac' and invalid browser combinations (9 cells excluded) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 matrix { axes { axis { name 'PLATFORM' values 'linux' , 'mac' , 'windows' } axis { name 'BROWSER' values 'chrome' , 'edge' , 'firefox' , 'safari' } axis { name 'ARCHITECTURE' values '32-bit' , '64-bit' } } excludes { exclude { // 4 cells axis { name 'PLATFORM' values 'mac' } axis { name 'ARCHITECTURE' values '32-bit' } } exclude { // 2 cells axis { name 'PLATFORM' values 'linux' } axis { name 'BROWSER' values 'safari' } } exclude { // 3 more cells and '32-bit, mac' (already excluded) axis { name 'PLATFORM' notValues 'windows' } axis { name 'BROWSER' values 'edge' } } } // ... } Matrix cell-level directives (optional) \u00b6 Matrix lets users efficiently configure the overall environment for each cell, by adding stage-level directives under matrix itself. These directives behave the same as they would on a stage but they can also accept values provided by the matrix for each cell. The axis and exclude directives define the static set of cells that make up the matrix. That set of combinations is generated before the start of the pipeline run. The \"per-cell\" directives, on the other hand, are evaluated at runtime. These directives include: agent environment input options post tools when Example 34. Complete Matrix Example, Declarative Pipeline 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 pipeline { parameters { choice ( name: 'PLATFORM_FILTER' , choices: [ 'all' , 'linux' , 'windows' , 'mac' ], description: 'Run on specific platform' ) } agent none stages { stage ( 'BuildAndTest' ) { matrix { agent { label \"${PLATFORM}-agent\" } when { anyOf { expression { params . PLATFORM_FILTER == 'all' } expression { params . PLATFORM_FILTER == env . PLATFORM } } } axes { axis { name 'PLATFORM' values 'linux' , 'windows' , 'mac' } axis { name 'BROWSER' values 'firefox' , 'chrome' , 'safari' , 'edge' } } excludes { exclude { axis { name 'PLATFORM' values 'linux' } axis { name 'BROWSER' values 'safari' } } exclude { axis { name 'PLATFORM' notValues 'windows' } axis { name 'BROWSER' values 'edge' } } } stages { stage ( 'Build' ) { steps { echo \"Do Build for ${PLATFORM} - ${BROWSER}\" } } stage ( 'Test' ) { steps { echo \"Do Test for ${PLATFORM} - ${BROWSER}\" } } } } } } } Steps \u00b6 Declarative Pipelines may use all the available steps documented in the Pipeline Steps reference , which contains a comprehensive list of steps, with the addition of the steps listed below which are only supported in Declarative Pipeline. script \u00b6 The script step takes a block of Scripted Pipeline and executes that in the Declarative Pipeline. For most use-cases, the script step should be unnecessary in Declarative Pipelines, but it can provide a useful \"escape hatch.\" script blocks of non-trivial size and/or complexity should be moved into Shared Libraries instead. Example 35. Script Block in Declarative Pipeline 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 pipeline { agent any stages { stage ( 'Example' ) { steps { echo 'Hello World' script { def browsers = [ 'chrome' , 'firefox' ] for ( int i = 0 ; i < browsers . size (); ++ i ) { echo \"Testing the ${browsers[i]} browser\" } } } } } }","title":"pipeline-syntax"},{"location":"CICD/Jenkins/jenkins-pipeline-syntax/#declarative-pipeline","text":"Declarative Pipeline is a relatively recent addition to Jenkins Pipeline [ 1 ] which presents a more simplified and opinionated syntax on top of the Pipeline sub-systems. All valid Declarative Pipelines must be enclosed within a pipeline block, for example: groovy pipeline { /* insert Declarative Pipeline here */ } The basic statements and expressions which are valid in Declarative Pipeline follow the same rules as Groovy\u2019s syntax with the following exceptions: The top-level of the Pipeline must be a block , specifically: pipeline { } . No semicolons as statement separators. Each statement has to be on its own line. Blocks must only consist of Sections , Directives , Steps , or assignment statements. A property reference statement is treated as a no-argument method invocation. So, for example, input is treated as input() . You can use the Declarative Directive Generator to help you get started with configuring the directives and sections in your Declarative Pipeline.","title":"Declarative Pipeline"},{"location":"CICD/Jenkins/jenkins-pipeline-syntax/#sections","text":"Sections in Declarative Pipeline typically contain one or more Directives or Steps .","title":"Sections"},{"location":"CICD/Jenkins/jenkins-pipeline-syntax/#agent","text":"The agent section specifies where the entire Pipeline, or a specific stage, will execute in the Jenkins environment depending on where the agent section is placed. The section must be defined at the top-level inside the pipeline block, but stage-level usage is optional. Required Yes Parameters Described below Allowed In the top-level pipeline block and each stage block.","title":"agent"},{"location":"CICD/Jenkins/jenkins-pipeline-syntax/#differences-between-top-and-stage-level-agents","text":"There are some nuances when adding an agent to the top level or a stage level, and this when the options directive is applied.","title":"Differences between top and stage level Agents"},{"location":"CICD/Jenkins/jenkins-pipeline-syntax/#top-level-agents","text":"In agents declared at the outermost level of the Pipeline, the options are invoked after entering the agent. As an example, when using timeout it will be only applied to the execution within the agent. 1 2 3 4 5 6 7 8 node ( \"myAgent\" ) { timeout ( unit: 'SECONDS' , time: 5 ) { stage ( \"One\" ){ sleep 10 echo 'hello' } } }","title":"Top Level Agents"},{"location":"CICD/Jenkins/jenkins-pipeline-syntax/#stage-agents","text":"In agents declared within a stage, the options are invoked before entering the agent and before checking any when conditions. In this case, when using timeout , it is applied before the agent is allocated. 1 2 3 4 5 6 7 8 timeout ( unit: 'SECONDS' , time: 5 ) { stage ( \"One\" ){ node { sleep 10 echo 'Hello' } } } This timeout will include the agent provisioning time. Because the timeout includes the agent provisioning time, the Pipeline may fail in cases where agent allocation is delayed.","title":"Stage Agents"},{"location":"CICD/Jenkins/jenkins-pipeline-syntax/#parameters","text":"In order to support the wide variety of use-cases Pipeline authors may have, the agent section supports a few different types of parameters. These parameters can be applied at the top-level of the pipeline block, or within each stage directive. any Execute the Pipeline, or stage, on any available agent. For example: agent any none When applied at the top-level of the pipeline block no global agent will be allocated for the entire Pipeline run and each stage section will need to contain its own agent section. For example: agent none label Execute the Pipeline, or stage, on an agent available in the Jenkins environment with the provided label. For example: agent { label 'my-defined-label' } Label conditions can also be used. For example: agent { label 'my-label1 && my-label2' } or agent { label 'my-label1 || my-label2' } node agent { node { label 'labelName' } } behaves the same as agent { label 'labelName' } , but node allows for additional options (such as customWorkspace ). docker Execute the Pipeline, or stage, with the given container which will be dynamically provisioned on a node pre-configured to accept Docker-based Pipelines, or on a node matching the optionally defined label parameter. docker also optionally accepts an args parameter which may contain arguments to pass directly to a docker run invocation, and an alwaysPull option, which will force a docker pull even if the image name is already present. For example: agent { docker 'maven:3-alpine' } or 1 2 3 4 5 6 7 8 9 ```groovy agent { docker { image 'maven:3-alpine' label 'my-defined-label' args '-v /tmp:/tmp' } } ``` docker also optionally accepts a registryUrl and registryCredentialsId parameters which will help to specify the Docker Registry to use and its credentials. The parameter registryCredentialsId could be used alone for private repositories within the docker hub. For example: groovy agent { docker { image 'myregistry.com/node' label 'my-defined-label' registryUrl 'https://myregistry.com/' registryCredentialsId 'myPredefinedCredentialsInJenkins' } } dockerfile Execute the Pipeline, or stage, with a container built from a Dockerfile contained in the source repository. In order to use this option, the Jenkinsfile must be loaded from either a Multibranch Pipeline or a Pipeline from SCM . Conventionally this is the Dockerfile in the root of the source repository: agent { dockerfile true } . If building a Dockerfile in another directory, use the dir option: agent { dockerfile { dir 'someSubDir' } } . If your Dockerfile has another name, you can specify the file name with the filename option. You can pass additional arguments to the docker build \u2026 command with the additionalBuildArgs option, like agent { dockerfile { additionalBuildArgs '--build-arg foo=bar' } } . For example, a repository with the file build/Dockerfile.build , expecting a build argument version : groovy agent { // Equivalent to \"docker build -f Dockerfile.build --build-arg version=1.0.2 ./build/ dockerfile { filename 'Dockerfile.build' dir 'build' label 'my-defined-label' additionalBuildArgs '--build-arg version=1.0.2' args '-v /tmp:/tmp' } } dockerfile also optionally accepts a registryUrl and registryCredentialsId parameters which will help to specify the Docker Registry to use and its credentials. For example: groovy agent { dockerfile { filename 'Dockerfile.build' dir 'build' label 'my-defined-label' registryUrl 'https://myregistry.com/' registryCredentialsId 'myPredefinedCredentialsInJenkins' } } kubernetes Execute the Pipeline, or stage, inside a pod deployed on a Kubernetes cluster. In order to use this option, the Jenkinsfile must be loaded from either a Multibranch Pipeline or a Pipeline from SCM . The Pod template is defined inside the kubernetes { } block. For example, if you want a pod with a Kaniko container inside it, you would define it as follows: groovy agent { kubernetes { label podlabel yaml \"\"\" kind: Pod metadata: name: jenkins-agent spec: containers: - name: kaniko image: gcr.io/kaniko-project/executor:debug imagePullPolicy: Always command: - /busybox/cat tty: true volumeMounts: - name: aws-secret mountPath: /root/.aws/ - name: docker-registry-config mountPath: /kaniko/.docker restartPolicy: Never volumes: - name: aws-secret secret: secretName: aws-secret - name: docker-registry-config configMap: name: docker-registry-config \"\"\" } You will need to create a secret aws-secret for Kaniko to be able to authenticate with ECR. This secret should contain the contents of ~/.aws/credentials . The other volume is a ConfigMap which should contain the endpoint of your ECR registry. For example: groovy { \"credHelpers\": { \".dkr.ecr.eu-central-1.amazonaws.com\": \"ecr-login\" } } Refer to the following example for reference: https://github.com/jenkinsci/kubernetes-plugin/blob/master/examples/kaniko.groovy","title":"Parameters"},{"location":"CICD/Jenkins/jenkins-pipeline-syntax/#common-options","text":"These are a few options that can be applied to two or more agent implementations. They are not required unless explicitly stated. label A string. The label or label condition on which to run the Pipeline or individual stage .This option is valid for node , docker , and dockerfile , and is required for node . customWorkspace A string. Run the Pipeline or individual stage this agent is applied to within this custom workspace, rather than the default. It can be either a relative path, in which case the custom workspace will be under the workspace root on the node, or an absolute path. For example: groovy agent { node { label 'my-defined-label' customWorkspace '/some/other/path' } } This option is valid for node , docker , and dockerfile . reuseNode A boolean, false by default. If true, run the container on the node specified at the top-level of the Pipeline, in the same workspace, rather than on a new node entirely.This option is valid for docker and dockerfile , and only has an effect when used on an agent for an individual stage . args A string. Runtime arguments to pass to docker run .This option is valid for docker and dockerfile . Example 1. Docker Agent, Declarative Pipeline 1 2 3 4 5 6 7 8 9 10 pipeline { agent { docker 'maven:3-alpine' } // \u2460 stages { stage ( 'Example Build' ) { steps { sh 'mvn -B clean verify' } } } } \u2460Execute all the steps defined in this Pipeline within a newly created container of the given name and tag ( maven:3-alpine ). Example 2. Stage-level Agent Section 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 pipeline { agent none // \u2460 stages { stage ( 'Example Build' ) { agent { docker 'maven:3-alpine' } // \u2461 steps { echo 'Hello, Maven' sh 'mvn --version' } } stage ( 'Example Test' ) { agent { docker 'openjdk:8-jre' } //\u2462 steps { echo 'Hello, JDK' sh 'java -version' } } } } \u2460 Defining agent none at the top-level of the Pipeline ensures that an Executor will not be assigned unnecessarily. Using agent none also forces each stage section to contain its own agent section. \u2461 Execute the steps in this stage in a newly created container using this image. \u2462 Execute the steps in this stage in a newly created container using a different image from the previous stage.","title":"Common Options"},{"location":"CICD/Jenkins/jenkins-pipeline-syntax/#post","text":"The post section defines one or more additional steps that are run upon the completion of a Pipeline\u2019s or stage\u2019s run (depending on the location of the post section within the Pipeline). post can support any of the following post-condition blocks: always , changed , fixed , regression , aborted , failure , success , unstable , unsuccessful , and cleanup . These condition blocks allow the execution of steps inside each condition depending on the completion status of the Pipeline or stage. The condition blocks are executed in the order shown below. Required No Parameters None Allowed In the top-level pipeline block and each stage block.","title":"post"},{"location":"CICD/Jenkins/jenkins-pipeline-syntax/#conditions","text":"always Run the steps in the post section regardless of the completion status of the Pipeline\u2019s or stage\u2019s run. changed Only run the steps in post if the current Pipeline\u2019s or stage\u2019s run has a different completion status from its previous run. fixed Only run the steps in post if the current Pipeline\u2019s or stage\u2019s run is successful and the previous run failed or was unstable. regression Only run the steps in post if the current Pipeline\u2019s or stage\u2019s run\u2019s status is failure, unstable, or aborted and the previous run was successful. aborted Only run the steps in post if the current Pipeline\u2019s or stage\u2019s run has an \"aborted\" status, usually due to the Pipeline being manually aborted. This is typically denoted by gray in the web UI. failure Only run the steps in post if the current Pipeline\u2019s or stage\u2019s run has a \"failed\" status, typically denoted by red in the web UI. success Only run the steps in post if the current Pipeline\u2019s or stage\u2019s run has a \"success\" status, typically denoted by blue or green in the web UI. unstable Only run the steps in post if the current Pipeline\u2019s or stage\u2019s run has an \"unstable\" status, usually caused by test failures, code violations, etc. This is typically denoted by yellow in the web UI. unsuccessful Only run the steps in post if the current Pipeline\u2019s or stage\u2019s run has not a \"success\" status. This is typically denoted in the web UI depending on the status previously mentioned. cleanup Run the steps in this post condition after every other post condition has been evaluated, regardless of the Pipeline or stage\u2019s status. Example 3. Post Section, Declarative Pipeline 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 pipeline { agent any stages { stage ( 'Example' ) { steps { echo 'Hello World' } } } post { // \u2460 always { // \u2461 echo 'I will always say Hello again!' } } } \u2460 Conventionally, the post section should be placed at the end of the Pipeline. \u2461 Post-condition blocks contain steps the same as the steps section.","title":"Conditions"},{"location":"CICD/Jenkins/jenkins-pipeline-syntax/#stages","text":"Containing a sequence of one or more stage directives, the stages section is where the bulk of the \"work\" described by a Pipeline will be located. At a minimum, it is recommended that stages contain at least one stage directive for each discrete part of the continuous delivery process, such as Build, Test, and Deploy. Required Yes Parameters None Allowed Only once, inside the pipeline block. Example 4. Stages, Declarative Pipeline 1 2 3 4 5 6 7 8 9 10 pipeline { agent any stages { // \u2460 stage ( 'Example' ) { steps { echo 'Hello World' } } } } \u2460 The stages section will typically follow the directives such as agent , options , etc.","title":"stages"},{"location":"CICD/Jenkins/jenkins-pipeline-syntax/#steps","text":"The steps section defines a series of one or more steps to be executed in a given stage directive. Required Yes Parameters None Allowed Inside each stage block. Example 5. Single Step, Declarative Pipeline 1 2 3 4 5 6 7 8 9 10 pipeline { agent any stages { stage ( 'Example' ) { steps { // \u2460 echo 'Hello World' } } } } \u2460 The steps section must contain one or more steps.","title":"steps"},{"location":"CICD/Jenkins/jenkins-pipeline-syntax/#directives","text":"","title":"Directives"},{"location":"CICD/Jenkins/jenkins-pipeline-syntax/#environment","text":"The environment directive specifies a sequence of key-value pairs which will be defined as environment variables for all steps, or stage-specific steps, depending on where the environment directive is located within the Pipeline. This directive supports a special helper method credentials() which can be used to access pre-defined Credentials by their identifier in the Jenkins environment. Required No Parameters None Allowed Inside the pipeline block, or within stage directives.","title":"environment"},{"location":"CICD/Jenkins/jenkins-pipeline-syntax/#supported-credentials-type","text":"Secret Text the environment variable specified will be set to the Secret Text content Secret File the environment variable specified will be set to the location of the File file that is temporarily created Username and password the environment variable specified will be set to username:password and two additional environment variables will be automatically defined: MYVARNAME_USR and MYVARNAME_PSW respectively. SSH with Private Key the environment variable specified will be set to the location of the SSH key file that is temporarily created and two additional environment variables may be automatically defined: MYVARNAME_USR and MYVARNAME_PSW (holding the passphrase). Unsupported credentials type causes the pipeline to fail with the message: org.jenkinsci.plugins.credentialsbinding.impl.CredentialNotFoundException: No suitable binding handler could be found for type . Example 6. Secret Text Credentials, Declarative Pipeline 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 pipeline { agent any environment { // \u2460 CC = 'clang' } stages { stage ( 'Example' ) { environment { // \u2461 AN_ACCESS_KEY = credentials ( 'my-predefined-secret-text' ) // \u2462 } steps { sh 'printenv' } } } } \u2460 An environment directive used in the top-level pipeline block will apply to all steps within the Pipeline. \u2461 An environment directive defined within a stage will only apply the given environment variables to steps within the stage . \u2462 The environment block has a helper method credentials() defined which can be used to access pre-defined Credentials by their identifier in the Jenkins environment. Example 7. Username and Password Credentials 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 pipeline { agent any stages { stage ( 'Example Username/Password' ) { environment { SERVICE_CREDS = credentials ( 'my-predefined-username-password' ) } steps { sh 'echo \"Service user is $SERVICE_CREDS_USR\"' sh 'echo \"Service password is $SERVICE_CREDS_PSW\"' sh 'curl -u $SERVICE_CREDS https://myservice.example.com' } } stage ( 'Example SSH Username with private key' ) { environment { SSH_CREDS = credentials ( 'my-predefined-ssh-creds' ) } steps { sh 'echo \"SSH private key is located at $SSH_CREDS\"' sh 'echo \"SSH user is $SSH_CREDS_USR\"' sh 'echo \"SSH passphrase is $SSH_CREDS_PSW\"' } } } }","title":"Supported Credentials Type"},{"location":"CICD/Jenkins/jenkins-pipeline-syntax/#options","text":"The options directive allows configuring Pipeline-specific options from within the Pipeline itself. Pipeline provides a number of these options, such as buildDiscarder , but they may also be provided by plugins, such as timestamps . Required No Parameters None Allowed Only once, inside the pipeline block.","title":"options"},{"location":"CICD/Jenkins/jenkins-pipeline-syntax/#available-options","text":"buildDiscarder Persist artifacts and console output for the specific number of recent Pipeline runs. For example: options { buildDiscarder(logRotator(numToKeepStr: '1')) } checkoutToSubdirectory Perform the automatic source control checkout in a subdirectory of the workspace. For example: options { checkoutToSubdirectory('foo') } disableConcurrentBuilds Disallow concurrent executions of the Pipeline. Can be useful for preventing simultaneous accesses to shared resources, etc. For example: options { disableConcurrentBuilds() } disableResume Do not allow the pipeline to resume if the controller restarts. For example: options { disableResume() } newContainerPerStage Used with docker or dockerfile top-level agent. When specified, each stage will run in a new container instance on the same node, rather than all stages running in the same container instance. overrideIndexTriggers Allows overriding default treatment of branch indexing triggers. If branch indexing triggers are disabled at the multibranch or organization label, options { overrideIndexTriggers(true) } will enable them for this job only. Otherwise, options { overrideIndexTriggers(false) } will disable branch indexing triggers for this job only. preserveStashes Preserve stashes from completed builds, for use with stage restarting. For example: options { preserveStashes() } to preserve the stashes from the most recent completed build, or options { preserveStashes(buildCount: 5) } to preserve the stashes from the five most recent completed builds. quietPeriod Set the quiet period, in seconds, for the Pipeline, overriding the global default. For example: options { quietPeriod(30) } retry On failure, retry the entire Pipeline the specified number of times. For example: options { retry(3) } skipDefaultCheckout Skip checking out code from source control by default in the agent directive. For example: options { skipDefaultCheckout() } skipStagesAfterUnstable Skip stages once the build status has gone to UNSTABLE. For example: options { skipStagesAfterUnstable() } timeout Set a timeout period for the Pipeline run, after which Jenkins should abort the Pipeline. For example: options { timeout(time: 1, unit: 'HOURS') } Example 8. Global Timeout, Declarative Pipeline 1 2 3 4 5 6 7 8 9 10 11 12 13 pipeline { agent any options { timeout ( time: 1 , unit: 'HOURS' ) // \u2460 } stages { stage ( 'Example' ) { steps { echo 'Hello World' } } } } \u2460 Specifying a global execution timeout of one hour, after which Jenkins will abort the Pipeline run. timestamps Prepend all console output generated by the Pipeline run with the time at which the line was emitted. For example: options { timestamps() } parallelsAlwaysFailFast Set failfast true for all subsequent parallel stages in the pipeline. For example: options { parallelsAlwaysFailFast() } A comprehensive list of available options is pending the completion of INFRA-1503 .","title":"Available Options"},{"location":"CICD/Jenkins/jenkins-pipeline-syntax/#stage-options","text":"The options directive for a stage is similar to the options directive at the root of the Pipeline. However, the stage -level options can only contain steps like retry , timeout , or timestamps , or Declarative options that are relevant to a stage , like skipDefaultCheckout . Inside a stage , the steps in the options directive are invoked before entering the agent or checking any when conditions.","title":"stage options"},{"location":"CICD/Jenkins/jenkins-pipeline-syntax/#available-stage-options","text":"skipDefaultCheckout Skip checking out code from source control by default in the agent directive. For example: options { skipDefaultCheckout() } timeout Set a timeout period for this stage, after which Jenkins should abort the stage. For example: options { timeout(time: 1, unit: 'HOURS') } Example 9. Stage Timeout, Declarative Pipeline 1 2 3 4 5 6 7 8 9 10 11 12 13 pipeline { agent any stages { stage ( 'Example' ) { options { timeout ( time: 1 , unit: 'HOURS' ) // \u2460 } steps { echo 'Hello World' } } } } \u2460 Specifying an execution timeout of one hour for the Example stage, after which Jenkins will abort the Pipeline run. retry On failure, retry this stage the specified number of times. For example: options { retry(3) } timestamps Prepend all console output generated during this stage with the time at which the line was emitted. For example: options { timestamps() }","title":"Available Stage Options"},{"location":"CICD/Jenkins/jenkins-pipeline-syntax/#parameters_1","text":"The parameters directive provides a list of parameters that a user should provide when triggering the Pipeline. The values for these user-specified parameters are made available to Pipeline steps via the params object, see the Parameters, Declarative Pipeline for its specific usage. Required No Parameters None Allowed Only once, inside the pipeline block.","title":"parameters"},{"location":"CICD/Jenkins/jenkins-pipeline-syntax/#available-parameters","text":"string A parameter of a string type, for example: parameters { string(name: 'DEPLOY_ENV', defaultValue: 'staging', description: '') } text A text parameter, which can contain multiple lines, for example: parameters { text(name: 'DEPLOY_TEXT', defaultValue: 'One\\nTwo\\nThree\\n', description: '') } booleanParam A boolean parameter, for example: parameters { booleanParam(name: 'DEBUG_BUILD', defaultValue: true, description: '') } choice A choice parameter, for example: parameters { choice(name: 'CHOICES', choices: ['one', 'two', 'three'], description: '') } password A password parameter, for example: parameters { password(name: 'PASSWORD', defaultValue: 'SECRET', description: 'A secret password') } Example 10. Parameters, Declarative Pipeline 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 pipeline { agent any parameters { string ( name: 'PERSON' , defaultValue: 'Mr Jenkins' , description: 'Who should I say hello to?' ) text ( name: 'BIOGRAPHY' , defaultValue: '' , description: 'Enter some information about the person' ) booleanParam ( name: 'TOGGLE' , defaultValue: true , description: 'Toggle this value' ) choice ( name: 'CHOICE' , choices: [ 'One' , 'Two' , 'Three' ], description: 'Pick something' ) password ( name: 'PASSWORD' , defaultValue: 'SECRET' , description: 'Enter a password' ) } stages { stage ( 'Example' ) { steps { echo \"Hello ${params.PERSON}\" echo \"Biography: ${params.BIOGRAPHY}\" echo \"Toggle: ${params.TOGGLE}\" echo \"Choice: ${params.CHOICE}\" echo \"Password: ${params.PASSWORD}\" } } } } A comprehensive list of available parameters is pending the completion of INFRA-1503 .","title":"Available Parameters"},{"location":"CICD/Jenkins/jenkins-pipeline-syntax/#triggers","text":"The triggers directive defines the automated ways in which the Pipeline should be re-triggered. For Pipelines which are integrated with a source such as GitHub or BitBucket, triggers may not be necessary as webhooks-based integration will likely already be present. The triggers currently available are cron , pollSCM and upstream . Required No Parameters None Allowed Only once, inside the pipeline block. cron Accepts a cron-style string to define a regular interval at which the Pipeline should be re-triggered, for example: triggers { cron('H */4 * * 1-5') } pollSCM Accepts a cron-style string to define a regular interval at which Jenkins should check for new source changes. If new changes exist, the Pipeline will be re-triggered. For example: triggers { pollSCM('H */4 * * 1-5') } upstream Accepts a comma-separated string of jobs and a threshold. When any job in the string finishes with the minimum threshold, the Pipeline will be re-triggered. For example: triggers { upstream(upstreamProjects: 'job1,job2', threshold: hudson.model.Result.SUCCESS) } The pollSCM trigger is only available in Jenkins 2.22 or later. Example 11. Triggers, Declarative Pipeline 1 2 3 4 5 6 7 8 9 10 11 12 13 14 // Declarative // pipeline { agent any triggers { cron ( 'H */4 * * 1-5' ) } stages { stage ( 'Example' ) { steps { echo 'Hello World' } } } }","title":"triggers"},{"location":"CICD/Jenkins/jenkins-pipeline-syntax/#jenkins-cron-syntax","text":"The Jenkins cron syntax follows the syntax of the cron utility (with minor differences). Specifically, each line consists of 5 fields separated by TAB or whitespace: MINUTE HOUR DOM MONTH DOW Minutes within the hour (0\u201359) The hour of the day (0\u201323) The day of the month (1\u201331) The month (1\u201312) The day of the week (0\u20137) where 0 and 7 are Sunday. To specify multiple values for one field, the following operators are available. In the order of precedence, * specifies all valid values M-N specifies a range of values M-N/X or */X steps by intervals of X through the specified range or whole valid range A,B,\u2026,Z enumerates multiple values To allow periodically scheduled tasks to produce even load on the system, the symbol H (for \u201chash\u201d) should be used wherever possible. For example, using 0 0 * * * for a dozen daily jobs will cause a large spike at midnight. In contrast, using H H * * * would still execute each job once a day, but not all at the same time, better using limited resources. The H symbol can be used with a range. For example, H H(0-7) * * * means some time between 12:00 AM (midnight) to 7:59 AM. You can also use step intervals with H , with or without ranges. The H symbol can be thought of as a random value over a range, but it actually is a hash of the job name, not a random function, so that the value remains stable for any given project. Beware that for the day of month field, short cycles such as */3 or H/3 will not work consistently near the end of most months, due to variable month lengths. For example, */3 will run on the 1st, 4th, \u202631st days of a long month, then again the next day of the next month. Hashes are always chosen in the 1-28 range, so H/3 will produce a gap between runs of between 3 and 6 days at the end of a month. (Longer cycles will also have inconsistent lengths but the effect may be relatively less noticeable.) Empty lines and lines that start with # will be ignored as comments. In addition, @yearly , @annually , @monthly , @weekly , @daily , @midnight , and @hourly are supported as convenient aliases. These use the hash system for automatic balancing. For example, @hourly is the same as H * * * * and could mean at any time during the hour. @midnight actually means some time between 12:00 AM and 2:59 AM. example every fifteen minutes (perhaps at :07, :22, :37, :52) triggers{ cron('H/15 * * * *') } every ten minutes in the first half of every hour (three times, perhaps at :04, :14, :24) triggers{ cron('H(0-29)/10 * * * *') } once every two hours at 45 minutes past the hour starting at 9:45 AM and finishing at 3:45 PM every weekday. triggers{ cron('45 9-16/2 * * 1-5') } once in every two hours slot between 9 AM and 5 PM every weekday (perhaps at 10:38 AM, 12:38 PM, 2:38 PM, 4:38 PM) triggers{ cron('H H(9-16)/2 * * 1-5') } once a day on the 1st and 15th of every month except December triggers{ cron('H H 1,15 1-11 *') }","title":"Jenkins cron syntax"},{"location":"CICD/Jenkins/jenkins-pipeline-syntax/#stage","text":"The stage directive goes in the stages section and should contain a steps section, an optional agent section, or other stage-specific directives. Practically speaking, all of the real work done by a Pipeline will be wrapped in one or more stage directives. Required At least one Parameters One mandatory parameter, a string for the name of the stage. Allowed Inside the stages section. Example 12. Stage, Declarative Pipeline 1 2 3 4 5 6 7 8 9 10 11 // Declarative // pipeline { agent any stages { stage ( 'Example' ) { steps { echo 'Hello World' } } } }","title":"stage"},{"location":"CICD/Jenkins/jenkins-pipeline-syntax/#tools","text":"A section defining tools to auto-install and put on the PATH . This is ignored if agent none is specified. Required No Parameters None Allowed Inside the pipeline block or a stage block.","title":"tools"},{"location":"CICD/Jenkins/jenkins-pipeline-syntax/#supported-tools","text":"maven jdk gradle Example 13. Tools, Declarative Pipeline 1 2 3 4 5 6 7 8 9 10 11 12 13 pipeline { agent any tools { maven 'apache-maven-3.0.1' // \u2460 } stages { stage ( 'Example' ) { steps { sh 'mvn --version' } } } } The tool name must be pre-configured in Jenkins under Manage Jenkins \u2192 Global Tool Configuration .","title":"Supported Tools"},{"location":"CICD/Jenkins/jenkins-pipeline-syntax/#input","text":"The input directive on a stage allows you to prompt for input, using the input step . The stage will pause after any options have been applied, and before entering the agent block for that stage or evaluating the when condition of the stage . If the input is approved, the stage will then continue. Any parameters provided as part of the input submission will be available in the environment for the rest of the stage .","title":"input"},{"location":"CICD/Jenkins/jenkins-pipeline-syntax/#configuration-options","text":"message Required. This will be presented to the user when they go to submit the input . id An optional identifier for this input . Defaults to the stage name. ok Optional text for the \"ok\" button on the input form. submitter An optional comma-separated list of users or external group names who are allowed to submit this input . Defaults to allowing any user. submitterParameter An optional name of an environment variable to set with the submitter name, if present. parameters An optional list of parameters to prompt the submitter to provide. See parameters for more information. Example 14. Input Step, Declarative Pipeline 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 pipeline { agent any stages { stage ( 'Example' ) { input { message \"Should we continue?\" ok \"Yes, we should.\" submitter \"alice,bob\" parameters { string ( name: 'PERSON' , defaultValue: 'Mr Jenkins' , description: 'Who should I say hello to?' ) } } steps { echo \"Hello, ${PERSON}, nice to meet you.\" } } } }","title":"Configuration options"},{"location":"CICD/Jenkins/jenkins-pipeline-syntax/#when","text":"The when directive allows the Pipeline to determine whether the stage should be executed depending on the given condition. The when directive must contain at least one condition. If the when directive contains more than one condition, all the child conditions must return true for the stage to execute. This is the same as if the child conditions were nested in an allOf condition (see the examples below). If an anyOf condition is used, note that the condition skips remaining tests as soon as the first \"true\" condition is found. More complex conditional structures can be built using the nesting conditions: not , allOf , or anyOf . Nesting conditions may be nested to any arbitrary depth. Required No Parameters None Allowed Inside a stage directive","title":"when"},{"location":"CICD/Jenkins/jenkins-pipeline-syntax/#built-in-conditions","text":"branch Execute the stage when the branch being built matches the branch pattern (ANT style path glob) given, for example: when { branch 'master' } . Note that this only works on a multibranch Pipeline.The optional parameter comparator may be added after an attribute to specify how any patterns are evaluated for a match: EQUALS for a simple string comparison, GLOB (the default) for an ANT style path glob (same as for example changeset ), or REGEXP for regular expression matching. For example: when { branch pattern: \"release-\\\\d+\", comparator: \"REGEXP\"} buildingTag Execute the stage when the build is building a tag. Example: when { buildingTag() } changelog Execute the stage if the build\u2019s SCM changelog contains a given regular expression pattern, for example: when { changelog '.*^\\\\[DEPENDENCY\\\\] .+$' } changeset Execute the stage if the build\u2019s SCM changeset contains one or more files matching the given pattern. Example: when { changeset \"**/*.js\" } The optional parameter comparator may be added after an attribute to specify how any patterns are evaluated for a match: EQUALS for a simple string comparison, GLOB (the default) for an ANT style path glob case insensitive, this can be turned off with the caseSensitive parameter, or REGEXP for regular expression matching. For example: when { changeset pattern: \".**TEST\\\\.java\", comparator: \"REGEXP\" }** or when { changeset pattern: \" */*TEST.java\", caseSensitive: true } changeRequest Executes the stage if the current build is for a \"change request\" (a.k.a. Pull Request on GitHub and Bitbucket, Merge Request on GitLab, Change in Gerrit, etc.). When no parameters are passed the stage runs on every change request, for example: when { changeRequest() } .By adding a filter attribute with parameter to the change request, the stage can be made to run only on matching change requests. Possible attributes are id , target , branch , fork , url , title , author , authorDisplayName , and authorEmail . Each of these corresponds to a CHANGE_* environment variable, for example: when { changeRequest target: 'master' } .The optional parameter comparator may be added after an attribute to specify how any patterns are evaluated for a match: EQUALS for a simple string comparison (the default), GLOB for an ANT style path glob (same as for example changeset ), or REGEXP for regular expression matching. Example: when { changeRequest authorEmail: \"[\\\\w_-.]+@example.com\", comparator: 'REGEXP' } environment Execute the stage when the specified environment variable is set to the given value, for example: when { environment name: 'DEPLOY_TO', value: 'production' } equals Execute the stage when the expected value is equal to the actual value, for example: when { equals expected: 2, actual: currentBuild.number } expression Execute the stage when the specified Groovy expression evaluates to true, for example: when { expression { return params.DEBUG_BUILD } } Note that when returning strings from your expressions they must be converted to booleans or return null to evaluate to false. Simply returning \"0\" or \"false\" will still evaluate to \"true\". tag Execute the stage if the TAG_NAME variable matches the given pattern. Example: when { tag \"release-*\" } . If an empty pattern is provided the stage will execute if the TAG_NAME variable exists (same as buildingTag() ).The optional parameter comparator may be added after an attribute to specify how any patterns are evaluated for a match: EQUALS for a simple string comparison, GLOB (the default) for an ANT style path glob (same as for example changeset ), or REGEXP for regular expression matching. For example: when { tag pattern: \"release-\\\\d+\", comparator: \"REGEXP\"} not Execute the stage when the nested condition is false. Must contain one condition. For example: when { not { branch 'master' } } allOf Execute the stage when all of the nested conditions are true. Must contain at least one condition. For example: when { allOf { branch 'master'; environment name: 'DEPLOY_TO', value: 'production' } } anyOf Execute the stage when at least one of the nested conditions is true. Must contain at least one condition. For example: when { anyOf { branch 'master'; branch 'staging' } } triggeredBy Execute the stage when the current build has been triggered by the param given. For example: when { triggeredBy 'SCMTrigger' } when { triggeredBy 'TimerTrigger' } when { triggeredBy 'UpstreamCause' } when { triggeredBy cause: \"UserIdCause\", detail: \"vlinde\" }","title":"Built-in Conditions"},{"location":"CICD/Jenkins/jenkins-pipeline-syntax/#evaluating-when-before-entering-agent-in-a-stage","text":"By default, the when condition for a stage will be evaluated after entering the agent for that stage , if one is defined. However, this can be changed by specifying the beforeAgent option within the when block. If beforeAgent is set to true , the when condition will be evaluated first, and the agent will only be entered if the when condition evaluates to true.","title":"Evaluating when before entering agent in a stage"},{"location":"CICD/Jenkins/jenkins-pipeline-syntax/#evaluating-when-before-the-input-directive","text":"By default, the when condition for a stage will not be evaluated before the input, if one is defined. However, this can be changed by specifying the beforeInput option within the when block. If beforeInput is set to true, the when condition will be evaluated first, and the input will only be entered if the when condition evaluates to true. beforeInput true takes precedence over beforeAgent true .","title":"Evaluating when before the input directive"},{"location":"CICD/Jenkins/jenkins-pipeline-syntax/#evaluating-when-before-the-options-directive","text":"By default, the when condition for a stage will be evaluated after entering the options for that stage , if any are defined. However, this can be changed by specifying the beforeOptions option within the when block. If beforeOptions is set to true , the when condition will be evaluated first, and the options will only be entered if the when condition evaluates to true. beforeOptions true takes precedence over beforeInput true and beforeAgent true . Example 15. Single Condition, Declarative Pipeline 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 pipeline { agent any stages { stage ( 'Example Build' ) { steps { echo 'Hello World' } } stage ( 'Example Deploy' ) { when { branch 'production' } steps { echo 'Deploying' } } } } Example 16. Multiple Condition, Declarative Pipeline 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 pipeline { agent any stages { stage ( 'Example Build' ) { steps { echo 'Hello World' } } stage ( 'Example Deploy' ) { when { branch 'production' environment name: 'DEPLOY_TO' , value: 'production' } steps { echo 'Deploying' } } } } Example 17. Nested condition (same behavior as previous example) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 pipeline { agent any stages { stage ( 'Example Build' ) { steps { echo 'Hello World' } } stage ( 'Example Deploy' ) { when { allOf { branch 'production' environment name: 'DEPLOY_TO' , value: 'production' } } steps { echo 'Deploying' } } } } Example 18. Multiple condition and nested condition 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 pipeline { agent any stages { stage ( 'Example Build' ) { steps { echo 'Hello World' } } stage ( 'Example Deploy' ) { when { branch 'production' anyOf { environment name: 'DEPLOY_TO' , value: 'production' environment name: 'DEPLOY_TO' , value: 'staging' } } steps { echo 'Deploying' } } } } Example 19. Expression condition and nested condition 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 pipeline { agent any stages { stage ( 'Example Build' ) { steps { echo 'Hello World' } } stage ( 'Example Deploy' ) { when { expression { BRANCH_NAME ==~ /(production|staging)/ } anyOf { environment name: 'DEPLOY_TO' , value: 'production' environment name: 'DEPLOY_TO' , value: 'staging' } } steps { echo 'Deploying' } } } } Example 20. beforeAgent 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 pipeline { agent none stages { stage ( 'Example Build' ) { steps { echo 'Hello World' } } stage ( 'Example Deploy' ) { agent { label \"some-label\" } when { beforeAgent true branch 'production' } steps { echo 'Deploying' } } } } Example 21. beforeInput 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 pipeline { agent none stages { stage ( 'Example Build' ) { steps { echo 'Hello World' } } stage ( 'Example Deploy' ) { when { beforeInput true branch 'production' } input { message \"Deploy to production?\" id \"simple-input\" } steps { echo 'Deploying' } } } } Example 22. beforeOptions 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 pipeline { agent none stages { stage ( 'Example Build' ) { steps { echo 'Hello World' } } stage ( 'Example Deploy' ) { when { beforeOptions true branch 'testing' } options { lock label: 'testing-deploy-envs' , quantity: 1 , variable: 'deployEnv' } steps { echo \"Deploying to ${deployEnv}\" } } } } Example 23. triggeredBy 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 pipeline { agent none stages { stage ( 'Example Build' ) { steps { echo 'Hello World' } } stage ( 'Example Deploy' ) { when { triggeredBy \"TimerTrigger\" } steps { echo 'Deploying' } } } }","title":"Evaluating when before the options directive"},{"location":"CICD/Jenkins/jenkins-pipeline-syntax/#sequential-stages","text":"Stages in Declarative Pipeline may have a stages section containing a list of nested stages to be run in sequential order. Note that a stage must have one and only one of steps , stages , parallel , or matrix . It is not possible to nest a parallel or matrix block within a stage directive if that stage directive is nested within a parallel or matrix block itself. However, a stage directive within a parallel or matrix block can use all other functionality of a stage , including agent , tools , when , etc. Example 24. Sequential Stages, Declarative Pipeline 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 pipeline { agent none stages { stage ( 'Non-Sequential Stage' ) { agent { label 'for-non-sequential' } steps { echo \"On Non-Sequential Stage\" } } stage ( 'Sequential' ) { agent { label 'for-sequential' } environment { FOR_SEQUENTIAL = \"some-value\" } stages { stage ( 'In Sequential 1' ) { steps { echo \"In Sequential 1\" } } stage ( 'In Sequential 2' ) { steps { echo \"In Sequential 2\" } } stage ( 'Parallel In Sequential' ) { parallel { stage ( 'In Parallel 1' ) { steps { echo \"In Parallel 1\" } } stage ( 'In Parallel 2' ) { steps { echo \"In Parallel 2\" } } } } } } } }","title":"Sequential Stages"},{"location":"CICD/Jenkins/jenkins-pipeline-syntax/#parallel","text":"Stages in Declarative Pipeline may have a parallel section containing a list of nested stages to be run in parallel. Note that a stage must have one and only one of steps , stages , parallel , or matrix . It is not possible to nest a parallel or matrix block within a stage directive if that stage directive is nested within a parallel or matrix block itself. However, a stage directive within a parallel or matrix block can use all other functionality of a stage , including agent , tools , when , etc. In addition, you can force your parallel stages to all be aborted when any one of them fails, by adding failFast true to the stage containing the parallel . Another option for adding failfast is adding an option to the pipeline definition: parallelsAlwaysFailFast() Example 25. Parallel Stages, Declarative Pipeline 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 pipeline { agent any stages { stage ( 'Non-Parallel Stage' ) { steps { echo 'This stage will be executed first.' } } stage ( 'Parallel Stage' ) { when { branch 'master' } failFast true parallel { stage ( 'Branch A' ) { agent { label \"for-branch-a\" } steps { echo \"On Branch A\" } } stage ( 'Branch B' ) { agent { label \"for-branch-b\" } steps { echo \"On Branch B\" } } stage ( 'Branch C' ) { agent { label \"for-branch-c\" } stages { stage ( 'Nested 1' ) { steps { echo \"In stage Nested 1 within Branch C\" } } stage ( 'Nested 2' ) { steps { echo \"In stage Nested 2 within Branch C\" } } } } } } } } Example 26. parallelsAlwaysFailFast 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 pipeline { agent any options { parallelsAlwaysFailFast () } stages { stage ( 'Non-Parallel Stage' ) { steps { echo 'This stage will be executed first.' } } stage ( 'Parallel Stage' ) { when { branch 'master' } parallel { stage ( 'Branch A' ) { agent { label \"for-branch-a\" } steps { echo \"On Branch A\" } } stage ( 'Branch B' ) { agent { label \"for-branch-b\" } steps { echo \"On Branch B\" } } stage ( 'Branch C' ) { agent { label \"for-branch-c\" } stages { stage ( 'Nested 1' ) { steps { echo \"In stage Nested 1 within Branch C\" } } stage ( 'Nested 2' ) { steps { echo \"In stage Nested 2 within Branch C\" } } } } } } } }","title":"Parallel"},{"location":"CICD/Jenkins/jenkins-pipeline-syntax/#matrix","text":"Stages in Declarative Pipeline may have a matrix section defining a multi-dimensional matrix of name-value combinations to be run in parallel. We\u2019ll refer these combinations as \"cells\" in a matrix. Each cell in a matrix can include one or more stages to be run sequentially using the configuration for that cell. Note that a stage must have one and only one of steps , stages , parallel , or matrix . It is not possible to nest a parallel or matrix block within a stage directive if that stage directive is nested within a parallel or matrix block itself. However, a stage directive within a parallel or matrix block can use all other functionality of a stage , including agent , tools , when , etc. In addition, you can force your matrix cells to all be aborted when any one of them fails, by adding failFast true to the stage containing the matrix . Another option for adding failfast is adding an option to the pipeline definition: parallelsAlwaysFailFast() The matrix section must include an axes section and a stages section. The axes section defines the values for each axis in the matrix. The stages section defines a list of stage s to run sequentially in each cell. A matrix may have an excludes section to remove invalid cells from the matrix. Many of the directives available on stage , including agent , tools , when , etc., can also be added to matrix to control the behavior of each cell.","title":"Matrix"},{"location":"CICD/Jenkins/jenkins-pipeline-syntax/#axes","text":"The axes section specifies one or more axis directives. Each axis consists of a name and a list of values . All the values from each axis are combined with the others to produce the cells. Example 27. One-axis with 3 cells 1 2 3 4 5 6 7 8 9 matrix { axes { axis { name 'PLATFORM' values 'linux' , 'mac' , 'windows' } } // ... } Example 28. Two-axis with 12 cells (three by four) 1 2 3 4 5 6 7 8 9 10 11 12 13 matrix { axes { axis { name 'PLATFORM' values 'linux' , 'mac' , 'windows' } axis { name 'BROWSER' values 'chrome' , 'edge' , 'firefox' , 'safari' } } // ... } Example 29. Three-axis matrix with 24 cells (three by four by two) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 matrix { axes { axis { name 'PLATFORM' values 'linux' , 'mac' , 'windows' } axis { name 'BROWSER' values 'chrome' , 'edge' , 'firefox' , 'safari' } axis { name 'ARCHITECTURE' values '32-bit' , '64-bit' } } // ... }","title":"axes"},{"location":"CICD/Jenkins/jenkins-pipeline-syntax/#stages_1","text":"The stages section specifies one or more stage s to be executed sequentially in each cell. This section is identical to any other stages section . Example 30. One-axis with 3 cells, each cell runs three stages - \"build\", \"test\", and \"deploy\" 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 matrix { axes { axis { name 'PLATFORM' values 'linux' , 'mac' , 'windows' } } stages { stage ( 'build' ) { // ... } stage ( 'test' ) { // ... } stage ( 'deploy' ) { // ... } } } Example 31. Two-axis with 12 cells (three by four) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 matrix { axes { axis { name 'PLATFORM' values 'linux' , 'mac' , 'windows' } axis { name 'BROWSER' values 'chrome' , 'edge' , 'firefox' , 'safari' } } stages { stage ( 'build-and-test' ) { // ... } } }","title":"stages"},{"location":"CICD/Jenkins/jenkins-pipeline-syntax/#excludes-optional","text":"The optional excludes section lets authors specify one or more exclude filter expressions that select cells to be excluded from the expanded set of matrix cells (aka, sparsening). Filters are constructed using a basic directive structure of one or more of exclude axis directives each with a name and values list. The axis directives inside an exclude generate a set of combinations (similar to generating the matrix cells). The matrix cells that match all the values from an exclude combination are removed from the matrix. If more than one exclude directive is supplied, each is evaluated separately to remove cells. When dealing with a long list of values to exclude, exclude axis directives can use notValues instead of values . These will exclude cells that do not match one of the values passed to notValues . Example 32. Three-axis matrix with 24 cells, exclude '32-bit, mac' (4 cells excluded) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 matrix { axes { axis { name 'PLATFORM' values 'linux' , 'mac' , 'windows' } axis { name 'BROWSER' values 'chrome' , 'edge' , 'firefox' , 'safari' } axis { name 'ARCHITECTURE' values '32-bit' , '64-bit' } } excludes { exclude { axis { name 'PLATFORM' values 'mac' } axis { name 'ARCHITECTURE' values '32-bit' } } } // ... } Exclude the linux, safari combination and exclude any platform that is not windows with the edge browser. Example 33. Three-axis matrix with 24 cells, exclude '32-bit, mac' and invalid browser combinations (9 cells excluded) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 matrix { axes { axis { name 'PLATFORM' values 'linux' , 'mac' , 'windows' } axis { name 'BROWSER' values 'chrome' , 'edge' , 'firefox' , 'safari' } axis { name 'ARCHITECTURE' values '32-bit' , '64-bit' } } excludes { exclude { // 4 cells axis { name 'PLATFORM' values 'mac' } axis { name 'ARCHITECTURE' values '32-bit' } } exclude { // 2 cells axis { name 'PLATFORM' values 'linux' } axis { name 'BROWSER' values 'safari' } } exclude { // 3 more cells and '32-bit, mac' (already excluded) axis { name 'PLATFORM' notValues 'windows' } axis { name 'BROWSER' values 'edge' } } } // ... }","title":"excludes (optional)"},{"location":"CICD/Jenkins/jenkins-pipeline-syntax/#matrix-cell-level-directives-optional","text":"Matrix lets users efficiently configure the overall environment for each cell, by adding stage-level directives under matrix itself. These directives behave the same as they would on a stage but they can also accept values provided by the matrix for each cell. The axis and exclude directives define the static set of cells that make up the matrix. That set of combinations is generated before the start of the pipeline run. The \"per-cell\" directives, on the other hand, are evaluated at runtime. These directives include: agent environment input options post tools when Example 34. Complete Matrix Example, Declarative Pipeline 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 pipeline { parameters { choice ( name: 'PLATFORM_FILTER' , choices: [ 'all' , 'linux' , 'windows' , 'mac' ], description: 'Run on specific platform' ) } agent none stages { stage ( 'BuildAndTest' ) { matrix { agent { label \"${PLATFORM}-agent\" } when { anyOf { expression { params . PLATFORM_FILTER == 'all' } expression { params . PLATFORM_FILTER == env . PLATFORM } } } axes { axis { name 'PLATFORM' values 'linux' , 'windows' , 'mac' } axis { name 'BROWSER' values 'firefox' , 'chrome' , 'safari' , 'edge' } } excludes { exclude { axis { name 'PLATFORM' values 'linux' } axis { name 'BROWSER' values 'safari' } } exclude { axis { name 'PLATFORM' notValues 'windows' } axis { name 'BROWSER' values 'edge' } } } stages { stage ( 'Build' ) { steps { echo \"Do Build for ${PLATFORM} - ${BROWSER}\" } } stage ( 'Test' ) { steps { echo \"Do Test for ${PLATFORM} - ${BROWSER}\" } } } } } } }","title":"Matrix cell-level directives (optional)"},{"location":"CICD/Jenkins/jenkins-pipeline-syntax/#steps_1","text":"Declarative Pipelines may use all the available steps documented in the Pipeline Steps reference , which contains a comprehensive list of steps, with the addition of the steps listed below which are only supported in Declarative Pipeline.","title":"Steps"},{"location":"CICD/Jenkins/jenkins-pipeline-syntax/#script","text":"The script step takes a block of Scripted Pipeline and executes that in the Declarative Pipeline. For most use-cases, the script step should be unnecessary in Declarative Pipelines, but it can provide a useful \"escape hatch.\" script blocks of non-trivial size and/or complexity should be moved into Shared Libraries instead. Example 35. Script Block in Declarative Pipeline 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 pipeline { agent any stages { stage ( 'Example' ) { steps { echo 'Hello World' script { def browsers = [ 'chrome' , 'firefox' ] for ( int i = 0 ; i < browsers . size (); ++ i ) { echo \"Testing the ${browsers[i]} browser\" } } } } } }","title":"script"},{"location":"CICD/Jenkins/jenkinsfile/","text":"Using a Jenkinsfile \u00b6 This section builds on the information covered in Getting started with Pipeline and introduces more useful steps, common patterns, and demonstrates some non-trivial Jenkinsfile examples. Creating a Jenkinsfile , which is checked into source control [ 1 ], provides a number of immediate benefits: Code review/iteration on the Pipeline Audit trail for the Pipeline Single source of truth [ 2 ] for the Pipeline, which can be viewed and edited by multiple members of the project. Pipeline supports two syntaxes , Declarative (introduced in Pipeline 2.5) and Scripted Pipeline. Both of which support building continuous delivery pipelines. Both may be used to define a Pipeline in either the web UI or with a Jenkinsfile , though it\u2019s generally considered a best practice to create a Jenkinsfile and check the file into the source control repository. Creating a Jenkinsfile \u00b6 As discussed in the Defining a Pipeline in SCM , a Jenkinsfile is a text file that contains the definition of a Jenkins Pipeline and is checked into source control. Consider the following Pipeline which implements a basic three-stage continuous delivery pipeline. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 // Jenkinsfile (Declarative Pipeline) pipeline { agent any stages { stage ( 'Build' ) { steps { echo 'Building..' } } stage ( 'Test' ) { steps { echo 'Testing..' } } stage ( 'Deploy' ) { steps { echo 'Deploying....' } } } } Toggle Scripted Pipeline (Advanced) Not all Pipelines will have these same three stages, but it is a good starting point to define them for most projects. The sections below will demonstrate the creation and execution of a simple Pipeline in a test installation of Jenkins. It is assumed that there is already a source control repository set up for the project and a Pipeline has been defined in Jenkins following these instructions . Using a text editor, ideally one which supports Groovy syntax highlighting, create a new Jenkinsfile in the root directory of the project. The Declarative Pipeline example above contains the minimum necessary structure to implement a continuous delivery pipeline. The agent directive , which is required, instructs Jenkins to allocate an executor and workspace for the Pipeline. Without an agent directive, not only is the Declarative Pipeline not valid, it would not be capable of doing any work! By default the agent directive ensures that the source repository is checked out and made available for steps in the subsequent stages` The stages directive , and steps directives are also required for a valid Declarative Pipeline as they instruct Jenkins what to execute and in which stage it should be executed. For more advanced usage with Scripted Pipeline, the example above node is a crucial first step as it allocates an executor and workspace for the Pipeline. In essence, without node , a Pipeline cannot do any work! From within node , the first order of business will be to checkout the source code for this project. Since the Jenkinsfile is being pulled directly from source control, Pipeline provides a quick and easy way to access the right revision of the source code 1 2 3 4 5 // Jenkinsfile (Declarative Pipeline) node { checkout scm // \u2460 /* .. snip .. */ } \u2460 The checkout step will checkout code from source control; scm is a special variable which instructs the checkout step to clone the specific revision which triggered this Pipeline run. Build \u00b6 For many projects the beginning of \"work\" in the Pipeline would be the \"build\" stage. Typically this stage of the Pipeline will be where source code is assembled, compiled, or packaged. The Jenkinsfile is not a replacement for an existing build tool such as GNU/Make, Maven, Gradle, etc, but rather can be viewed as a glue layer to bind the multiple phases of a project\u2019s development lifecycle (build, test, deploy, etc) together. Jenkins has a number of plugins for invoking practically any build tool in general use, but this example will simply invoke make from a shell step ( sh ). The sh step assumes the system is Unix/Linux-based, for Windows-based systems the bat could be used instead. 1 2 3 4 5 6 7 8 9 10 11 12 13 // Jenkinsfile (Declarative Pipeline) pipeline { agent any stages { stage ( 'Build' ) { steps { sh 'make' // \u2460 archiveArtifacts artifacts: '**/target/*.jar' , fingerprint: true // \u2461 } } } } Toggle Scripted Pipeline (Advanced) \u2460 The sh step invokes the make command and will only continue if a zero exit code is returned by the command. Any non-zero exit code will fail the Pipeline. \u2461 archiveArtifacts captures the files built matching the include pattern ( **/target/*.jar ) and saves them to the Jenkins controller for later retrieval. \u26a0 Archiving artifacts is not a substitute for using external artifact repositories such as Artifactory or Nexus and should be considered only for basic reporting and file archival. Test \u00b6 Running automated tests is a crucial component of any successful continuous delivery process. As such, Jenkins has a number of test recording, reporting, and visualization facilities provided by a number of plugins . At a fundamental level, when there are test failures, it is useful to have Jenkins record the failures for reporting and visualization in the web UI. The example below uses the junit step, provided by the JUnit plugin . In the example below, if tests fail, the Pipeline is marked \"unstable\", as denoted by a yellow ball in the web UI. Based on the recorded test reports, Jenkins can also provide historical trend analysis and visualization. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 // Jenkinsfile (Declarative Pipeline) pipeline { agent any stages { stage ( 'Test' ) { steps { /* `make check` returns non-zero on test failures, * using `true` to allow the Pipeline to continue nonetheless */ sh 'make check || true' // \u2460 junit '**/target/*.xml' // \u2461 } } } } Toggle Scripted Pipeline (Advanced) \u2460 Using an inline shell conditional ( sh 'make check || true' ) ensures that the sh step always sees a zero exit code, giving the junit step the opportunity to capture and process the test reports. Alternative approaches to this are covered in more detail in the Handling failure section below. \u2461 junit captures and associates the JUnit XML files matching the inclusion pattern ( **/target/*.xml ). Deploy \u00b6 Deployment can imply a variety of steps, depending on the project or organization requirements, and may be anything from publishing built artifacts to an Artifactory server, to pushing code to a production system. At this stage of the example Pipeline, both the \"Build\" and \"Test\" stages have successfully executed. In essence, the \"Deploy\" stage will only execute assuming previous stages completed successfully, otherwise the Pipeline would have exited early. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 // Jenkinsfile (Declarative Pipeline) pipeline { agent any stages { stage ( 'Deploy' ) { when { expression { currentBuild . result == null || currentBuild . result == 'SUCCESS' // \u2460 } } steps { sh 'make publish' } } } } Toggle Scripted Pipeline (Advanced) \u2460 Accessing the currentBuild.result variable allows the Pipeline to determine if there were any test failures. In which case, the value would be UNSTABLE . Assuming everything has executed successfully in the example Jenkins Pipeline, each successful Pipeline run will have associated build artifacts archived, test results reported upon and the full console output all in Jenkins. A Scripted Pipeline can include conditional tests (shown above), loops, try/catch/finally blocks and even functions. The next section will cover this advanced Scripted Pipeline syntax in more detail. Working with your Jenkinsfile \u00b6 The following sections provide details about handling: specific Pipeline syntax in your Jenkinsfile and features and functionality of Pipeline syntax which are essential in building your application or Pipeline project. Using environment variables \u00b6 Jenkins Pipeline exposes environment variables via the global variable env , which is available from anywhere within a Jenkinsfile . The full list of environment variables accessible from within Jenkins Pipeline is documented at ${YOUR_JENKINS_URL}/pipeline-syntax/globals#env and includes: BUILD_ID The current build ID, identical to BUILD_NUMBER for builds created in Jenkins versions 1.597+ BUILD_NUMBER The current build number, such as \"153\" BUILD_TAG String of jenkins-${JOB_NAME}-${BUILD_NUMBER}. Convenient to put into a resource file, a jar file, etc for easier identification BUILD_URL The URL where the results of this build can be found (for example http://buildserver/jenkins/job/MyJobName/17/ ) EXECUTOR_NUMBER The unique number that identifies the current executor (among executors of the same machine) performing this build. This is the number you see in the \"build executor status\", except that the number starts from 0, not 1 JAVA_HOME If your job is configured to use a specific JDK, this variable is set to the JAVA_HOME of the specified JDK. When this variable is set, PATH is also updated to include the bin subdirectory of JAVA_HOME JENKINS_URL Full URL of Jenkins, such as https://example.com:port/jenkins/ (NOTE: only available if Jenkins URL set in \"System Configuration\") JOB_NAME Name of the project of this build, such as \"foo\" or \"foo/bar\". NODE_NAME The name of the node the current build is running on. Set to 'master' for the Jenkins controller. WORKSPACE The absolute path of the workspace Referencing or using these environment variables can be accomplished like accessing any key in a Groovy Map , for example: 1 2 3 4 5 6 7 8 9 10 11 // Jenkinsfile (Declarative Pipeline) pipeline { agent any stages { stage ( 'Example' ) { steps { echo \"Running ${env.BUILD_ID} on ${env.JENKINS_URL}\" } } } } Toggle Scripted Pipeline (Advanced) Setting environment variables \u00b6 Setting an environment variable within a Jenkins Pipeline is accomplished differently depending on whether Declarative or Scripted Pipeline is used. Declarative Pipeline supports an environment directive, whereas users of Scripted Pipeline must use the withEnv step. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 // Jenkinsfile (Declarative Pipeline) pipeline { agent any environment { // \u2460 CC = 'clang' } stages { stage ( 'Example' ) { environment { // \u2461 DEBUG_FLAGS = '-g' } steps { sh 'printenv' } } } } Toggle Scripted Pipeline (Advanced) \u2460 An environment directive used in the top-level pipeline block will apply to all steps within the Pipeline. \u2461 An environment directive defined within a stage will only apply the given environment variables to steps within the stage . Setting environment variables dynamically \u00b6 Environment variables can be set at run time and can be used by shell scripts ( sh ), Windows batch scripts ( bat ) and PowerShell scripts ( powershell ). Each script can either returnStatus or returnStdout . More information on scripts . Below is an example in a declarative pipeline using sh (shell) with both returnStatus and returnStdout . 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 // Jenkinsfile (Declarative Pipeline) pipeline { agent any // \u2460 environment { // Using returnStdout CC = \"\"\"${sh( returnStdout: true, script: 'echo \"clang\"' )}\"\"\" // \u2461 // Using returnStatus EXIT_STATUS = \"\"\"${sh( returnStatus: true, script: 'exit 1' )}\"\"\" } stages { stage ( 'Example' ) { environment { DEBUG_FLAGS = '-g' } steps { sh 'printenv' } } } } \u2460 An agent must be set at the top level of the pipeline. This will fail if agent is set as agent none . \u2461 When using returnStdout a trailing whitespace will be appended to the returned string. Use .trim() to remove this. Handling credentials \u00b6 Credentials configured in Jenkins can be handled in Pipelines for immediate use. Read more about using credentials in Jenkins on the Using credentials page. For secret text, usernames and passwords, and secret files \u00b6 Jenkins' declarative Pipeline syntax has the credentials() helper method (used within the environment directive) which supports secret text , username and password , as well as secret file credentials. If you want to handle other types of credentials, refer to the For other credential types section (below). Secret text \u00b6 The following Pipeline code shows an example of how to create a Pipeline using environment variables for secret text credentials. In this example, two secret text credentials are assigned to separate environment variables to access Amazon Web Services (AWS). These credentials would have been configured in Jenkins with their respective credential IDs jenkins-aws-secret-key-id and jenkins-aws-secret-access-key . 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 // Jenkinsfile (Declarative Pipeline) pipeline { agent { // Define agent details here } environment { AWS_ACCESS_KEY_ID = credentials ( 'jenkins-aws-secret-key-id' ) AWS_SECRET_ACCESS_KEY = credentials ( 'jenkins-aws-secret-access-key' ) } stages { stage ( 'Example stage 1' ) { steps { // \u2460 } } stage ( 'Example stage 2' ) { steps { // \u2461 } } } } \u2460 You can reference the two credential environment variables (defined in this Pipeline\u2019s environment directive), within this stage\u2019s steps using the syntax $AWS_ACCESS_KEY_ID and $AWS_SECRET_ACCESS_KEY . For example, here you can authenticate to AWS using the secret text credentials assigned to these credential variables. To maintain the security and anonymity of these credentials, if the job displays the value of these credential variables from within the Pipeline (e.g. echo $AWS_SECRET_ACCESS_KEY ), Jenkins only returns the value \u201c\u201d to reduce the risk of secret information being disclosed to the console output and any logs. Any sensitive information in credential IDs themselves (such as usernames) are also returned as \u201c\u201d in the Pipeline run\u2019s output. This only reduces the risk of accidental exposure . It does not prevent a malicious user from capturing the credential value by other means. A Pipeline that uses credentials can also disclose those credentials. Don\u2019t allow untrusted Pipeline jobs to use trusted credentials. \u2461 In this Pipeline example, the credentials assigned to the two AWS_\u2026 environment variables are scoped globally for the entire Pipeline, so these credential variables could also be used in this stage\u2019s steps. If, however, the environment directive in this Pipeline were moved to a specific stage (as is the case in the Usernames and passwords Pipeline example below), then these AWS_\u2026 environment variables would only be scoped to the steps in that stage. Usernames and passwords \u00b6 The following Pipeline code snippets show an example of how to create a Pipeline using environment variables for username and password credentials. In this example, username and password credentials are assigned to environment variables to access a Bitbucket repository in a common account or team for your organization; these credentials would have been configured in Jenkins with the credential ID jenkins-bitbucket-common-creds . When setting the credential environment variable in the environment directive: 1 2 3 environment { BITBUCKET_COMMON_CREDS = credentials ( 'jenkins-bitbucket-common-creds' ) } this actually sets the following three environment variables: BITBUCKET_COMMON_CREDS - contains a username and a password separated by a colon in the format username:password . BITBUCKET_COMMON_CREDS_USR - an additional variable containing the username component only. BITBUCKET_COMMON_CREDS_PSW - an additional variable containing the password component only. \u2139 By convention, variable names for environment variables are typically specified in capital case, with individual words separated by underscores. You can, however, specify any legitimate variable name using lower case characters. Bear in mind that the additional environment variables created by the credentials() method (above) will always be appended with _USR and _PSW (i.e. in the format of an underscore followed by three capital letters). The following code snippet shows the example Pipeline in its entirety: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 // Jenkinsfile (Declarative Pipeline) pipeline { agent { // Define agent details here } stages { stage ( 'Example stage 1' ) { environment { BITBUCKET_COMMON_CREDS = credentials ( 'jenkins-bitbucket-common-creds' ) } steps { // \u2460 } } stage ( 'Example stage 2' ) { steps { // \u2461 } } } } \u2460The following credential environment variables (defined in this Pipeline\u2019s environment directive) are available within this stage\u2019s steps and can be referenced using the syntax: $BITBUCKET_COMMON_CREDS``$BITBUCKET_COMMON_CREDS_USR``$BITBUCKET_COMMON_CREDS_PSW For example, here you can authenticate to Bitbucket with the username and password assigned to these credential variables. To maintain the security and anonymity of these credentials, if the job displays the value of these credential variables from within the Pipeline the same behavior described in the Secret text example above applies to these username and password credential variable types too. This only reduces the risk of accidental exposure . It does not prevent a malicious user from capturing the credential value by other means. A Pipeline that uses credentials can also disclose those credentials. Don\u2019t allow untrusted Pipeline jobs to use trusted credentials. \u2461 In this Pipeline example, the credentials assigned to the three COMMON_BITBUCKET_CREDS\u2026 environment variables are scoped only to Example stage 1 , so these credential variables are not available for use in this Example stage 2 stage\u2019s steps. If, however, the environment directive in this Pipeline were moved immediately within the pipeline block (as is the case in the Secret text Pipeline example above), then these COMMON_BITBUCKET_CREDS\u2026 environment variables would be scoped globally and could be used in any stage\u2019s steps. Secret files \u00b6 A secret file is a credential which is stored in a file and uploaded to Jenkins. Secret files are used for credentials that are: too unwieldy to enter directly into Jenkins, and/or in binary format, such as a GPG file. In this example, we use a Kubernetes config file that has been configured as a secret file credential named my-kubeconfig . 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 // Jenkinsfile (Declarative Pipeline) pipeline { agent { // Define agent details here } environment { // The MY_KUBECONFIG environment variable will be assigned // the value of a temporary file. For example: // /home/user/.jenkins/workspace/cred_test@tmp/secretFiles/546a5cf3-9b56-4165-a0fd-19e2afe6b31f/kubeconfig.txt MY_KUBECONFIG = credentials ( 'my-kubeconfig' ) } stages { stage ( 'Example stage 1' ) { steps { sh ( \"kubectl --kubeconfig $MY_KUBECONFIG get pods\" ) } } } } For other credential types \u00b6 If you need to set credentials in a Pipeline for anything other than secret text, usernames and passwords, or secret files ( above ) - i.e SSH keys or certificates, then use Jenkins' Snippet Generator feature, which you can access through Jenkins' classic UI. To access the Snippet Generator for your Pipeline project/item: From the Jenkins home page (i.e. the Dashboard of Jenkins' classic UI), click the name of your Pipeline project/item. On the left, click Pipeline Syntax and ensure that the Snippet Generator link is in bold at the top-left. (If not, click its link.) From the Sample Step field, choose withCredentials: Bind credentials to variables . Under Bindings , click Add and choose from the dropdown: SSH User Private Key - to handle SSH public/private key pair credentials , from which you can specify: Key File Variable - the name of the environment variable that will be bound to these credentials. Jenkins actually assigns this temporary variable to the secure location of the private key file required in the SSH public/private key pair authentication process. Passphrase Variable ( Optional ) - the name of the environment variable that will be bound to the passphrase associated with the SSH public/private key pair. Username Variable ( Optional ) - the name of the environment variable that will be bound to username associated with the SSH public/private key pair. Credentials - choose the SSH public/private key credentials stored in Jenkins. The value of this field is the credential ID, which Jenkins writes out to the generated snippet. Certificate - to handle PKCS#12 certificates , from which you can specify: Keystore Variable - the name of the environment variable that will be bound to these credentials. Jenkins actually assigns this temporary variable to the secure location of the certificate\u2019s keystore required in the certificate authentication process. Password Variable ( Optional ) - the name of the environment variable that will be bound to the password associated with the certificate. Alias Variable ( Optional ) - the name of the environment variable that will be bound to the unique alias associated with the certificate. Credentials - choose the certificate credentials stored in Jenkins. The value of this field is the credential ID, which Jenkins writes out to the generated snippet. Docker client certificate - to handle Docker Host Certificate Authentication. Click Generate Pipeline Script and Jenkins generates a withCredentials( \u2026 ) { \u2026 } Pipeline step snippet for the credentials you specified, which you can then copy and paste into your Declarative or Scripted Pipeline code. Notes: The Credentials fields (above) show the names of credentials configured in Jenkins. However, these values are converted to credential IDs after clicking Generate Pipeline Script . To combine more than one credential in a single withCredentials( \u2026 ) { \u2026 } Pipeline step, see Combining credentials in one step (below) for details. SSH User Private Key example 1 2 3 4 5 6 withCredentials ( bindings: [ sshUserPrivateKey ( credentialsId: 'jenkins-ssh-key-for-abc' , \\ keyFileVariable: 'SSH_KEY_FOR_ABC' , \\ passphraseVariable: '' , \\ usernameVariable: '' )]) { // some block } The optional passphraseVariable and usernameVariable definitions can be deleted in your final Pipeline code. Certificate example 1 2 3 4 5 6 withCredentials ( bindings: [ certificate ( aliasVariable: '' , \\ credentialsId: 'jenkins-certificate-for-xyz' , \\ keystoreVariable: 'CERTIFICATE_FOR_XYZ' , \\ passwordVariable: 'XYZ-CERTIFICATE-PASSWORD' )]) { // some block } The optional aliasVariable and passwordVariable variable definitions can be deleted in your final Pipeline code. The following code snippet shows an example Pipeline in its entirety, which implements the SSH User Private Key and Certificate snippets above: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 // Jenkinsfile (Declarative Pipeline) pipeline { agent { // define agent details } stages { stage ( 'Example stage 1' ) { steps { withCredentials ( bindings: [ sshUserPrivateKey ( credentialsId: 'jenkins-ssh-key-for-abc' , \\ keyFileVariable: 'SSH_KEY_FOR_ABC' )]) { // \u2460 } withCredentials ( bindings: [ certificate ( credentialsId: 'jenkins-certificate-for-xyz' , \\ keystoreVariable: 'CERTIFICATE_FOR_XYZ' , \\ passwordVariable: 'XYZ-CERTIFICATE-PASSWORD' )]) { // \u2461 } } } stage ( 'Example stage 2' ) { steps { // \u2462 } } } } \u2460 Within this step, you can reference the credential environment variable with the syntax $SSH_KEY_FOR_ABC . For example, here you can authenticate to the ABC application with its configured SSH public/private key pair credentials, whose SSH User Private Key file is assigned to $SSH_KEY_FOR_ABC . \u2461 Within this step, you can reference the credential environment variable with the syntax $CERTIFICATE_FOR_XYZ and $XYZ-CERTIFICATE-PASSWORD . For example, here you can authenticate to the XYZ application with its configured certificate credentials, whose Certificate 's keystore file and password are assigned to the variables $CERTIFICATE_FOR_XYZ and $XYZ-CERTIFICATE-PASSWORD , respectively. \u2462 In this Pipeline example, the credentials assigned to the $SSH_KEY_FOR_ABC , $CERTIFICATE_FOR_XYZ and $XYZ-CERTIFICATE-PASSWORD environment variables are scoped only within their respective withCredentials( \u2026 ) { \u2026 } steps, so these credential variables are not available for use in this Example stage 2 stage\u2019s steps. To maintain the security and anonymity of these credentials, if you attempt to retrieve the value of these credential variables from within these withCredentials( \u2026 ) { \u2026 } steps, the same behavior described in the Secret text example (above) applies to these SSH public/private key pair credential and certificate variable types too. This only reduces the risk of accidental exposure . It does not prevent a malicious user from capturing the credential value by other means. A Pipeline that uses credentials can also disclose those credentials. Don\u2019t allow untrusted Pipeline jobs to use trusted credentials. When using the Sample Step field\u2019s withCredentials: Bind credentials to variables option in the Snippet Generator , only credentials which your current Pipeline project/item has access to can be selected from any Credentials field\u2019s list. While you can manually write a withCredentials( \u2026 ) { \u2026 } step for your Pipeline (like the examples above ), using the Snippet Generator is recommended to avoid specifying credentials that are out of scope for this Pipeline project/item, which when run, will make the step fail. You can also use the Snippet Generator to generate withCredentials( \u2026 ) { \u2026 } steps to handle secret text, usernames and passwords and secret files. However, if you only need to handle these types of credentials, it is recommended you use the relevant procedure described in the section above for improved Pipeline code readability. The use of single-quotes instead of double-quotes to define the script (the implicit parameter to sh ) in Groovy above. The single-quotes will cause the secret to be expanded by the shell as an environment variable. The double-quotes are potentially less secure as the secret is interpolated by Groovy, and so typical operating system process listings will accidentally disclose it : groovy node { withCredentials([string(credentialsId: 'mytoken', variable: 'TOKEN')]) { sh /* WRONG! */ \"\"\" set +x curl -H 'Token: $TOKEN' https://some.api/ \"\"\" sh /* CORRECT */ ''' set +x curl -H 'Token: $TOKEN' https://some.api/ ''' } } Combining credentials in one step \u00b6 Using the Snippet Generator , you can make multiple credentials available within a single withCredentials( \u2026 ) { \u2026 } step by doing the following: From the Jenkins home page (i.e. the Dashboard of Jenkins' classic UI), click the name of your Pipeline project/item. On the left, click Pipeline Syntax and ensure that the Snippet Generator link is in bold at the top-left. (If not, click its link.) From the Sample Step field, choose withCredentials: Bind credentials to variables . Click Add under Bindings . Choose the credential type to add to the withCredentials( \u2026 ) { \u2026 } step from the dropdown list. Specify the credential Bindings details. Read more above these in the procedure under For other credential types (above). Repeat from \"Click Add \u2026\" (above) for each (set of) credential/s to add to the withCredentials( \u2026 ) { \u2026 } step. Click Generate Pipeline Script to generate the final withCredentials( \u2026 ) { \u2026 } step snippet. String interpolation \u00b6 Jenkins Pipeline uses rules identical to Groovy for string interpolation. Groovy\u2019s String interpolation support can be confusing to many newcomers to the language. While Groovy supports declaring a string with either single quotes, or double quotes, for example: 1 2 def singlyQuoted = 'Hello' def doublyQuoted = \"World\" Only the latter string will support the dollar-sign ( $ ) based string interpolation, for example: 1 2 3 def username = 'Jenkins' echo 'Hello Mr. ${username}' echo \"I said, Hello Mr. ${username}\" Would result in: 1 2 Hello Mr . $ { username } I said , Hello Mr . Jenkins Understanding how to use string interpolation is vital for using some of Pipeline\u2019s more advanced features. Interpolation of sensitive environment variables \u00b6 \u26a0 Groovy string interpolation should never be used with credentials Groovy string interpolation can leak sensitive environment variables (i.e. credentials, see: Handling credentials ). This is because the sensitive environment variable will be interpolated during Groovy evaluation, and the environment variable\u2019s value could be made available earlier than intended, resulting in sensitive data leaking in various contexts. For example, consider a sensitive environment variable passed to the sh step. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 // Jenkinsfile (Declarative Pipeline) pipeline { agent any environment { EXAMPLE_CREDS = credentials ( 'example-credentials-id' ) } stages { stage ( 'Example' ) { steps { /* WRONG! */ sh ( \"curl -u ${EXAMPLE_CREDS_USR}:${EXAMPLE_CREDS_PSW} https://example.com/\" ) } } } } Should Groovy perform the interpolation, the sensitive value will be injected directly into the arguments of the sh step, which among other issues, means that the literal value will be visible as an argument to the sh process on the agent in OS process listings. Using single-quotes instead of double-quotes when referencing these sensitive environment variables prevents this type of leaking. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 // Jenkinsfile (Declarative Pipeline) pipeline { agent any environment { EXAMPLE_CREDS = credentials ( 'example-credentials-id' ) } stages { stage ( 'Example' ) { steps { /* CORRECT */ sh ( 'curl -u $EXAMPLE_CREDS_USR:$EXAMPLE_CREDS_PSW https://example.com/' ) } } } } Injection via interpolation \u00b6 \u26a0 Groovy string interpolation can inject rogue commands into command interpreters via special characters. Another note of caution. Using Groovy string interpolation for user-controlled variables with steps that pass their arguments to command interpreters such as the sh , bat , powershell , or pwsh steps can result in problems analogous to SQL injection. This occurs when a user-controlled variable (generally an environment variable, usually a parameter passed to the build) that contains special characters (e.g. / \\ $ & % ^ > < | ; ) is passed to the sh , bat , powershell , or pwsh steps using Groovy interpolation. For a simple example: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 // Jenkinsfile (Declarative Pipeline) pipeline { agent any parameters { string ( name: 'STATEMENT' , defaultValue: 'hello; ls /' , description: 'What should I say?' ) } stages { stage ( 'Example' ) { steps { /* WRONG! */ sh ( \"echo ${STATEMENT}\" ) } } } } In this example, the argument to the sh step is evaluated by Groovy, and STATEMENT is interpolated directly into the argument as if sh('echo hello; ls /') has been written in the Pipeline. When this is processed on the agent, rather than echoing the value hello; ls / , it will echo hello then proceed to list the entire root directory of the agent. Any user able to control a variable interpolated by such a step would be able to make the sh step run arbitrary code on the agent. To avoid this problem, make sure arguments to steps such as sh or bat that reference parameters or other user-controlled environment variables use single quotes to avoid Groovy interpolation. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 // Jenkinsfile (Declarative Pipeline) pipeline { agent any parameters { string ( name: 'STATEMENT' , defaultValue: 'hello; ls /' , description: 'What should I say?' ) } stages { stage ( 'Example' ) { steps { /* CORRECT */ sh ( 'echo ${STATEMENT}' ) } } } } Credential mangling is another issue that can occur when credentials that contain special characters are passed to a step using Groovy interpolation. When the credential value is mangled, it is no longer valid and will no longer be masked in the console log. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 // Jenkinsfile (Declarative Pipeline) pipeline { agent any environment { EXAMPLE_KEY = credentials ( 'example-credentials-id' ) // Secret value is 'sec%ret' } stages { stage ( 'Example' ) { steps { /* WRONG! */ bat \"echo ${EXAMPLE_KEY}\" } } } } Here, the bat step receives echo sec%ret and the Windows batch shell will simply drop the % and print out the value secret . Because there is a single character difference, the value secret will not be masked. Though the value is not the same as the actual credential, this is still a significant exposure of sensitive information. Again, single-quotes avoids this issue. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 // Jenkinsfile (Declarative Pipeline) pipeline { agent any environment { EXAMPLE_KEY = credentials ( 'example-credentials-id' ) // Secret value is 'sec%ret' } stages { stage ( 'Example' ) { steps { /* CORRECT */ bat 'echo %SECRET_VALUE%' } } } } Handling parameters \u00b6 Declarative Pipeline supports parameters out-of-the-box, allowing the Pipeline to accept user-specified parameters at runtime via the parameters directive . Configuring parameters with Scripted Pipeline is done with the properties step, which can be found in the Snippet Generator. If you configured your pipeline to accept parameters using the Build with Parameters option, those parameters are accessible as members of the params variable. Assuming that a String parameter named \"Greeting\" has been configuring in the Jenkinsfile , it can access that parameter via ${params.Greeting} : 1 2 3 4 5 6 7 8 9 10 11 12 13 14 // Jenkinsfile (Declarative Pipeline) pipeline { agent any parameters { string ( name: 'Greeting' , defaultValue: 'Hello' , description: 'How should I greet the world?' ) } stages { stage ( 'Example' ) { steps { echo \"${params.Greeting} World!\" } } } } Toggle Scripted Pipeline (Advanced) Handling failure \u00b6 Declarative Pipeline supports robust failure handling by default via its post section which allows declaring a number of different \"post conditions\" such as: always , unstable , success , failure , and changed . The Pipeline Syntax section provides more detail on how to use the various post conditions. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 // Jenkinsfile (Declarative Pipeline) pipeline { agent any stages { stage ( 'Test' ) { steps { sh 'make check' } } } post { always { junit '**/target/*.xml' } failure { mail to: team @example.com , subject: 'The Pipeline failed :(' } } } Toggle Scripted Pipeline (Advanced) Scripted Pipeline however relies on Groovy\u2019s built-in try / catch / finally semantics for handling failures during execution of the Pipeline. In the Test example above, the sh step was modified to never return a non-zero exit code ( sh 'make check || true' ). This approach, while valid, means the following stages need to check currentBuild.result to know if there has been a test failure or not. An alternative way of handling this, which preserves the early-exit behavior of failures in Pipeline, while still giving junit the chance to capture test reports, is to use a series of try / finally blocks: Using multiple agents \u00b6 In all the previous examples, only a single agent has been used. This means Jenkins will allocate an executor wherever one is available, regardless of how it is labeled or configured. Not only can this behavior be overridden, but Pipeline allows utilizing multiple agents in the Jenkins environment from within the same Jenkinsfile , which can helpful for more advanced use-cases such as executing builds/tests across multiple platforms. In the example below, the \"Build\" stage will be performed on one agent and the built results will be reused on two subsequent agents, labelled \"linux\" and \"windows\" respectively, during the \"Test\" stage. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 // Jenkinsfile (Declarative Pipeline) pipeline { agent none stages { stage ( 'Build' ) { agent any steps { checkout scm sh 'make' stash includes: '**/target/*.jar' , name: 'app' // \u2460 } } stage ( 'Test on Linux' ) { agent { // \u2461 label 'linux' } steps { unstash 'app' // \u2462 sh 'make check' } post { always { junit '**/target/*.xml' } } } stage ( 'Test on Windows' ) { agent { label 'windows' } steps { unstash 'app' bat 'make check' // \u2463 } post { always { junit '**/target/*.xml' } } } } } Toggle Scripted Pipeline (Advanced) \u2460 stash step allows capturing files matching an inclusion pattern ( **/target/*.jar ) for reuse within the same Pipeline. Once the Pipeline has completed its execution, stashed files are deleted from the Jenkins controller. \u2461 parameter in agent / node allows for any valid Jenkins label expression. Consult the Pipeline Syntax section for more details. \u2462 unstash will retrieve the named \"stash\" from the Jenkins controller into the Pipeline\u2019s current workspace. \u2463 The bat script allows for executing batch scripts on Windows-based platforms. Optional step arguments \u00b6 Pipeline follows the Groovy language convention of allowing parentheses to be omitted around method arguments. Many Pipeline steps also use the named-parameter syntax as a shorthand for creating a Map in Groovy, which uses the syntax [key1: value1, key2: value2] . Making statements like the following functionally equivalent: 1 2 git url: 'git://example.com/amazing-project.git' , branch: 'master' git ([ url: 'git://example.com/amazing-project.git' , branch: 'master' ]) For convenience, when calling steps taking only one parameter (or only one mandatory parameter), the parameter name may be omitted, for example: 1 2 sh 'echo hello' /* short form */ sh ([ script: 'echo hello' ]) /* long form */ Advanced Scripted Pipeline \u00b6 Scripted Pipeline is a domain-specific language [ 3 ] based on Groovy, most Groovy syntax can be used in Scripted Pipeline without modification. Parallel execution \u00b6 The example in the section above runs tests across two different platforms in a linear series. In practice, if the make check execution takes 30 minutes to complete, the \"Test\" stage would now take 60 minutes to complete! Fortunately, Pipeline has built-in functionality for executing portions of Scripted Pipeline in parallel, implemented in the aptly named parallel step. Refactoring the example above to use the parallel step: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 // Jenkinsfile (Scripted Pipeline) stage ( 'Build' ) { /* .. snip .. */ } stage ( 'Test' ) { parallel linux: { node ( 'linux' ) { checkout scm try { unstash 'app' sh 'make check' } finally { junit '**/target/*.xml' } } }, windows: { node ( 'windows' ) { /* .. snip .. */ } } } Instead of executing the tests on the \"linux\" and \"windows\" labelled nodes in series, they will now execute in parallel assuming the requisite capacity exists in the Jenkins environment.","title":"jenkinsfile"},{"location":"CICD/Jenkins/jenkinsfile/#using-a-jenkinsfile","text":"This section builds on the information covered in Getting started with Pipeline and introduces more useful steps, common patterns, and demonstrates some non-trivial Jenkinsfile examples. Creating a Jenkinsfile , which is checked into source control [ 1 ], provides a number of immediate benefits: Code review/iteration on the Pipeline Audit trail for the Pipeline Single source of truth [ 2 ] for the Pipeline, which can be viewed and edited by multiple members of the project. Pipeline supports two syntaxes , Declarative (introduced in Pipeline 2.5) and Scripted Pipeline. Both of which support building continuous delivery pipelines. Both may be used to define a Pipeline in either the web UI or with a Jenkinsfile , though it\u2019s generally considered a best practice to create a Jenkinsfile and check the file into the source control repository.","title":"Using a Jenkinsfile"},{"location":"CICD/Jenkins/jenkinsfile/#creating-a-jenkinsfile","text":"As discussed in the Defining a Pipeline in SCM , a Jenkinsfile is a text file that contains the definition of a Jenkins Pipeline and is checked into source control. Consider the following Pipeline which implements a basic three-stage continuous delivery pipeline. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 // Jenkinsfile (Declarative Pipeline) pipeline { agent any stages { stage ( 'Build' ) { steps { echo 'Building..' } } stage ( 'Test' ) { steps { echo 'Testing..' } } stage ( 'Deploy' ) { steps { echo 'Deploying....' } } } } Toggle Scripted Pipeline (Advanced) Not all Pipelines will have these same three stages, but it is a good starting point to define them for most projects. The sections below will demonstrate the creation and execution of a simple Pipeline in a test installation of Jenkins. It is assumed that there is already a source control repository set up for the project and a Pipeline has been defined in Jenkins following these instructions . Using a text editor, ideally one which supports Groovy syntax highlighting, create a new Jenkinsfile in the root directory of the project. The Declarative Pipeline example above contains the minimum necessary structure to implement a continuous delivery pipeline. The agent directive , which is required, instructs Jenkins to allocate an executor and workspace for the Pipeline. Without an agent directive, not only is the Declarative Pipeline not valid, it would not be capable of doing any work! By default the agent directive ensures that the source repository is checked out and made available for steps in the subsequent stages` The stages directive , and steps directives are also required for a valid Declarative Pipeline as they instruct Jenkins what to execute and in which stage it should be executed. For more advanced usage with Scripted Pipeline, the example above node is a crucial first step as it allocates an executor and workspace for the Pipeline. In essence, without node , a Pipeline cannot do any work! From within node , the first order of business will be to checkout the source code for this project. Since the Jenkinsfile is being pulled directly from source control, Pipeline provides a quick and easy way to access the right revision of the source code 1 2 3 4 5 // Jenkinsfile (Declarative Pipeline) node { checkout scm // \u2460 /* .. snip .. */ } \u2460 The checkout step will checkout code from source control; scm is a special variable which instructs the checkout step to clone the specific revision which triggered this Pipeline run.","title":"Creating a Jenkinsfile"},{"location":"CICD/Jenkins/jenkinsfile/#build","text":"For many projects the beginning of \"work\" in the Pipeline would be the \"build\" stage. Typically this stage of the Pipeline will be where source code is assembled, compiled, or packaged. The Jenkinsfile is not a replacement for an existing build tool such as GNU/Make, Maven, Gradle, etc, but rather can be viewed as a glue layer to bind the multiple phases of a project\u2019s development lifecycle (build, test, deploy, etc) together. Jenkins has a number of plugins for invoking practically any build tool in general use, but this example will simply invoke make from a shell step ( sh ). The sh step assumes the system is Unix/Linux-based, for Windows-based systems the bat could be used instead. 1 2 3 4 5 6 7 8 9 10 11 12 13 // Jenkinsfile (Declarative Pipeline) pipeline { agent any stages { stage ( 'Build' ) { steps { sh 'make' // \u2460 archiveArtifacts artifacts: '**/target/*.jar' , fingerprint: true // \u2461 } } } } Toggle Scripted Pipeline (Advanced) \u2460 The sh step invokes the make command and will only continue if a zero exit code is returned by the command. Any non-zero exit code will fail the Pipeline. \u2461 archiveArtifacts captures the files built matching the include pattern ( **/target/*.jar ) and saves them to the Jenkins controller for later retrieval. \u26a0 Archiving artifacts is not a substitute for using external artifact repositories such as Artifactory or Nexus and should be considered only for basic reporting and file archival.","title":"Build"},{"location":"CICD/Jenkins/jenkinsfile/#test","text":"Running automated tests is a crucial component of any successful continuous delivery process. As such, Jenkins has a number of test recording, reporting, and visualization facilities provided by a number of plugins . At a fundamental level, when there are test failures, it is useful to have Jenkins record the failures for reporting and visualization in the web UI. The example below uses the junit step, provided by the JUnit plugin . In the example below, if tests fail, the Pipeline is marked \"unstable\", as denoted by a yellow ball in the web UI. Based on the recorded test reports, Jenkins can also provide historical trend analysis and visualization. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 // Jenkinsfile (Declarative Pipeline) pipeline { agent any stages { stage ( 'Test' ) { steps { /* `make check` returns non-zero on test failures, * using `true` to allow the Pipeline to continue nonetheless */ sh 'make check || true' // \u2460 junit '**/target/*.xml' // \u2461 } } } } Toggle Scripted Pipeline (Advanced) \u2460 Using an inline shell conditional ( sh 'make check || true' ) ensures that the sh step always sees a zero exit code, giving the junit step the opportunity to capture and process the test reports. Alternative approaches to this are covered in more detail in the Handling failure section below. \u2461 junit captures and associates the JUnit XML files matching the inclusion pattern ( **/target/*.xml ).","title":"Test"},{"location":"CICD/Jenkins/jenkinsfile/#deploy","text":"Deployment can imply a variety of steps, depending on the project or organization requirements, and may be anything from publishing built artifacts to an Artifactory server, to pushing code to a production system. At this stage of the example Pipeline, both the \"Build\" and \"Test\" stages have successfully executed. In essence, the \"Deploy\" stage will only execute assuming previous stages completed successfully, otherwise the Pipeline would have exited early. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 // Jenkinsfile (Declarative Pipeline) pipeline { agent any stages { stage ( 'Deploy' ) { when { expression { currentBuild . result == null || currentBuild . result == 'SUCCESS' // \u2460 } } steps { sh 'make publish' } } } } Toggle Scripted Pipeline (Advanced) \u2460 Accessing the currentBuild.result variable allows the Pipeline to determine if there were any test failures. In which case, the value would be UNSTABLE . Assuming everything has executed successfully in the example Jenkins Pipeline, each successful Pipeline run will have associated build artifacts archived, test results reported upon and the full console output all in Jenkins. A Scripted Pipeline can include conditional tests (shown above), loops, try/catch/finally blocks and even functions. The next section will cover this advanced Scripted Pipeline syntax in more detail.","title":"Deploy"},{"location":"CICD/Jenkins/jenkinsfile/#working-with-your-jenkinsfile","text":"The following sections provide details about handling: specific Pipeline syntax in your Jenkinsfile and features and functionality of Pipeline syntax which are essential in building your application or Pipeline project.","title":"Working with your Jenkinsfile"},{"location":"CICD/Jenkins/jenkinsfile/#using-environment-variables","text":"Jenkins Pipeline exposes environment variables via the global variable env , which is available from anywhere within a Jenkinsfile . The full list of environment variables accessible from within Jenkins Pipeline is documented at ${YOUR_JENKINS_URL}/pipeline-syntax/globals#env and includes: BUILD_ID The current build ID, identical to BUILD_NUMBER for builds created in Jenkins versions 1.597+ BUILD_NUMBER The current build number, such as \"153\" BUILD_TAG String of jenkins-${JOB_NAME}-${BUILD_NUMBER}. Convenient to put into a resource file, a jar file, etc for easier identification BUILD_URL The URL where the results of this build can be found (for example http://buildserver/jenkins/job/MyJobName/17/ ) EXECUTOR_NUMBER The unique number that identifies the current executor (among executors of the same machine) performing this build. This is the number you see in the \"build executor status\", except that the number starts from 0, not 1 JAVA_HOME If your job is configured to use a specific JDK, this variable is set to the JAVA_HOME of the specified JDK. When this variable is set, PATH is also updated to include the bin subdirectory of JAVA_HOME JENKINS_URL Full URL of Jenkins, such as https://example.com:port/jenkins/ (NOTE: only available if Jenkins URL set in \"System Configuration\") JOB_NAME Name of the project of this build, such as \"foo\" or \"foo/bar\". NODE_NAME The name of the node the current build is running on. Set to 'master' for the Jenkins controller. WORKSPACE The absolute path of the workspace Referencing or using these environment variables can be accomplished like accessing any key in a Groovy Map , for example: 1 2 3 4 5 6 7 8 9 10 11 // Jenkinsfile (Declarative Pipeline) pipeline { agent any stages { stage ( 'Example' ) { steps { echo \"Running ${env.BUILD_ID} on ${env.JENKINS_URL}\" } } } } Toggle Scripted Pipeline (Advanced)","title":"Using environment variables"},{"location":"CICD/Jenkins/jenkinsfile/#setting-environment-variables","text":"Setting an environment variable within a Jenkins Pipeline is accomplished differently depending on whether Declarative or Scripted Pipeline is used. Declarative Pipeline supports an environment directive, whereas users of Scripted Pipeline must use the withEnv step. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 // Jenkinsfile (Declarative Pipeline) pipeline { agent any environment { // \u2460 CC = 'clang' } stages { stage ( 'Example' ) { environment { // \u2461 DEBUG_FLAGS = '-g' } steps { sh 'printenv' } } } } Toggle Scripted Pipeline (Advanced) \u2460 An environment directive used in the top-level pipeline block will apply to all steps within the Pipeline. \u2461 An environment directive defined within a stage will only apply the given environment variables to steps within the stage .","title":"Setting environment variables"},{"location":"CICD/Jenkins/jenkinsfile/#setting-environment-variables-dynamically","text":"Environment variables can be set at run time and can be used by shell scripts ( sh ), Windows batch scripts ( bat ) and PowerShell scripts ( powershell ). Each script can either returnStatus or returnStdout . More information on scripts . Below is an example in a declarative pipeline using sh (shell) with both returnStatus and returnStdout . 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 // Jenkinsfile (Declarative Pipeline) pipeline { agent any // \u2460 environment { // Using returnStdout CC = \"\"\"${sh( returnStdout: true, script: 'echo \"clang\"' )}\"\"\" // \u2461 // Using returnStatus EXIT_STATUS = \"\"\"${sh( returnStatus: true, script: 'exit 1' )}\"\"\" } stages { stage ( 'Example' ) { environment { DEBUG_FLAGS = '-g' } steps { sh 'printenv' } } } } \u2460 An agent must be set at the top level of the pipeline. This will fail if agent is set as agent none . \u2461 When using returnStdout a trailing whitespace will be appended to the returned string. Use .trim() to remove this.","title":"Setting environment variables dynamically"},{"location":"CICD/Jenkins/jenkinsfile/#handling-credentials","text":"Credentials configured in Jenkins can be handled in Pipelines for immediate use. Read more about using credentials in Jenkins on the Using credentials page.","title":"Handling credentials"},{"location":"CICD/Jenkins/jenkinsfile/#for-secret-text-usernames-and-passwords-and-secret-files","text":"Jenkins' declarative Pipeline syntax has the credentials() helper method (used within the environment directive) which supports secret text , username and password , as well as secret file credentials. If you want to handle other types of credentials, refer to the For other credential types section (below).","title":"For secret text, usernames and passwords, and secret files"},{"location":"CICD/Jenkins/jenkinsfile/#secret-text","text":"The following Pipeline code shows an example of how to create a Pipeline using environment variables for secret text credentials. In this example, two secret text credentials are assigned to separate environment variables to access Amazon Web Services (AWS). These credentials would have been configured in Jenkins with their respective credential IDs jenkins-aws-secret-key-id and jenkins-aws-secret-access-key . 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 // Jenkinsfile (Declarative Pipeline) pipeline { agent { // Define agent details here } environment { AWS_ACCESS_KEY_ID = credentials ( 'jenkins-aws-secret-key-id' ) AWS_SECRET_ACCESS_KEY = credentials ( 'jenkins-aws-secret-access-key' ) } stages { stage ( 'Example stage 1' ) { steps { // \u2460 } } stage ( 'Example stage 2' ) { steps { // \u2461 } } } } \u2460 You can reference the two credential environment variables (defined in this Pipeline\u2019s environment directive), within this stage\u2019s steps using the syntax $AWS_ACCESS_KEY_ID and $AWS_SECRET_ACCESS_KEY . For example, here you can authenticate to AWS using the secret text credentials assigned to these credential variables. To maintain the security and anonymity of these credentials, if the job displays the value of these credential variables from within the Pipeline (e.g. echo $AWS_SECRET_ACCESS_KEY ), Jenkins only returns the value \u201c\u201d to reduce the risk of secret information being disclosed to the console output and any logs. Any sensitive information in credential IDs themselves (such as usernames) are also returned as \u201c\u201d in the Pipeline run\u2019s output. This only reduces the risk of accidental exposure . It does not prevent a malicious user from capturing the credential value by other means. A Pipeline that uses credentials can also disclose those credentials. Don\u2019t allow untrusted Pipeline jobs to use trusted credentials. \u2461 In this Pipeline example, the credentials assigned to the two AWS_\u2026 environment variables are scoped globally for the entire Pipeline, so these credential variables could also be used in this stage\u2019s steps. If, however, the environment directive in this Pipeline were moved to a specific stage (as is the case in the Usernames and passwords Pipeline example below), then these AWS_\u2026 environment variables would only be scoped to the steps in that stage.","title":"Secret text"},{"location":"CICD/Jenkins/jenkinsfile/#usernames-and-passwords","text":"The following Pipeline code snippets show an example of how to create a Pipeline using environment variables for username and password credentials. In this example, username and password credentials are assigned to environment variables to access a Bitbucket repository in a common account or team for your organization; these credentials would have been configured in Jenkins with the credential ID jenkins-bitbucket-common-creds . When setting the credential environment variable in the environment directive: 1 2 3 environment { BITBUCKET_COMMON_CREDS = credentials ( 'jenkins-bitbucket-common-creds' ) } this actually sets the following three environment variables: BITBUCKET_COMMON_CREDS - contains a username and a password separated by a colon in the format username:password . BITBUCKET_COMMON_CREDS_USR - an additional variable containing the username component only. BITBUCKET_COMMON_CREDS_PSW - an additional variable containing the password component only. \u2139 By convention, variable names for environment variables are typically specified in capital case, with individual words separated by underscores. You can, however, specify any legitimate variable name using lower case characters. Bear in mind that the additional environment variables created by the credentials() method (above) will always be appended with _USR and _PSW (i.e. in the format of an underscore followed by three capital letters). The following code snippet shows the example Pipeline in its entirety: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 // Jenkinsfile (Declarative Pipeline) pipeline { agent { // Define agent details here } stages { stage ( 'Example stage 1' ) { environment { BITBUCKET_COMMON_CREDS = credentials ( 'jenkins-bitbucket-common-creds' ) } steps { // \u2460 } } stage ( 'Example stage 2' ) { steps { // \u2461 } } } } \u2460The following credential environment variables (defined in this Pipeline\u2019s environment directive) are available within this stage\u2019s steps and can be referenced using the syntax: $BITBUCKET_COMMON_CREDS``$BITBUCKET_COMMON_CREDS_USR``$BITBUCKET_COMMON_CREDS_PSW For example, here you can authenticate to Bitbucket with the username and password assigned to these credential variables. To maintain the security and anonymity of these credentials, if the job displays the value of these credential variables from within the Pipeline the same behavior described in the Secret text example above applies to these username and password credential variable types too. This only reduces the risk of accidental exposure . It does not prevent a malicious user from capturing the credential value by other means. A Pipeline that uses credentials can also disclose those credentials. Don\u2019t allow untrusted Pipeline jobs to use trusted credentials. \u2461 In this Pipeline example, the credentials assigned to the three COMMON_BITBUCKET_CREDS\u2026 environment variables are scoped only to Example stage 1 , so these credential variables are not available for use in this Example stage 2 stage\u2019s steps. If, however, the environment directive in this Pipeline were moved immediately within the pipeline block (as is the case in the Secret text Pipeline example above), then these COMMON_BITBUCKET_CREDS\u2026 environment variables would be scoped globally and could be used in any stage\u2019s steps.","title":"Usernames and passwords"},{"location":"CICD/Jenkins/jenkinsfile/#secret-files","text":"A secret file is a credential which is stored in a file and uploaded to Jenkins. Secret files are used for credentials that are: too unwieldy to enter directly into Jenkins, and/or in binary format, such as a GPG file. In this example, we use a Kubernetes config file that has been configured as a secret file credential named my-kubeconfig . 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 // Jenkinsfile (Declarative Pipeline) pipeline { agent { // Define agent details here } environment { // The MY_KUBECONFIG environment variable will be assigned // the value of a temporary file. For example: // /home/user/.jenkins/workspace/cred_test@tmp/secretFiles/546a5cf3-9b56-4165-a0fd-19e2afe6b31f/kubeconfig.txt MY_KUBECONFIG = credentials ( 'my-kubeconfig' ) } stages { stage ( 'Example stage 1' ) { steps { sh ( \"kubectl --kubeconfig $MY_KUBECONFIG get pods\" ) } } } }","title":"Secret files"},{"location":"CICD/Jenkins/jenkinsfile/#for-other-credential-types","text":"If you need to set credentials in a Pipeline for anything other than secret text, usernames and passwords, or secret files ( above ) - i.e SSH keys or certificates, then use Jenkins' Snippet Generator feature, which you can access through Jenkins' classic UI. To access the Snippet Generator for your Pipeline project/item: From the Jenkins home page (i.e. the Dashboard of Jenkins' classic UI), click the name of your Pipeline project/item. On the left, click Pipeline Syntax and ensure that the Snippet Generator link is in bold at the top-left. (If not, click its link.) From the Sample Step field, choose withCredentials: Bind credentials to variables . Under Bindings , click Add and choose from the dropdown: SSH User Private Key - to handle SSH public/private key pair credentials , from which you can specify: Key File Variable - the name of the environment variable that will be bound to these credentials. Jenkins actually assigns this temporary variable to the secure location of the private key file required in the SSH public/private key pair authentication process. Passphrase Variable ( Optional ) - the name of the environment variable that will be bound to the passphrase associated with the SSH public/private key pair. Username Variable ( Optional ) - the name of the environment variable that will be bound to username associated with the SSH public/private key pair. Credentials - choose the SSH public/private key credentials stored in Jenkins. The value of this field is the credential ID, which Jenkins writes out to the generated snippet. Certificate - to handle PKCS#12 certificates , from which you can specify: Keystore Variable - the name of the environment variable that will be bound to these credentials. Jenkins actually assigns this temporary variable to the secure location of the certificate\u2019s keystore required in the certificate authentication process. Password Variable ( Optional ) - the name of the environment variable that will be bound to the password associated with the certificate. Alias Variable ( Optional ) - the name of the environment variable that will be bound to the unique alias associated with the certificate. Credentials - choose the certificate credentials stored in Jenkins. The value of this field is the credential ID, which Jenkins writes out to the generated snippet. Docker client certificate - to handle Docker Host Certificate Authentication. Click Generate Pipeline Script and Jenkins generates a withCredentials( \u2026 ) { \u2026 } Pipeline step snippet for the credentials you specified, which you can then copy and paste into your Declarative or Scripted Pipeline code. Notes: The Credentials fields (above) show the names of credentials configured in Jenkins. However, these values are converted to credential IDs after clicking Generate Pipeline Script . To combine more than one credential in a single withCredentials( \u2026 ) { \u2026 } Pipeline step, see Combining credentials in one step (below) for details. SSH User Private Key example 1 2 3 4 5 6 withCredentials ( bindings: [ sshUserPrivateKey ( credentialsId: 'jenkins-ssh-key-for-abc' , \\ keyFileVariable: 'SSH_KEY_FOR_ABC' , \\ passphraseVariable: '' , \\ usernameVariable: '' )]) { // some block } The optional passphraseVariable and usernameVariable definitions can be deleted in your final Pipeline code. Certificate example 1 2 3 4 5 6 withCredentials ( bindings: [ certificate ( aliasVariable: '' , \\ credentialsId: 'jenkins-certificate-for-xyz' , \\ keystoreVariable: 'CERTIFICATE_FOR_XYZ' , \\ passwordVariable: 'XYZ-CERTIFICATE-PASSWORD' )]) { // some block } The optional aliasVariable and passwordVariable variable definitions can be deleted in your final Pipeline code. The following code snippet shows an example Pipeline in its entirety, which implements the SSH User Private Key and Certificate snippets above: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 // Jenkinsfile (Declarative Pipeline) pipeline { agent { // define agent details } stages { stage ( 'Example stage 1' ) { steps { withCredentials ( bindings: [ sshUserPrivateKey ( credentialsId: 'jenkins-ssh-key-for-abc' , \\ keyFileVariable: 'SSH_KEY_FOR_ABC' )]) { // \u2460 } withCredentials ( bindings: [ certificate ( credentialsId: 'jenkins-certificate-for-xyz' , \\ keystoreVariable: 'CERTIFICATE_FOR_XYZ' , \\ passwordVariable: 'XYZ-CERTIFICATE-PASSWORD' )]) { // \u2461 } } } stage ( 'Example stage 2' ) { steps { // \u2462 } } } } \u2460 Within this step, you can reference the credential environment variable with the syntax $SSH_KEY_FOR_ABC . For example, here you can authenticate to the ABC application with its configured SSH public/private key pair credentials, whose SSH User Private Key file is assigned to $SSH_KEY_FOR_ABC . \u2461 Within this step, you can reference the credential environment variable with the syntax $CERTIFICATE_FOR_XYZ and $XYZ-CERTIFICATE-PASSWORD . For example, here you can authenticate to the XYZ application with its configured certificate credentials, whose Certificate 's keystore file and password are assigned to the variables $CERTIFICATE_FOR_XYZ and $XYZ-CERTIFICATE-PASSWORD , respectively. \u2462 In this Pipeline example, the credentials assigned to the $SSH_KEY_FOR_ABC , $CERTIFICATE_FOR_XYZ and $XYZ-CERTIFICATE-PASSWORD environment variables are scoped only within their respective withCredentials( \u2026 ) { \u2026 } steps, so these credential variables are not available for use in this Example stage 2 stage\u2019s steps. To maintain the security and anonymity of these credentials, if you attempt to retrieve the value of these credential variables from within these withCredentials( \u2026 ) { \u2026 } steps, the same behavior described in the Secret text example (above) applies to these SSH public/private key pair credential and certificate variable types too. This only reduces the risk of accidental exposure . It does not prevent a malicious user from capturing the credential value by other means. A Pipeline that uses credentials can also disclose those credentials. Don\u2019t allow untrusted Pipeline jobs to use trusted credentials. When using the Sample Step field\u2019s withCredentials: Bind credentials to variables option in the Snippet Generator , only credentials which your current Pipeline project/item has access to can be selected from any Credentials field\u2019s list. While you can manually write a withCredentials( \u2026 ) { \u2026 } step for your Pipeline (like the examples above ), using the Snippet Generator is recommended to avoid specifying credentials that are out of scope for this Pipeline project/item, which when run, will make the step fail. You can also use the Snippet Generator to generate withCredentials( \u2026 ) { \u2026 } steps to handle secret text, usernames and passwords and secret files. However, if you only need to handle these types of credentials, it is recommended you use the relevant procedure described in the section above for improved Pipeline code readability. The use of single-quotes instead of double-quotes to define the script (the implicit parameter to sh ) in Groovy above. The single-quotes will cause the secret to be expanded by the shell as an environment variable. The double-quotes are potentially less secure as the secret is interpolated by Groovy, and so typical operating system process listings will accidentally disclose it : groovy node { withCredentials([string(credentialsId: 'mytoken', variable: 'TOKEN')]) { sh /* WRONG! */ \"\"\" set +x curl -H 'Token: $TOKEN' https://some.api/ \"\"\" sh /* CORRECT */ ''' set +x curl -H 'Token: $TOKEN' https://some.api/ ''' } }","title":"For other credential types"},{"location":"CICD/Jenkins/jenkinsfile/#combining-credentials-in-one-step","text":"Using the Snippet Generator , you can make multiple credentials available within a single withCredentials( \u2026 ) { \u2026 } step by doing the following: From the Jenkins home page (i.e. the Dashboard of Jenkins' classic UI), click the name of your Pipeline project/item. On the left, click Pipeline Syntax and ensure that the Snippet Generator link is in bold at the top-left. (If not, click its link.) From the Sample Step field, choose withCredentials: Bind credentials to variables . Click Add under Bindings . Choose the credential type to add to the withCredentials( \u2026 ) { \u2026 } step from the dropdown list. Specify the credential Bindings details. Read more above these in the procedure under For other credential types (above). Repeat from \"Click Add \u2026\" (above) for each (set of) credential/s to add to the withCredentials( \u2026 ) { \u2026 } step. Click Generate Pipeline Script to generate the final withCredentials( \u2026 ) { \u2026 } step snippet.","title":"Combining credentials in one step"},{"location":"CICD/Jenkins/jenkinsfile/#string-interpolation","text":"Jenkins Pipeline uses rules identical to Groovy for string interpolation. Groovy\u2019s String interpolation support can be confusing to many newcomers to the language. While Groovy supports declaring a string with either single quotes, or double quotes, for example: 1 2 def singlyQuoted = 'Hello' def doublyQuoted = \"World\" Only the latter string will support the dollar-sign ( $ ) based string interpolation, for example: 1 2 3 def username = 'Jenkins' echo 'Hello Mr. ${username}' echo \"I said, Hello Mr. ${username}\" Would result in: 1 2 Hello Mr . $ { username } I said , Hello Mr . Jenkins Understanding how to use string interpolation is vital for using some of Pipeline\u2019s more advanced features.","title":"String interpolation"},{"location":"CICD/Jenkins/jenkinsfile/#interpolation-of-sensitive-environment-variables","text":"\u26a0 Groovy string interpolation should never be used with credentials Groovy string interpolation can leak sensitive environment variables (i.e. credentials, see: Handling credentials ). This is because the sensitive environment variable will be interpolated during Groovy evaluation, and the environment variable\u2019s value could be made available earlier than intended, resulting in sensitive data leaking in various contexts. For example, consider a sensitive environment variable passed to the sh step. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 // Jenkinsfile (Declarative Pipeline) pipeline { agent any environment { EXAMPLE_CREDS = credentials ( 'example-credentials-id' ) } stages { stage ( 'Example' ) { steps { /* WRONG! */ sh ( \"curl -u ${EXAMPLE_CREDS_USR}:${EXAMPLE_CREDS_PSW} https://example.com/\" ) } } } } Should Groovy perform the interpolation, the sensitive value will be injected directly into the arguments of the sh step, which among other issues, means that the literal value will be visible as an argument to the sh process on the agent in OS process listings. Using single-quotes instead of double-quotes when referencing these sensitive environment variables prevents this type of leaking. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 // Jenkinsfile (Declarative Pipeline) pipeline { agent any environment { EXAMPLE_CREDS = credentials ( 'example-credentials-id' ) } stages { stage ( 'Example' ) { steps { /* CORRECT */ sh ( 'curl -u $EXAMPLE_CREDS_USR:$EXAMPLE_CREDS_PSW https://example.com/' ) } } } }","title":"Interpolation of sensitive environment variables"},{"location":"CICD/Jenkins/jenkinsfile/#injection-via-interpolation","text":"\u26a0 Groovy string interpolation can inject rogue commands into command interpreters via special characters. Another note of caution. Using Groovy string interpolation for user-controlled variables with steps that pass their arguments to command interpreters such as the sh , bat , powershell , or pwsh steps can result in problems analogous to SQL injection. This occurs when a user-controlled variable (generally an environment variable, usually a parameter passed to the build) that contains special characters (e.g. / \\ $ & % ^ > < | ; ) is passed to the sh , bat , powershell , or pwsh steps using Groovy interpolation. For a simple example: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 // Jenkinsfile (Declarative Pipeline) pipeline { agent any parameters { string ( name: 'STATEMENT' , defaultValue: 'hello; ls /' , description: 'What should I say?' ) } stages { stage ( 'Example' ) { steps { /* WRONG! */ sh ( \"echo ${STATEMENT}\" ) } } } } In this example, the argument to the sh step is evaluated by Groovy, and STATEMENT is interpolated directly into the argument as if sh('echo hello; ls /') has been written in the Pipeline. When this is processed on the agent, rather than echoing the value hello; ls / , it will echo hello then proceed to list the entire root directory of the agent. Any user able to control a variable interpolated by such a step would be able to make the sh step run arbitrary code on the agent. To avoid this problem, make sure arguments to steps such as sh or bat that reference parameters or other user-controlled environment variables use single quotes to avoid Groovy interpolation. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 // Jenkinsfile (Declarative Pipeline) pipeline { agent any parameters { string ( name: 'STATEMENT' , defaultValue: 'hello; ls /' , description: 'What should I say?' ) } stages { stage ( 'Example' ) { steps { /* CORRECT */ sh ( 'echo ${STATEMENT}' ) } } } } Credential mangling is another issue that can occur when credentials that contain special characters are passed to a step using Groovy interpolation. When the credential value is mangled, it is no longer valid and will no longer be masked in the console log. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 // Jenkinsfile (Declarative Pipeline) pipeline { agent any environment { EXAMPLE_KEY = credentials ( 'example-credentials-id' ) // Secret value is 'sec%ret' } stages { stage ( 'Example' ) { steps { /* WRONG! */ bat \"echo ${EXAMPLE_KEY}\" } } } } Here, the bat step receives echo sec%ret and the Windows batch shell will simply drop the % and print out the value secret . Because there is a single character difference, the value secret will not be masked. Though the value is not the same as the actual credential, this is still a significant exposure of sensitive information. Again, single-quotes avoids this issue. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 // Jenkinsfile (Declarative Pipeline) pipeline { agent any environment { EXAMPLE_KEY = credentials ( 'example-credentials-id' ) // Secret value is 'sec%ret' } stages { stage ( 'Example' ) { steps { /* CORRECT */ bat 'echo %SECRET_VALUE%' } } } }","title":"Injection via interpolation"},{"location":"CICD/Jenkins/jenkinsfile/#handling-parameters","text":"Declarative Pipeline supports parameters out-of-the-box, allowing the Pipeline to accept user-specified parameters at runtime via the parameters directive . Configuring parameters with Scripted Pipeline is done with the properties step, which can be found in the Snippet Generator. If you configured your pipeline to accept parameters using the Build with Parameters option, those parameters are accessible as members of the params variable. Assuming that a String parameter named \"Greeting\" has been configuring in the Jenkinsfile , it can access that parameter via ${params.Greeting} : 1 2 3 4 5 6 7 8 9 10 11 12 13 14 // Jenkinsfile (Declarative Pipeline) pipeline { agent any parameters { string ( name: 'Greeting' , defaultValue: 'Hello' , description: 'How should I greet the world?' ) } stages { stage ( 'Example' ) { steps { echo \"${params.Greeting} World!\" } } } } Toggle Scripted Pipeline (Advanced)","title":"Handling parameters"},{"location":"CICD/Jenkins/jenkinsfile/#handling-failure","text":"Declarative Pipeline supports robust failure handling by default via its post section which allows declaring a number of different \"post conditions\" such as: always , unstable , success , failure , and changed . The Pipeline Syntax section provides more detail on how to use the various post conditions. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 // Jenkinsfile (Declarative Pipeline) pipeline { agent any stages { stage ( 'Test' ) { steps { sh 'make check' } } } post { always { junit '**/target/*.xml' } failure { mail to: team @example.com , subject: 'The Pipeline failed :(' } } } Toggle Scripted Pipeline (Advanced) Scripted Pipeline however relies on Groovy\u2019s built-in try / catch / finally semantics for handling failures during execution of the Pipeline. In the Test example above, the sh step was modified to never return a non-zero exit code ( sh 'make check || true' ). This approach, while valid, means the following stages need to check currentBuild.result to know if there has been a test failure or not. An alternative way of handling this, which preserves the early-exit behavior of failures in Pipeline, while still giving junit the chance to capture test reports, is to use a series of try / finally blocks:","title":"Handling failure"},{"location":"CICD/Jenkins/jenkinsfile/#using-multiple-agents","text":"In all the previous examples, only a single agent has been used. This means Jenkins will allocate an executor wherever one is available, regardless of how it is labeled or configured. Not only can this behavior be overridden, but Pipeline allows utilizing multiple agents in the Jenkins environment from within the same Jenkinsfile , which can helpful for more advanced use-cases such as executing builds/tests across multiple platforms. In the example below, the \"Build\" stage will be performed on one agent and the built results will be reused on two subsequent agents, labelled \"linux\" and \"windows\" respectively, during the \"Test\" stage. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 // Jenkinsfile (Declarative Pipeline) pipeline { agent none stages { stage ( 'Build' ) { agent any steps { checkout scm sh 'make' stash includes: '**/target/*.jar' , name: 'app' // \u2460 } } stage ( 'Test on Linux' ) { agent { // \u2461 label 'linux' } steps { unstash 'app' // \u2462 sh 'make check' } post { always { junit '**/target/*.xml' } } } stage ( 'Test on Windows' ) { agent { label 'windows' } steps { unstash 'app' bat 'make check' // \u2463 } post { always { junit '**/target/*.xml' } } } } } Toggle Scripted Pipeline (Advanced) \u2460 stash step allows capturing files matching an inclusion pattern ( **/target/*.jar ) for reuse within the same Pipeline. Once the Pipeline has completed its execution, stashed files are deleted from the Jenkins controller. \u2461 parameter in agent / node allows for any valid Jenkins label expression. Consult the Pipeline Syntax section for more details. \u2462 unstash will retrieve the named \"stash\" from the Jenkins controller into the Pipeline\u2019s current workspace. \u2463 The bat script allows for executing batch scripts on Windows-based platforms.","title":"Using multiple agents"},{"location":"CICD/Jenkins/jenkinsfile/#optional-step-arguments","text":"Pipeline follows the Groovy language convention of allowing parentheses to be omitted around method arguments. Many Pipeline steps also use the named-parameter syntax as a shorthand for creating a Map in Groovy, which uses the syntax [key1: value1, key2: value2] . Making statements like the following functionally equivalent: 1 2 git url: 'git://example.com/amazing-project.git' , branch: 'master' git ([ url: 'git://example.com/amazing-project.git' , branch: 'master' ]) For convenience, when calling steps taking only one parameter (or only one mandatory parameter), the parameter name may be omitted, for example: 1 2 sh 'echo hello' /* short form */ sh ([ script: 'echo hello' ]) /* long form */","title":"Optional step arguments"},{"location":"CICD/Jenkins/jenkinsfile/#advanced-scripted-pipeline","text":"Scripted Pipeline is a domain-specific language [ 3 ] based on Groovy, most Groovy syntax can be used in Scripted Pipeline without modification.","title":"Advanced Scripted Pipeline"},{"location":"CICD/Jenkins/jenkinsfile/#parallel-execution","text":"The example in the section above runs tests across two different platforms in a linear series. In practice, if the make check execution takes 30 minutes to complete, the \"Test\" stage would now take 60 minutes to complete! Fortunately, Pipeline has built-in functionality for executing portions of Scripted Pipeline in parallel, implemented in the aptly named parallel step. Refactoring the example above to use the parallel step: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 // Jenkinsfile (Scripted Pipeline) stage ( 'Build' ) { /* .. snip .. */ } stage ( 'Test' ) { parallel linux: { node ( 'linux' ) { checkout scm try { unstash 'app' sh 'make check' } finally { junit '**/target/*.xml' } } }, windows: { node ( 'windows' ) { /* .. snip .. */ } } } Instead of executing the tests on the \"linux\" and \"windows\" labelled nodes in series, they will now execute in parallel assuming the requisite capacity exists in the Jenkins environment.","title":"Parallel execution"},{"location":"Virtualization/Docker/%E5%AE%89%E8%A3%85/","text":"","title":"\u5b9e\u73b0"},{"location":"databases/MySQL/SQL/","text":"SQL SQL\u7b80\u4ecb \u00b6 \u5bf9\u6570\u636e\u5e93\u8fdb\u884c\u67e5\u8be2\u548c\u4fee\u6539\u64cd\u4f5c\u7684\u8bed\u8a00\u53ebSQL(Structured Quary Language, \u7ed3\u6784\u5316\u67e5\u8be2\u8bed\u8a00)\u3002 1. SQL\u6807\u51c6 \u00b6 ANSI SQL SQL-92 SQL-99 2. SQL\u5206\u7c7b \u00b6 \u6570\u636e\u5b9a\u4e49\u8bed\u8a00\uff08DDL, Data Definition Language\uff09\uff1aDROP\u3001CREATE\u3001ALTER\u7b49 \u6570\u636e\u64cd\u4f5c\u8bed\u8a00\uff08DML, Data Manipulation Language\uff09\uff1aINSERT\u3001UPDATE\u3001DELETE \u6570\u636e\u67e5\u8be2\u8bed\u8a00\uff08DQL, Data Query Language\uff09\uff1aSELECT \u6570\u636e\u63a7\u5236\u8bed\u8a00\uff08DCL, Data Control Language\uff09: GRANT\u3001REOVKE\u3001 \u4e8b\u52a1\u63a7\u5236\u8bed\u8a00\uff08TCL, Tansaction Control Language\uff09\uff1aCOMMIT\u3001ROLLBACK\u7b49 3. \u8bed\u6cd5\u89c4\u8303 \u00b6 \u4e0d\u533a\u5206\u5927\u5c0f\u5199\uff0c\u5efa\u8bae\u5173\u952e\u5b57\u5927\u5199\uff0c\u8868\u540d\u3001\u5217\u540d\u5c0f\u5199 \u6bcf\u53e5\u8bdd\u7528 ; \u6216 \\g \u7ed3\u5c3e \u6bcf\u6761\u547d\u4ee4\u6839\u636e\u9700\u8981\uff0c\u5404\u5b50\u53e5\u4e00\u822c\u5206\u884c\u5199\uff0c\u5173\u952e\u5b57\u4e0d\u80fd\u7f29\u5199\u4e5f\u4e0d\u80fd\u5206\u884c \u6ce8\u91ca \u5355\u884c\u6ce8\u91ca\uff1a # \u6ce8\u91ca\u6587\u5b57 \u5355\u884c\u6ce8\u91ca\uff1a -- \u6ce8\u91ca\u6587\u5b57\uff08\u8981\u6709\u7a7a\u683c\uff09 \u591a\u884c\u6ce8\u91ca\uff1a /* \u6ce8\u91ca\u6587\u5b57 */ 4. SQL\u8bed\u53e5\u7684\u6267\u884c\u8fc7\u7a0b \u00b6 1. \u8fde\u63a5\u5c42 \u00b6 \u63d0\u4f9b\u8fde\u63a5\u534f\u8bae\uff1aTCP/IP\uff0cSOCKET \u63d0\u4f9b\u9a8c\u8bc1\uff1a\u7528\u6237\u3001\u5bc6\u7801\u3001IP\u3001SOCKET \u63d0\u4f9b\u4e13\u7528\u8fde\u63a5\u7ebf\u7a0b\uff1a\u63a5\u6536\u7528\u6237SQL\uff0c\u8fd4\u56de\u7ed3\u679c 2. SQL\u5c42 \u00b6 \u63a5\u6536\u4e0a\u5c42\u4f20\u9001\u7684SQL\u8bed\u53e5 \u8bed\u6cd5\u9a8c\u8bc1 \u8bed\u4e49\u68c0\u67e5\uff1a\u5224\u65adSQL\u8bed\u53e5\u7684\u7c7b\u578b \u6743\u9650\u68c0\u67e5\uff1a\u7528\u6237\u5bf9\u5e93\u3001\u8868\u6709\u6ca1\u6709\u6743\u9650 \u89e3\u6790\u5668\uff1a\u8fdb\u884cSQL\u9884\u5904\u7406\uff0c\u4ea7\u751f\u6267\u884c\u8ba1\u5212 \u4f18\u5316\u5668\uff1a\u6839\u636e\u89e3\u6790\u5668\u5f97\u51fa\u7684\u591a\u79cd\u6267\u884c\u8ba1\u5212\u8fdb\u884c\u5224\u65ad\uff0c\u9009\u62e9\u6700\u4f18\u7684\u6267\u884c\u8ba1\u5212\u4ee3\u4ef7\u6a21\u5f0f \u6267\u884c\u5668\uff1a\u6839\u636e\u6700\u4f18\u6267\u884c\u8ba1\u5212\uff0c\u6267\u884cSQL\u8bed\u53e5\uff0c\u4ea7\u751f\u6267\u884c\u7ed3\u679c \u63d0\u4f9b\u67e5\u8be2\u7f13\u5b58\uff08\u9ed8\u8ba4\u4e0d\u5f00\u542f\uff09 \u63d0\u4f9b\u65e5\u5fd7\u8bb0\u5f55\uff08\u9ed8\u8ba4\u4e0d\u5f00\u542f\uff09 3. \u5b58\u50a8\u5f15\u64ce\u5c42 \u00b6 \u8d1f\u8d23\u6839\u636eSQL\u5c42\u6267\u884c\u7684\u7ed3\u679c\uff0c\u4ece\u78c1\u76d8\u4e0a\u62ff\u6570\u636e \u4e00\u3001DDL \u00b6 1. \u5e93 \u00b6 1.1 \u6570\u636e\u5e93\u521b\u5efa \u00b6 1 2 3 4 5 6 7 mysql > CREATE DATABASE IF NOT EXISTS \u6570\u636e\u5e93\u540d\u79f0 ; # \u6216 mysql > CREATE SCHEMA \u6570\u636e\u5e93\u540d\u79f0 ; # \u521b\u5efa\u6570\u636e\u65f6\u540c\u65f6\u6307\u5b9a\u5b57\u7b26\u96c6 mysql > CREATE DATABASE \u6570\u636e\u5e93\u540d\u79f0 CHARSET utf8 ; # \u521b\u5efa\u6570\u636e\u5e93\u662f\u6307\u5b9a\u6821\u5bf9\u89c4\u5219 mysql > CREATE DATABASE test CHARSET utf8mb4 COLLATE utf8mb4_bin ; \u67e5\u770b\u652f\u6301\u7684\u5b57\u7b26\u96c6 1 SHOW CHARSET ; collation\u672b\u5c3e\u5e26ci\u7684\u5b57\u7b26\u96c6\u90fd\u662f\u5927\u5c0f\u5199\u4e0d\u654f\u611f\u7684\u3002\u4f7f\u7528 SHOW COLLATION; \u53ef\u4ee5\u67e5\u8be2\u5927\u5c0f\u5199\u540d\u7684\u5b57\u7b26\u96c6\u3002 \u6570\u636e\u5e93\u547d\u4ee4\u89c4\u5219\uff1a \u5e93\u540d\u4e0d\u80fd\u5927\u5199 \u4e0d\u80fd\u4ee5\u6570\u5b57\u5f00\u5934 \u5efa\u5e93\u65f6\u9700\u8981\u52a0\u5b57\u7b26\u96c6 1.2 \u6570\u636e\u5e93\u4fee\u6539 \u00b6 1 ALTER DATABASE \u6570\u636e\u5e93\u540d\u79f0 CHARSET utf8 ; \u4fee\u6539\u524d\u7684\u5b57\u7b26\u96c6\u5e94\u8be5\u662f\u4fee\u6539\u540e\u5b57\u7b26\u524d\u7684\u5b50\u96c6 1.3 \u6570\u636e\u5e93\u5220\u9664 \u00b6 1 DROP DATABASE IF EXISTS \u6570\u636e\u5e93\u540d\u79f0 ; 2. \u8868 \u00b6 2.1 \u8868\u5b9a\u4e49 \u00b6 1 2 3 4 5 6 CREATE TABLE \u8868\u540d ( \u5b57\u6bb5\u540d 1 \u6570\u636e\u7c7b\u578b [ \u5b8c\u6574\u7684\u7ea6\u675f\u6761\u4ef6 ] [ \u9ed8\u8ba4\u503c ], \u5b57\u6bb5\u540d 2 \u6570\u636e\u7c7b\u578b [ \u5b8c\u6574\u7684\u7ea6\u675f\u6761\u4ef6 ] [ \u9ed8\u8ba4\u503c ], ... [ \u8868\u7ea7\u522b\u7684\u7ea6\u675f\u6761\u4ef6 ] ); \u5b9e\u4f8b\uff1a 1 2 3 4 5 6 7 8 CREATE TABLE students ( id INT NOT NULL PRIMARY KEY AUTO_INCREMENT COMMENT '\u5b66\u53f7' , name VARCHAR ( 255 ) NOT NULL COMMENT '\u59d3\u540d' , age TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT '\u5e74\u9f84' , sex ENUM ( 'f' , 'm' , 'n' ) NOT NULL DEFAULT 'n' COMMENT '\u6027\u522b' , id_card CHAR ( 18 ) NOT NULL UNIQUE COMMENT '\u8eab\u4efd\u8bc1' , enrollment_time TIMESTAMP NOT NULL DEFAULT NOW () COMMENT '\u62a5\u540d\u65f6\u95f4' ) ENGINE = INNODB CHARSET = utf8 COMMENT '\u5b66\u751f\u8868' ; \u5efa\u8868\u89c4\u8303\uff1a \u8868\u540d\u5c0f\u5199 \u4e0d\u80fd\u6570\u5b57\u5f00\u5934 \u6ce8\u610f\u5b57\u7b26\u96c6\u548c\u5b58\u50a8\u5f15\u64ce \u8868\u540d\u548c\u4e1a\u52a1\u6709\u5173 \u6bcf\u4e2a\u5217\u90fd\u8981\u6709\u6ce8\u91ca \u9009\u62e9\u5408\u9002\u7684\u6570\u636e\u7c7b\u578b 2.2 \u4fee\u6539\u8868 \u00b6 DDL\u4f1a\u5f15\u8d77\u6570\u636e\u5e93\u9501\u8868\uff0c\u53ef\u4ee5\u4f7f\u7528\u5728\u7ebfDDL\u5de5\u5177pt-osc(pt-online-schema-change)\u89e3\u51b3 1. \u6dfb\u52a0\u5b57\u6bb5 \u00b6 1.2.1 \u5728\u672b\u5c3e\u6dfb\u52a0\u5b57\u6bb5 \u00b6 1 ALTER TABLE students ADD qq VARCHAR ( 20 ) NOT NULL UNIQUE COMMENT 'QQ\u53f7' ; 1.2.2 \u5728\u6307\u5b9a\u5b57\u6bb5\u540e\u6dfb\u52a0\u5b57\u6bb5 \u00b6 1 ALTER TABLE students ADD wechat VARCHAR ( 20 ) NOT NULL UNIQUE COMMENT '\u5fae\u4fe1\u53f7' AFTER name ; 1.2.3 \u5728\u7b2c\u4e00\u5217\u524d\u6dfb\u52a0\u5b57\u6bb5 \u00b6 1 ALTER TABLE students ADD num INT NOT NULL COMMENT '\u6570\u5b57' FIRST ; 2. \u5220\u9664\u5b57\u6bb5 \u00b6 1 ALTER TABLE students DROP num ; 3. \u4fee\u6539\u5b57\u6bb5\u5c5e\u6027 \u00b6 \u4fee\u6539\u65f6\u628a\u6240\u6709\u9700\u8981\u7684\u5c5e\u6027\u90fd\u52a0\u4e0a 1 ALTER TABLE students MODIFY name VARCHAR ( 128 ) NOT NULL ; 4. \u4fee\u6539\u5b57\u6bb5\u540d\u79f0 \u00b6 \u540d\u79f0\u548c\u5c5e\u6027\u90fd\u53ef\u4ee5\u4fee\u6539 1 ALTER TABLE students CHANGE qq email VARCHAR ( 125 ); 2.3 \u5220\u9664\u8868 \u00b6 1 DROP TABLE \u8868\u540d ; 2.4 \u67e5\u770b\u8868 \u00b6 1 \u67e5\u770b\u8868\u7ed3\u6784 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 mysql > DESC students ; +-----------------+---------------------+------+-----+-------------------+----------------+ | Field | Type | Null | Key | Default | Extra | +-----------------+---------------------+------+-----+-------------------+----------------+ | id | int ( 11 ) | NO | PRI | NULL | auto_increment | | name | varchar ( 255 ) | NO | | NULL | | | age | tinyint ( 3 ) unsigned | NO | | 0 | | | sex | enum ( 'f' , 'm' , 'n' ) | NO | | n | | | id_card | char ( 18 ) | NO | UNI | NULL | | | enrollment_time | timestamp | NO | | CURRENT_TIMESTAMP | | +-----------------+---------------------+------+-----+-------------------+----------------+ 6 rows in set ( 0 . 00 sec ) 2 \u67e5\u770b\u5efa\u8868\u8bed\u53e5 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 mysql > SHOW CREATE TABLE students \\ G ; *************************** 1 . row *************************** Table : students Create Table : CREATE TABLE `students` ( `id` int ( 11 ) NOT NULL AUTO_INCREMENT COMMENT '\u5b66\u53f7' , `name` varchar ( 255 ) NOT NULL COMMENT '\u59d3\u540d' , `age` tinyint ( 3 ) unsigned NOT NULL DEFAULT '0' COMMENT '\u5e74\u9f84' , `sex` enum ( 'f' , 'm' , 'n' ) NOT NULL DEFAULT 'n' COMMENT '\u6027\u522b' , `id_card` char ( 18 ) NOT NULL COMMENT '\u8eab\u4efd\u8bc1' , `enrollment_time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '\u62a5\u540d\u65f6\u95f4' , PRIMARY KEY ( `id` ), UNIQUE KEY `id_card` ( `id_card` ) ) ENGINE = InnoDB DEFAULT CHARSET = utf8 COMMENT = '\u5b66\u751f\u8868' 1 row in set ( 0 . 00 sec ) ERROR : No query specified 2.5 \u590d\u5236\u8868 \u00b6 2.5.1 \u4ec5\u590d\u5236\u8868\u7ed3\u6784 \u00b6 1 CREATE TABLE stu1 LIKE students ; 2.5.2 \u590d\u5236\u8868\u7ed3\u6784\u548c\u5168\u90e8\u6570\u636e \u00b6 1 CREATE TABLE stu2 SELECT * FROM students ; 2.5.2 \u590d\u5236\u8868\u7ed3\u6784\u548c\u90e8\u5206\u6570\u636e \u00b6 1 CREATE TABLE stu3 SELECT * FROM students WHERE id > 5 ; \u4e8c\u3001DML \u00b6 \u5bf9\u8868\u7684\u589e\u5220\u6539 1. \u63d2\u5165 \u00b6 1.1\u65b9\u5f0f\u4e00 \u00b6 1.1.1 \u4e3a\u8868\u7684\u6240\u6709\u5b57\u6bb5\u63d2\u5165\u6570\u636e \u00b6 1 INSERT INTO \u8868\u540d VALUES ( \u503c 1 , \u503c 2 ,... \u503c n ); 1.1.2 \u4e3a\u8868\u7684\u6307\u5b9a\u5b57\u6bb5\u63d2\u5165\u6570\u636e \u00b6 1 2 # \u8981\u4fdd\u8bc1\u6bcf\u4e2a\u63d2\u5165\u7684\u503c\u5f97\u7c7b\u578b\u548c\u5bf9\u5e94\u7c7b\u7684\u6570\u636e\u7c7b\u578b\u5339\u914d INSERT INTO \u8868\u540d ( \u5b57\u6bb5 1 , \u5b57\u6bb5 2 ,... \u5b57\u6bb5 n ) VALUES ( \u503c 1 , \u503c 2 ,... \u503c n ); 1.1.3 \u540c\u65f6\u63d2\u5165\u591a\u6761\u8bb0\u5f55 \u00b6 1 INSERT INTO \u8868\u540d ( \u5b57\u6bb5 1 , \u5b57\u6bb5 2 ,... \u5b57\u6bb5 n ) VALUES ( \u503c 1 , \u503c 2 ,... \u503c n ),( \u503c 1 , \u503c 2 ,... \u503c n ); 1.2 \u65b9\u5f0f\u4e8c \u00b6 1.2.1 \u4e3a\u8868\u7684\u6307\u5b9a\u5b57\u6bb5\u63d2\u5165\u6570\u636e \u00b6 1 2 3 INSERT INTO \u8868\u540d SET \u5b57\u6bb5 1 = \u503c 1 , \u5b57\u6bb5 2 = \u503c 2 , \u5b57\u6bb5 3 = \u503c 3 ; \u4e24\u79cd\u65b9\u5f0f\u7684\u533a\u522b\uff1a \u65b9\u5f0f1\u652f\u6301\u63d2\u5165\u591a\u884c\uff0c\u4f46\u662f\u65b9\u5f0f2\u4e0d\u652f\u6301 \u65b9\u5f0f1\u652f\u6301\u5b50\u67e5\u8be2\uff0c\u65b9\u5f0f2\u4e0d\u652f\u6301 2. \u4fee\u6539 \u00b6 2.1 \u4fee\u6539\u5355\u8868\u7684\u8bb0\u5f55 \u00b6 1 2 3 UPDATE \u8868\u540d SET \u5217 = \u65b0\u503c\uff0c\u5217 = \u65b0\u503c\u2026 WHERE \u7b5b\u9009\u6761\u4ef6\uff1b 2.2 \u4fee\u6539\u591a\u8868\u7684\u8bb0\u5f55 \u00b6 sql92\u8bed\u6cd5 1 2 3 4 UPDATE \u8868 1 \u522b\u540d\uff0c\u8868 2 \u522b\u540d SET \u5217 = \u503c\u2026 WHERE \u7b5b\u9009\u6761\u4ef6 AND \u7b5b\u9009\u6761\u4ef6\uff1b sql99\u8bed\u6cd5\uff1a 1 2 3 4 5 UPDATE \u8868 1 \u522b\u540d [ INNER | LEFT | RIGHT ] JOIN \u8868 2 \u522b\u540d ON \u8fde\u63a5\u6761\u4ef6 SET \u5217 = \u503c\uff0c\u2026 WHERE \u7b5b\u9009\u6761\u4ef6\uff1b 3. \u5220\u9664 \u00b6 3.1 DELETE \u00b6 3.1.1 \u5355\u8868\u5220\u9664 \u00b6 1 DELETE FROM \u8868\u540d WHERE \u7b5b\u9009\u6761\u4ef6 ; 3.1.2 \u591a\u8868\u5220\u9664 \u00b6 sql92\u8bed\u6cd5 1 2 3 4 5 DELETE \u522b\u540d\uff08\u8981\u5220\u54ea\u4e2a\u8868\u5c31\u5199\u54ea\u4e2a\u8868\u7684\u522b\u540d\uff0c\u90fd\u5220\u5c31\u90fd\u5199\uff09 FROM \u8868 1 \u522b\u540d\uff0c\u8868 2 \u522b\u540d WHERE \u8fde\u63a5\u6761\u4ef6 AND \u7b5b\u9009\u6761\u4ef6 LIMIT \u6761\u76ee\u6570\uff1b sql99\u8bed\u6cd5 1 2 3 4 5 6 DELETE \u522b\u540d\uff08\u8981\u5220\u54ea\u4e2a\u8868\u5c31\u5199\u54ea\u4e2a\u8868\u7684\u522b\u540d\uff0c\u90fd\u5220\u5c31\u90fd\u5199\uff09 FROM \u8868 1 \u522b\u540d [ INNER | LEFT | RIGHT ] JOIN \u8868 2 \u522b\u540d ON \u8fde\u63a5\u6761\u4ef6 WHERE \u7b5b\u9009\u6761\u4ef6 LIMIT \u6761\u76ee\u6570\uff1b 3.1.2 \u5168\u8868\u5220\u9664 \u00b6 \u8bed\u6cd5\uff1a 1 2 DELETE FROM students ; # DML\u64cd\u4f5c\uff0c\u903b\u8f91\u6027\u5220\u9664\uff0c\u9010\u884c\u5220\u9664\uff0c\u901f\u5ea6\u6162 3.2 TRUNCATE \u00b6 \u8bed\u6cd5\uff1a 1 2 TRUNCATE TABLE students ; # DDL\u64cd\u4f5c\uff0c\u8868\u6bb5\u4fdd\u7559\uff0c\u6570\u636e\u9875\u88ab\u6e05\u7a7a\uff0c\u901f\u5ea6\u5feb DELETE \u548c TRUNCATE \u7684\u533a\u522b\uff1a delete\u53ef\u4ee5\u52a0where\u6761\u4ef6\uff0ctruncate\u4e0d\u53ef\u4ee5 truncate\u5220\u9664\u6548\u7387\u9ad8\u4e00\u4e9b \u5047\u5982\u8981\u5220\u9664\u7684\u8868\u4e2d\u6709\u81ea\u589e\u957f\u5217\uff0c\u5982\u679c\u7528delete\u5220\u9664\u540e\uff0c\u518d\u63d2\u5165\u6570\u636e\uff0c\u81ea\u589e\u957f\u5217\u7684\u503c\u4ece\u65ad\u70b9\u5f00\u59cb\uff0c\u800ctruncate\u5220\u9664\u540e\uff0c\u518d\u63d2\u5165\u6570\u636e\uff0c\u81ea\u589e\u957f\u5217\u7684\u503c\u4ece1\u5f00\u59cb\u3002 truncate\u5220\u9664\u6ca1\u6709\u8fd4\u56de\u503c\uff0cdelete\u5220\u9664\u6709\u8fd4\u56de\u503c truncate\u5220\u9664\u4e0d\u80fd\u56de\u6eda\uff0cdelete\u5220\u9664\u53ef\u4ee5\u56de\u6eda 3.3 \u4f2a\u5220\u9664 \u00b6 \u6dfb\u52a0\u4e00\u4e2a\u72b6\u6001\u5b57\u6bb5\uff0c\u7528\u6765\u6807\u8bc6\u662f\u5426\u5220\u9664 1 2 3 4 5 6 # \u6dfb\u52a0\u72b6\u6001\u5b57\u6bb5 ALTER TABLE students ADD state TINYINT NOT NULL DEFAULT 1 ; # \u7528UPDATE\u4ee3\u66ffDELETE UPDATE students SET state = 0 WHERE id = 6 ; # \u4e1a\u52a1\u67e5\u8be2 SELECT * FROM students WHERE state = 1 ; \u4e09\u3001DQL \u00b6 \u4ee5\u5b98\u65b9\u63d0\u4f9b\u7684 world\u6570\u636e\u5e93 \u4e3a\u4f8b\u3002\u4e0b\u8f7d\u5730\u5740\uff1ahttps://downloads.mysql.com/docs/world.sql.zip\u3002\u53e6\u5916mysql\u5b98\u65b9\u8fd8\u63d0\u4f9b\u4e86\u5176\u4ed6\u793a\u4f8b\u6570\u636e\u5e93\uff0c\u5728 https://dev.mysql.com/doc/index-other.html \u53ef\u4ee5\u4e0b\u8f7d\u5230\u3002 1. \u57fa\u7840\u67e5\u8be2 \u00b6 \u8bed\u6cd5\uff1a 1 2 SELECT \u67e5\u8be2\u5217\u8868 from \u8868\u540d ; \u7279\u70b9\uff1a \u67e5\u8be2\u5217\u8868\u53ef\u4ee5\u662f\u8868\u4e2d\u7684\u5b57\u6bb5\u3001\u5e38\u91cf\u3001\u8868\u8fbe\u5f0f\u3001\u51fd\u6570 \u67e5\u8be2\u7684\u7ed3\u679c\u662f\u4e00\u4e2a\u865a\u62df\u7684\u8868\u683c 1.1 SELECT \u5355\u72ec\u4f7f\u7528 \u00b6 1.1.1 \u67e5\u770b\u7cfb\u7edf\u53c2\u6570 \u00b6 1 2 3 4 5 6 7 mysql [( none )] > SELECT @@ port ; +--------+ | @@ port | +--------+ | 3306 | +--------+ 1 row in set ( 0 . 00 sec ) 1.1.2 \u4f7f\u7528\u5185\u7f6e\u51fd\u6570 \u00b6 1 2 3 4 5 6 7 mysql [( none )] > SELECT NOW (); +---------------------+ | NOW () | +---------------------+ | 2020 - 12 - 07 22 : 30 : 03 | +---------------------+ 1 row in set ( 0 . 00 sec ) 1.1.3 \u67e5\u8be2\u8868\u8fbe\u5f0f \u00b6 1 2 3 4 5 6 7 mysql [( none )] > SELECT 3 * 5 ; +-----+ | 3 * 5 | +-----+ | 15 | +-----+ 1 row in set ( 0 . 00 sec ) 1.2 \u5355\u8868\u5b50\u53e5 - FROM \u00b6 1.2.1 \u67e5\u8be2\u6240\u6709\u5b57\u6bb5 \u00b6 1 2 mysql [ world ] > SELECT * FROM country ; # \u4e0d\u8981\u5bf9\u5927\u8868\u8fdb\u884c\u64cd\u4f5c 1.2.2 \u67e5\u8be2\u6307\u5b9a\u5b57\u6bb5 \u00b6 1 mysql [ world ] > SELECT name FROM country ; 1.2.3 \u67e5\u8be2\u591a\u4e2a\u5b57\u6bb5 \u00b6 1 mysql [ world ] > SELECT name , population FROM country ; 2. \u6761\u4ef6\u67e5\u8be2 - WHERE \u00b6 \u8bed\u6cd5\uff1a 1 2 3 SELECT \u5b57\u6bb5\u540d 1 , \u5b57\u6bb5\u540d 2 ,... \u5b57\u6bb5\u540d n FROM \u8868\u540d WHERE \u67e5\u8be2\u6761\u4ef6 ; 2.1 \u6309\u6761\u4ef6\u8868\u8fbe\u5f0f\u7b5b\u9009\uff08=\u3001<> \u3001!=\u3001 <\u3001 <=\u3001 >\u3001 >=\uff09 \u00b6 1 2 3 4 # \u67e5\u8be2\u6e56\u5317\u7684\u57ce\u5e02 SELECT * FROM city WHERE District = 'HuBei' ; # \u67e5\u8be2\u4eba\u53e3\u5c0f\u4e8e100\u7684\u57ce\u5e02 SELECT * FROM city WHERE Population < 100 ; 2.2 \u6309\u903b\u8f91\u903b\u8f91\u8868\u8fbe\u5f0f\u7b5b\u9009\uff08AND\u3001OR\uff09 \u00b6 \u4e3b\u8981\u4f5c\u7528\uff1a\u7528\u4e8e\u8fde\u63a5\u6761\u4ef6\u8868\u8fbe\u5f0f 1 2 3 4 # \u67e5\u8be2\u4e2d\u56fd\u4eba\u53e3\u5927\u4e8e500\u4e07\u7684\u57ce\u5e02 SELECT * FROM city WHERE CountryCode = 'CHN' AND Population > 5000000 ; # \u67e5\u8be2\u4e2d\u56fd\u548c\u7f8e\u56fd\u7684\u57ce\u5e02\u4fe1\u606f SELECT * FROM city WHERE CountryCode = 'CHN' OR CountryCode = 'USA' ; 2.3 \u6a21\u7cca\u67e5\u8be2 \u00b6 2.3.1 WHERE\u914d\u5408 LIKE \u8bed\u53e5 \u00b6 \u4e00\u822c\u548c\u901a\u914d\u7b26\u642d\u914d\u4f7f\u7528\uff0c\u53ef\u4ee5\u5224\u65ad\u5b57\u7b26\u578b\u6570\u503c\u6216\u6570\u503c\u578b % \u5339\u914d\u4efb\u610f\u591a\u4e2a\u5b57\u7b26\uff0c\u5305\u542b0\u4e2a\u5b57\u7b26 _ \u5339\u914d\u4efb\u610f\u5355\u4e2a\u5b57\u7b26 1 2 # \u540d\u5b57\u4ee5guang\u5f00\u5934\u7684\u7701 SELECT * FROM city WHERE District LIKE 'guang%' % \u4e0d\u80fd\u653e\u5728\u524d\u9762\uff0c\u56e0\u4e3a\u4e0d\u8d70\u7d22\u5f15 2.3.2 WHERE\u914d\u5408 IN \u8bed\u53e5 \u00b6 \u542b\u4e49\uff1a\u5224\u65ad\u67d0\u5b57\u6bb5\u7684\u503c\u662f\u5426\u5c5e\u4e8e IN \u5217\u8868\u4e2d\u7684\u67d0\u4e00\u9879 \u4f7f\u7528 IN \u63d0\u9ad8\u8bed\u53e5\u7b80\u6d01\u5ea6 IN \u76f8\u5f53\u4e8e\u7b49\u4e8e\uff0c\u6240\u4ee5\u4e0d\u652f\u6301\u901a\u914d\u7b26\uff08 like \u624d\u652f\u6301\uff09 1 2 # \u67e5\u8be2\u4e2d\u56fd\u548c\u7f8e\u56fd\u7684\u57ce\u5e02\u4fe1\u606f,\u4e0eOR\u7c7b\u4f3c SELECT * FROM city WHERE CountryCode IN ( 'CHN' , 'USA' ); 2.3.4 WHERE\u914d\u5408 BETREEN AND \u00b6 \u4f7f\u7528between and\u53ef\u4ee5\u63d0\u9ad8\u8bed\u53e5\u7684\u7b80\u6d01\u5ea6 \u5305\u542b\u4e34\u754c\u503c\uff1b \u4e24\u4e2a\u4e34\u754c\u503c\u4e0d\u80fd\u66ff\u6362\u987a\u5e8f\uff1b 1 2 # \u67e5\u8be2\u4eba\u53e3\u5927\u4e8e100\u4e07\u5c0f\u4e8e200\u4e07\u57ce\u5e02\u4fe1\u606f SELECT * FROM city WHERE Population BETWEEN 1000000 AND 2000000 ; 2.3.5 WHERE\u914d\u5408 IS [NOT] NULL \u00b6 \u7528\u4e8e\u5224\u65ad null \u503c = \u6216\u8005 <> \u4e0d\u80fd\u7528\u4e8e\u5224\u65ad null \u503c 1 SELECT name FROM country WHERE indepyear IS NULL ; 3. \u6392\u5e8f\u67e5\u8be2 \u00b6 \u8bed\u6cd5 1 2 3 4 SELECT \u67e5\u8be2\u5217\u8868 FROM \u8868 [ WHERE \u7b5b\u9009\u6761\u4ef6 ] ORDER BY \u6392\u5e8f\u5217\u8868 [ ASC | DESC ] ASC \u4ee3\u8868\u7684\u662f\u5347\u5e8f\uff0c DESC \u4ee3\u8868\u7684\u662f\u964d\u5e8f\uff0c\u5982\u679c\u4e0d\u5199\uff0c\u9ed8\u8ba4\u662f\u5347\u5e8f ORDER BY \u5b50\u53e5\u4e2d\u53ef\u4ee5\u652f\u6301\u5355\u4e2a\u5b57\u6bb5\u3001\u591a\u4e2a\u5b57\u6bb5\u3001\u8868\u8fbe\u5f0f\u3001\u51fd\u6570\u3001\u522b\u540d ORDER BY \u5b50\u53e5\u4e00\u822c\u662f\u653e\u5728\u67e5\u8be2\u8bed\u53e5\u7684\u6700\u540e\u9762\uff0c\u4f46 limit \u5b50\u53e5\u9664\u5916 1 2 3 4 # \u67e5\u8be2\u4e2d\u56fd\u7684\u57ce\u5e02\u4fe1\u606f\uff0c\u5e76\u6309\u4eba\u53e3\u6570\u91cf\u4ece\u5927\u5230\u5c0f\u6392\u5e8f SELECT * FROM city WHERE CountryCode = 'CHN' ORDER BY Population DESC ; 4. \u5206\u7ec4\u67e5\u8be2 \u00b6 \u8bed\u6cd5 1 2 3 4 5 6 7 SELECT\u5b50\u53e5 \u5206\u7ec4\u51fd\u6570\uff0c\u5217\uff08\u8981\u6c42\u51fa\u73b0\u5728 group by\u7684\u540e\u9762 \uff09 FROM \u8868 [ WHERE \u7b5b\u9009\u6761\u4ef6 ] GROUP BY \u5206\u7ec4\u5217\u8868 [ HAVING \u5206\u7ec4\u540e\u7684\u7b5b\u9009 ] [ ORDER BY \u6392\u5e8f\u5217\u8868 ] # \u6267\u884c\u987a\u5e8f\uff1aFROM->WHERE->GROUP BY\u5b50\u53e5->HAVING\u5b50\u53e5->SELECT\u5b50\u53e5->ORDER BY\u5b50\u53e5 \u6ce8\u610f\uff1a\u67e5\u8be2\u5217\u8868\u6bd4\u8f83\u7279\u6b8a\uff0c\u8981\u6c42\u662f\u5206\u7ec4\u51fd\u6570\u548cgroup by\u540e\u51fa\u73b0\u7684\u5b57\u6bb5 \u7279\u70b9\uff1a \u5206\u7ec4\u67e5\u8be2\u4e2d\u7684\u7b5b\u9009\u6761\u4ef6\u5206\u4e3a\u4e24\u7c7b\uff1a \u5206\u7ec4\u524d\u7b5b\u9009 \u57fa\u4e8e\u539f\u59cb\u8868\u7b5b\u9009\uff0c\u5728 group by \u5b50\u53e5\u7684\u524d\u9762\uff0c\u4f7f\u7528\u5173\u952e\u8bcd where \u5206\u7ec4\u540e\u7b5b\u9009 \u57fa\u4e8e\u5206\u7ec4\u540e\u7684\u7ed3\u679c\u96c6\u7b5b\u9009\uff0c\u5728 group by \u5b50\u53e5\u7684\u540e\u9762 \u4f7f\u7528\u5173\u952e\u8bcd having \u5206\u7ec4\u51fd\u6570\u505a\u6761\u4ef6\u80af\u5b9a\u662f\u653e\u5728having\u5b50\u53e5\u4e2d \u80fd\u7528\u5206\u7ec4\u524d\u7b5b\u9009\u7684\uff0c\u5c31\u4f18\u5148\u8003\u8651\u4f7f\u7528\u5206\u7ec4\u524d\u7b5b\u9009 group by\u5b50\u53e5\u652f\u6301\u5355\u4e2a\u5b57\u6bb5\u5206\u7ec4\uff0c\u591a\u4e2a\u5b57\u6bb5\u5206\u7ec4\uff08\u591a\u4e2a\u5b57\u6bb5\u4e4b\u95f4\u7528\u9017\u53f7\u9694\u5f00\u6ca1\u6709\u987a\u5e8f\u8981\u6c42\uff09\uff0c\u8868\u8fbe\u5f0f\u6216\u51fd\u6570\uff08\u7528\u5f97\u8f83\u5c11\uff09 \u4e5f\u53ef\u4ee5\u6dfb\u52a0\u6392\u5e8f\uff08\u6392\u5e8f\u653e\u5728\u6574\u4e2a\u5206\u7ec4\u67e5\u8be2\u6700\u540e\u4f4d\u7f6e\uff09 4.1 \u7b80\u5355\u5206\u7ec4 \u00b6 \u4f8b \u67e5\u8be2\u6bcf\u4e2a\u5de5\u79cd\u7684\u6700\u9ad8\u5de5\u8d44 1 2 3 4 5 6 SELECT MAX ( salary ), job_id FROM employees GROUP BY job_id ; 4.2 \u5206\u7ec4\u524d\u7b5b\u9009 \u00b6 \u4f8b \u67e5\u8be2\u6bcf\u4e2a\u9886\u5bfc\u624b\u4e0b\u6709\u5956\u91d1\u7684\u5458\u5de5\u7684\u5e73\u5747\u5de5\u8d44 1 2 3 4 SELECT AVG ( salary ) \u5e73\u5747\u5de5\u8d44 , manager_id FROM employees WHERE commission_pct IS NOT NULL GROUP BY manager_id ; \u67e5\u8be2\u7ed3\u679c 1 2 3 4 5 6 7 8 9 10 +--------------+------------+ | \u5e73\u5747\u5de5\u8d44 | manager_id | +--------------+------------+ | 12200 . 000000 | 100 | | 8500 . 000000 | 145 | | 8500 . 000000 | 146 | | 7766 . 666667 | 147 | | 8650 . 000000 | 148 | | 8333 . 333333 | 149 | +--------------+------------+ 4.3 \u5206\u7ec4\u540e\u7b5b\u9009 \u00b6 \u540e\u8fc7\u6ee4\uff0c\u7528\u5728GROUP BY\u4e4b\u540e\uff0cHAVING\u6761\u4ef6\u662f\u4e0d\u8d70\u7d22\u5f15\u7684\uff0c\u4e00\u822c\u53ef\u4ee5\u7528\u4e34\u65f6\u8868\u89e3\u51b3\u3002 \u4f8b1 \u67e5\u8be2\u54ea\u4e2a\u90e8\u95e8\u7684\u5458\u5de5\u4e2a\u6570>5 1 2 3 4 SELECT COUNT ( * ) \u5458\u5de5\u4e2a\u6570 , department_id FROM employees GROUP BY department_id HAVING COUNT ( * ) > 5 ; \u67e5\u8be2\u7ed3\u679c 1 2 3 4 5 6 7 8 +--------------+---------------+ | \u5458\u5de5\u4e2a\u6570 | department_id | +--------------+---------------+ | 6 | 30 | | 45 | 50 | | 34 | 80 | | 6 | 100 | +--------------+---------------+ \u4f8b2 \u6bcf\u4e2a\u5de5\u79cd\u6709\u5956\u91d1\u7684\u5458\u5de5\u7684\u6700\u9ad8\u5de5\u8d44>12000\u7684\u5de5\u79cd\u7f16\u53f7\u548c\u6700\u9ad8\u5de5\u8d44 1 2 3 4 5 SELECT job_id , MAX ( salary ) FROM employees WHERE commission_pct IS NOT NULL GROUP BY job_id HAVING MAX ( salary ) > 12000 ; \u67e5\u8be2\u7ed3\u679c 1 2 3 4 5 +--------+-------------+ | job_id | MAX ( salary ) | +--------+-------------+ | SA_MAN | 14000 . 00 | +--------+-------------+ 4.4 \u5206\u7ec4\u540e\u6392\u5e8f \u00b6 \u4f8b \u67e5\u8be2\u6ca1\u6709\u5956\u91d1\u7684\u5458\u5de5\u7684\u6700\u9ad8\u5de5\u8d44>6000\u7684\u5de5\u79cd\u7f16\u53f7\u548c\u6700\u9ad8\u5de5\u8d44,\u6309\u6700\u9ad8\u5de5\u8d44\u5347\u5e8f 1 2 3 4 5 6 7 # \u7b2c\u4e00\u6b65\uff1a\u6309\u5de5\u79cd\u5206\u7ec4\uff0c\u67e5\u8be2\u6bcf\u4e2a\u5de5\u79cd\u6709\u5956\u91d1\u7684\u5458\u5de5\u7684\u6700\u9ad8\u5de5\u8d44 SELECT MAX ( salary ) \u6700\u9ad8\u5de5\u8d44 , job_id FROM employees WHERE commission_pct IS NULL GROUP BY job_id HAVING MAX ( salary ) > 6000 # \u7b2c\u4e8c\u6b65\uff1a\u7b5b\u9009\u521a\u624d\u7684\u7ed3\u679c\uff0c\u770b\u54ea\u4e2a\u6700\u9ad8\u5de5\u8d44>6000 ORDER BY MAX ( salary ) ASC ; # \u7b2c\u4e09\u6b65\uff1a\u6309\u6700\u9ad8\u5de5\u8d44\u5347\u5e8f \u67e5\u8be2\u7ed3\u679c 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 +--------------+------------+ | \u6700\u9ad8\u5de5\u8d44 | job_id | +--------------+------------+ | 6500 . 00 | HR_REP | | 8200 . 00 | ST_MAN | | 8300 . 00 | AC_ACCOUNT | | 9000 . 00 | FI_ACCOUNT | | 9000 . 00 | IT_PROG | | 10000 . 00 | PR_REP | | 11000 . 00 | PU_MAN | | 12000 . 00 | FI_MGR | | 12000 . 00 | AC_MGR | | 13000 . 00 | MK_MAN | | 17000 . 00 | AD_VP | | 24000 . 00 | AD_PRES | +--------------+------------+ 4.5 \u6309\u591a\u4e2a\u5b57\u6bb5\u5206\u7ec4 \u00b6 \u4f8b \u67e5\u8be2\u6bcf\u4e2a\u90e8\u95e8\u6bcf\u4e2a\u5de5\u79cd\u7684\u5458\u5de5\u7684\u5e73\u5747\u5de5\u8d44 1 2 3 4 5 6 7 SELECT AVG ( salary ), department_id , job_id FROM employees GROUP BY department_id , job_id ; 4.6 \u6309\u8868\u8fbe\u5f0f\u6216\u51fd\u6570\u5206\u7ec4 \u00b6 \u4f8b \u6309\u5458\u5de5\u59d3\u540d\u7684\u957f\u5ea6\u5206\u7ec4\uff0c\u67e5\u8be2\u6bcf\u4e00\u7ec4\u7684\u5458\u5de5\u4e2a\u6570\uff0c\u7b5b\u9009\u5458\u5de5\u4e2a\u6570>5\u7684\u6709\u54ea\u4e9b 1 2 3 4 5 6 7 SELECT COUNT ( * ) \u5458\u5de5\u4e2a\u6570 , LENGTH ( last_name ) \u59d3\u540d\u957f\u5ea6 FROM employees GROUP BY \u59d3\u540d\u957f\u5ea6 # \u67e5\u8be2\u6bcf\u4e2a\u957f\u5ea6\u7684\u5458\u5de5\u4e2a\u6570 HAVING \u5458\u5de5\u4e2a\u6570 > 5 ; # \u6dfb\u52a0\u7b5b\u9009\u6761\u4ef6 \u67e5\u8be2\u7ed3\u679c 1 2 3 4 5 6 7 8 9 10 +--------------+--------------+ | \u5458\u5de5\u4e2a\u6570 | \u59d3\u540d\u957f\u5ea6 | +--------------+--------------+ | 11 | 4 | | 29 | 5 | | 28 | 6 | | 15 | 7 | | 7 | 8 | | 8 | 9 | +--------------+--------------+ 3. \u8fde\u63a5\u67e5\u8be2 \u00b6 \u53c8\u79f0\u591a\u8868\u67e5\u8be2\uff0c\u5f53\u67e5\u8be2\u7684\u5b57\u6bb5\u6765\u81ea\u4e8e\u591a\u4e2a\u8868\u65f6\uff0c\u5c31\u4f1a\u7528\u5230\u8fde\u63a5\u67e5\u8be2\u3002 \u7b1b\u5361\u5c14\u79ef\u73b0\u8c61 \uff1a\u5f53\u4e24\u5f20\u8868\u8fdb\u884c\u8fde\u63a5\u67e5\u8be2\u7684\u65f6\u5019\uff0c\u6ca1\u6709\u4efb\u4f55\u6761\u4ef6\u8fdb\u884c\u9650\u5236\uff0c\u6700\u7ec8\u7684\u67e5\u8be2\u7ed3\u679c\u6761\u6570\u662f\u4e24\u5f20\u8868\u8bb0\u5f55\u6761\u6570\u7684\u4e58\u79ef\u3002 3.1 \u5206\u7c7b \u00b6 \u6309\u5e74\u4ee3\u5206\u7c7b SQL92\u6807\u51c6\uff1a \u4ec5\u652f\u6301\u5185\u8fde\u63a5 SQL99\u6807\u51c6\uff1a\u63a8\u8350\u4f7f\u7528\uff0c\u652f\u6301\u5185\u8fde\u63a5\u3001\u5916\u8fde\u63a5\uff08\u5de6\u5916\u548c\u53f3\u5916\uff09\u3001\u4ea4\u53c9\u8fde\u63a5 \u6309\u8fde\u63a5\u65b9\u5f0f\u5206\u7c7b \u5185\u8fde\u63a5 \u7b49\u503c\u8fde\u63a5 \u975e\u7b49\u503c\u8fde\u63a5 \u81ea\u8fde\u63a5 \u5916\u8fde\u63a5 \u5de6\u5916\u8fde\u63a5 \u53f3\u5916\u8fde\u63a5 \u5168\u5916\u8fde\u63a5\uff08MySQL\u4e0d\u652f\u6301\uff09 \u4ea4\u53c9\u8fde\u63a5 3.2 SQL92\u8bed\u6cd5 \u00b6 1. \u7b49\u503c\u8fde\u63a5 \u00b6 \u7279\u70b9\uff1a \u591a\u8868\u7b49\u503c\u8fde\u63a5\u7684\u7ed3\u679c\u4e3a\u591a\u8868\u7684\u4ea4\u96c6\u90e8\u5206 n\u8868\u8fde\u63a5\uff0c\u81f3\u5c11\u9700\u8981n-1\u4e2a\u8fde\u63a5\u6761\u4ef6 \u591a\u8868\u7684\u987a\u5e8f\u6ca1\u6709\u8981\u6c42 \u4e00\u822c\u9700\u8981\u4e3a\u8868\u8d77\u522b\u540d \u53ef\u4ee5\u642d\u914d\u524d\u9762\u4ecb\u7ecd\u7684\u6240\u6709\u5b50\u53e5\u4f7f\u7528\uff0c\u6bd4\u5982\u6392\u5e8f\u3001\u5206\u7ec4\u3001\u7b5b\u9009 1.1 \u7b80\u5355\u67e5\u8be2 \u00b6 1 2 3 4 5 6 7 SELECT last_name , department_name FROM employees , departments WHERE employees . `department_id` = departments . `department_id` ; 1.2 \u4e3a\u8868\u8d77\u522b\u540d \u00b6 1 2 3 4 5 6 7 8 9 # \u67e5\u8be2\u5458\u5de5\u540d\u3001\u5de5\u79cd\u53f7\u3001\u5de5\u79cd\u540d SELECT last_name , e . `job_id` , job_title FROM employees e , jobs j WHERE e . `job_id` = j . `job_id` ; 1.3 \u8868\u7684\u987a\u5e8f\u53ef\u4ee5\u8c03\u6362 \u00b6 1 2 3 4 5 6 7 8 9 # \u67e5\u8be2\u5458\u5de5\u540d\u3001\u5de5\u79cd\u53f7\u3001\u5de5\u79cd\u540d SELECT last_name , e . `job_id` , job_title FROM jobs j , employees e WHERE e . `job_id` = j . `job_id` ; 1.4 \u52a0\u7b5b\u9009\u6761\u4ef6 \u00b6 1 2 3 4 5 6 7 8 9 # \u67e5\u8be2\u6709\u5956\u91d1\u7684\u5458\u5de5\u540d\u3001\u90e8\u95e8\u540d SELECT last_name , department_name FROM employees AS e , departments AS d WHERE e . `department_id` = d . `department_id` AND e . `commission_pct` IS NOT NULL ; 1.5 \u52a0\u5206\u7ec4 \u00b6 1 2 3 4 5 6 7 8 9 # \u67e5\u8be2\u6bcf\u4e2a\u57ce\u5e02\u7684\u90e8\u95e8\u4e2a\u6570 SELECT COUNT ( * ) \u4e2a\u6570 , city FROM departments d , locations l WHERE d . `location_id` = l . `location_id` GROUP BY city ; \u67e5\u8be2\u7ed3\u679c 1 2 3 4 5 6 7 8 9 10 11 12 +--------+---------------------+ | \u4e2a\u6570 | city | +--------+---------------------+ | 1 | London | | 1 | Munich | | 1 | Oxford | | 21 | Seattle | | 1 | South San Francisco | | 1 | Southlake | | 1 | Toronto | +--------+---------------------+ 7 rows in set ( 0 . 00 sec ) 1.6 \u52a0\u6392\u5e8f \u00b6 1 2 3 4 5 6 7 8 9 10 # \u67e5\u8be2\u6bcf\u4e2a\u5de5\u79cd\u7684\u5de5\u79cd\u540d\u548c\u5458\u5de5\u7684\u4e2a\u6570\uff0c\u5e76\u4e14\u6309\u5458\u5de5\u4e2a\u6570\u964d\u5e8f SELECT job_title , COUNT ( * ) AS \u4e2a\u6570 FROM employees e , jobs j WHERE e . `job_id` = j . `job_id` GROUP BY job_title ORDER BY \u4e2a\u6570 DESC ; 1.7 \u4e09\u8868\u8fde\u63a5 \u00b6 1 2 3 4 5 6 7 8 9 10 11 # \u67e5\u8be2\u5458\u5de5\u540d\u3001\u90e8\u95e8\u540d\u548c\u6240\u5728\u7684\u57ce\u5e02 SELECT last_name , department_name , city FROM employees e , departments d , locations l WHERE e . `department_id` = d . `department_id` AND d . `location_id` = l . `location_id` ; 2. \u975e\u7b49\u503c\u8fde\u63a5 \u00b6 1 2 3 4 5 6 7 8 9 # \u67e5\u8be2\u5458\u5de5\u7684\u5de5\u8d44\u548c\u5de5\u8d44\u7ea7\u522b SELECT salary , grade_level FROM employees e , job_grades g WHERE salary BETWEEN g . lowest_sal AND g . highest_sal ; 3. \u81ea\u8fde\u63a5 \u00b6 1 2 3 4 # \u67e5\u8be2\u5458\u5de5\u540d\u548c\u4e0a\u7ea7\u7684\u540d\u79f0 SELECT e . employee_id , e . last_name , m . employee_id , m . last_name FROM employees e , employees m WHERE e . `manager_id` = m . `employee_id` ; 3.3 SQL99\u8bed\u6cd5 \u00b6 SQL92\u548cSQL99\u7684\u533a\u522b\uff1a \u200b SQL99\uff0c\u4f7f\u7528JOIN\u5173\u952e\u5b57\u4ee3\u66ff\u4e86\u4e4b\u524d\u7684\u9017\u53f7\uff0c\u5e76\u4e14\u5c06\u8fde\u63a5\u6761\u4ef6\u548c\u7b5b\u9009\u6761\u4ef6\u8fdb\u884c\u4e86\u5206\u79bb\uff0c\u63d0\u9ad8\u9605\u8bfb\u6027 \u8bed\u6cd5\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 SELECT \u67e5\u8be2\u5217\u8868 FROM \u8868 1 \u522b\u540d [ \u8fde\u63a5\u7c7b\u578b ] JOIN \u8868 2 \u522b\u540d ON \u8fde\u63a5\u6761\u4ef6 [ WHERE \u7b5b\u9009\u6761\u4ef6 ] [ GROUP BY \u5206\u7ec4 ] [ HAVING \u7b5b\u9009\u6761\u4ef6 ] [ ORDER BY \u6392\u5e8f\u5217\u8868 ] # \u8fde\u63a5\u7c7b\u578b # \u5185\u8fde\u63a5\uff1ainner # \u5916\u8fde\u63a5 # \u5de6\u5916\uff1aleft [outer] # \u53f3\u5916\uff1aright [outer] # \u5168\u5916\uff1afull [outer] # \u4ea4\u53c9\u8fde\u63a5\uff1across 1. \u5185\u8fde\u63a5 \u00b6 \u7279\u70b9\uff1a \u6dfb\u52a0\u6392\u5e8f\u3001\u5206\u7ec4\u3001\u7b5b\u9009 inner\u53ef\u4ee5\u7701\u7565 \u7b5b\u9009\u6761\u4ef6\u653e\u5728where\u540e\u9762\uff0c\u8fde\u63a5\u6761\u4ef6\u653e\u5728on\u540e\u9762\uff0c\u63d0\u9ad8\u5206\u79bb\u6027\uff0c\u4fbf\u4e8e\u9605\u8bfb inner join\u8fde\u63a5\u548csql92\u8bed\u6cd5\u4e2d\u7684\u7b49\u503c\u8fde\u63a5\u6548\u679c\u662f\u4e00\u6837\u7684\uff0c\u90fd\u662f\u67e5\u8be2\u591a\u8868\u7684\u4ea4\u96c6 1.1 \u7b49\u503c\u8fde\u63a5 \u00b6 \u4f8b1 \u67e5\u8be2\u5458\u5de5\u540d\u3001\u90e8\u95e8\u540d 1 2 3 4 5 6 7 SELECT last_name , department_name FROM employees e INNER JOIN departments d ON e . `department_id` = d . `department_id` ; \u67e5\u8be2\u7ed3\u679c 1 2 3 4 5 6 7 8 9 +-------------+-----------------+ | last_name | department_name | +-------------+-----------------+ | Whalen | Adm | ... | Higgins | Acc | | Gietz | Acc | +-------------+-----------------+ 106 rows in set ( 0 . 01 sec ) \u4f8b2 \u67e5\u8be2\u54ea\u4e2a\u90e8\u95e8\u7684\u90e8\u95e8\u5458\u5de5\u4e2a\u6570>3\u7684\u90e8\u95e8\u540d\u548c\u5458\u5de5\u4e2a\u6570\uff0c\u5e76\u6309\u4e2a\u6570\u964d\u5e8f\u6392\u5e8f 1 2 3 4 5 6 7 8 9 10 SELECT department_name , COUNT ( * ) \u5458\u5de5\u4e2a\u6570 FROM departments d INNER JOIN employees e ON d . `department_id` = e . `department_id` GROUP BY d . `department_id` HAVING \u5458\u5de5\u4e2a\u6570 > 3 ORDER BY \u5458\u5de5\u4e2a\u6570 DESC ; \u67e5\u8be2\u7ed3\u679c 1 2 3 4 5 6 7 8 9 10 +-----------------+--------------+ | department_name | \u5458\u5de5\u4e2a\u6570 | +-----------------+--------------+ | Shi | 45 | | Sal | 34 | | Fin | 6 | | Pur | 6 | | IT | 5 | +-----------------+--------------+ 5 rows in set ( 0 . 01 sec ) 1.2 \u975e\u7b49\u503c\u8fde\u63a5 \u00b6 \u4f8b1 \u67e5\u8be2\u5458\u5de5\u7684\u5de5\u8d44\u7ea7\u522b 1 2 3 4 5 6 7 8 SELECT salary , grade_level FROM employees e INNER JOIN job_grades g ON e . `salary` BETWEEN g . `lowest_sal` AND g . `highest_sal` ; \u4f8b2 \u67e5\u8be2\u6bcf\u4e2a\u5de5\u8d44\u7ea7\u522b>20\u7684\u4e2a\u6570\uff0c\u5e76\u4e14\u6309\u5de5\u8d44\u7ea7\u522b\u964d\u5e8f 1 2 3 4 5 6 7 8 9 10 11 SELECT COUNT ( * ), grade_level FROM employees e INNER JOIN job_grades g ON e . `salary` BETWEEN g . `lowest_sal` AND g . `highest_sal` GROUP BY grade_level HAVING COUNT ( * ) > 20 ORDER BY grade_level DESC ; \u67e5\u8be2\u7ed3\u679c 1 2 3 4 5 6 7 8 +----------+-------------+ | COUNT ( * ) | grade_level | +----------+-------------+ | 38 | C | | 26 | B | | 24 | A | +----------+-------------+ 3 rows in set ( 0 . 01 sec ) 1.3 \u81ea\u8fde\u63a5 \u00b6 \u4f8b1 \u67e5\u8be2\u5458\u5de5\u7684\u540d\u5b57\u3001\u4e0a\u7ea7\u7684\u540d\u5b57 1 2 3 4 5 6 7 SELECT e . last_name , m . last_name FROM employees e INNER JOIN employees m ON e . `manager_id` = m . `employee_id` ; 2. \u5916\u8fde\u63a5 \u00b6 \u5e94\u7528\u573a\u666f\uff1a\u7528\u4e8e\u67e5\u8be2\u4e00\u4e2a\u8868\u4e2d\u6709\uff0c\u53e6\u4e00\u4e2a\u8868\u6ca1\u6709\u7684\u8bb0\u5f55 \u7279\u70b9\uff1a \u5916\u8fde\u63a5\u7684\u67e5\u8be2\u7ed3\u679c\u4e3a\u4e3b\u8868\u4e2d\u7684\u6240\u6709\u8bb0\u5f55\uff0c\u5982\u679c\u4ece\u8868\u4e2d\u6709\u548c\u5b83\u5339\u914d\u7684\uff0c\u5219\u663e\u793a\u5339\u914d\u7684\u503c\uff0c\u5982\u679c\u4ece\u8868\u4e2d\u6ca1\u6709\u548c\u5b83\u5339\u914d\u7684\uff0c\u5219\u663e\u793anull \u5916\u8fde\u63a5\u67e5\u8be2\u7ed3\u679c=\u5185\u8fde\u63a5\u7ed3\u679c+\u4e3b\u8868\u4e2d\u6709\u800c\u4ece\u8868\u4e2d\u6ca1\u6709\u7684\u8bb0\u5f55 \u5de6\u5916\u8fde\u63a5\uff1aleft join\u5de6\u8fb9\u7684\u662f\u4e3b\u8868 \u53f3\u5916\u8fde\u63a5\uff1aright join\u53f3\u8fb9\u7684\u662f\u4e3b\u8868 \u5de6\u5916\u548c\u53f3\u5916\u4ea4\u6362\u4e24\u4e2a\u8868\u7684\u987a\u5e8f\uff0c\u53ef\u4ee5\u5b9e\u73b0\u540c\u6837\u7684\u6548\u679c \u5168\u5916\u8fde\u63a5=\u5185\u8fde\u63a5\u7684\u7ed3\u679c+\u88681\u4e2d\u6709\u4f46\u88682\u4e2d\u6ca1\u6709\u7684+\u88682\u4e2d\u6709\u4f46\u88681\u4e2d\u6ca1\u6709\u7684 2.1 \u5de6\u5916\u8fde\u63a5 \u00b6 1 2 3 4 5 6 7 8 9 # \u67e5\u8be2\u54ea\u4e2a\u90e8\u95e8\u6ca1\u6709\u5458\u5de5 SELECT d . * , e . employee_id FROM departments d LEFT OUTER JOIN employees e ON d . `department_id` = e . `department_id` WHERE e . `employee_id` IS NULL ; 2.2 \u53f3\u5916\u8fde\u63a5 \u00b6 1 2 3 4 5 6 7 8 SELECT d . * , e . employee_id FROM employees e RIGHT OUTER JOIN departments d ON d . `department_id` = e . `department_id` WHERE e . `employee_id` IS NULL ; 3.3 \u5168\u5916\u8fde\u63a5\uff08mysql\u4e0d\u652f\u6301\uff09 \u00b6 3. \u4ea4\u53c9\u8fde\u63a5\uff08\u7b1b\u5361\u5c14\u4e58\u79ef\uff09 \u00b6 4.\u5b50\u67e5\u8be2 \u00b6 \u5f53\u4e00\u4e2a\u67e5\u8be2\u8bed\u53e5\u4e2d\u53c8\u5d4c\u5957\u4e86\u53e6\u4e00\u4e2a\u5b8c\u6574\u7684select\u8bed\u53e5\uff0c\u5219\u88ab\u5d4c\u5957\u7684select\u8bed\u53e5\u79f0\u4e3a\u5b50\u67e5\u8be2\u6216\u5185\u67e5\u8be2\uff0c\u5916\u9762\u7684select\u8bed\u53e5\u79f0\u4e3a\u4e3b\u67e5\u8be2\u6216\u5916\u67e5\u8be2\u3002 \u5206\u7c7b\uff1a \u6309\u5b50\u67e5\u8be2\u51fa\u73b0\u7684\u4f4d\u7f6e\uff1a select\u540e\u9762\uff1a\u8981\u6c42\u5b50\u67e5\u8be2\u7684\u7ed3\u679c\u4e3a\u5355\u884c\u5355\u5217\uff08\u79f0\u4e3a\u6807\u91cf\u5b50\u67e5\u8be2\uff09 from\u540e\u9762\uff1a\u8981\u6c42\u5b50\u67e5\u8be2\u7684\u7ed3\u679c\u53ef\u4ee5\u4e3a\u591a\u884c\u591a\u5217 where\u6216having\u540e\u9762\uff1a\u8981\u6c42\u5b50\u67e5\u8be2\u7684\u7ed3\u679c\u5fc5\u987b\u4e3a\u5355\u5217\uff08\u5355\u5217\u53c8\u5206\u4e3a\u5355\u884c\u5b50\u67e5\u8be2\u548c\u591a\u884c\u5b50\u67e5\u8be2\uff09 exists\u540e\u9762\uff08\u76f8\u5173\u5b50\u67e5\u8be2\uff09\uff1a\u8981\u6c42\u5b50\u67e5\u8be2\u7ed3\u679c\u5fc5\u987b\u4e3a\u5355\u5217\uff08\u76f8\u5173\u5b50\u67e5\u8be2\uff09 \u6309\u529f\u80fd\u3001\u7ed3\u679c\u96c6\u7684\u884c\u5217\u6570\u4e0d\u540c\uff1a \u6807\u91cf\u5b50\u67e5\u8be2\uff08\u7ed3\u679c\u96c6\u53ea\u6709\u4e00\u884c\u4e00\u5217\uff09 \u5217\u5b50\u67e5\u8be2\uff08\u7ed3\u679c\u96c6\u53ea\u6709\u4e00\u5217\u591a\u884c\uff09 \u884c\u5b50\u67e5\u8be2\uff08\u7ed3\u679c\u96c6\u6709\u4e00\u884c\u591a\u5217\uff09 \u8868\u5b50\u67e5\u8be2\uff08\u7ed3\u679c\u96c6\u4e00\u822c\u4e3a\u591a\u884c\u591a\u5217\uff09 \u7279\u70b9\uff1a \u5b50\u67e5\u8be2\u653e\u5728\u6761\u4ef6\u4e2d\uff0c\u8981\u6c42\u5fc5\u987b\u653e\u5728\u6761\u4ef6\u7684\u53f3\u4fa7 \u5b50\u67e5\u8be2\u4e00\u822c\u653e\u5728\u5c0f\u62ec\u53f7\u4e2d \u5b50\u67e5\u8be2\u7684\u6267\u884c\u4f18\u5148\u4e8e\u4e3b\u67e5\u8be2 \u5355\u884c\u5b50\u67e5\u8be2\u642d\u914d\u5355\u884c\u64cd\u4f5c\u7b26\uff1a > < >= <= = <> \u591a\u884c\u5b50\u67e5\u8be2\u642d\u914d\u591a\u884c\u64cd\u4f5c\u7b26\uff1a any/some all in 4.1 where\u6216HAVING\u540e\u9762 \u00b6 4.1.1 \u6807\u91cf\u5b50\u67e5\u8be2\uff08\u5355\u884c\u5b50\u67e5\u8be2\uff09 \u00b6 \u4f8b1\uff1a\u8c01\u7684\u5de5\u8d44\u6bd4 Abel \u9ad8 1 2 3 4 5 6 7 8 SELECT last_name , salary FROM employees WHERE salary > ( SELECT salary FROM employees WHERE last_name = 'Abel' ); \u4f8b2\uff1a\u8fd4\u56dejob_id\u4e0e141\u53f7\u5458\u5de5\u76f8\u540c\uff0csalary\u6bd4143\u5458\u5de5\u591a\u7684\u5458\u5de5\uff0c\u59d3\u540d\uff0cjob_id\uff0c\u5de5\u8d44 \u2460\u67e5\u8be2141\u53f7\u5458\u5de5\u7684job_id 1 2 3 SELECT job_id FROM employees WHERE employee_id = 141 ; \u67e5\u8be2\u7ed3\u679c 1 2 3 4 5 +----------+ | job_id | +----------+ | ST_CLERK | +----------+ \u2461\u67e5\u8be2143\u53f7\u5458\u5de5\u7684salary 1 2 3 SELECT salary FROM employees WHERE employee_id = 143 ; \u67e5\u8be2\u7ed3\u679c 1 2 3 4 5 +---------+ | salary | +---------+ | 2600 . 00 | +---------+ \u2462\u67e5\u8be2job_id=\u2460 and salary>\u2461\u7684\u4fe1\u606f 1 2 3 4 5 6 7 8 9 10 11 12 SELECT last_name , job_id , salary FROM employees WHERE job_id = ( SELECT job_id FROM employees WHERE employee_id = 141 ) AND salary > ( SELECT salary FROM employees WHERE employee_id = 143 ); \u67e5\u8be2\u7ed3\u679c 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 +-------------+----------+---------+ | last_name | job_id | salary | +-------------+----------+---------+ | Nayer | ST_CLERK | 3200 . 00 | | Mikkilineni | ST_CLERK | 2700 . 00 | | Bissot | ST_CLERK | 3300 . 00 | | Atkinson | ST_CLERK | 2800 . 00 | | Mallin | ST_CLERK | 3300 . 00 | | Rogers | ST_CLERK | 2900 . 00 | | Ladwig | ST_CLERK | 3600 . 00 | | Stiles | ST_CLERK | 3200 . 00 | | Seo | ST_CLERK | 2700 . 00 | | Rajs | ST_CLERK | 3500 . 00 | | Davies | ST_CLERK | 3100 . 00 | +-------------+----------+---------+ \u4f8b3\uff1a\u8fd4\u56de\u516c\u53f8\u5de5\u8d44\u6700\u5c11\u7684\u5458\u5de5\u7684last_name,job_id\u548csalary 1 2 3 4 5 6 SELECT last_name , job_id , salary FROM employees WHERE salary = ( SELECT MIN ( salary ) FROM employees ); \u4f8b4\uff1a\u67e5\u8be2\u6700\u4f4e\u5de5\u8d44\u5927\u4e8e50\u53f7\u90e8\u95e8\u6700\u4f4e\u5de5\u8d44\u7684\u90e8\u95e8id\u548c\u5176\u6700\u4f4e\u5de5\u8d44 1 2 3 4 5 6 7 8 9 SELECT MIN ( salary ), department_id FROM employees GROUP BY department_id HAVING MIN ( salary ) > ( SELECT MIN ( salary ) FROM employees WHERE department_id = 50 ); 4.1.2 \u5217\u5b50\u67e5\u8be2\uff08\u591a\u884c\u5b50\u67e5\u8be2\uff09 \u00b6 \u591a\u884c\u6bd4\u8f83\u64cd\u4f5c\u7b26\uff1a IN / NOT IN \uff1a\u7b49\u4e8e\u5217\u8868\u4e2d\u7684\u4efb\u610f\u4e00\u4e2a ANY | SOME \uff1a\u548c\u5b50\u67e5\u8be2\u8fd4\u56de\u7684\u67d0\u4e00\u4e2a\u503c\u6bd4\u8f83\uff0c\u7528\u7684\u8f83\u5c11 ALL \uff1a\u548c\u5b50\u67e5\u8be2\u8fd4\u56de\u7684\u6240\u6709\u503c\u6bd4\u8f83 \u5176\u4e2dIN\u548cNOT IN\u7528\u7684\u6bd4\u8f83\u591a\uff0c\u5176\u4ed6\u4e24\u4e2a\u7528\u7684\u6bd4\u8f83\u5c11\uff0c\u56e0\u4e3a\u5176\u53ef\u8bfb\u6027\u8f83\u5dee\uff0c\u53ef\u4ee5\u7528\u5176\u4ed6\u65b9\u5f0f\u6765\u66ff\u4ee3\u3002\u6bd4\u5982\u4ee5\u4e0b\uff1a 1 2 3 4 5 6 # 1. any/some:\u5224\u65ad\u67d0\u5b57\u6bb5\u7684\u503c\u662f\u5426\u6ee1\u8db3\u5176\u4e2d\u4efb\u610f\u4e00\u4e2a x > any ( 10 , 30 , 50 ) \u53ef\u4ee5\u7528 x > min ( 10 , 30 , 50 ) \u66ff\u4ee3 x = any ( 10 , 30 , 50 ) \u53ef\u4ee5\u7528 x in ( 10 , 30 , 50 ) \u66ff\u4ee3 # 2. all:\u5224\u65ad\u67d0\u5b57\u6bb5\u7684\u503c\u662f\u5426\u6ee1\u8db3\u91cc\u9762\u6240\u6709\u7684 x > all ( 10 , 30 , 50 ) \u53ef\u4ee5\u7528 x > max ( 10 , 30 , 50 ) \u66ff\u4ee3 \u4f8b1\uff1a\u8fd4\u56delocation_id\u662f1400\u62161700\u7684\u90e8\u95e8\u4e2d\u7684\u6240\u6709\u5458\u5de5\u59d3\u540d 1 2 3 4 5 6 7 SELECT last_name FROM employees WHERE department_id IN ( SELECT DISTINCT department_id FROM departments WHERE location_id IN ( 1400 , 1700 ) ); \u4f8b2\uff1a\u8fd4\u56de\u5176\u4ed6\u5de5\u79cd\u4e2d\u6bd4job_id\u4e3a\u2018IT_PROG\u2019\u5de5\u79cd\u4efb\u4e00\u5de5\u8d44\u4f4e\u7684\u5458\u5de5\u7684\u5458\u5de5\u53f7\u3001\u59d3\u540d\u3001job_id\u4ee5\u53casalary 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 SELECT employee_id , last_name , job_id , salary FROM employees WHERE salary < ANY ( SELECT DISTINCT salary FROM employees WHERE job_id = 'IT_PROG' ); # \u7528max\u4ee3\u66ffany SELECT employee_id , last_name , job_id , salary FROM employees WHERE salary < ( SELECT MAX ( salary ) FROM employees WHERE job_id = 'IT_PROG' ); \u4f8b3\uff1a\u8fd4\u56de\u5176\u4ed6\u5de5\u79cd\u4e2d\u6bd4job_id\u4e3a\u2018IT_PROG\u2019\u5de5\u79cd\u6240\u6709\u5de5\u8d44\u90fd\u4f4e\u7684\u5458\u5de5\u7684\u5458\u5de5\u53f7\u3001\u59d3\u540d\u3001job_id\u4ee5\u53casalary 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 SELECT employee_id , last_name , job_id , salary FROM employees WHERE salary < ALL ( SELECT DISTINCT salary FROM employees WHERE job_id = 'IT_PROG' ); # \u7528min\u4ee3\u66ffall SELECT employee_id , last_name , job_id , salary FROM employees WHERE salary < ( SELECT MIN ( salary ) FROM employees WHERE job_id = 'IT_PROG' ); 4.1.3 \u884c\u5b50\u67e5\u8be2\uff08\u4e00\u884c\u591a\u7d2f\u6216\u591a\u884c\u591a\u5217\uff09 \u00b6 \u4f8b1\uff1a\u67e5\u8be2\u5458\u5de5\u7f16\u53f7\u6700\u5c0f\u5e76\u4e14\u5de5\u8d44\u6700\u9ad8\u7684\u5458\u5de5\u4fe1\u606f 1 2 3 4 5 6 7 8 SELECT * FROM employees WHERE ( employee_id , salary ) = ( SELECT MIN ( employee_id ), MAX ( salary ) FROM employees ) ; \u7528\u7684\u60c5\u51b5\u8f83\u5c11 4.2 select\u540e\u9762 \u00b6 \u4f8b1\uff1a\u67e5\u8be2\u6bcf\u4e2a\u90e8\u95e8\u7684\u5458\u5de5\u4e2a\u6570 1 2 3 4 5 6 SELECT d . * , ( SELECT COUNT ( * ) FROM employees e WHERE e . department_id = d . department_Id ) \u4e2a\u6570 FROM departments d ; 4.3 from\u540e\u9762 \u00b6 \u4f8b\uff1a\u67e5\u8be2\u6bcf\u4e2a\u90e8\u95e8\u7684\u5e73\u5747\u5de5\u8d44\u7684\u5de5\u8d44\u7ea7\u522b 1 2 3 4 5 6 7 8 9 10 11 12 13 SELECT ag_dep . * , g . `grade_level` FROM ( SELECT AVG ( salary ) ag , department_id FROM employees GROUP BY department_id ) ag_dep INNER JOIN job_grades g ON ag_dep . ag BETWEEN g . `lowest_sal` AND g . `highest_sal` ; \u5c06\u5b50\u67e5\u8be2\u7ed3\u679c\u5145\u5f53\u4e00\u5f20\u8868\uff0c\u8981\u6c42\u5fc5\u987b\u8d77\u522b\u540d 4.4 exists\u540e\u9762 \u00b6 \u8bed\u6cd5\uff1a exists\uff08\u5b8c\u6574\u7684\u67e5\u8be2\u8bed\u53e5\uff09 \uff0c\u67e5\u8be2\u6709\u7ed3\u679c\u8fd4\u56de1\uff0c\u5426\u5219\u8fd4\u56de0 \u4f8b1\uff1a\u67e5\u8be2\u6709\u5458\u5de5\u7684\u90e8\u95e8\u540d 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 SELECT department_name FROM departments d WHERE EXISTS ( SELECT * FROM employees e WHERE d . `department_id` = e . `department_id` ) ; # \u7528in\u66f4\u7b80\u5355 SELECT department_name FROM departments d WHERE d . `department_id` IN ( SELECT department_id FROM employees e ) ; \u53ef\u4ee5\u7528\u5176\u4ed6\u65b9\u5f0f\u4ee3\u66ff\uff0c\u7528\u7684\u8f83\u5c11 5. \u5206\u9875\u67e5\u8be2 \u00b6 \u5e94\u7528\u573a\u666f\uff1a\u5f53\u8981\u663e\u793a\u7684\u6570\u636e\uff0c\u4e00\u9875\u663e\u793a\u4e0d\u5168\uff0c\u9700\u8981\u5206\u9875\u63d0\u4ea4sql\u8bf7\u6c42 \u8bed\u6cd5\uff1a 1 2 3 4 5 6 7 8 9 10 11 select \u67e5\u8be2\u5217\u8868 from \u8868 [ join type ] join \u8868 2 on \u8fde\u63a5\u6761\u4ef6 where \u7b5b\u9009\u6761\u4ef6 group by \u5206\u7ec4\u5b57\u6bb5 having \u5206\u7ec4\u540e\u7684\u7b5b\u9009 order by \u6392\u5e8f\u7684\u5b57\u6bb5\u3011 limit [ offset \uff0c ] size \uff1b # offset\uff1a\u8981\u663e\u793a\u6761\u76ee\u7684\u8d77\u59cb\u7d22\u5f15\uff08\u4e0d\u5199\u4ece0\u5f00\u59cb\uff09 # size\uff1a\u8981\u663e\u793a\u7684\u6761\u76ee\u4e2a\u6570 \u516c\u5f0f\uff1a 1 2 3 4 select \u67e5\u8be2\u5217\u8868 from \u8868 limit ( page - 1 ) * size \uff0c size \uff1b # \u8981\u663e\u793a\u7684\u9875\u6570page\uff0c\u6bcf\u9875\u7684\u6761\u76ee\u6570size \u4f8b1\uff1a\u67e5\u8be2\u524d5\u6761\u5458\u5de5\u4fe1\u606f 1 2 3 SELECT * FROM employees LIMIT 0 , 5 ; \u6216\u8005 SELECT * FROM employees LIMIT 5 ; \u4f8b2\uff1a\u67e5\u8be2\u7b2c11\u6761-\u7b2c25\u6761 1 SELECT * FROM employees LIMIT 10 , 15 ; 6. \u8054\u5408\u67e5\u8be2 \u00b6 union \uff1a\u5c06\u591a\u6761\u67e5\u8be2\u8bed\u53e5\u7684\u7ed3\u679c\u5408\u5e76\u6210\u4e00\u4e2a\u7ed3\u679c \u8bed\u6cd5\uff1a 1 2 3 \u67e5\u8be2\u8bed\u53e5 1 union [ ALL ] \u67e5\u8be2\u8bed\u53e5 2 \u5e94\u7528\u573a\u666f\uff1a\u8981\u67e5\u8be2\u7684\u7ed3\u679c\u6765\u81ea\u4e8e\u591a\u4e2a\u8868\uff0c\u4e14\u591a\u4e2a\u8868\u6ca1\u6709\u76f4\u63a5\u7684\u8fde\u63a5\u5173\u7cfb\uff0c\u4f46\u67e5\u8be2\u7684\u4fe1\u606f\u4e00\u81f4 \u3002 \u7279\u70b9\uff1a \u8981\u6c42\u591a\u6761\u67e5\u8be2\u8bed\u53e5\u7684\u67e5\u8be2\u5217\u6570\u662f\u4e00\u81f4\u7684 \u8981\u6c42\u591a\u6761\u67e5\u8be2\u8bed\u53e5\u7684\u67e5\u8be2\u7684\u6bcf\u4e00\u5217\u7684\u7c7b\u578b\u548c\u987a\u5e8f\u6700\u597d\u662f\u4e00\u81f4\u7684 union\u5173\u952e\u5b57\u9ed8\u8ba4\u53bb\u91cd\uff0c\u5982\u679c\u4f7f\u7528union all\u53ef\u4ee5\u5305\u542b\u91cd\u590d\u9879 \u4f8b\uff1a\u67e5\u8be2\u90e8\u95e8\u7f16\u53f7>90\u6216\u90ae\u7bb1\u5305\u542ba\u7684\u5458\u5de5\u4fe1\u606f 1 2 3 4 5 6 7 8 9 10 11 SELECT * FROM employees WHERE email LIKE \"%a%\" UNION SELECT * FROM employees WHERE department_id > 90 ; 7. \u522b\u540d \u00b6 \u4f5c\u7528\uff1a \u63d0\u9ad8\u8bed\u53e5\u7684\u7b80\u6d01\u5ea6 \u533a\u5206\u591a\u4e2a\u91cd\u540d\u7684\u5b57\u6bb5 \u5982\u679c\u4e3a\u8868\u8d77\u4e86\u522b\u540d\uff0c\u5219\u67e5\u8be2 \u7684\u5b57\u6bb5\u5c31\u4e0d\u80fd\u4f7f\u7528\u539f\u59cb\u7684\u8868\u660e\u53bb\u9650\u5b9a 7.1 \u5b57\u6bb5\u522b\u540d \u00b6 1 2 3 4 5 6 7 8 SELECT city . name AS \u57ce\u5e02 , country . name AS \u56fd\u5bb6 , country . SurfaceArea AS \u9762\u79ef , city . Population AS \u57ce\u5e02\u4eba\u53e3 FROM city JOIN country ON city . CountryCode = country . Code WHERE city . name = 'shenyang' ; \u67e5\u8be2\u7ed3\u679c 1 2 3 4 5 6 +----------+--------+------------+--------------+ | \u57ce\u5e02 | \u56fd\u5bb6 | \u9762\u79ef | \u57ce\u5e02\u4eba\u53e3 | +----------+--------+------------+--------------+ | Shenyang | China | 9572900 . 00 | 4265200 | +----------+--------+------------+--------------+ 1 row in set ( 0 . 01 sec ) 7.2 \u8868\u522b\u540d \u00b6 1 2 3 4 5 6 7 8 SELECT a . name AS \u57ce\u5e02 , b . name AS \u56fd\u5bb6 , b . SurfaceArea AS \u9762\u79ef , a . Population AS \u57ce\u5e02\u4eba\u53e3 FROM city AS a JOIN country AS b ON a . CountryCode = b . Code WHERE a . name = 'shenyang' ; \u67e5\u8be2\u7ed3\u679c 1 2 3 4 5 6 +----------+--------+------------+--------------+ | \u57ce\u5e02 | \u56fd\u5bb6 | \u9762\u79ef | \u57ce\u5e02\u4eba\u53e3 | +----------+--------+------------+--------------+ | Shenyang | China | 9572900 . 00 | 4265200 | +----------+--------+------------+--------------+ 1 row in set ( 0 . 01 sec ) AS \u53ef\u4ee5\u7701\u7565 \u5982\u679c\u522b\u540d\u6709\u7279\u6b8a\u7b26\u53f7\u8981\u52a0\u53cc\u5f15\u53f7 \u56db\u3001TCL \u00b6 1. \u4e8b\u52a1 \u00b6 1.1 \u4e8b\u52a1\u7684\u542b\u4e49 \u00b6 \u4e00\u4e2a\u6216\u4e00\u7ec4sql\u8bed\u53e5\u7ec4\u6210\u4e00\u4e2a\u6267\u884c\u5355\u5143\uff0c\u8fd9\u4e2a\u6267\u884c\u5355\u5143\u8981\u4e48\u5168\u90e8\u6267\u884c\uff0c\u8981\u4e48\u5168\u90e8\u4e0d\u6267\u884c\u3002 1.2 \u4e8b\u52a1\u7684ACID\u5c5e\u6027 \u00b6 \u539f\u5b50\u6027\uff08Atomicity\uff09\uff1a\u539f\u5b50\u6027\u662f\u6307\u4e8b\u52a1\u662f\u4e00\u4e2a\u4e0d\u53ef\u5206\u5272\u7684\u5de5\u4f5c\u5355\u4f4d\uff0c\u4e8b\u52a1\u4e2d\u7684\u64cd\u4f5c\u8981\u4e48\u90fd\u53d1\u751f\uff0c\u8981\u4e48\u90fd\u4e0d\u53d1\u751f\u3002 \u4e00\u81f4\u6027\uff08Consistency\uff09\uff1a\u4e8b\u52a1\u5fc5\u987b\u4f7f\u6570\u636e\u5e93\u4ece\u4e00\u4e2a\u4e00\u81f4\u6027\u72b6\u6001\u53d8\u6362\u5230\u53e6\u5916\u4e00\u4e2a\u4e00\u81f4\u6027\u72b6\u6001\u3002 \u9694\u79bb\u6027\uff08Isolation\uff09\uff1a\u4e8b\u52a1\u7684\u9694\u79bb\u6027\u662f\u6307\u4e00\u4e2a\u4e8b\u52a1\u7684\u6267\u884c\u4e0d\u80fd\u88ab\u5176\u4ed6\u4e8b\u52a1\u5e72\u6270\uff0c\u5373\u4e00\u4e2a\u4e8b\u52a1\u5185\u90e8\u7684\u64cd\u4f5c\u53ca\u4f7f\u7528\u7684\u6570\u636e\u5bf9\u5e76\u53d1\u7684\u5176\u4ed6\u4e8b\u52a1\u662f\u9694\u79bb\u7684\uff0c\u5e76\u53d1\u6267\u884c\u7684\u5404\u4e2a\u4e8b\u52a1\u4e4b\u95f4\u4e0d\u80fd\u4e92\u76f8\u5e72\u6270\u3002 \u6301\u4e45\u6027\uff08Durability\uff09\uff1a\u6301\u4e45\u6027\u662f\u6307\u4e00\u4e2a\u4e8b\u52a1\u4e00\u65e6\u88ab\u63d0\u4ea4\uff0c\u5b83\u5bf9\u6570\u636e\u5e93\u4e2d\u6570\u636e\u7684\u6539\u53d8\u5c31\u662f\u6c38\u4e45\u6027\u7684\uff0c\u63a5\u4e0b\u6765\u7684\u5176\u4ed6\u64cd\u4f5c\u548c\u6570\u636e\u5e93\u6545\u969c\u4e0d\u5e94\u8be5\u5bf9\u5176\u6709\u4efb\u4f55\u5f71\u54cd\u3002 1.2 \u4e8b\u52a1\u7684\u5206\u7c7b \u00b6 \u9690\u5f0f\u4e8b\u52a1\uff1a\u4e8b\u52a1\u6ca1\u6709\u660e\u663e\u7684\u5f00\u542f\u548c\u7ed3\u675f\u7684\u6807\u8bb0\u3002\u6bd4\u5982insert\u3001update\u3001delete\u8bed\u53e5 \u663e\u5f0f\u4e8b\u52a1\uff1a\u4e8b\u52a1\u5177\u6709\u660e\u663e\u7684\u5f00\u542f\u548c\u7ed3\u675f\u7684\u6807\u8bb0 1.3 \u4e8b\u52a1\u7684\u521b\u5efa \u00b6 1.3.1 \u5f00\u542f\u4e8b\u52a1 \u00b6 1 2 SET autocommit = 0 ; # \u5148\u8bbe\u7f6e\u81ea\u52a8\u63d0\u4ea4\u529f\u80fd\u4e3a\u7981\u7528 START TRANSACTION ; \uff08\u53ef\u9009\uff09 1.3.2 \u7f16\u5199\u4e8b\u52a1\u4e2d\u7684sql\u8bed\u53e5 \u00b6 \u5305\u62ec select \uff0c insert \uff0c update \uff0c delete \uff08\u53ea\u6709\u589e\u5220\u6539\u67e5\uff0c\u4e0d\u5305\u62ecDDL\u8bed\u8a00\uff09 1.3.3 \u7ed3\u675f\u4e8b\u52a1 \u00b6 \u6709\u4e24\u79cd\u7ed3\u675f\u4e8b\u52a1\u7684\u65b9\u5f0f commit \uff1b\u63d0\u4ea4\u4e8b\u52a1 rollback \uff1b\u56de\u6eda\u4e8b\u52a1 1.4 \u8bbe\u7f6e\u4fdd\u5b58\u70b9 \u00b6 savepoint \u7ed3\u70b9\u540d 1 2. \u6570\u636e\u5e93\u7684\u9694\u79bb\u7ea7\u522b \u00b6 2.1 \u6ca1\u6709\u9694\u79bb\u5e26\u6765\u7684\u95ee\u9898 \u00b6 \u5bf9\u4e8e\u540c\u65f6\u8fd0\u884c\u7684\u591a\u4e2a\u4e8b\u52a1\uff0c\u5f53\u8fd9\u4e9b\u4e8b\u52a1\u8bbf\u95ee\u6570\u636e\u5e93\u4e2d\u76f8\u540c\u7684\u6570\u636e\u65f6\uff0c\u5982\u679c\u6ca1\u6709\u91c7\u53d6\u5fc5\u8981\u7684\u9694\u79bb\u673a\u5236\uff0c\u5c31\u4f1a\u5bfc\u81f4\u5404\u79cd\u5e76\u53d1\u95ee\u9898\uff1a \u810f\u8bfb \uff1a\u5bf9\u4e8e\u4e24\u4e2a\u4e8b\u52a1T1\uff0cT2\u3002T1\u8bfb\u53d6\u4e86\u5df2\u7ecf\u88abT2\u66f4\u65b0\u4f46\u8fd8\u6ca1\u6709\u88ab\u63d0\u4ea4\u7684\u5b57\u6bb5\u4e4b\u540e\uff0c\u82e5T2\u56de\u6eda\uff0cT1\u8bfb\u53d6\u7684\u5185\u5bb9\u5c31\u662f\u4e34\u65f6\u4e14\u65e0\u6548\u7684\u3002\u4e3b\u8981\u662f\u5176\u4ed6\u4e8b\u52a1 \u66f4\u65b0 \u7684\u6570\u636e \u4e0d\u53ef\u91cd\u590d\u8bfb \uff1a\u5bf9\u4e8e\u4e24\u4e2a\u4e8b\u52a1T1\uff0cT2\u3002T1\u8bfb\u53d6\u4e86\u4e00\u4e2a\u5b57\u6bb5\uff0c\u7136\u540eT2\u66f4\u65b0\u4e86\u8be5\u5b57\u6bb5\u4e4b\u540e\uff0cT1\u518d\u6b21\u8bfb\u53d6\u540c\u4e00\u4e2a\u5b57\u6bb5\uff0c\u503c\u5c31\u4e0d\u540c\u4e86\u3002 \u5e7b\u8bfb \uff1a\u5bf9\u4e8e\u4e24\u4e2a\u4e8b\u52a1T1\uff0cT2\u3002T1\u4ece\u4e00\u4e2a\u8868\u4e2d\u8bfb\u53d6\u4e86\u4e00\u4e2a\u5b57\u6bb5\uff0c\u7136\u540eT2\u5728\u8be5\u8868\u4e2d\u63d2\u5165\u4e86\u4e00\u4e9b\u65b0\u7684\u884c\u4e4b\u540e\uff0c\u5982\u679cT1\u518d\u6b21\u8bfb\u53d6\u540c\u4e00\u4e2a\u8868\uff0c\u5c31\u4f1a\u591a\u51fa\u51e0\u884c\u3002\u4e3b\u8981\u662f\u5176\u4ed6\u4e8b\u52a1 \u63d2\u5165 \u7684\u6570\u636e \u6570\u636e\u5e93\u4e8b\u52a1\u7684\u9694\u79bb\u6027 \uff1a\u6570\u636e\u5e93\u7cfb\u7edf\u5fc5\u987b\u5177\u6709\u9694\u79bb\u5e76\u53d1\u8fd0\u884c\u5404\u4e2a\u4e8b\u52a1\u7684\u80fd\u529b\uff0c\u4f7f\u4ed6\u4eec\u4e0d\u4f1a\u76f8\u4e92\u5f71\u54cd\uff0c\u907f\u514d\u5404\u79cd\u5e76\u53d1\u95ee\u9898\u3002 2.2 \u9694\u79bb\u7ea7\u522b \u00b6 \u4e00\u4e2a\u4e8b\u52a1\u4e0e\u5176\u4ed6\u4e8b\u52a1\u9694\u79bb\u7684\u7a0b\u5ea6\u79f0\u4e3a\u9694\u79bb\u7ea7\u522b\u3002 \u6570\u636e\u5e93\u89c4\u5b9a\u4e86\u591a\u79cd\u4e8b\u52a1\u9694\u79bb\u7ea7\u522b\uff0c\u4e0d\u540c\u9694\u79bb\u7ea7\u522b\u5bf9\u5e94\u4e0d\u540c\u7684\u5e72\u6270\u7a0b\u5ea6\uff0c\u9694\u79bb\u7ea7\u522b\u8d8a\u9ad8\uff0c\u6570\u636e\u4e00\u81f4\u6027\u5c31\u8d8a\u597d\uff0c\u4f46\u5e76\u53d1\u6027\u5f31\u3002 \u6570\u636e\u5e93\u63d0\u4f9b\u76844\u79cd\u4e8b\u52a1\u9694\u79bb\u7ea7\u522b\uff1a \u9694\u79bb\u7ea7\u522b \u63cf\u8ff0 READ UNCOMMITTED(\u8bfb\u672a\u63d0\u4ea4\u6570\u636e) \u5141\u8bb8\u4e8b\u52a1\u8bfb\u53d6\u672a\u88ab\u5176\u4ed6\u4e8b\u52a1\u63d0\u4ea4\u7684\u53d8\u66f4\u3002\u810f\u8bfb\uff0c\u4e0d\u53ef\u91cd\u590d\u8bfb\u548c\u5e7b\u8bfb\u7684\u95ee\u9898\u90fd\u4f1a\u51fa\u73b0\u3002 READ COMMITED(\u8bfb\u5df2\u63d0\u4ea4\u6570\u636e) \u53ea\u5141\u8bb8\u4e8b\u52a1\u8bfb\u53d6\u5df2\u7ecf\u88ab\u5176\u4ed6\u4e8b\u52a1\u63d0\u4ea4\u7684\u53d8\u66f4\u3002\u53ef\u4ee5\u907f\u514d\u810f\u8bfb\uff0c\u4f46\u4e0d\u53ef\u91cd\u590d\u8bfb\u548c\u5e7b\u8bfb\u95ee\u9898\u4ecd\u7136\u53ef\u80fd\u51fa\u73b0\u3002 REPEATABLE READ(\u53ef\u91cd\u590d\u8bfb) \u786e\u4fdd\u4e8b\u52a1\u53ef\u4ee5\u591a\u6b21\u4ece\u4e00\u4e2a\u5b57\u6bb5\u4e2d\u8bfb\u53d6\u76f8\u540c\u7684\u503c\u3002\u5728\u8fd9\u4e2a\u4e8b\u52a1\u6301\u7eed\u671f\u95f4\uff0c\u7981\u6b62\u5176\u4ed6\u4e8b\u52a1\u5bf9\u8fd9\u4e2a\u5b57\u6bb5\u8fdb\u884c\u66f4\u65b0\u3002\u53ef\u4ee5\u907f\u514d\u810f\u8bfb\u548c\u4e0d\u53ef\u91cd\u590d\u8bfb\uff0c\u4f46\u5e7b\u8bfb\u7684\u95ee\u9898\u4ecd\u7136\u5b58\u5728\u3002 SERIALLIZABLE(\u4e32\u884c\u5316) \u786e\u4fdd\u4e8b\u52a1\u53ef\u4ee5\u4ece\u4e00\u4e2a\u8868\u4e2d\u8bfb\u53d6\u76f8\u540c\u7684\u884c\uff0c\u5728\u8fd9\u4e2a\u4e8b\u52a1\u6301\u7eed\u671f\u95f4\uff0c\u7981\u6b62\u5176\u4ed6\u4e8b\u52a1\u5bf9\u8be5\u8868\u6267\u884c\u63d2\u5165\uff0c\u66f4\u65b0\u548c\u5220\u9664\u64cd\u4f5c\u3002\u6240\u6709\u5e76\u53d1\u95ee\u9898\u90fd\u53ef\u4ee5\u907f\u514d\uff0c\u4f46\u6027\u80fd\u5341\u5206\u4f4e\u4e0b\u3002 Oracle\u652f\u63012\u79cd\u4e8b\u52a1\u9694\u79bb\u7ea7\u522b\uff1aREAD COMMITED\uff0cSERIALIZABLE\u3002Oracle\u9ed8\u8ba4\u7684\u4e8b\u52a1\u9694\u79bb\u7ea7\u522b\u662f\uff1aREAD COMMITED\u3002 Mysql\u652f\u63014\u79cd\u4e8b\u52a1\u9694\u79bb\u7ea7\u522b\u3002Mysql\u9ed8\u8ba4\u7684\u4e8b\u52a1\u9694\u79bb\u7ea7\u522b\u4e3a\uff1aREPEATABLE READ\u3002 \u6bcf\u542f\u52a8\u4e00\u4e2amysql\u7a0b\u5e8f\uff0c\u5c31\u4f1a\u83b7\u5f97\u4e00\u4e2a\u5355\u72ec\u7684\u6570\u636e\u5e93\u8fde\u63a5\uff0c\u6bcf\u4e2a\u6570\u636e\u5e93\u8fde\u63a5\u90fd\u6709\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf @@tx_isolation \uff0c\u8868\u793a\u5f53\u524d\u4e8b\u52a1\u9694\u79bb\u7ea7\u522b\u3002 \u67e5\u770b\u5f53\u524d\u7684\u9694\u79bb\u7ea7\u522b\uff1a select @@tx_isolation; \u8bbe\u7f6e\u5f53\u524dmysql\u8fde\u63a5\u7684\u9694\u79bb\u7ea7\u522b\uff1a set transaction isolation level read committed; \u8bbe\u7f6e\u6570\u636e\u5e93\u7cfb\u7edf\u7684\u5168\u5c40\u7684\u9694\u79bb\u7ea7\u522b\uff1a set global transaction isolation level read committed; \u4e94\u3001\u5e38\u89c1\u7ea6\u675f \u00b6 \u542b\u4e49\uff1a\u4e00\u79cd\u9650\u5236\uff0c\u7528\u4e8e\u9650\u5236\u8868\u4e2d\u7684\u6570\u636e\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u8868\u4e2d\u7684\u6570\u636e\u7684\u51c6\u786e\u548c\u53ef\u9760\u6027 1. \u5206\u7c7b \u00b6 1.1 \u6309\u4f5c\u7528\u5206\u7c7b \u00b6 not null\uff1a\u975e\u7a7a\uff0c\u7528\u4e8e\u4fdd\u8bc1\u8be5\u5b57\u6bb5\u7684\u503c\u4e0d\u80fd\u4e3a\u7a7a\u3002\u6bd4\u5982\u59d3\u540d\u3001\u5b66\u53f7\u7b49\u3002 default\uff1a\u9ed8\u8ba4\uff0c\u7528\u4e8e\u4fdd\u8bc1\u8be5\u5b57\u6bb5\u6709\u9ed8\u8ba4\u503c\u3002\u6bd4\u5982\u6027\u522b\u3002 primary key\uff1a\u4e3b\u952e\uff0c\u7528\u4e8e\u4fdd\u8bc1\u8be5\u5b57\u6bb5\u7684\u503c\u5177\u6709\u552f\u4e00\u6027\uff0c\u5e76\u4e14\u975e\u7a7a\u3002\u6bd4\u5982\u5b66\u53f7\u3001\u5458\u5de5\u7f16\u53f7\u7b49\u3002 unique\uff1a\u552f\u4e00\uff0c\u7528\u4e8e\u4fdd\u8bc1\u8be5\u5b57\u6bb5\u7684\u503c\u5177\u6709\u552f\u4e00\u6027\uff0c\u53ef\u4ee5\u4e3a\u7a7a\u3002\u6bd4\u5982\u5ea7\u4f4d\u53f7\u3002 check\uff1a\u68c0\u67e5\u7ea6\u675f\uff08 mysql\u4e2d\u4e0d\u652f\u6301 \uff09\u3002\u6bd4\u5982\u5e74\u9f84\u3001\u6027\u522b\u3002 foreign key\uff1a\u5916\u952e\uff0c\u7528\u4e8e\u9650\u5236\u4e24\u4e2a\u8868\u7684\u5173\u7cfb\uff0c\u7528\u4e8e\u4fdd\u8bc1\u8be5\u5b57\u6bb5\u7684\u503c\u5fc5\u987b\u6765\u81ea\u4e8e\u4e3b\u8868\u7684\u5173\u8054\u5217\u7684\u503c\u3002\u5728\u4ece\u8868\u6dfb\u52a0\u5916\u952e\u7ea6\u675f\uff0c\u7528\u4e8e\u5e94\u7528\u4e3b\u8868\u4e2d\u67d0\u5217\u7684\u503c\u3002\u6bd4\u5982\u5b66\u751f\u8868\u7684\u4e13\u4e1a\u7f16\u53f7\uff0c\u5458\u5de5\u8868\u7684\u90e8\u95e8\u7f16\u53f7\uff0c\u5458\u5de5\u8868\u7684\u5de5\u79cd\u7f16\u53f7\u3002 1.2 \u6309\u4f4d\u7f6e\u5206\u7c7b \u00b6 \u5217\u7ea7\u7ea6\u675f\uff1a\u516d\u5927\u7ea6\u675f\u8bed\u6cd5\u4e0a\u90fd\u652f\u6301\uff0c\u4f46\u5916\u952e\u7ea6\u675f\u6ca1\u6709\u6548\u679c \u8868\u7ea7\u7ea6\u675f\uff1a\u9664\u4e86\u975e\u7a7a\u3001\u9ed8\u8ba4\uff0c\u5176\u4ed6\u7684\u90fd\u652f\u6301 \u7ea6\u675f\u7c7b\u578b \u4f4d\u7f6e \u652f\u6301\u7684\u7ea6\u675f\u7c7b\u578b \u662f\u5426\u53ef\u4ee5\u8d77\u7ea6\u675f\u540d \u5217\u7ea7\u7ea6\u675f \u5217\u7684\u540e\u9762 \u8bed\u6cd5\u90fd\u652f\u6301\uff0c\u4f46\u5916\u952e\u6ca1\u6709\u6548\u679c \u4e0d\u53ef\u4ee5 \u8868\u7ea7\u7ea6\u675f \u6240\u6709\u5217\u7684\u4e0b\u9762 \u9ed8\u8ba4\u548c\u975e\u7a7a\u4e0d\u652f\u6301\uff0c\u5176\u4ed6\u90fd\u652f\u6301 \u53ef\u4ee5\uff08\u4e3b\u952e\u6ca1\u6709\u6548\u679c\uff0c\u9ed8\u8ba4\u540d\u5b57\u662fPRIMARY\uff09 \u4e3b\u952e\u548c\u552f\u4e00\u7684\u533a\u522b \u00b6 \u7ea6\u675f \u4fdd\u8bc1\u552f\u4e00\u6027 \u662f\u5426\u5141\u8bb8\u4e3a\u7a7a \u4e00\u4e2a\u8868\u4e2d\u53ef\u4ee5\u6709\u591a\u5c11\u4e2a \u662f\u5426\u5141\u8bb8\u7ec4\u5408\uff08\u591a\u4e2a\u5217\u7ec4\u5408\u6210\u4e00\u4e2a\u4e3b\u952e/\u552f\u4e00\uff09 \u4e3b\u952e \u662f \u5426 \u81f3\u591a\u4e00\u4e2a \u53ef\u4ee5\uff0c\u4f46\u4e0d\u63a8\u8350 \u552f\u4e00 \u662f \u662f \u53ef\u4ee5\u6709\u591a\u4e2a \u53ef\u4ee5\uff0c\u4f46\u4e0d\u63a8\u8350 \u5916\u952e\u7279\u70b9 \u00b6 \u8981\u6c42\u5728\u4ece\u8868\u8bbe\u7f6e\u5916\u952e\u5173\u7cfb \u4ece\u8868\u7684\u5916\u952e\u5217\u7684\u7c7b\u578b\u548c\u4e3b\u8868\u7684\u5173\u8054\u5217\u7684\u7c7b\u578b\u8981\u6c42\u4e00\u81f4\u6216\u517c\u5bb9\uff0c\u540d\u79f0\u65e0\u8981\u6c42 \u4e3b\u8868\u7684\u5173\u8054\u5217\u5fc5\u987b\u662f\u4e00\u4e2akey\uff08\u4e00\u822c\u662f\u4e3b\u952e\u6216\u552f\u4e00\uff09 \u63d2\u5165\u6570\u636e\u65f6\uff0c\u5148\u63d2\u5165\u4e3b\u8868\uff0c\u518d\u63d2\u5165\u4ece\u8868 \u5220\u9664\u6570\u636e\u65f6\uff0c\u5148\u5220\u9664\u4ece\u8868\uff0c\u518d\u5220\u9664\u4e3b\u8868 \u65b9\u5f0f\u4e00\uff1a\u7ea7\u8054\u5220\u9664 1 ALTER TABLE stuinfo ADD CONSTRAINT fk_stu_major FOREIGN KEY ( majorid ) REFERENCES major ( id ) ON DELETE CASCADE ; \u65b9\u5f0f\u4e8c\uff1a\u7ea7\u8054\u7f6e\u7a7a 1 2 ALTER TABLE stuinfo ADD CONSTRAINT fk_stu_major FOREIGN KEY ( majorid ) REFERENCES major ( id ) ON DELETE SET NULL ; # \u5220\u9664\u7684\u65f6\u5019\uff0c\u4e3b\u8868\u5bf9\u5e94\u7684\u884c\u88ab\u5220\u9664\u4e86\uff0c\u4ece\u8868\u5f15\u5165\u7684\u5730\u65b9\u53d8\u4e3a\u7a7a\u503cnull\u3002 2. \u6dfb\u52a0\u7ea6\u675f \u00b6 2.1 \u521b\u5efa\u8868\u65f6\u6dfb\u52a0\u7ea6\u675f \u00b6 2.1.1 \u6dfb\u52a0\u5217\u7ea7\u7ea6\u675f \u00b6 \u8bed\u6cd5\uff1a 1 2 \u76f4\u63a5\u5728\u5b57\u6bb5\u540d\u548c\u7c7b\u578b\u540e\u9762\u8ffd\u52a0\u7ea6\u675f\u7c7b\u578b\u5373\u53ef\u3002 \u53ea\u652f\u6301\uff1a\u9ed8\u8ba4\u3001\u975e\u7a7a\u3001\u4e3b\u952e\u3001\u552f\u4e00\uff08\u9664\u4e86\u5916\u952e\u90fd\u652f\u6301\uff09 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 CREATE DATABASE students ; USE students ; CREATE TABLE stuinfo ( id INT PRIMARY KEY , stuname VARCHAR ( 20 ) NOT NULL , # \u975e\u7a7a gender CHAR ( 1 ) CHECK ( gender = '\u7537' OR gender = '\u5973' ), # CHECK\u5728mysql\u4e2d\u4e0d\u751f\u6548 seat INT UNIQUE , # \u552f\u4e00 age INT DEFAULT 18 , # \u9ed8\u8ba4 majorID INT REFERENCES major ( id ) # \u8bed\u6cd5\u4e0d\u62a5\u9519\uff0c\u4f46\u662f\u6ca1\u6709\u6548\u679c ) ; CREATE TABLE major ( id INT PRIMARY KEY , majorName VARCHAR ( 20 ) ) ; DESC stuinfo ; # \u67e5\u770b\u8868\u7ed3\u6784 SHOW INDEX FROM stuinfo ; 2.1.2 \u6dfb\u52a0\u8868\u7ea7\u7ea6\u675f \u00b6 \u8bed\u6cd5\uff1a 1 2 3 # \u5728\u5404\u4e2a\u5b57\u6bb5\u7684\u6700\u4e0b\u9762 [ CONSTRAINT \u7ea6\u675f\u540d ] \u7ea6\u675f\u7c7b\u578b ( \u5b57\u6bb5\u540d ) # \u9664\u4e86\u975e\u7a7a\u3001\u9ed8\u8ba4\uff0c\u5176\u4ed6\u7684\u90fd\u652f\u6301 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 CREATE TABLE stuinfo ( id INT , stuname VARCHAR ( 20 ), gender CHAR ( 1 ), seat INT , age INT , majorid INT , CONSTRAINT pk PRIMARY KEY ( id ), # \u4e3b\u952e\u7684\u540d\u5b57\u662fPRIMARY\uff0c\u8d77\u522b\u540d\u6ca1\u6548\u679c CONSTRAINT uq UNIQUE ( seat ), CONSTRAINT ck CHECK ( gender = '\u7537' OR gender = '\u5973' ), CONSTRAINT fk_stuinfo_major FOREIGN KEY ( majorid ) REFERENCES major ( id ) ); SHOW INDEX FROM stuinfo ; \u67e5\u8be2\u7ed3\u679c 1 2 3 4 5 6 7 +---------+------------+------------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+ | Table | Non_unique | Key_name | Seq_in_index | Column_name | Collation | Cardinality | Sub_part | Packed | Null | Index_type | Comment | Index_comment | +---------+------------+------------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+ | stuinfo | 0 | PRIMARY | 1 | id | A | 0 | NULL | NULL | | BTREE | | | | stuinfo | 0 | uq | 1 | seat | A | 0 | NULL | NULL | YES | BTREE | | | | stuinfo | 1 | fk_stuinfo_major | 1 | majorid | A | 0 | NULL | NULL | YES | BTREE | | | +---------+------------+------------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+ 2.1.3 \u901a\u7528\u5199\u6cd5 \u00b6 1 2 3 4 5 6 7 8 9 CREATE TABLE IF NOT EXISTS stuinfo ( id INT PRIMARY KEY , stuname VARCHAR ( 20 ) NOT NULL , gender CHAR ( 1 ), seat INT UNIQUE , age INT DEFAULT 18 , majorID INT , CONSTRAINT fk_stuinfo_major FOREIGN KEY ( majorid ) REFERENCES major ( id ) ) ; 2.2 \u4fee\u6539\u8868\u65f6\u6dfb\u52a0\u7ea6\u675f \u00b6 2.2.1 \u6dfb\u52a0\u975e\u7a7a\u7ea6\u675f \u00b6 1 ALTER TABLE stuinfo MODIFY COLUMN stuname VARCHAR ( 20 ) NOT NULL ; 2.2.2 \u6dfb\u52a0\u9ed8\u8ba4\u7ea6\u675f \u00b6 1 ALTER TABLE stuinfo MODIFY COLUMN age INT DEFAULT 18 ; 2.2.3 \u6dfb\u52a0\u4e3b\u952e\u7ea6\u675f \u00b6 1 2 3 4 # \u5217\u7ea7\u7ea6\u675f\u7684\u5199\u6cd5 ALTER TABLE stuinfo MODIFY COLUMN id INT PRIMARY KEY ; # \u8868\u7ea7\u7ea6\u675f\u7684\u5199\u6cd5 ALTER TABLE stuinfo ADD PRIMARY KEY ( id ); 2.2.4 \u6dfb\u52a0\u552f\u4e00\u7ea6\u675f 1 2 3 4 # \u5217\u7ea7\u7ea6\u675f\u7684\u5199\u6cd5 ALTER TABLE stuinfo MODIFY COLUMN seat INT UNIQUE ; # \u8868\u7ea7\u7ea6\u675f\u7684\u5199\u6cd5 ALTER TABLE stuinfo ADD UNIQUE ( seat ); 2.2.5 \u6dfb\u52a0\u5916\u952e\u7ea6\u675f \u00b6 1 ALTER TABLE ( CONSTRAINT fk_stuinfo_major ) stuinfo ADD FOREIGN KEY ( majorid ) REFERENCES major ( id ); 3. \u5220\u9664\u7ea6\u675f \u00b6 3.1 \u4fee\u6539\u8868\u65f6\u5220\u9664\u7ea6\u675f \u00b6 3.1.1 \u5220\u9664\u975e\u7a7a\u7ea6\u675f \u00b6 1 ALTER TABLE stuinfo MODIFY COLUMN stuname VARCHAR ( 20 ) NULL ; 3.1.2 \u5220\u9664\u9ed8\u8ba4\u7ea6\u675f \u00b6 1 ALTER TABLE stuinfo MODIFY COLUMN age INT ; 3.1.3 \u5220\u9664\u4e3b\u952e \u00b6 1 ALTER TABLE stuinfo DROP PRIMARY KEY ; 3.1.4 \u5220\u9664\u552f\u4e00 \u00b6 1 ALTER TABLE stuinfo DROP INDEX seat ; 3.1.5 \u5220\u9664\u5916\u952e \u00b6 1 ALTER TABLE stuinfo DROP FOREIGN KEY fk_stuinfo_major ; 4. \u6807\u8bc6\u5217 \u00b6 4.1 \u542b\u4e49 \u00b6 \u53c8\u79f0\u4e3a\u81ea\u589e\u957f\u5217,\u53ef\u4ee5\u4e0d\u7528\u624b\u52a8\u7684\u63d2\u5165\u503c\uff0c\u7cfb\u7edf\u63d0\u4f9b\u9ed8\u8ba4\u7684\u5e8f\u5217\u503c 4.2 \u7279\u70b9 \u00b6 \u6807\u8bc6\u5217\u5fc5\u987b\u548c\u4e3b\u952e\u642d\u914d\u5417\uff1f\u4e0d\u4e00\u5b9a\uff0c\u4f46\u8981\u6c42\u662f\u4e00\u4e2akey\u3002 \u4e00\u4e2a\u8868\u53ef\u4ee5\u6709\u51e0\u4e2a\u6807\u8bc6\u5217\uff1f\u81f3\u591a\u4e00\u4e2a\u3002 \u6807\u8bc6\u5217\u7684\u7c7b\u578b\uff1f\u53ea\u80fd\u662f\u6570\u503c\u578b\uff08int\uff08\u4e00\u822c\u662fint\uff09\uff0cfloat\uff0cdouble\uff09 \u6807\u8bc6\u5217\u53ef\u4ee5\u901a\u8fc7 SET auto_increment_increment = 1; \u8bbe\u7f6e\u6b65\u957f\uff1b\u53ef\u4ee5\u901a\u8fc7\u624b\u52a8\u63d2\u5165\u503c\u8bbe\u7f6e\u8d77\u59cb\u503c\u3002 4.3 \u521b\u5efa\u8868\u65f6\u8bbe\u7f6e\u6807\u8bc6\u5217 \u00b6 \u8bed\u6cd5\uff1a 1 2 3 CREATE TABLE \u8868 ( \u5b57\u6bb5\u540d \u5b57\u6bb5\u7c7b\u578b \u7ea6\u675f AUTO_INCREMENT ); \u4f8b\uff1a 1 2 3 4 CREATE TABLE tab_identity ( id INT PRIMARY KEY AUTO_INCREMENT , NAME VARCHAR ( 20 ) ) ; 4.4 \u521b\u5efa\u8868\u65f6\u8bbe\u7f6e\u6807\u8bc6\u5217 \u00b6 1 ALTER TABLE tab_identity MODIFY COLUMN id INT PRIMARY KEY AUTO_INCREMENT ; 4.5 \u4fee\u6539\u8868\u65f6\u5220\u9664\u6807\u8bc6\u5217 \u00b6 1 ALTER TABLE tab_identity MODIFY COLUMN id INT ; 4.6 \u8bbe\u7f6e\u6807\u8bc6\u5217\u7684\u6b65\u957f \u00b6 1 2 SHOW VARIABLES LIKE '%auto_increment%' ; SET auto_increment_increment = 3 ; \u00b6 \u7528\u5230\u7684\u6570\u636e\u5e93\uff1a myemployees \u6570\u636e\u5e93","title":"SQL"},{"location":"databases/MySQL/SQL/#sql","text":"\u5bf9\u6570\u636e\u5e93\u8fdb\u884c\u67e5\u8be2\u548c\u4fee\u6539\u64cd\u4f5c\u7684\u8bed\u8a00\u53ebSQL(Structured Quary Language, \u7ed3\u6784\u5316\u67e5\u8be2\u8bed\u8a00)\u3002","title":"SQL\u7b80\u4ecb"},{"location":"databases/MySQL/SQL/#1-sql","text":"ANSI SQL SQL-92 SQL-99","title":"1. SQL\u6807\u51c6"},{"location":"databases/MySQL/SQL/#2-sql","text":"\u6570\u636e\u5b9a\u4e49\u8bed\u8a00\uff08DDL, Data Definition Language\uff09\uff1aDROP\u3001CREATE\u3001ALTER\u7b49 \u6570\u636e\u64cd\u4f5c\u8bed\u8a00\uff08DML, Data Manipulation Language\uff09\uff1aINSERT\u3001UPDATE\u3001DELETE \u6570\u636e\u67e5\u8be2\u8bed\u8a00\uff08DQL, Data Query Language\uff09\uff1aSELECT \u6570\u636e\u63a7\u5236\u8bed\u8a00\uff08DCL, Data Control Language\uff09: GRANT\u3001REOVKE\u3001 \u4e8b\u52a1\u63a7\u5236\u8bed\u8a00\uff08TCL, Tansaction Control Language\uff09\uff1aCOMMIT\u3001ROLLBACK\u7b49","title":"2. SQL\u5206\u7c7b"},{"location":"databases/MySQL/SQL/#3","text":"\u4e0d\u533a\u5206\u5927\u5c0f\u5199\uff0c\u5efa\u8bae\u5173\u952e\u5b57\u5927\u5199\uff0c\u8868\u540d\u3001\u5217\u540d\u5c0f\u5199 \u6bcf\u53e5\u8bdd\u7528 ; \u6216 \\g \u7ed3\u5c3e \u6bcf\u6761\u547d\u4ee4\u6839\u636e\u9700\u8981\uff0c\u5404\u5b50\u53e5\u4e00\u822c\u5206\u884c\u5199\uff0c\u5173\u952e\u5b57\u4e0d\u80fd\u7f29\u5199\u4e5f\u4e0d\u80fd\u5206\u884c \u6ce8\u91ca \u5355\u884c\u6ce8\u91ca\uff1a # \u6ce8\u91ca\u6587\u5b57 \u5355\u884c\u6ce8\u91ca\uff1a -- \u6ce8\u91ca\u6587\u5b57\uff08\u8981\u6709\u7a7a\u683c\uff09 \u591a\u884c\u6ce8\u91ca\uff1a /* \u6ce8\u91ca\u6587\u5b57 */","title":"3. \u8bed\u6cd5\u89c4\u8303"},{"location":"databases/MySQL/SQL/#4-sql","text":"","title":"4. SQL\u8bed\u53e5\u7684\u6267\u884c\u8fc7\u7a0b"},{"location":"databases/MySQL/SQL/#1","text":"\u63d0\u4f9b\u8fde\u63a5\u534f\u8bae\uff1aTCP/IP\uff0cSOCKET \u63d0\u4f9b\u9a8c\u8bc1\uff1a\u7528\u6237\u3001\u5bc6\u7801\u3001IP\u3001SOCKET \u63d0\u4f9b\u4e13\u7528\u8fde\u63a5\u7ebf\u7a0b\uff1a\u63a5\u6536\u7528\u6237SQL\uff0c\u8fd4\u56de\u7ed3\u679c","title":"1. \u8fde\u63a5\u5c42"},{"location":"databases/MySQL/SQL/#2-sql_1","text":"\u63a5\u6536\u4e0a\u5c42\u4f20\u9001\u7684SQL\u8bed\u53e5 \u8bed\u6cd5\u9a8c\u8bc1 \u8bed\u4e49\u68c0\u67e5\uff1a\u5224\u65adSQL\u8bed\u53e5\u7684\u7c7b\u578b \u6743\u9650\u68c0\u67e5\uff1a\u7528\u6237\u5bf9\u5e93\u3001\u8868\u6709\u6ca1\u6709\u6743\u9650 \u89e3\u6790\u5668\uff1a\u8fdb\u884cSQL\u9884\u5904\u7406\uff0c\u4ea7\u751f\u6267\u884c\u8ba1\u5212 \u4f18\u5316\u5668\uff1a\u6839\u636e\u89e3\u6790\u5668\u5f97\u51fa\u7684\u591a\u79cd\u6267\u884c\u8ba1\u5212\u8fdb\u884c\u5224\u65ad\uff0c\u9009\u62e9\u6700\u4f18\u7684\u6267\u884c\u8ba1\u5212\u4ee3\u4ef7\u6a21\u5f0f \u6267\u884c\u5668\uff1a\u6839\u636e\u6700\u4f18\u6267\u884c\u8ba1\u5212\uff0c\u6267\u884cSQL\u8bed\u53e5\uff0c\u4ea7\u751f\u6267\u884c\u7ed3\u679c \u63d0\u4f9b\u67e5\u8be2\u7f13\u5b58\uff08\u9ed8\u8ba4\u4e0d\u5f00\u542f\uff09 \u63d0\u4f9b\u65e5\u5fd7\u8bb0\u5f55\uff08\u9ed8\u8ba4\u4e0d\u5f00\u542f\uff09","title":"2. SQL\u5c42"},{"location":"databases/MySQL/SQL/#3_1","text":"\u8d1f\u8d23\u6839\u636eSQL\u5c42\u6267\u884c\u7684\u7ed3\u679c\uff0c\u4ece\u78c1\u76d8\u4e0a\u62ff\u6570\u636e","title":"3. \u5b58\u50a8\u5f15\u64ce\u5c42"},{"location":"databases/MySQL/SQL/#ddl","text":"","title":"\u4e00\u3001DDL"},{"location":"databases/MySQL/SQL/#1_1","text":"","title":"1. \u5e93"},{"location":"databases/MySQL/SQL/#11","text":"1 2 3 4 5 6 7 mysql > CREATE DATABASE IF NOT EXISTS \u6570\u636e\u5e93\u540d\u79f0 ; # \u6216 mysql > CREATE SCHEMA \u6570\u636e\u5e93\u540d\u79f0 ; # \u521b\u5efa\u6570\u636e\u65f6\u540c\u65f6\u6307\u5b9a\u5b57\u7b26\u96c6 mysql > CREATE DATABASE \u6570\u636e\u5e93\u540d\u79f0 CHARSET utf8 ; # \u521b\u5efa\u6570\u636e\u5e93\u662f\u6307\u5b9a\u6821\u5bf9\u89c4\u5219 mysql > CREATE DATABASE test CHARSET utf8mb4 COLLATE utf8mb4_bin ; \u67e5\u770b\u652f\u6301\u7684\u5b57\u7b26\u96c6 1 SHOW CHARSET ; collation\u672b\u5c3e\u5e26ci\u7684\u5b57\u7b26\u96c6\u90fd\u662f\u5927\u5c0f\u5199\u4e0d\u654f\u611f\u7684\u3002\u4f7f\u7528 SHOW COLLATION; \u53ef\u4ee5\u67e5\u8be2\u5927\u5c0f\u5199\u540d\u7684\u5b57\u7b26\u96c6\u3002 \u6570\u636e\u5e93\u547d\u4ee4\u89c4\u5219\uff1a \u5e93\u540d\u4e0d\u80fd\u5927\u5199 \u4e0d\u80fd\u4ee5\u6570\u5b57\u5f00\u5934 \u5efa\u5e93\u65f6\u9700\u8981\u52a0\u5b57\u7b26\u96c6","title":"1.1 \u6570\u636e\u5e93\u521b\u5efa"},{"location":"databases/MySQL/SQL/#12","text":"1 ALTER DATABASE \u6570\u636e\u5e93\u540d\u79f0 CHARSET utf8 ; \u4fee\u6539\u524d\u7684\u5b57\u7b26\u96c6\u5e94\u8be5\u662f\u4fee\u6539\u540e\u5b57\u7b26\u524d\u7684\u5b50\u96c6","title":"1.2 \u6570\u636e\u5e93\u4fee\u6539"},{"location":"databases/MySQL/SQL/#13","text":"1 DROP DATABASE IF EXISTS \u6570\u636e\u5e93\u540d\u79f0 ;","title":"1.3 \u6570\u636e\u5e93\u5220\u9664"},{"location":"databases/MySQL/SQL/#2","text":"","title":"2. \u8868"},{"location":"databases/MySQL/SQL/#21","text":"1 2 3 4 5 6 CREATE TABLE \u8868\u540d ( \u5b57\u6bb5\u540d 1 \u6570\u636e\u7c7b\u578b [ \u5b8c\u6574\u7684\u7ea6\u675f\u6761\u4ef6 ] [ \u9ed8\u8ba4\u503c ], \u5b57\u6bb5\u540d 2 \u6570\u636e\u7c7b\u578b [ \u5b8c\u6574\u7684\u7ea6\u675f\u6761\u4ef6 ] [ \u9ed8\u8ba4\u503c ], ... [ \u8868\u7ea7\u522b\u7684\u7ea6\u675f\u6761\u4ef6 ] ); \u5b9e\u4f8b\uff1a 1 2 3 4 5 6 7 8 CREATE TABLE students ( id INT NOT NULL PRIMARY KEY AUTO_INCREMENT COMMENT '\u5b66\u53f7' , name VARCHAR ( 255 ) NOT NULL COMMENT '\u59d3\u540d' , age TINYINT UNSIGNED NOT NULL DEFAULT 0 COMMENT '\u5e74\u9f84' , sex ENUM ( 'f' , 'm' , 'n' ) NOT NULL DEFAULT 'n' COMMENT '\u6027\u522b' , id_card CHAR ( 18 ) NOT NULL UNIQUE COMMENT '\u8eab\u4efd\u8bc1' , enrollment_time TIMESTAMP NOT NULL DEFAULT NOW () COMMENT '\u62a5\u540d\u65f6\u95f4' ) ENGINE = INNODB CHARSET = utf8 COMMENT '\u5b66\u751f\u8868' ; \u5efa\u8868\u89c4\u8303\uff1a \u8868\u540d\u5c0f\u5199 \u4e0d\u80fd\u6570\u5b57\u5f00\u5934 \u6ce8\u610f\u5b57\u7b26\u96c6\u548c\u5b58\u50a8\u5f15\u64ce \u8868\u540d\u548c\u4e1a\u52a1\u6709\u5173 \u6bcf\u4e2a\u5217\u90fd\u8981\u6709\u6ce8\u91ca \u9009\u62e9\u5408\u9002\u7684\u6570\u636e\u7c7b\u578b","title":"2.1 \u8868\u5b9a\u4e49"},{"location":"databases/MySQL/SQL/#22","text":"DDL\u4f1a\u5f15\u8d77\u6570\u636e\u5e93\u9501\u8868\uff0c\u53ef\u4ee5\u4f7f\u7528\u5728\u7ebfDDL\u5de5\u5177pt-osc(pt-online-schema-change)\u89e3\u51b3","title":"2.2 \u4fee\u6539\u8868"},{"location":"databases/MySQL/SQL/#1_2","text":"","title":"1. \u6dfb\u52a0\u5b57\u6bb5"},{"location":"databases/MySQL/SQL/#121","text":"1 ALTER TABLE students ADD qq VARCHAR ( 20 ) NOT NULL UNIQUE COMMENT 'QQ\u53f7' ;","title":"1.2.1 \u5728\u672b\u5c3e\u6dfb\u52a0\u5b57\u6bb5"},{"location":"databases/MySQL/SQL/#122","text":"1 ALTER TABLE students ADD wechat VARCHAR ( 20 ) NOT NULL UNIQUE COMMENT '\u5fae\u4fe1\u53f7' AFTER name ;","title":"1.2.2 \u5728\u6307\u5b9a\u5b57\u6bb5\u540e\u6dfb\u52a0\u5b57\u6bb5"},{"location":"databases/MySQL/SQL/#123","text":"1 ALTER TABLE students ADD num INT NOT NULL COMMENT '\u6570\u5b57' FIRST ;","title":"1.2.3 \u5728\u7b2c\u4e00\u5217\u524d\u6dfb\u52a0\u5b57\u6bb5"},{"location":"databases/MySQL/SQL/#2_1","text":"1 ALTER TABLE students DROP num ;","title":"2. \u5220\u9664\u5b57\u6bb5"},{"location":"databases/MySQL/SQL/#3_2","text":"\u4fee\u6539\u65f6\u628a\u6240\u6709\u9700\u8981\u7684\u5c5e\u6027\u90fd\u52a0\u4e0a 1 ALTER TABLE students MODIFY name VARCHAR ( 128 ) NOT NULL ;","title":"3. \u4fee\u6539\u5b57\u6bb5\u5c5e\u6027"},{"location":"databases/MySQL/SQL/#4","text":"\u540d\u79f0\u548c\u5c5e\u6027\u90fd\u53ef\u4ee5\u4fee\u6539 1 ALTER TABLE students CHANGE qq email VARCHAR ( 125 );","title":"4. \u4fee\u6539\u5b57\u6bb5\u540d\u79f0"},{"location":"databases/MySQL/SQL/#23","text":"1 DROP TABLE \u8868\u540d ;","title":"2.3 \u5220\u9664\u8868"},{"location":"databases/MySQL/SQL/#24","text":"","title":"2.4 \u67e5\u770b\u8868"},{"location":"databases/MySQL/SQL/#1_3","text":"1 2 3 4 5 6 7 8 9 10 11 12 mysql > DESC students ; +-----------------+---------------------+------+-----+-------------------+----------------+ | Field | Type | Null | Key | Default | Extra | +-----------------+---------------------+------+-----+-------------------+----------------+ | id | int ( 11 ) | NO | PRI | NULL | auto_increment | | name | varchar ( 255 ) | NO | | NULL | | | age | tinyint ( 3 ) unsigned | NO | | 0 | | | sex | enum ( 'f' , 'm' , 'n' ) | NO | | n | | | id_card | char ( 18 ) | NO | UNI | NULL | | | enrollment_time | timestamp | NO | | CURRENT_TIMESTAMP | | +-----------------+---------------------+------+-----+-------------------+----------------+ 6 rows in set ( 0 . 00 sec )","title":"1 \u67e5\u770b\u8868\u7ed3\u6784"},{"location":"databases/MySQL/SQL/#2_2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 mysql > SHOW CREATE TABLE students \\ G ; *************************** 1 . row *************************** Table : students Create Table : CREATE TABLE `students` ( `id` int ( 11 ) NOT NULL AUTO_INCREMENT COMMENT '\u5b66\u53f7' , `name` varchar ( 255 ) NOT NULL COMMENT '\u59d3\u540d' , `age` tinyint ( 3 ) unsigned NOT NULL DEFAULT '0' COMMENT '\u5e74\u9f84' , `sex` enum ( 'f' , 'm' , 'n' ) NOT NULL DEFAULT 'n' COMMENT '\u6027\u522b' , `id_card` char ( 18 ) NOT NULL COMMENT '\u8eab\u4efd\u8bc1' , `enrollment_time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP COMMENT '\u62a5\u540d\u65f6\u95f4' , PRIMARY KEY ( `id` ), UNIQUE KEY `id_card` ( `id_card` ) ) ENGINE = InnoDB DEFAULT CHARSET = utf8 COMMENT = '\u5b66\u751f\u8868' 1 row in set ( 0 . 00 sec ) ERROR : No query specified","title":"2 \u67e5\u770b\u5efa\u8868\u8bed\u53e5"},{"location":"databases/MySQL/SQL/#25","text":"","title":"2.5 \u590d\u5236\u8868"},{"location":"databases/MySQL/SQL/#251","text":"1 CREATE TABLE stu1 LIKE students ;","title":"2.5.1 \u4ec5\u590d\u5236\u8868\u7ed3\u6784"},{"location":"databases/MySQL/SQL/#252","text":"1 CREATE TABLE stu2 SELECT * FROM students ;","title":"2.5.2 \u590d\u5236\u8868\u7ed3\u6784\u548c\u5168\u90e8\u6570\u636e"},{"location":"databases/MySQL/SQL/#252_1","text":"1 CREATE TABLE stu3 SELECT * FROM students WHERE id > 5 ;","title":"2.5.2 \u590d\u5236\u8868\u7ed3\u6784\u548c\u90e8\u5206\u6570\u636e"},{"location":"databases/MySQL/SQL/#dml","text":"\u5bf9\u8868\u7684\u589e\u5220\u6539","title":"\u4e8c\u3001DML"},{"location":"databases/MySQL/SQL/#1_4","text":"","title":"1. \u63d2\u5165"},{"location":"databases/MySQL/SQL/#11_1","text":"","title":"1.1\u65b9\u5f0f\u4e00"},{"location":"databases/MySQL/SQL/#111","text":"1 INSERT INTO \u8868\u540d VALUES ( \u503c 1 , \u503c 2 ,... \u503c n );","title":"1.1.1 \u4e3a\u8868\u7684\u6240\u6709\u5b57\u6bb5\u63d2\u5165\u6570\u636e"},{"location":"databases/MySQL/SQL/#112","text":"1 2 # \u8981\u4fdd\u8bc1\u6bcf\u4e2a\u63d2\u5165\u7684\u503c\u5f97\u7c7b\u578b\u548c\u5bf9\u5e94\u7c7b\u7684\u6570\u636e\u7c7b\u578b\u5339\u914d INSERT INTO \u8868\u540d ( \u5b57\u6bb5 1 , \u5b57\u6bb5 2 ,... \u5b57\u6bb5 n ) VALUES ( \u503c 1 , \u503c 2 ,... \u503c n );","title":"1.1.2 \u4e3a\u8868\u7684\u6307\u5b9a\u5b57\u6bb5\u63d2\u5165\u6570\u636e"},{"location":"databases/MySQL/SQL/#113","text":"1 INSERT INTO \u8868\u540d ( \u5b57\u6bb5 1 , \u5b57\u6bb5 2 ,... \u5b57\u6bb5 n ) VALUES ( \u503c 1 , \u503c 2 ,... \u503c n ),( \u503c 1 , \u503c 2 ,... \u503c n );","title":"1.1.3 \u540c\u65f6\u63d2\u5165\u591a\u6761\u8bb0\u5f55"},{"location":"databases/MySQL/SQL/#12_1","text":"","title":"1.2 \u65b9\u5f0f\u4e8c"},{"location":"databases/MySQL/SQL/#121_1","text":"1 2 3 INSERT INTO \u8868\u540d SET \u5b57\u6bb5 1 = \u503c 1 , \u5b57\u6bb5 2 = \u503c 2 , \u5b57\u6bb5 3 = \u503c 3 ; \u4e24\u79cd\u65b9\u5f0f\u7684\u533a\u522b\uff1a \u65b9\u5f0f1\u652f\u6301\u63d2\u5165\u591a\u884c\uff0c\u4f46\u662f\u65b9\u5f0f2\u4e0d\u652f\u6301 \u65b9\u5f0f1\u652f\u6301\u5b50\u67e5\u8be2\uff0c\u65b9\u5f0f2\u4e0d\u652f\u6301","title":"1.2.1  \u4e3a\u8868\u7684\u6307\u5b9a\u5b57\u6bb5\u63d2\u5165\u6570\u636e"},{"location":"databases/MySQL/SQL/#2_3","text":"","title":"2. \u4fee\u6539"},{"location":"databases/MySQL/SQL/#21_1","text":"1 2 3 UPDATE \u8868\u540d SET \u5217 = \u65b0\u503c\uff0c\u5217 = \u65b0\u503c\u2026 WHERE \u7b5b\u9009\u6761\u4ef6\uff1b","title":"2.1 \u4fee\u6539\u5355\u8868\u7684\u8bb0\u5f55"},{"location":"databases/MySQL/SQL/#22_1","text":"sql92\u8bed\u6cd5 1 2 3 4 UPDATE \u8868 1 \u522b\u540d\uff0c\u8868 2 \u522b\u540d SET \u5217 = \u503c\u2026 WHERE \u7b5b\u9009\u6761\u4ef6 AND \u7b5b\u9009\u6761\u4ef6\uff1b sql99\u8bed\u6cd5\uff1a 1 2 3 4 5 UPDATE \u8868 1 \u522b\u540d [ INNER | LEFT | RIGHT ] JOIN \u8868 2 \u522b\u540d ON \u8fde\u63a5\u6761\u4ef6 SET \u5217 = \u503c\uff0c\u2026 WHERE \u7b5b\u9009\u6761\u4ef6\uff1b","title":"2.2 \u4fee\u6539\u591a\u8868\u7684\u8bb0\u5f55"},{"location":"databases/MySQL/SQL/#3_3","text":"","title":"3. \u5220\u9664"},{"location":"databases/MySQL/SQL/#31-delete","text":"","title":"3.1 DELETE"},{"location":"databases/MySQL/SQL/#311","text":"1 DELETE FROM \u8868\u540d WHERE \u7b5b\u9009\u6761\u4ef6 ;","title":"3.1.1 \u5355\u8868\u5220\u9664"},{"location":"databases/MySQL/SQL/#312","text":"sql92\u8bed\u6cd5 1 2 3 4 5 DELETE \u522b\u540d\uff08\u8981\u5220\u54ea\u4e2a\u8868\u5c31\u5199\u54ea\u4e2a\u8868\u7684\u522b\u540d\uff0c\u90fd\u5220\u5c31\u90fd\u5199\uff09 FROM \u8868 1 \u522b\u540d\uff0c\u8868 2 \u522b\u540d WHERE \u8fde\u63a5\u6761\u4ef6 AND \u7b5b\u9009\u6761\u4ef6 LIMIT \u6761\u76ee\u6570\uff1b sql99\u8bed\u6cd5 1 2 3 4 5 6 DELETE \u522b\u540d\uff08\u8981\u5220\u54ea\u4e2a\u8868\u5c31\u5199\u54ea\u4e2a\u8868\u7684\u522b\u540d\uff0c\u90fd\u5220\u5c31\u90fd\u5199\uff09 FROM \u8868 1 \u522b\u540d [ INNER | LEFT | RIGHT ] JOIN \u8868 2 \u522b\u540d ON \u8fde\u63a5\u6761\u4ef6 WHERE \u7b5b\u9009\u6761\u4ef6 LIMIT \u6761\u76ee\u6570\uff1b","title":"3.1.2 \u591a\u8868\u5220\u9664"},{"location":"databases/MySQL/SQL/#312_1","text":"\u8bed\u6cd5\uff1a 1 2 DELETE FROM students ; # DML\u64cd\u4f5c\uff0c\u903b\u8f91\u6027\u5220\u9664\uff0c\u9010\u884c\u5220\u9664\uff0c\u901f\u5ea6\u6162","title":"3.1.2 \u5168\u8868\u5220\u9664"},{"location":"databases/MySQL/SQL/#32-truncate","text":"\u8bed\u6cd5\uff1a 1 2 TRUNCATE TABLE students ; # DDL\u64cd\u4f5c\uff0c\u8868\u6bb5\u4fdd\u7559\uff0c\u6570\u636e\u9875\u88ab\u6e05\u7a7a\uff0c\u901f\u5ea6\u5feb DELETE \u548c TRUNCATE \u7684\u533a\u522b\uff1a delete\u53ef\u4ee5\u52a0where\u6761\u4ef6\uff0ctruncate\u4e0d\u53ef\u4ee5 truncate\u5220\u9664\u6548\u7387\u9ad8\u4e00\u4e9b \u5047\u5982\u8981\u5220\u9664\u7684\u8868\u4e2d\u6709\u81ea\u589e\u957f\u5217\uff0c\u5982\u679c\u7528delete\u5220\u9664\u540e\uff0c\u518d\u63d2\u5165\u6570\u636e\uff0c\u81ea\u589e\u957f\u5217\u7684\u503c\u4ece\u65ad\u70b9\u5f00\u59cb\uff0c\u800ctruncate\u5220\u9664\u540e\uff0c\u518d\u63d2\u5165\u6570\u636e\uff0c\u81ea\u589e\u957f\u5217\u7684\u503c\u4ece1\u5f00\u59cb\u3002 truncate\u5220\u9664\u6ca1\u6709\u8fd4\u56de\u503c\uff0cdelete\u5220\u9664\u6709\u8fd4\u56de\u503c truncate\u5220\u9664\u4e0d\u80fd\u56de\u6eda\uff0cdelete\u5220\u9664\u53ef\u4ee5\u56de\u6eda","title":"3.2 TRUNCATE"},{"location":"databases/MySQL/SQL/#33","text":"\u6dfb\u52a0\u4e00\u4e2a\u72b6\u6001\u5b57\u6bb5\uff0c\u7528\u6765\u6807\u8bc6\u662f\u5426\u5220\u9664 1 2 3 4 5 6 # \u6dfb\u52a0\u72b6\u6001\u5b57\u6bb5 ALTER TABLE students ADD state TINYINT NOT NULL DEFAULT 1 ; # \u7528UPDATE\u4ee3\u66ffDELETE UPDATE students SET state = 0 WHERE id = 6 ; # \u4e1a\u52a1\u67e5\u8be2 SELECT * FROM students WHERE state = 1 ;","title":"3.3 \u4f2a\u5220\u9664"},{"location":"databases/MySQL/SQL/#dql","text":"\u4ee5\u5b98\u65b9\u63d0\u4f9b\u7684 world\u6570\u636e\u5e93 \u4e3a\u4f8b\u3002\u4e0b\u8f7d\u5730\u5740\uff1ahttps://downloads.mysql.com/docs/world.sql.zip\u3002\u53e6\u5916mysql\u5b98\u65b9\u8fd8\u63d0\u4f9b\u4e86\u5176\u4ed6\u793a\u4f8b\u6570\u636e\u5e93\uff0c\u5728 https://dev.mysql.com/doc/index-other.html \u53ef\u4ee5\u4e0b\u8f7d\u5230\u3002","title":"\u4e09\u3001DQL"},{"location":"databases/MySQL/SQL/#1_5","text":"\u8bed\u6cd5\uff1a 1 2 SELECT \u67e5\u8be2\u5217\u8868 from \u8868\u540d ; \u7279\u70b9\uff1a \u67e5\u8be2\u5217\u8868\u53ef\u4ee5\u662f\u8868\u4e2d\u7684\u5b57\u6bb5\u3001\u5e38\u91cf\u3001\u8868\u8fbe\u5f0f\u3001\u51fd\u6570 \u67e5\u8be2\u7684\u7ed3\u679c\u662f\u4e00\u4e2a\u865a\u62df\u7684\u8868\u683c","title":"1. \u57fa\u7840\u67e5\u8be2"},{"location":"databases/MySQL/SQL/#11-select","text":"","title":"1.1 SELECT\u5355\u72ec\u4f7f\u7528"},{"location":"databases/MySQL/SQL/#111_1","text":"1 2 3 4 5 6 7 mysql [( none )] > SELECT @@ port ; +--------+ | @@ port | +--------+ | 3306 | +--------+ 1 row in set ( 0 . 00 sec )","title":"1.1.1 \u67e5\u770b\u7cfb\u7edf\u53c2\u6570"},{"location":"databases/MySQL/SQL/#112_1","text":"1 2 3 4 5 6 7 mysql [( none )] > SELECT NOW (); +---------------------+ | NOW () | +---------------------+ | 2020 - 12 - 07 22 : 30 : 03 | +---------------------+ 1 row in set ( 0 . 00 sec )","title":"1.1.2 \u4f7f\u7528\u5185\u7f6e\u51fd\u6570"},{"location":"databases/MySQL/SQL/#113_1","text":"1 2 3 4 5 6 7 mysql [( none )] > SELECT 3 * 5 ; +-----+ | 3 * 5 | +-----+ | 15 | +-----+ 1 row in set ( 0 . 00 sec )","title":"1.1.3 \u67e5\u8be2\u8868\u8fbe\u5f0f"},{"location":"databases/MySQL/SQL/#12-from","text":"","title":"1.2  \u5355\u8868\u5b50\u53e5 - FROM"},{"location":"databases/MySQL/SQL/#121_2","text":"1 2 mysql [ world ] > SELECT * FROM country ; # \u4e0d\u8981\u5bf9\u5927\u8868\u8fdb\u884c\u64cd\u4f5c","title":"1.2.1 \u67e5\u8be2\u6240\u6709\u5b57\u6bb5"},{"location":"databases/MySQL/SQL/#122_1","text":"1 mysql [ world ] > SELECT name FROM country ;","title":"1.2.2 \u67e5\u8be2\u6307\u5b9a\u5b57\u6bb5"},{"location":"databases/MySQL/SQL/#123_1","text":"1 mysql [ world ] > SELECT name , population FROM country ;","title":"1.2.3 \u67e5\u8be2\u591a\u4e2a\u5b57\u6bb5"},{"location":"databases/MySQL/SQL/#2-where","text":"\u8bed\u6cd5\uff1a 1 2 3 SELECT \u5b57\u6bb5\u540d 1 , \u5b57\u6bb5\u540d 2 ,... \u5b57\u6bb5\u540d n FROM \u8868\u540d WHERE \u67e5\u8be2\u6761\u4ef6 ;","title":"2. \u6761\u4ef6\u67e5\u8be2 - WHERE"},{"location":"databases/MySQL/SQL/#21_2","text":"1 2 3 4 # \u67e5\u8be2\u6e56\u5317\u7684\u57ce\u5e02 SELECT * FROM city WHERE District = 'HuBei' ; # \u67e5\u8be2\u4eba\u53e3\u5c0f\u4e8e100\u7684\u57ce\u5e02 SELECT * FROM city WHERE Population < 100 ;","title":"2.1 \u6309\u6761\u4ef6\u8868\u8fbe\u5f0f\u7b5b\u9009\uff08=\u3001&lt;&gt; \u3001!=\u3001 &lt;\u3001 &lt;=\u3001 &gt;\u3001 &gt;=\uff09"},{"location":"databases/MySQL/SQL/#22-andor","text":"\u4e3b\u8981\u4f5c\u7528\uff1a\u7528\u4e8e\u8fde\u63a5\u6761\u4ef6\u8868\u8fbe\u5f0f 1 2 3 4 # \u67e5\u8be2\u4e2d\u56fd\u4eba\u53e3\u5927\u4e8e500\u4e07\u7684\u57ce\u5e02 SELECT * FROM city WHERE CountryCode = 'CHN' AND Population > 5000000 ; # \u67e5\u8be2\u4e2d\u56fd\u548c\u7f8e\u56fd\u7684\u57ce\u5e02\u4fe1\u606f SELECT * FROM city WHERE CountryCode = 'CHN' OR CountryCode = 'USA' ;","title":"2.2 \u6309\u903b\u8f91\u903b\u8f91\u8868\u8fbe\u5f0f\u7b5b\u9009\uff08AND\u3001OR\uff09"},{"location":"databases/MySQL/SQL/#23_1","text":"","title":"2.3 \u6a21\u7cca\u67e5\u8be2"},{"location":"databases/MySQL/SQL/#231-wherelike","text":"\u4e00\u822c\u548c\u901a\u914d\u7b26\u642d\u914d\u4f7f\u7528\uff0c\u53ef\u4ee5\u5224\u65ad\u5b57\u7b26\u578b\u6570\u503c\u6216\u6570\u503c\u578b % \u5339\u914d\u4efb\u610f\u591a\u4e2a\u5b57\u7b26\uff0c\u5305\u542b0\u4e2a\u5b57\u7b26 _ \u5339\u914d\u4efb\u610f\u5355\u4e2a\u5b57\u7b26 1 2 # \u540d\u5b57\u4ee5guang\u5f00\u5934\u7684\u7701 SELECT * FROM city WHERE District LIKE 'guang%' % \u4e0d\u80fd\u653e\u5728\u524d\u9762\uff0c\u56e0\u4e3a\u4e0d\u8d70\u7d22\u5f15","title":"2.3.1 WHERE\u914d\u5408LIKE\u8bed\u53e5"},{"location":"databases/MySQL/SQL/#232-wherein","text":"\u542b\u4e49\uff1a\u5224\u65ad\u67d0\u5b57\u6bb5\u7684\u503c\u662f\u5426\u5c5e\u4e8e IN \u5217\u8868\u4e2d\u7684\u67d0\u4e00\u9879 \u4f7f\u7528 IN \u63d0\u9ad8\u8bed\u53e5\u7b80\u6d01\u5ea6 IN \u76f8\u5f53\u4e8e\u7b49\u4e8e\uff0c\u6240\u4ee5\u4e0d\u652f\u6301\u901a\u914d\u7b26\uff08 like \u624d\u652f\u6301\uff09 1 2 # \u67e5\u8be2\u4e2d\u56fd\u548c\u7f8e\u56fd\u7684\u57ce\u5e02\u4fe1\u606f,\u4e0eOR\u7c7b\u4f3c SELECT * FROM city WHERE CountryCode IN ( 'CHN' , 'USA' );","title":"2.3.2 WHERE\u914d\u5408IN\u8bed\u53e5"},{"location":"databases/MySQL/SQL/#234-wherebetreen-and","text":"\u4f7f\u7528between and\u53ef\u4ee5\u63d0\u9ad8\u8bed\u53e5\u7684\u7b80\u6d01\u5ea6 \u5305\u542b\u4e34\u754c\u503c\uff1b \u4e24\u4e2a\u4e34\u754c\u503c\u4e0d\u80fd\u66ff\u6362\u987a\u5e8f\uff1b 1 2 # \u67e5\u8be2\u4eba\u53e3\u5927\u4e8e100\u4e07\u5c0f\u4e8e200\u4e07\u57ce\u5e02\u4fe1\u606f SELECT * FROM city WHERE Population BETWEEN 1000000 AND 2000000 ;","title":"2.3.4 WHERE\u914d\u5408BETREEN AND"},{"location":"databases/MySQL/SQL/#235-whereis-not-null","text":"\u7528\u4e8e\u5224\u65ad null \u503c = \u6216\u8005 <> \u4e0d\u80fd\u7528\u4e8e\u5224\u65ad null \u503c 1 SELECT name FROM country WHERE indepyear IS NULL ;","title":"2.3.5 WHERE\u914d\u5408IS [NOT] NULL"},{"location":"databases/MySQL/SQL/#3_4","text":"\u8bed\u6cd5 1 2 3 4 SELECT \u67e5\u8be2\u5217\u8868 FROM \u8868 [ WHERE \u7b5b\u9009\u6761\u4ef6 ] ORDER BY \u6392\u5e8f\u5217\u8868 [ ASC | DESC ] ASC \u4ee3\u8868\u7684\u662f\u5347\u5e8f\uff0c DESC \u4ee3\u8868\u7684\u662f\u964d\u5e8f\uff0c\u5982\u679c\u4e0d\u5199\uff0c\u9ed8\u8ba4\u662f\u5347\u5e8f ORDER BY \u5b50\u53e5\u4e2d\u53ef\u4ee5\u652f\u6301\u5355\u4e2a\u5b57\u6bb5\u3001\u591a\u4e2a\u5b57\u6bb5\u3001\u8868\u8fbe\u5f0f\u3001\u51fd\u6570\u3001\u522b\u540d ORDER BY \u5b50\u53e5\u4e00\u822c\u662f\u653e\u5728\u67e5\u8be2\u8bed\u53e5\u7684\u6700\u540e\u9762\uff0c\u4f46 limit \u5b50\u53e5\u9664\u5916 1 2 3 4 # \u67e5\u8be2\u4e2d\u56fd\u7684\u57ce\u5e02\u4fe1\u606f\uff0c\u5e76\u6309\u4eba\u53e3\u6570\u91cf\u4ece\u5927\u5230\u5c0f\u6392\u5e8f SELECT * FROM city WHERE CountryCode = 'CHN' ORDER BY Population DESC ;","title":"3. \u6392\u5e8f\u67e5\u8be2"},{"location":"databases/MySQL/SQL/#4_1","text":"\u8bed\u6cd5 1 2 3 4 5 6 7 SELECT\u5b50\u53e5 \u5206\u7ec4\u51fd\u6570\uff0c\u5217\uff08\u8981\u6c42\u51fa\u73b0\u5728 group by\u7684\u540e\u9762 \uff09 FROM \u8868 [ WHERE \u7b5b\u9009\u6761\u4ef6 ] GROUP BY \u5206\u7ec4\u5217\u8868 [ HAVING \u5206\u7ec4\u540e\u7684\u7b5b\u9009 ] [ ORDER BY \u6392\u5e8f\u5217\u8868 ] # \u6267\u884c\u987a\u5e8f\uff1aFROM->WHERE->GROUP BY\u5b50\u53e5->HAVING\u5b50\u53e5->SELECT\u5b50\u53e5->ORDER BY\u5b50\u53e5 \u6ce8\u610f\uff1a\u67e5\u8be2\u5217\u8868\u6bd4\u8f83\u7279\u6b8a\uff0c\u8981\u6c42\u662f\u5206\u7ec4\u51fd\u6570\u548cgroup by\u540e\u51fa\u73b0\u7684\u5b57\u6bb5 \u7279\u70b9\uff1a \u5206\u7ec4\u67e5\u8be2\u4e2d\u7684\u7b5b\u9009\u6761\u4ef6\u5206\u4e3a\u4e24\u7c7b\uff1a \u5206\u7ec4\u524d\u7b5b\u9009 \u57fa\u4e8e\u539f\u59cb\u8868\u7b5b\u9009\uff0c\u5728 group by \u5b50\u53e5\u7684\u524d\u9762\uff0c\u4f7f\u7528\u5173\u952e\u8bcd where \u5206\u7ec4\u540e\u7b5b\u9009 \u57fa\u4e8e\u5206\u7ec4\u540e\u7684\u7ed3\u679c\u96c6\u7b5b\u9009\uff0c\u5728 group by \u5b50\u53e5\u7684\u540e\u9762 \u4f7f\u7528\u5173\u952e\u8bcd having \u5206\u7ec4\u51fd\u6570\u505a\u6761\u4ef6\u80af\u5b9a\u662f\u653e\u5728having\u5b50\u53e5\u4e2d \u80fd\u7528\u5206\u7ec4\u524d\u7b5b\u9009\u7684\uff0c\u5c31\u4f18\u5148\u8003\u8651\u4f7f\u7528\u5206\u7ec4\u524d\u7b5b\u9009 group by\u5b50\u53e5\u652f\u6301\u5355\u4e2a\u5b57\u6bb5\u5206\u7ec4\uff0c\u591a\u4e2a\u5b57\u6bb5\u5206\u7ec4\uff08\u591a\u4e2a\u5b57\u6bb5\u4e4b\u95f4\u7528\u9017\u53f7\u9694\u5f00\u6ca1\u6709\u987a\u5e8f\u8981\u6c42\uff09\uff0c\u8868\u8fbe\u5f0f\u6216\u51fd\u6570\uff08\u7528\u5f97\u8f83\u5c11\uff09 \u4e5f\u53ef\u4ee5\u6dfb\u52a0\u6392\u5e8f\uff08\u6392\u5e8f\u653e\u5728\u6574\u4e2a\u5206\u7ec4\u67e5\u8be2\u6700\u540e\u4f4d\u7f6e\uff09","title":"4. \u5206\u7ec4\u67e5\u8be2"},{"location":"databases/MySQL/SQL/#41","text":"\u4f8b \u67e5\u8be2\u6bcf\u4e2a\u5de5\u79cd\u7684\u6700\u9ad8\u5de5\u8d44 1 2 3 4 5 6 SELECT MAX ( salary ), job_id FROM employees GROUP BY job_id ;","title":"4.1 \u7b80\u5355\u5206\u7ec4"},{"location":"databases/MySQL/SQL/#42","text":"\u4f8b \u67e5\u8be2\u6bcf\u4e2a\u9886\u5bfc\u624b\u4e0b\u6709\u5956\u91d1\u7684\u5458\u5de5\u7684\u5e73\u5747\u5de5\u8d44 1 2 3 4 SELECT AVG ( salary ) \u5e73\u5747\u5de5\u8d44 , manager_id FROM employees WHERE commission_pct IS NOT NULL GROUP BY manager_id ; \u67e5\u8be2\u7ed3\u679c 1 2 3 4 5 6 7 8 9 10 +--------------+------------+ | \u5e73\u5747\u5de5\u8d44 | manager_id | +--------------+------------+ | 12200 . 000000 | 100 | | 8500 . 000000 | 145 | | 8500 . 000000 | 146 | | 7766 . 666667 | 147 | | 8650 . 000000 | 148 | | 8333 . 333333 | 149 | +--------------+------------+","title":"4.2 \u5206\u7ec4\u524d\u7b5b\u9009"},{"location":"databases/MySQL/SQL/#43","text":"\u540e\u8fc7\u6ee4\uff0c\u7528\u5728GROUP BY\u4e4b\u540e\uff0cHAVING\u6761\u4ef6\u662f\u4e0d\u8d70\u7d22\u5f15\u7684\uff0c\u4e00\u822c\u53ef\u4ee5\u7528\u4e34\u65f6\u8868\u89e3\u51b3\u3002 \u4f8b1 \u67e5\u8be2\u54ea\u4e2a\u90e8\u95e8\u7684\u5458\u5de5\u4e2a\u6570>5 1 2 3 4 SELECT COUNT ( * ) \u5458\u5de5\u4e2a\u6570 , department_id FROM employees GROUP BY department_id HAVING COUNT ( * ) > 5 ; \u67e5\u8be2\u7ed3\u679c 1 2 3 4 5 6 7 8 +--------------+---------------+ | \u5458\u5de5\u4e2a\u6570 | department_id | +--------------+---------------+ | 6 | 30 | | 45 | 50 | | 34 | 80 | | 6 | 100 | +--------------+---------------+ \u4f8b2 \u6bcf\u4e2a\u5de5\u79cd\u6709\u5956\u91d1\u7684\u5458\u5de5\u7684\u6700\u9ad8\u5de5\u8d44>12000\u7684\u5de5\u79cd\u7f16\u53f7\u548c\u6700\u9ad8\u5de5\u8d44 1 2 3 4 5 SELECT job_id , MAX ( salary ) FROM employees WHERE commission_pct IS NOT NULL GROUP BY job_id HAVING MAX ( salary ) > 12000 ; \u67e5\u8be2\u7ed3\u679c 1 2 3 4 5 +--------+-------------+ | job_id | MAX ( salary ) | +--------+-------------+ | SA_MAN | 14000 . 00 | +--------+-------------+","title":"4.3 \u5206\u7ec4\u540e\u7b5b\u9009"},{"location":"databases/MySQL/SQL/#44","text":"\u4f8b \u67e5\u8be2\u6ca1\u6709\u5956\u91d1\u7684\u5458\u5de5\u7684\u6700\u9ad8\u5de5\u8d44>6000\u7684\u5de5\u79cd\u7f16\u53f7\u548c\u6700\u9ad8\u5de5\u8d44,\u6309\u6700\u9ad8\u5de5\u8d44\u5347\u5e8f 1 2 3 4 5 6 7 # \u7b2c\u4e00\u6b65\uff1a\u6309\u5de5\u79cd\u5206\u7ec4\uff0c\u67e5\u8be2\u6bcf\u4e2a\u5de5\u79cd\u6709\u5956\u91d1\u7684\u5458\u5de5\u7684\u6700\u9ad8\u5de5\u8d44 SELECT MAX ( salary ) \u6700\u9ad8\u5de5\u8d44 , job_id FROM employees WHERE commission_pct IS NULL GROUP BY job_id HAVING MAX ( salary ) > 6000 # \u7b2c\u4e8c\u6b65\uff1a\u7b5b\u9009\u521a\u624d\u7684\u7ed3\u679c\uff0c\u770b\u54ea\u4e2a\u6700\u9ad8\u5de5\u8d44>6000 ORDER BY MAX ( salary ) ASC ; # \u7b2c\u4e09\u6b65\uff1a\u6309\u6700\u9ad8\u5de5\u8d44\u5347\u5e8f \u67e5\u8be2\u7ed3\u679c 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 +--------------+------------+ | \u6700\u9ad8\u5de5\u8d44 | job_id | +--------------+------------+ | 6500 . 00 | HR_REP | | 8200 . 00 | ST_MAN | | 8300 . 00 | AC_ACCOUNT | | 9000 . 00 | FI_ACCOUNT | | 9000 . 00 | IT_PROG | | 10000 . 00 | PR_REP | | 11000 . 00 | PU_MAN | | 12000 . 00 | FI_MGR | | 12000 . 00 | AC_MGR | | 13000 . 00 | MK_MAN | | 17000 . 00 | AD_VP | | 24000 . 00 | AD_PRES | +--------------+------------+","title":"4.4  \u5206\u7ec4\u540e\u6392\u5e8f"},{"location":"databases/MySQL/SQL/#45","text":"\u4f8b \u67e5\u8be2\u6bcf\u4e2a\u90e8\u95e8\u6bcf\u4e2a\u5de5\u79cd\u7684\u5458\u5de5\u7684\u5e73\u5747\u5de5\u8d44 1 2 3 4 5 6 7 SELECT AVG ( salary ), department_id , job_id FROM employees GROUP BY department_id , job_id ;","title":"4.5 \u6309\u591a\u4e2a\u5b57\u6bb5\u5206\u7ec4"},{"location":"databases/MySQL/SQL/#46","text":"\u4f8b \u6309\u5458\u5de5\u59d3\u540d\u7684\u957f\u5ea6\u5206\u7ec4\uff0c\u67e5\u8be2\u6bcf\u4e00\u7ec4\u7684\u5458\u5de5\u4e2a\u6570\uff0c\u7b5b\u9009\u5458\u5de5\u4e2a\u6570>5\u7684\u6709\u54ea\u4e9b 1 2 3 4 5 6 7 SELECT COUNT ( * ) \u5458\u5de5\u4e2a\u6570 , LENGTH ( last_name ) \u59d3\u540d\u957f\u5ea6 FROM employees GROUP BY \u59d3\u540d\u957f\u5ea6 # \u67e5\u8be2\u6bcf\u4e2a\u957f\u5ea6\u7684\u5458\u5de5\u4e2a\u6570 HAVING \u5458\u5de5\u4e2a\u6570 > 5 ; # \u6dfb\u52a0\u7b5b\u9009\u6761\u4ef6 \u67e5\u8be2\u7ed3\u679c 1 2 3 4 5 6 7 8 9 10 +--------------+--------------+ | \u5458\u5de5\u4e2a\u6570 | \u59d3\u540d\u957f\u5ea6 | +--------------+--------------+ | 11 | 4 | | 29 | 5 | | 28 | 6 | | 15 | 7 | | 7 | 8 | | 8 | 9 | +--------------+--------------+","title":"4.6  \u6309\u8868\u8fbe\u5f0f\u6216\u51fd\u6570\u5206\u7ec4"},{"location":"databases/MySQL/SQL/#3_5","text":"\u53c8\u79f0\u591a\u8868\u67e5\u8be2\uff0c\u5f53\u67e5\u8be2\u7684\u5b57\u6bb5\u6765\u81ea\u4e8e\u591a\u4e2a\u8868\u65f6\uff0c\u5c31\u4f1a\u7528\u5230\u8fde\u63a5\u67e5\u8be2\u3002 \u7b1b\u5361\u5c14\u79ef\u73b0\u8c61 \uff1a\u5f53\u4e24\u5f20\u8868\u8fdb\u884c\u8fde\u63a5\u67e5\u8be2\u7684\u65f6\u5019\uff0c\u6ca1\u6709\u4efb\u4f55\u6761\u4ef6\u8fdb\u884c\u9650\u5236\uff0c\u6700\u7ec8\u7684\u67e5\u8be2\u7ed3\u679c\u6761\u6570\u662f\u4e24\u5f20\u8868\u8bb0\u5f55\u6761\u6570\u7684\u4e58\u79ef\u3002","title":"3. \u8fde\u63a5\u67e5\u8be2"},{"location":"databases/MySQL/SQL/#31","text":"\u6309\u5e74\u4ee3\u5206\u7c7b SQL92\u6807\u51c6\uff1a \u4ec5\u652f\u6301\u5185\u8fde\u63a5 SQL99\u6807\u51c6\uff1a\u63a8\u8350\u4f7f\u7528\uff0c\u652f\u6301\u5185\u8fde\u63a5\u3001\u5916\u8fde\u63a5\uff08\u5de6\u5916\u548c\u53f3\u5916\uff09\u3001\u4ea4\u53c9\u8fde\u63a5 \u6309\u8fde\u63a5\u65b9\u5f0f\u5206\u7c7b \u5185\u8fde\u63a5 \u7b49\u503c\u8fde\u63a5 \u975e\u7b49\u503c\u8fde\u63a5 \u81ea\u8fde\u63a5 \u5916\u8fde\u63a5 \u5de6\u5916\u8fde\u63a5 \u53f3\u5916\u8fde\u63a5 \u5168\u5916\u8fde\u63a5\uff08MySQL\u4e0d\u652f\u6301\uff09 \u4ea4\u53c9\u8fde\u63a5","title":"3.1 \u5206\u7c7b"},{"location":"databases/MySQL/SQL/#32-sql92","text":"","title":"3.2 SQL92\u8bed\u6cd5"},{"location":"databases/MySQL/SQL/#1_6","text":"\u7279\u70b9\uff1a \u591a\u8868\u7b49\u503c\u8fde\u63a5\u7684\u7ed3\u679c\u4e3a\u591a\u8868\u7684\u4ea4\u96c6\u90e8\u5206 n\u8868\u8fde\u63a5\uff0c\u81f3\u5c11\u9700\u8981n-1\u4e2a\u8fde\u63a5\u6761\u4ef6 \u591a\u8868\u7684\u987a\u5e8f\u6ca1\u6709\u8981\u6c42 \u4e00\u822c\u9700\u8981\u4e3a\u8868\u8d77\u522b\u540d \u53ef\u4ee5\u642d\u914d\u524d\u9762\u4ecb\u7ecd\u7684\u6240\u6709\u5b50\u53e5\u4f7f\u7528\uff0c\u6bd4\u5982\u6392\u5e8f\u3001\u5206\u7ec4\u3001\u7b5b\u9009","title":"1. \u7b49\u503c\u8fde\u63a5"},{"location":"databases/MySQL/SQL/#11_2","text":"1 2 3 4 5 6 7 SELECT last_name , department_name FROM employees , departments WHERE employees . `department_id` = departments . `department_id` ;","title":"1.1 \u7b80\u5355\u67e5\u8be2"},{"location":"databases/MySQL/SQL/#12_2","text":"1 2 3 4 5 6 7 8 9 # \u67e5\u8be2\u5458\u5de5\u540d\u3001\u5de5\u79cd\u53f7\u3001\u5de5\u79cd\u540d SELECT last_name , e . `job_id` , job_title FROM employees e , jobs j WHERE e . `job_id` = j . `job_id` ;","title":"1.2 \u4e3a\u8868\u8d77\u522b\u540d"},{"location":"databases/MySQL/SQL/#13_1","text":"1 2 3 4 5 6 7 8 9 # \u67e5\u8be2\u5458\u5de5\u540d\u3001\u5de5\u79cd\u53f7\u3001\u5de5\u79cd\u540d SELECT last_name , e . `job_id` , job_title FROM jobs j , employees e WHERE e . `job_id` = j . `job_id` ;","title":"1.3 \u8868\u7684\u987a\u5e8f\u53ef\u4ee5\u8c03\u6362"},{"location":"databases/MySQL/SQL/#14","text":"1 2 3 4 5 6 7 8 9 # \u67e5\u8be2\u6709\u5956\u91d1\u7684\u5458\u5de5\u540d\u3001\u90e8\u95e8\u540d SELECT last_name , department_name FROM employees AS e , departments AS d WHERE e . `department_id` = d . `department_id` AND e . `commission_pct` IS NOT NULL ;","title":"1.4 \u52a0\u7b5b\u9009\u6761\u4ef6"},{"location":"databases/MySQL/SQL/#15","text":"1 2 3 4 5 6 7 8 9 # \u67e5\u8be2\u6bcf\u4e2a\u57ce\u5e02\u7684\u90e8\u95e8\u4e2a\u6570 SELECT COUNT ( * ) \u4e2a\u6570 , city FROM departments d , locations l WHERE d . `location_id` = l . `location_id` GROUP BY city ; \u67e5\u8be2\u7ed3\u679c 1 2 3 4 5 6 7 8 9 10 11 12 +--------+---------------------+ | \u4e2a\u6570 | city | +--------+---------------------+ | 1 | London | | 1 | Munich | | 1 | Oxford | | 21 | Seattle | | 1 | South San Francisco | | 1 | Southlake | | 1 | Toronto | +--------+---------------------+ 7 rows in set ( 0 . 00 sec )","title":"1.5 \u52a0\u5206\u7ec4"},{"location":"databases/MySQL/SQL/#16","text":"1 2 3 4 5 6 7 8 9 10 # \u67e5\u8be2\u6bcf\u4e2a\u5de5\u79cd\u7684\u5de5\u79cd\u540d\u548c\u5458\u5de5\u7684\u4e2a\u6570\uff0c\u5e76\u4e14\u6309\u5458\u5de5\u4e2a\u6570\u964d\u5e8f SELECT job_title , COUNT ( * ) AS \u4e2a\u6570 FROM employees e , jobs j WHERE e . `job_id` = j . `job_id` GROUP BY job_title ORDER BY \u4e2a\u6570 DESC ;","title":"1.6 \u52a0\u6392\u5e8f"},{"location":"databases/MySQL/SQL/#17","text":"1 2 3 4 5 6 7 8 9 10 11 # \u67e5\u8be2\u5458\u5de5\u540d\u3001\u90e8\u95e8\u540d\u548c\u6240\u5728\u7684\u57ce\u5e02 SELECT last_name , department_name , city FROM employees e , departments d , locations l WHERE e . `department_id` = d . `department_id` AND d . `location_id` = l . `location_id` ;","title":"1.7 \u4e09\u8868\u8fde\u63a5"},{"location":"databases/MySQL/SQL/#2_4","text":"1 2 3 4 5 6 7 8 9 # \u67e5\u8be2\u5458\u5de5\u7684\u5de5\u8d44\u548c\u5de5\u8d44\u7ea7\u522b SELECT salary , grade_level FROM employees e , job_grades g WHERE salary BETWEEN g . lowest_sal AND g . highest_sal ;","title":"2. \u975e\u7b49\u503c\u8fde\u63a5"},{"location":"databases/MySQL/SQL/#3_6","text":"1 2 3 4 # \u67e5\u8be2\u5458\u5de5\u540d\u548c\u4e0a\u7ea7\u7684\u540d\u79f0 SELECT e . employee_id , e . last_name , m . employee_id , m . last_name FROM employees e , employees m WHERE e . `manager_id` = m . `employee_id` ;","title":"3. \u81ea\u8fde\u63a5"},{"location":"databases/MySQL/SQL/#33-sql99","text":"SQL92\u548cSQL99\u7684\u533a\u522b\uff1a \u200b SQL99\uff0c\u4f7f\u7528JOIN\u5173\u952e\u5b57\u4ee3\u66ff\u4e86\u4e4b\u524d\u7684\u9017\u53f7\uff0c\u5e76\u4e14\u5c06\u8fde\u63a5\u6761\u4ef6\u548c\u7b5b\u9009\u6761\u4ef6\u8fdb\u884c\u4e86\u5206\u79bb\uff0c\u63d0\u9ad8\u9605\u8bfb\u6027 \u8bed\u6cd5\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 SELECT \u67e5\u8be2\u5217\u8868 FROM \u8868 1 \u522b\u540d [ \u8fde\u63a5\u7c7b\u578b ] JOIN \u8868 2 \u522b\u540d ON \u8fde\u63a5\u6761\u4ef6 [ WHERE \u7b5b\u9009\u6761\u4ef6 ] [ GROUP BY \u5206\u7ec4 ] [ HAVING \u7b5b\u9009\u6761\u4ef6 ] [ ORDER BY \u6392\u5e8f\u5217\u8868 ] # \u8fde\u63a5\u7c7b\u578b # \u5185\u8fde\u63a5\uff1ainner # \u5916\u8fde\u63a5 # \u5de6\u5916\uff1aleft [outer] # \u53f3\u5916\uff1aright [outer] # \u5168\u5916\uff1afull [outer] # \u4ea4\u53c9\u8fde\u63a5\uff1across","title":"3.3 SQL99\u8bed\u6cd5"},{"location":"databases/MySQL/SQL/#1_7","text":"\u7279\u70b9\uff1a \u6dfb\u52a0\u6392\u5e8f\u3001\u5206\u7ec4\u3001\u7b5b\u9009 inner\u53ef\u4ee5\u7701\u7565 \u7b5b\u9009\u6761\u4ef6\u653e\u5728where\u540e\u9762\uff0c\u8fde\u63a5\u6761\u4ef6\u653e\u5728on\u540e\u9762\uff0c\u63d0\u9ad8\u5206\u79bb\u6027\uff0c\u4fbf\u4e8e\u9605\u8bfb inner join\u8fde\u63a5\u548csql92\u8bed\u6cd5\u4e2d\u7684\u7b49\u503c\u8fde\u63a5\u6548\u679c\u662f\u4e00\u6837\u7684\uff0c\u90fd\u662f\u67e5\u8be2\u591a\u8868\u7684\u4ea4\u96c6","title":"1. \u5185\u8fde\u63a5"},{"location":"databases/MySQL/SQL/#11_3","text":"\u4f8b1 \u67e5\u8be2\u5458\u5de5\u540d\u3001\u90e8\u95e8\u540d 1 2 3 4 5 6 7 SELECT last_name , department_name FROM employees e INNER JOIN departments d ON e . `department_id` = d . `department_id` ; \u67e5\u8be2\u7ed3\u679c 1 2 3 4 5 6 7 8 9 +-------------+-----------------+ | last_name | department_name | +-------------+-----------------+ | Whalen | Adm | ... | Higgins | Acc | | Gietz | Acc | +-------------+-----------------+ 106 rows in set ( 0 . 01 sec ) \u4f8b2 \u67e5\u8be2\u54ea\u4e2a\u90e8\u95e8\u7684\u90e8\u95e8\u5458\u5de5\u4e2a\u6570>3\u7684\u90e8\u95e8\u540d\u548c\u5458\u5de5\u4e2a\u6570\uff0c\u5e76\u6309\u4e2a\u6570\u964d\u5e8f\u6392\u5e8f 1 2 3 4 5 6 7 8 9 10 SELECT department_name , COUNT ( * ) \u5458\u5de5\u4e2a\u6570 FROM departments d INNER JOIN employees e ON d . `department_id` = e . `department_id` GROUP BY d . `department_id` HAVING \u5458\u5de5\u4e2a\u6570 > 3 ORDER BY \u5458\u5de5\u4e2a\u6570 DESC ; \u67e5\u8be2\u7ed3\u679c 1 2 3 4 5 6 7 8 9 10 +-----------------+--------------+ | department_name | \u5458\u5de5\u4e2a\u6570 | +-----------------+--------------+ | Shi | 45 | | Sal | 34 | | Fin | 6 | | Pur | 6 | | IT | 5 | +-----------------+--------------+ 5 rows in set ( 0 . 01 sec )","title":"1.1 \u7b49\u503c\u8fde\u63a5"},{"location":"databases/MySQL/SQL/#12_3","text":"\u4f8b1 \u67e5\u8be2\u5458\u5de5\u7684\u5de5\u8d44\u7ea7\u522b 1 2 3 4 5 6 7 8 SELECT salary , grade_level FROM employees e INNER JOIN job_grades g ON e . `salary` BETWEEN g . `lowest_sal` AND g . `highest_sal` ; \u4f8b2 \u67e5\u8be2\u6bcf\u4e2a\u5de5\u8d44\u7ea7\u522b>20\u7684\u4e2a\u6570\uff0c\u5e76\u4e14\u6309\u5de5\u8d44\u7ea7\u522b\u964d\u5e8f 1 2 3 4 5 6 7 8 9 10 11 SELECT COUNT ( * ), grade_level FROM employees e INNER JOIN job_grades g ON e . `salary` BETWEEN g . `lowest_sal` AND g . `highest_sal` GROUP BY grade_level HAVING COUNT ( * ) > 20 ORDER BY grade_level DESC ; \u67e5\u8be2\u7ed3\u679c 1 2 3 4 5 6 7 8 +----------+-------------+ | COUNT ( * ) | grade_level | +----------+-------------+ | 38 | C | | 26 | B | | 24 | A | +----------+-------------+ 3 rows in set ( 0 . 01 sec )","title":"1.2 \u975e\u7b49\u503c\u8fde\u63a5"},{"location":"databases/MySQL/SQL/#13_2","text":"\u4f8b1 \u67e5\u8be2\u5458\u5de5\u7684\u540d\u5b57\u3001\u4e0a\u7ea7\u7684\u540d\u5b57 1 2 3 4 5 6 7 SELECT e . last_name , m . last_name FROM employees e INNER JOIN employees m ON e . `manager_id` = m . `employee_id` ;","title":"1.3 \u81ea\u8fde\u63a5"},{"location":"databases/MySQL/SQL/#2_5","text":"\u5e94\u7528\u573a\u666f\uff1a\u7528\u4e8e\u67e5\u8be2\u4e00\u4e2a\u8868\u4e2d\u6709\uff0c\u53e6\u4e00\u4e2a\u8868\u6ca1\u6709\u7684\u8bb0\u5f55 \u7279\u70b9\uff1a \u5916\u8fde\u63a5\u7684\u67e5\u8be2\u7ed3\u679c\u4e3a\u4e3b\u8868\u4e2d\u7684\u6240\u6709\u8bb0\u5f55\uff0c\u5982\u679c\u4ece\u8868\u4e2d\u6709\u548c\u5b83\u5339\u914d\u7684\uff0c\u5219\u663e\u793a\u5339\u914d\u7684\u503c\uff0c\u5982\u679c\u4ece\u8868\u4e2d\u6ca1\u6709\u548c\u5b83\u5339\u914d\u7684\uff0c\u5219\u663e\u793anull \u5916\u8fde\u63a5\u67e5\u8be2\u7ed3\u679c=\u5185\u8fde\u63a5\u7ed3\u679c+\u4e3b\u8868\u4e2d\u6709\u800c\u4ece\u8868\u4e2d\u6ca1\u6709\u7684\u8bb0\u5f55 \u5de6\u5916\u8fde\u63a5\uff1aleft join\u5de6\u8fb9\u7684\u662f\u4e3b\u8868 \u53f3\u5916\u8fde\u63a5\uff1aright join\u53f3\u8fb9\u7684\u662f\u4e3b\u8868 \u5de6\u5916\u548c\u53f3\u5916\u4ea4\u6362\u4e24\u4e2a\u8868\u7684\u987a\u5e8f\uff0c\u53ef\u4ee5\u5b9e\u73b0\u540c\u6837\u7684\u6548\u679c \u5168\u5916\u8fde\u63a5=\u5185\u8fde\u63a5\u7684\u7ed3\u679c+\u88681\u4e2d\u6709\u4f46\u88682\u4e2d\u6ca1\u6709\u7684+\u88682\u4e2d\u6709\u4f46\u88681\u4e2d\u6ca1\u6709\u7684","title":"2. \u5916\u8fde\u63a5"},{"location":"databases/MySQL/SQL/#21_3","text":"1 2 3 4 5 6 7 8 9 # \u67e5\u8be2\u54ea\u4e2a\u90e8\u95e8\u6ca1\u6709\u5458\u5de5 SELECT d . * , e . employee_id FROM departments d LEFT OUTER JOIN employees e ON d . `department_id` = e . `department_id` WHERE e . `employee_id` IS NULL ;","title":"2.1 \u5de6\u5916\u8fde\u63a5"},{"location":"databases/MySQL/SQL/#22_2","text":"1 2 3 4 5 6 7 8 SELECT d . * , e . employee_id FROM employees e RIGHT OUTER JOIN departments d ON d . `department_id` = e . `department_id` WHERE e . `employee_id` IS NULL ;","title":"2.2 \u53f3\u5916\u8fde\u63a5"},{"location":"databases/MySQL/SQL/#33-mysql","text":"","title":"3.3 \u5168\u5916\u8fde\u63a5\uff08mysql\u4e0d\u652f\u6301\uff09"},{"location":"databases/MySQL/SQL/#3_7","text":"","title":"3. \u4ea4\u53c9\u8fde\u63a5\uff08\u7b1b\u5361\u5c14\u4e58\u79ef\uff09"},{"location":"databases/MySQL/SQL/#4_2","text":"\u5f53\u4e00\u4e2a\u67e5\u8be2\u8bed\u53e5\u4e2d\u53c8\u5d4c\u5957\u4e86\u53e6\u4e00\u4e2a\u5b8c\u6574\u7684select\u8bed\u53e5\uff0c\u5219\u88ab\u5d4c\u5957\u7684select\u8bed\u53e5\u79f0\u4e3a\u5b50\u67e5\u8be2\u6216\u5185\u67e5\u8be2\uff0c\u5916\u9762\u7684select\u8bed\u53e5\u79f0\u4e3a\u4e3b\u67e5\u8be2\u6216\u5916\u67e5\u8be2\u3002 \u5206\u7c7b\uff1a \u6309\u5b50\u67e5\u8be2\u51fa\u73b0\u7684\u4f4d\u7f6e\uff1a select\u540e\u9762\uff1a\u8981\u6c42\u5b50\u67e5\u8be2\u7684\u7ed3\u679c\u4e3a\u5355\u884c\u5355\u5217\uff08\u79f0\u4e3a\u6807\u91cf\u5b50\u67e5\u8be2\uff09 from\u540e\u9762\uff1a\u8981\u6c42\u5b50\u67e5\u8be2\u7684\u7ed3\u679c\u53ef\u4ee5\u4e3a\u591a\u884c\u591a\u5217 where\u6216having\u540e\u9762\uff1a\u8981\u6c42\u5b50\u67e5\u8be2\u7684\u7ed3\u679c\u5fc5\u987b\u4e3a\u5355\u5217\uff08\u5355\u5217\u53c8\u5206\u4e3a\u5355\u884c\u5b50\u67e5\u8be2\u548c\u591a\u884c\u5b50\u67e5\u8be2\uff09 exists\u540e\u9762\uff08\u76f8\u5173\u5b50\u67e5\u8be2\uff09\uff1a\u8981\u6c42\u5b50\u67e5\u8be2\u7ed3\u679c\u5fc5\u987b\u4e3a\u5355\u5217\uff08\u76f8\u5173\u5b50\u67e5\u8be2\uff09 \u6309\u529f\u80fd\u3001\u7ed3\u679c\u96c6\u7684\u884c\u5217\u6570\u4e0d\u540c\uff1a \u6807\u91cf\u5b50\u67e5\u8be2\uff08\u7ed3\u679c\u96c6\u53ea\u6709\u4e00\u884c\u4e00\u5217\uff09 \u5217\u5b50\u67e5\u8be2\uff08\u7ed3\u679c\u96c6\u53ea\u6709\u4e00\u5217\u591a\u884c\uff09 \u884c\u5b50\u67e5\u8be2\uff08\u7ed3\u679c\u96c6\u6709\u4e00\u884c\u591a\u5217\uff09 \u8868\u5b50\u67e5\u8be2\uff08\u7ed3\u679c\u96c6\u4e00\u822c\u4e3a\u591a\u884c\u591a\u5217\uff09 \u7279\u70b9\uff1a \u5b50\u67e5\u8be2\u653e\u5728\u6761\u4ef6\u4e2d\uff0c\u8981\u6c42\u5fc5\u987b\u653e\u5728\u6761\u4ef6\u7684\u53f3\u4fa7 \u5b50\u67e5\u8be2\u4e00\u822c\u653e\u5728\u5c0f\u62ec\u53f7\u4e2d \u5b50\u67e5\u8be2\u7684\u6267\u884c\u4f18\u5148\u4e8e\u4e3b\u67e5\u8be2 \u5355\u884c\u5b50\u67e5\u8be2\u642d\u914d\u5355\u884c\u64cd\u4f5c\u7b26\uff1a > < >= <= = <> \u591a\u884c\u5b50\u67e5\u8be2\u642d\u914d\u591a\u884c\u64cd\u4f5c\u7b26\uff1a any/some all in","title":"4.\u5b50\u67e5\u8be2"},{"location":"databases/MySQL/SQL/#41-wherehaving","text":"","title":"4.1 where\u6216HAVING\u540e\u9762"},{"location":"databases/MySQL/SQL/#411","text":"\u4f8b1\uff1a\u8c01\u7684\u5de5\u8d44\u6bd4 Abel \u9ad8 1 2 3 4 5 6 7 8 SELECT last_name , salary FROM employees WHERE salary > ( SELECT salary FROM employees WHERE last_name = 'Abel' ); \u4f8b2\uff1a\u8fd4\u56dejob_id\u4e0e141\u53f7\u5458\u5de5\u76f8\u540c\uff0csalary\u6bd4143\u5458\u5de5\u591a\u7684\u5458\u5de5\uff0c\u59d3\u540d\uff0cjob_id\uff0c\u5de5\u8d44 \u2460\u67e5\u8be2141\u53f7\u5458\u5de5\u7684job_id 1 2 3 SELECT job_id FROM employees WHERE employee_id = 141 ; \u67e5\u8be2\u7ed3\u679c 1 2 3 4 5 +----------+ | job_id | +----------+ | ST_CLERK | +----------+ \u2461\u67e5\u8be2143\u53f7\u5458\u5de5\u7684salary 1 2 3 SELECT salary FROM employees WHERE employee_id = 143 ; \u67e5\u8be2\u7ed3\u679c 1 2 3 4 5 +---------+ | salary | +---------+ | 2600 . 00 | +---------+ \u2462\u67e5\u8be2job_id=\u2460 and salary>\u2461\u7684\u4fe1\u606f 1 2 3 4 5 6 7 8 9 10 11 12 SELECT last_name , job_id , salary FROM employees WHERE job_id = ( SELECT job_id FROM employees WHERE employee_id = 141 ) AND salary > ( SELECT salary FROM employees WHERE employee_id = 143 ); \u67e5\u8be2\u7ed3\u679c 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 +-------------+----------+---------+ | last_name | job_id | salary | +-------------+----------+---------+ | Nayer | ST_CLERK | 3200 . 00 | | Mikkilineni | ST_CLERK | 2700 . 00 | | Bissot | ST_CLERK | 3300 . 00 | | Atkinson | ST_CLERK | 2800 . 00 | | Mallin | ST_CLERK | 3300 . 00 | | Rogers | ST_CLERK | 2900 . 00 | | Ladwig | ST_CLERK | 3600 . 00 | | Stiles | ST_CLERK | 3200 . 00 | | Seo | ST_CLERK | 2700 . 00 | | Rajs | ST_CLERK | 3500 . 00 | | Davies | ST_CLERK | 3100 . 00 | +-------------+----------+---------+ \u4f8b3\uff1a\u8fd4\u56de\u516c\u53f8\u5de5\u8d44\u6700\u5c11\u7684\u5458\u5de5\u7684last_name,job_id\u548csalary 1 2 3 4 5 6 SELECT last_name , job_id , salary FROM employees WHERE salary = ( SELECT MIN ( salary ) FROM employees ); \u4f8b4\uff1a\u67e5\u8be2\u6700\u4f4e\u5de5\u8d44\u5927\u4e8e50\u53f7\u90e8\u95e8\u6700\u4f4e\u5de5\u8d44\u7684\u90e8\u95e8id\u548c\u5176\u6700\u4f4e\u5de5\u8d44 1 2 3 4 5 6 7 8 9 SELECT MIN ( salary ), department_id FROM employees GROUP BY department_id HAVING MIN ( salary ) > ( SELECT MIN ( salary ) FROM employees WHERE department_id = 50 );","title":"4.1.1 \u6807\u91cf\u5b50\u67e5\u8be2\uff08\u5355\u884c\u5b50\u67e5\u8be2\uff09"},{"location":"databases/MySQL/SQL/#412","text":"\u591a\u884c\u6bd4\u8f83\u64cd\u4f5c\u7b26\uff1a IN / NOT IN \uff1a\u7b49\u4e8e\u5217\u8868\u4e2d\u7684\u4efb\u610f\u4e00\u4e2a ANY | SOME \uff1a\u548c\u5b50\u67e5\u8be2\u8fd4\u56de\u7684\u67d0\u4e00\u4e2a\u503c\u6bd4\u8f83\uff0c\u7528\u7684\u8f83\u5c11 ALL \uff1a\u548c\u5b50\u67e5\u8be2\u8fd4\u56de\u7684\u6240\u6709\u503c\u6bd4\u8f83 \u5176\u4e2dIN\u548cNOT IN\u7528\u7684\u6bd4\u8f83\u591a\uff0c\u5176\u4ed6\u4e24\u4e2a\u7528\u7684\u6bd4\u8f83\u5c11\uff0c\u56e0\u4e3a\u5176\u53ef\u8bfb\u6027\u8f83\u5dee\uff0c\u53ef\u4ee5\u7528\u5176\u4ed6\u65b9\u5f0f\u6765\u66ff\u4ee3\u3002\u6bd4\u5982\u4ee5\u4e0b\uff1a 1 2 3 4 5 6 # 1. any/some:\u5224\u65ad\u67d0\u5b57\u6bb5\u7684\u503c\u662f\u5426\u6ee1\u8db3\u5176\u4e2d\u4efb\u610f\u4e00\u4e2a x > any ( 10 , 30 , 50 ) \u53ef\u4ee5\u7528 x > min ( 10 , 30 , 50 ) \u66ff\u4ee3 x = any ( 10 , 30 , 50 ) \u53ef\u4ee5\u7528 x in ( 10 , 30 , 50 ) \u66ff\u4ee3 # 2. all:\u5224\u65ad\u67d0\u5b57\u6bb5\u7684\u503c\u662f\u5426\u6ee1\u8db3\u91cc\u9762\u6240\u6709\u7684 x > all ( 10 , 30 , 50 ) \u53ef\u4ee5\u7528 x > max ( 10 , 30 , 50 ) \u66ff\u4ee3 \u4f8b1\uff1a\u8fd4\u56delocation_id\u662f1400\u62161700\u7684\u90e8\u95e8\u4e2d\u7684\u6240\u6709\u5458\u5de5\u59d3\u540d 1 2 3 4 5 6 7 SELECT last_name FROM employees WHERE department_id IN ( SELECT DISTINCT department_id FROM departments WHERE location_id IN ( 1400 , 1700 ) ); \u4f8b2\uff1a\u8fd4\u56de\u5176\u4ed6\u5de5\u79cd\u4e2d\u6bd4job_id\u4e3a\u2018IT_PROG\u2019\u5de5\u79cd\u4efb\u4e00\u5de5\u8d44\u4f4e\u7684\u5458\u5de5\u7684\u5458\u5de5\u53f7\u3001\u59d3\u540d\u3001job_id\u4ee5\u53casalary 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 SELECT employee_id , last_name , job_id , salary FROM employees WHERE salary < ANY ( SELECT DISTINCT salary FROM employees WHERE job_id = 'IT_PROG' ); # \u7528max\u4ee3\u66ffany SELECT employee_id , last_name , job_id , salary FROM employees WHERE salary < ( SELECT MAX ( salary ) FROM employees WHERE job_id = 'IT_PROG' ); \u4f8b3\uff1a\u8fd4\u56de\u5176\u4ed6\u5de5\u79cd\u4e2d\u6bd4job_id\u4e3a\u2018IT_PROG\u2019\u5de5\u79cd\u6240\u6709\u5de5\u8d44\u90fd\u4f4e\u7684\u5458\u5de5\u7684\u5458\u5de5\u53f7\u3001\u59d3\u540d\u3001job_id\u4ee5\u53casalary 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 SELECT employee_id , last_name , job_id , salary FROM employees WHERE salary < ALL ( SELECT DISTINCT salary FROM employees WHERE job_id = 'IT_PROG' ); # \u7528min\u4ee3\u66ffall SELECT employee_id , last_name , job_id , salary FROM employees WHERE salary < ( SELECT MIN ( salary ) FROM employees WHERE job_id = 'IT_PROG' );","title":"4.1.2 \u5217\u5b50\u67e5\u8be2\uff08\u591a\u884c\u5b50\u67e5\u8be2\uff09"},{"location":"databases/MySQL/SQL/#413","text":"\u4f8b1\uff1a\u67e5\u8be2\u5458\u5de5\u7f16\u53f7\u6700\u5c0f\u5e76\u4e14\u5de5\u8d44\u6700\u9ad8\u7684\u5458\u5de5\u4fe1\u606f 1 2 3 4 5 6 7 8 SELECT * FROM employees WHERE ( employee_id , salary ) = ( SELECT MIN ( employee_id ), MAX ( salary ) FROM employees ) ; \u7528\u7684\u60c5\u51b5\u8f83\u5c11","title":"4.1.3 \u884c\u5b50\u67e5\u8be2\uff08\u4e00\u884c\u591a\u7d2f\u6216\u591a\u884c\u591a\u5217\uff09"},{"location":"databases/MySQL/SQL/#42-select","text":"\u4f8b1\uff1a\u67e5\u8be2\u6bcf\u4e2a\u90e8\u95e8\u7684\u5458\u5de5\u4e2a\u6570 1 2 3 4 5 6 SELECT d . * , ( SELECT COUNT ( * ) FROM employees e WHERE e . department_id = d . department_Id ) \u4e2a\u6570 FROM departments d ;","title":"4.2 select\u540e\u9762"},{"location":"databases/MySQL/SQL/#43-from","text":"\u4f8b\uff1a\u67e5\u8be2\u6bcf\u4e2a\u90e8\u95e8\u7684\u5e73\u5747\u5de5\u8d44\u7684\u5de5\u8d44\u7ea7\u522b 1 2 3 4 5 6 7 8 9 10 11 12 13 SELECT ag_dep . * , g . `grade_level` FROM ( SELECT AVG ( salary ) ag , department_id FROM employees GROUP BY department_id ) ag_dep INNER JOIN job_grades g ON ag_dep . ag BETWEEN g . `lowest_sal` AND g . `highest_sal` ; \u5c06\u5b50\u67e5\u8be2\u7ed3\u679c\u5145\u5f53\u4e00\u5f20\u8868\uff0c\u8981\u6c42\u5fc5\u987b\u8d77\u522b\u540d","title":"4.3 from\u540e\u9762"},{"location":"databases/MySQL/SQL/#44-exists","text":"\u8bed\u6cd5\uff1a exists\uff08\u5b8c\u6574\u7684\u67e5\u8be2\u8bed\u53e5\uff09 \uff0c\u67e5\u8be2\u6709\u7ed3\u679c\u8fd4\u56de1\uff0c\u5426\u5219\u8fd4\u56de0 \u4f8b1\uff1a\u67e5\u8be2\u6709\u5458\u5de5\u7684\u90e8\u95e8\u540d 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 SELECT department_name FROM departments d WHERE EXISTS ( SELECT * FROM employees e WHERE d . `department_id` = e . `department_id` ) ; # \u7528in\u66f4\u7b80\u5355 SELECT department_name FROM departments d WHERE d . `department_id` IN ( SELECT department_id FROM employees e ) ; \u53ef\u4ee5\u7528\u5176\u4ed6\u65b9\u5f0f\u4ee3\u66ff\uff0c\u7528\u7684\u8f83\u5c11","title":"4.4 exists\u540e\u9762"},{"location":"databases/MySQL/SQL/#5","text":"\u5e94\u7528\u573a\u666f\uff1a\u5f53\u8981\u663e\u793a\u7684\u6570\u636e\uff0c\u4e00\u9875\u663e\u793a\u4e0d\u5168\uff0c\u9700\u8981\u5206\u9875\u63d0\u4ea4sql\u8bf7\u6c42 \u8bed\u6cd5\uff1a 1 2 3 4 5 6 7 8 9 10 11 select \u67e5\u8be2\u5217\u8868 from \u8868 [ join type ] join \u8868 2 on \u8fde\u63a5\u6761\u4ef6 where \u7b5b\u9009\u6761\u4ef6 group by \u5206\u7ec4\u5b57\u6bb5 having \u5206\u7ec4\u540e\u7684\u7b5b\u9009 order by \u6392\u5e8f\u7684\u5b57\u6bb5\u3011 limit [ offset \uff0c ] size \uff1b # offset\uff1a\u8981\u663e\u793a\u6761\u76ee\u7684\u8d77\u59cb\u7d22\u5f15\uff08\u4e0d\u5199\u4ece0\u5f00\u59cb\uff09 # size\uff1a\u8981\u663e\u793a\u7684\u6761\u76ee\u4e2a\u6570 \u516c\u5f0f\uff1a 1 2 3 4 select \u67e5\u8be2\u5217\u8868 from \u8868 limit ( page - 1 ) * size \uff0c size \uff1b # \u8981\u663e\u793a\u7684\u9875\u6570page\uff0c\u6bcf\u9875\u7684\u6761\u76ee\u6570size \u4f8b1\uff1a\u67e5\u8be2\u524d5\u6761\u5458\u5de5\u4fe1\u606f 1 2 3 SELECT * FROM employees LIMIT 0 , 5 ; \u6216\u8005 SELECT * FROM employees LIMIT 5 ; \u4f8b2\uff1a\u67e5\u8be2\u7b2c11\u6761-\u7b2c25\u6761 1 SELECT * FROM employees LIMIT 10 , 15 ;","title":"5. \u5206\u9875\u67e5\u8be2"},{"location":"databases/MySQL/SQL/#6","text":"union \uff1a\u5c06\u591a\u6761\u67e5\u8be2\u8bed\u53e5\u7684\u7ed3\u679c\u5408\u5e76\u6210\u4e00\u4e2a\u7ed3\u679c \u8bed\u6cd5\uff1a 1 2 3 \u67e5\u8be2\u8bed\u53e5 1 union [ ALL ] \u67e5\u8be2\u8bed\u53e5 2 \u5e94\u7528\u573a\u666f\uff1a\u8981\u67e5\u8be2\u7684\u7ed3\u679c\u6765\u81ea\u4e8e\u591a\u4e2a\u8868\uff0c\u4e14\u591a\u4e2a\u8868\u6ca1\u6709\u76f4\u63a5\u7684\u8fde\u63a5\u5173\u7cfb\uff0c\u4f46\u67e5\u8be2\u7684\u4fe1\u606f\u4e00\u81f4 \u3002 \u7279\u70b9\uff1a \u8981\u6c42\u591a\u6761\u67e5\u8be2\u8bed\u53e5\u7684\u67e5\u8be2\u5217\u6570\u662f\u4e00\u81f4\u7684 \u8981\u6c42\u591a\u6761\u67e5\u8be2\u8bed\u53e5\u7684\u67e5\u8be2\u7684\u6bcf\u4e00\u5217\u7684\u7c7b\u578b\u548c\u987a\u5e8f\u6700\u597d\u662f\u4e00\u81f4\u7684 union\u5173\u952e\u5b57\u9ed8\u8ba4\u53bb\u91cd\uff0c\u5982\u679c\u4f7f\u7528union all\u53ef\u4ee5\u5305\u542b\u91cd\u590d\u9879 \u4f8b\uff1a\u67e5\u8be2\u90e8\u95e8\u7f16\u53f7>90\u6216\u90ae\u7bb1\u5305\u542ba\u7684\u5458\u5de5\u4fe1\u606f 1 2 3 4 5 6 7 8 9 10 11 SELECT * FROM employees WHERE email LIKE \"%a%\" UNION SELECT * FROM employees WHERE department_id > 90 ;","title":"6. \u8054\u5408\u67e5\u8be2"},{"location":"databases/MySQL/SQL/#7","text":"\u4f5c\u7528\uff1a \u63d0\u9ad8\u8bed\u53e5\u7684\u7b80\u6d01\u5ea6 \u533a\u5206\u591a\u4e2a\u91cd\u540d\u7684\u5b57\u6bb5 \u5982\u679c\u4e3a\u8868\u8d77\u4e86\u522b\u540d\uff0c\u5219\u67e5\u8be2 \u7684\u5b57\u6bb5\u5c31\u4e0d\u80fd\u4f7f\u7528\u539f\u59cb\u7684\u8868\u660e\u53bb\u9650\u5b9a","title":"7. \u522b\u540d"},{"location":"databases/MySQL/SQL/#71","text":"1 2 3 4 5 6 7 8 SELECT city . name AS \u57ce\u5e02 , country . name AS \u56fd\u5bb6 , country . SurfaceArea AS \u9762\u79ef , city . Population AS \u57ce\u5e02\u4eba\u53e3 FROM city JOIN country ON city . CountryCode = country . Code WHERE city . name = 'shenyang' ; \u67e5\u8be2\u7ed3\u679c 1 2 3 4 5 6 +----------+--------+------------+--------------+ | \u57ce\u5e02 | \u56fd\u5bb6 | \u9762\u79ef | \u57ce\u5e02\u4eba\u53e3 | +----------+--------+------------+--------------+ | Shenyang | China | 9572900 . 00 | 4265200 | +----------+--------+------------+--------------+ 1 row in set ( 0 . 01 sec )","title":"7.1 \u5b57\u6bb5\u522b\u540d"},{"location":"databases/MySQL/SQL/#72","text":"1 2 3 4 5 6 7 8 SELECT a . name AS \u57ce\u5e02 , b . name AS \u56fd\u5bb6 , b . SurfaceArea AS \u9762\u79ef , a . Population AS \u57ce\u5e02\u4eba\u53e3 FROM city AS a JOIN country AS b ON a . CountryCode = b . Code WHERE a . name = 'shenyang' ; \u67e5\u8be2\u7ed3\u679c 1 2 3 4 5 6 +----------+--------+------------+--------------+ | \u57ce\u5e02 | \u56fd\u5bb6 | \u9762\u79ef | \u57ce\u5e02\u4eba\u53e3 | +----------+--------+------------+--------------+ | Shenyang | China | 9572900 . 00 | 4265200 | +----------+--------+------------+--------------+ 1 row in set ( 0 . 01 sec ) AS \u53ef\u4ee5\u7701\u7565 \u5982\u679c\u522b\u540d\u6709\u7279\u6b8a\u7b26\u53f7\u8981\u52a0\u53cc\u5f15\u53f7","title":"7.2 \u8868\u522b\u540d"},{"location":"databases/MySQL/SQL/#tcl","text":"","title":"\u56db\u3001TCL"},{"location":"databases/MySQL/SQL/#1_8","text":"","title":"1. \u4e8b\u52a1"},{"location":"databases/MySQL/SQL/#11_4","text":"\u4e00\u4e2a\u6216\u4e00\u7ec4sql\u8bed\u53e5\u7ec4\u6210\u4e00\u4e2a\u6267\u884c\u5355\u5143\uff0c\u8fd9\u4e2a\u6267\u884c\u5355\u5143\u8981\u4e48\u5168\u90e8\u6267\u884c\uff0c\u8981\u4e48\u5168\u90e8\u4e0d\u6267\u884c\u3002","title":"1.1 \u4e8b\u52a1\u7684\u542b\u4e49"},{"location":"databases/MySQL/SQL/#12-acid","text":"\u539f\u5b50\u6027\uff08Atomicity\uff09\uff1a\u539f\u5b50\u6027\u662f\u6307\u4e8b\u52a1\u662f\u4e00\u4e2a\u4e0d\u53ef\u5206\u5272\u7684\u5de5\u4f5c\u5355\u4f4d\uff0c\u4e8b\u52a1\u4e2d\u7684\u64cd\u4f5c\u8981\u4e48\u90fd\u53d1\u751f\uff0c\u8981\u4e48\u90fd\u4e0d\u53d1\u751f\u3002 \u4e00\u81f4\u6027\uff08Consistency\uff09\uff1a\u4e8b\u52a1\u5fc5\u987b\u4f7f\u6570\u636e\u5e93\u4ece\u4e00\u4e2a\u4e00\u81f4\u6027\u72b6\u6001\u53d8\u6362\u5230\u53e6\u5916\u4e00\u4e2a\u4e00\u81f4\u6027\u72b6\u6001\u3002 \u9694\u79bb\u6027\uff08Isolation\uff09\uff1a\u4e8b\u52a1\u7684\u9694\u79bb\u6027\u662f\u6307\u4e00\u4e2a\u4e8b\u52a1\u7684\u6267\u884c\u4e0d\u80fd\u88ab\u5176\u4ed6\u4e8b\u52a1\u5e72\u6270\uff0c\u5373\u4e00\u4e2a\u4e8b\u52a1\u5185\u90e8\u7684\u64cd\u4f5c\u53ca\u4f7f\u7528\u7684\u6570\u636e\u5bf9\u5e76\u53d1\u7684\u5176\u4ed6\u4e8b\u52a1\u662f\u9694\u79bb\u7684\uff0c\u5e76\u53d1\u6267\u884c\u7684\u5404\u4e2a\u4e8b\u52a1\u4e4b\u95f4\u4e0d\u80fd\u4e92\u76f8\u5e72\u6270\u3002 \u6301\u4e45\u6027\uff08Durability\uff09\uff1a\u6301\u4e45\u6027\u662f\u6307\u4e00\u4e2a\u4e8b\u52a1\u4e00\u65e6\u88ab\u63d0\u4ea4\uff0c\u5b83\u5bf9\u6570\u636e\u5e93\u4e2d\u6570\u636e\u7684\u6539\u53d8\u5c31\u662f\u6c38\u4e45\u6027\u7684\uff0c\u63a5\u4e0b\u6765\u7684\u5176\u4ed6\u64cd\u4f5c\u548c\u6570\u636e\u5e93\u6545\u969c\u4e0d\u5e94\u8be5\u5bf9\u5176\u6709\u4efb\u4f55\u5f71\u54cd\u3002","title":"1.2  \u4e8b\u52a1\u7684ACID\u5c5e\u6027"},{"location":"databases/MySQL/SQL/#12_4","text":"\u9690\u5f0f\u4e8b\u52a1\uff1a\u4e8b\u52a1\u6ca1\u6709\u660e\u663e\u7684\u5f00\u542f\u548c\u7ed3\u675f\u7684\u6807\u8bb0\u3002\u6bd4\u5982insert\u3001update\u3001delete\u8bed\u53e5 \u663e\u5f0f\u4e8b\u52a1\uff1a\u4e8b\u52a1\u5177\u6709\u660e\u663e\u7684\u5f00\u542f\u548c\u7ed3\u675f\u7684\u6807\u8bb0","title":"1.2 \u4e8b\u52a1\u7684\u5206\u7c7b"},{"location":"databases/MySQL/SQL/#13_3","text":"","title":"1.3 \u4e8b\u52a1\u7684\u521b\u5efa"},{"location":"databases/MySQL/SQL/#131","text":"1 2 SET autocommit = 0 ; # \u5148\u8bbe\u7f6e\u81ea\u52a8\u63d0\u4ea4\u529f\u80fd\u4e3a\u7981\u7528 START TRANSACTION ; \uff08\u53ef\u9009\uff09","title":"1.3.1  \u5f00\u542f\u4e8b\u52a1"},{"location":"databases/MySQL/SQL/#132-sql","text":"\u5305\u62ec select \uff0c insert \uff0c update \uff0c delete \uff08\u53ea\u6709\u589e\u5220\u6539\u67e5\uff0c\u4e0d\u5305\u62ecDDL\u8bed\u8a00\uff09","title":"1.3.2  \u7f16\u5199\u4e8b\u52a1\u4e2d\u7684sql\u8bed\u53e5"},{"location":"databases/MySQL/SQL/#133","text":"\u6709\u4e24\u79cd\u7ed3\u675f\u4e8b\u52a1\u7684\u65b9\u5f0f commit \uff1b\u63d0\u4ea4\u4e8b\u52a1 rollback \uff1b\u56de\u6eda\u4e8b\u52a1","title":"1.3.3 \u7ed3\u675f\u4e8b\u52a1"},{"location":"databases/MySQL/SQL/#14_1","text":"savepoint \u7ed3\u70b9\u540d 1","title":"1.4  \u8bbe\u7f6e\u4fdd\u5b58\u70b9"},{"location":"databases/MySQL/SQL/#2_6","text":"","title":"2. \u6570\u636e\u5e93\u7684\u9694\u79bb\u7ea7\u522b"},{"location":"databases/MySQL/SQL/#21_4","text":"\u5bf9\u4e8e\u540c\u65f6\u8fd0\u884c\u7684\u591a\u4e2a\u4e8b\u52a1\uff0c\u5f53\u8fd9\u4e9b\u4e8b\u52a1\u8bbf\u95ee\u6570\u636e\u5e93\u4e2d\u76f8\u540c\u7684\u6570\u636e\u65f6\uff0c\u5982\u679c\u6ca1\u6709\u91c7\u53d6\u5fc5\u8981\u7684\u9694\u79bb\u673a\u5236\uff0c\u5c31\u4f1a\u5bfc\u81f4\u5404\u79cd\u5e76\u53d1\u95ee\u9898\uff1a \u810f\u8bfb \uff1a\u5bf9\u4e8e\u4e24\u4e2a\u4e8b\u52a1T1\uff0cT2\u3002T1\u8bfb\u53d6\u4e86\u5df2\u7ecf\u88abT2\u66f4\u65b0\u4f46\u8fd8\u6ca1\u6709\u88ab\u63d0\u4ea4\u7684\u5b57\u6bb5\u4e4b\u540e\uff0c\u82e5T2\u56de\u6eda\uff0cT1\u8bfb\u53d6\u7684\u5185\u5bb9\u5c31\u662f\u4e34\u65f6\u4e14\u65e0\u6548\u7684\u3002\u4e3b\u8981\u662f\u5176\u4ed6\u4e8b\u52a1 \u66f4\u65b0 \u7684\u6570\u636e \u4e0d\u53ef\u91cd\u590d\u8bfb \uff1a\u5bf9\u4e8e\u4e24\u4e2a\u4e8b\u52a1T1\uff0cT2\u3002T1\u8bfb\u53d6\u4e86\u4e00\u4e2a\u5b57\u6bb5\uff0c\u7136\u540eT2\u66f4\u65b0\u4e86\u8be5\u5b57\u6bb5\u4e4b\u540e\uff0cT1\u518d\u6b21\u8bfb\u53d6\u540c\u4e00\u4e2a\u5b57\u6bb5\uff0c\u503c\u5c31\u4e0d\u540c\u4e86\u3002 \u5e7b\u8bfb \uff1a\u5bf9\u4e8e\u4e24\u4e2a\u4e8b\u52a1T1\uff0cT2\u3002T1\u4ece\u4e00\u4e2a\u8868\u4e2d\u8bfb\u53d6\u4e86\u4e00\u4e2a\u5b57\u6bb5\uff0c\u7136\u540eT2\u5728\u8be5\u8868\u4e2d\u63d2\u5165\u4e86\u4e00\u4e9b\u65b0\u7684\u884c\u4e4b\u540e\uff0c\u5982\u679cT1\u518d\u6b21\u8bfb\u53d6\u540c\u4e00\u4e2a\u8868\uff0c\u5c31\u4f1a\u591a\u51fa\u51e0\u884c\u3002\u4e3b\u8981\u662f\u5176\u4ed6\u4e8b\u52a1 \u63d2\u5165 \u7684\u6570\u636e \u6570\u636e\u5e93\u4e8b\u52a1\u7684\u9694\u79bb\u6027 \uff1a\u6570\u636e\u5e93\u7cfb\u7edf\u5fc5\u987b\u5177\u6709\u9694\u79bb\u5e76\u53d1\u8fd0\u884c\u5404\u4e2a\u4e8b\u52a1\u7684\u80fd\u529b\uff0c\u4f7f\u4ed6\u4eec\u4e0d\u4f1a\u76f8\u4e92\u5f71\u54cd\uff0c\u907f\u514d\u5404\u79cd\u5e76\u53d1\u95ee\u9898\u3002","title":"2.1 \u6ca1\u6709\u9694\u79bb\u5e26\u6765\u7684\u95ee\u9898"},{"location":"databases/MySQL/SQL/#22_3","text":"\u4e00\u4e2a\u4e8b\u52a1\u4e0e\u5176\u4ed6\u4e8b\u52a1\u9694\u79bb\u7684\u7a0b\u5ea6\u79f0\u4e3a\u9694\u79bb\u7ea7\u522b\u3002 \u6570\u636e\u5e93\u89c4\u5b9a\u4e86\u591a\u79cd\u4e8b\u52a1\u9694\u79bb\u7ea7\u522b\uff0c\u4e0d\u540c\u9694\u79bb\u7ea7\u522b\u5bf9\u5e94\u4e0d\u540c\u7684\u5e72\u6270\u7a0b\u5ea6\uff0c\u9694\u79bb\u7ea7\u522b\u8d8a\u9ad8\uff0c\u6570\u636e\u4e00\u81f4\u6027\u5c31\u8d8a\u597d\uff0c\u4f46\u5e76\u53d1\u6027\u5f31\u3002 \u6570\u636e\u5e93\u63d0\u4f9b\u76844\u79cd\u4e8b\u52a1\u9694\u79bb\u7ea7\u522b\uff1a \u9694\u79bb\u7ea7\u522b \u63cf\u8ff0 READ UNCOMMITTED(\u8bfb\u672a\u63d0\u4ea4\u6570\u636e) \u5141\u8bb8\u4e8b\u52a1\u8bfb\u53d6\u672a\u88ab\u5176\u4ed6\u4e8b\u52a1\u63d0\u4ea4\u7684\u53d8\u66f4\u3002\u810f\u8bfb\uff0c\u4e0d\u53ef\u91cd\u590d\u8bfb\u548c\u5e7b\u8bfb\u7684\u95ee\u9898\u90fd\u4f1a\u51fa\u73b0\u3002 READ COMMITED(\u8bfb\u5df2\u63d0\u4ea4\u6570\u636e) \u53ea\u5141\u8bb8\u4e8b\u52a1\u8bfb\u53d6\u5df2\u7ecf\u88ab\u5176\u4ed6\u4e8b\u52a1\u63d0\u4ea4\u7684\u53d8\u66f4\u3002\u53ef\u4ee5\u907f\u514d\u810f\u8bfb\uff0c\u4f46\u4e0d\u53ef\u91cd\u590d\u8bfb\u548c\u5e7b\u8bfb\u95ee\u9898\u4ecd\u7136\u53ef\u80fd\u51fa\u73b0\u3002 REPEATABLE READ(\u53ef\u91cd\u590d\u8bfb) \u786e\u4fdd\u4e8b\u52a1\u53ef\u4ee5\u591a\u6b21\u4ece\u4e00\u4e2a\u5b57\u6bb5\u4e2d\u8bfb\u53d6\u76f8\u540c\u7684\u503c\u3002\u5728\u8fd9\u4e2a\u4e8b\u52a1\u6301\u7eed\u671f\u95f4\uff0c\u7981\u6b62\u5176\u4ed6\u4e8b\u52a1\u5bf9\u8fd9\u4e2a\u5b57\u6bb5\u8fdb\u884c\u66f4\u65b0\u3002\u53ef\u4ee5\u907f\u514d\u810f\u8bfb\u548c\u4e0d\u53ef\u91cd\u590d\u8bfb\uff0c\u4f46\u5e7b\u8bfb\u7684\u95ee\u9898\u4ecd\u7136\u5b58\u5728\u3002 SERIALLIZABLE(\u4e32\u884c\u5316) \u786e\u4fdd\u4e8b\u52a1\u53ef\u4ee5\u4ece\u4e00\u4e2a\u8868\u4e2d\u8bfb\u53d6\u76f8\u540c\u7684\u884c\uff0c\u5728\u8fd9\u4e2a\u4e8b\u52a1\u6301\u7eed\u671f\u95f4\uff0c\u7981\u6b62\u5176\u4ed6\u4e8b\u52a1\u5bf9\u8be5\u8868\u6267\u884c\u63d2\u5165\uff0c\u66f4\u65b0\u548c\u5220\u9664\u64cd\u4f5c\u3002\u6240\u6709\u5e76\u53d1\u95ee\u9898\u90fd\u53ef\u4ee5\u907f\u514d\uff0c\u4f46\u6027\u80fd\u5341\u5206\u4f4e\u4e0b\u3002 Oracle\u652f\u63012\u79cd\u4e8b\u52a1\u9694\u79bb\u7ea7\u522b\uff1aREAD COMMITED\uff0cSERIALIZABLE\u3002Oracle\u9ed8\u8ba4\u7684\u4e8b\u52a1\u9694\u79bb\u7ea7\u522b\u662f\uff1aREAD COMMITED\u3002 Mysql\u652f\u63014\u79cd\u4e8b\u52a1\u9694\u79bb\u7ea7\u522b\u3002Mysql\u9ed8\u8ba4\u7684\u4e8b\u52a1\u9694\u79bb\u7ea7\u522b\u4e3a\uff1aREPEATABLE READ\u3002 \u6bcf\u542f\u52a8\u4e00\u4e2amysql\u7a0b\u5e8f\uff0c\u5c31\u4f1a\u83b7\u5f97\u4e00\u4e2a\u5355\u72ec\u7684\u6570\u636e\u5e93\u8fde\u63a5\uff0c\u6bcf\u4e2a\u6570\u636e\u5e93\u8fde\u63a5\u90fd\u6709\u4e00\u4e2a\u5168\u5c40\u53d8\u91cf @@tx_isolation \uff0c\u8868\u793a\u5f53\u524d\u4e8b\u52a1\u9694\u79bb\u7ea7\u522b\u3002 \u67e5\u770b\u5f53\u524d\u7684\u9694\u79bb\u7ea7\u522b\uff1a select @@tx_isolation; \u8bbe\u7f6e\u5f53\u524dmysql\u8fde\u63a5\u7684\u9694\u79bb\u7ea7\u522b\uff1a set transaction isolation level read committed; \u8bbe\u7f6e\u6570\u636e\u5e93\u7cfb\u7edf\u7684\u5168\u5c40\u7684\u9694\u79bb\u7ea7\u522b\uff1a set global transaction isolation level read committed;","title":"2.2 \u9694\u79bb\u7ea7\u522b"},{"location":"databases/MySQL/SQL/#_1","text":"\u542b\u4e49\uff1a\u4e00\u79cd\u9650\u5236\uff0c\u7528\u4e8e\u9650\u5236\u8868\u4e2d\u7684\u6570\u636e\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u8868\u4e2d\u7684\u6570\u636e\u7684\u51c6\u786e\u548c\u53ef\u9760\u6027","title":"\u4e94\u3001\u5e38\u89c1\u7ea6\u675f"},{"location":"databases/MySQL/SQL/#1_9","text":"","title":"1. \u5206\u7c7b"},{"location":"databases/MySQL/SQL/#11_5","text":"not null\uff1a\u975e\u7a7a\uff0c\u7528\u4e8e\u4fdd\u8bc1\u8be5\u5b57\u6bb5\u7684\u503c\u4e0d\u80fd\u4e3a\u7a7a\u3002\u6bd4\u5982\u59d3\u540d\u3001\u5b66\u53f7\u7b49\u3002 default\uff1a\u9ed8\u8ba4\uff0c\u7528\u4e8e\u4fdd\u8bc1\u8be5\u5b57\u6bb5\u6709\u9ed8\u8ba4\u503c\u3002\u6bd4\u5982\u6027\u522b\u3002 primary key\uff1a\u4e3b\u952e\uff0c\u7528\u4e8e\u4fdd\u8bc1\u8be5\u5b57\u6bb5\u7684\u503c\u5177\u6709\u552f\u4e00\u6027\uff0c\u5e76\u4e14\u975e\u7a7a\u3002\u6bd4\u5982\u5b66\u53f7\u3001\u5458\u5de5\u7f16\u53f7\u7b49\u3002 unique\uff1a\u552f\u4e00\uff0c\u7528\u4e8e\u4fdd\u8bc1\u8be5\u5b57\u6bb5\u7684\u503c\u5177\u6709\u552f\u4e00\u6027\uff0c\u53ef\u4ee5\u4e3a\u7a7a\u3002\u6bd4\u5982\u5ea7\u4f4d\u53f7\u3002 check\uff1a\u68c0\u67e5\u7ea6\u675f\uff08 mysql\u4e2d\u4e0d\u652f\u6301 \uff09\u3002\u6bd4\u5982\u5e74\u9f84\u3001\u6027\u522b\u3002 foreign key\uff1a\u5916\u952e\uff0c\u7528\u4e8e\u9650\u5236\u4e24\u4e2a\u8868\u7684\u5173\u7cfb\uff0c\u7528\u4e8e\u4fdd\u8bc1\u8be5\u5b57\u6bb5\u7684\u503c\u5fc5\u987b\u6765\u81ea\u4e8e\u4e3b\u8868\u7684\u5173\u8054\u5217\u7684\u503c\u3002\u5728\u4ece\u8868\u6dfb\u52a0\u5916\u952e\u7ea6\u675f\uff0c\u7528\u4e8e\u5e94\u7528\u4e3b\u8868\u4e2d\u67d0\u5217\u7684\u503c\u3002\u6bd4\u5982\u5b66\u751f\u8868\u7684\u4e13\u4e1a\u7f16\u53f7\uff0c\u5458\u5de5\u8868\u7684\u90e8\u95e8\u7f16\u53f7\uff0c\u5458\u5de5\u8868\u7684\u5de5\u79cd\u7f16\u53f7\u3002","title":"1.1  \u6309\u4f5c\u7528\u5206\u7c7b"},{"location":"databases/MySQL/SQL/#12_5","text":"\u5217\u7ea7\u7ea6\u675f\uff1a\u516d\u5927\u7ea6\u675f\u8bed\u6cd5\u4e0a\u90fd\u652f\u6301\uff0c\u4f46\u5916\u952e\u7ea6\u675f\u6ca1\u6709\u6548\u679c \u8868\u7ea7\u7ea6\u675f\uff1a\u9664\u4e86\u975e\u7a7a\u3001\u9ed8\u8ba4\uff0c\u5176\u4ed6\u7684\u90fd\u652f\u6301 \u7ea6\u675f\u7c7b\u578b \u4f4d\u7f6e \u652f\u6301\u7684\u7ea6\u675f\u7c7b\u578b \u662f\u5426\u53ef\u4ee5\u8d77\u7ea6\u675f\u540d \u5217\u7ea7\u7ea6\u675f \u5217\u7684\u540e\u9762 \u8bed\u6cd5\u90fd\u652f\u6301\uff0c\u4f46\u5916\u952e\u6ca1\u6709\u6548\u679c \u4e0d\u53ef\u4ee5 \u8868\u7ea7\u7ea6\u675f \u6240\u6709\u5217\u7684\u4e0b\u9762 \u9ed8\u8ba4\u548c\u975e\u7a7a\u4e0d\u652f\u6301\uff0c\u5176\u4ed6\u90fd\u652f\u6301 \u53ef\u4ee5\uff08\u4e3b\u952e\u6ca1\u6709\u6548\u679c\uff0c\u9ed8\u8ba4\u540d\u5b57\u662fPRIMARY\uff09","title":"1.2 \u6309\u4f4d\u7f6e\u5206\u7c7b"},{"location":"databases/MySQL/SQL/#_2","text":"\u7ea6\u675f \u4fdd\u8bc1\u552f\u4e00\u6027 \u662f\u5426\u5141\u8bb8\u4e3a\u7a7a \u4e00\u4e2a\u8868\u4e2d\u53ef\u4ee5\u6709\u591a\u5c11\u4e2a \u662f\u5426\u5141\u8bb8\u7ec4\u5408\uff08\u591a\u4e2a\u5217\u7ec4\u5408\u6210\u4e00\u4e2a\u4e3b\u952e/\u552f\u4e00\uff09 \u4e3b\u952e \u662f \u5426 \u81f3\u591a\u4e00\u4e2a \u53ef\u4ee5\uff0c\u4f46\u4e0d\u63a8\u8350 \u552f\u4e00 \u662f \u662f \u53ef\u4ee5\u6709\u591a\u4e2a \u53ef\u4ee5\uff0c\u4f46\u4e0d\u63a8\u8350","title":"\u4e3b\u952e\u548c\u552f\u4e00\u7684\u533a\u522b"},{"location":"databases/MySQL/SQL/#_3","text":"\u8981\u6c42\u5728\u4ece\u8868\u8bbe\u7f6e\u5916\u952e\u5173\u7cfb \u4ece\u8868\u7684\u5916\u952e\u5217\u7684\u7c7b\u578b\u548c\u4e3b\u8868\u7684\u5173\u8054\u5217\u7684\u7c7b\u578b\u8981\u6c42\u4e00\u81f4\u6216\u517c\u5bb9\uff0c\u540d\u79f0\u65e0\u8981\u6c42 \u4e3b\u8868\u7684\u5173\u8054\u5217\u5fc5\u987b\u662f\u4e00\u4e2akey\uff08\u4e00\u822c\u662f\u4e3b\u952e\u6216\u552f\u4e00\uff09 \u63d2\u5165\u6570\u636e\u65f6\uff0c\u5148\u63d2\u5165\u4e3b\u8868\uff0c\u518d\u63d2\u5165\u4ece\u8868 \u5220\u9664\u6570\u636e\u65f6\uff0c\u5148\u5220\u9664\u4ece\u8868\uff0c\u518d\u5220\u9664\u4e3b\u8868 \u65b9\u5f0f\u4e00\uff1a\u7ea7\u8054\u5220\u9664 1 ALTER TABLE stuinfo ADD CONSTRAINT fk_stu_major FOREIGN KEY ( majorid ) REFERENCES major ( id ) ON DELETE CASCADE ; \u65b9\u5f0f\u4e8c\uff1a\u7ea7\u8054\u7f6e\u7a7a 1 2 ALTER TABLE stuinfo ADD CONSTRAINT fk_stu_major FOREIGN KEY ( majorid ) REFERENCES major ( id ) ON DELETE SET NULL ; # \u5220\u9664\u7684\u65f6\u5019\uff0c\u4e3b\u8868\u5bf9\u5e94\u7684\u884c\u88ab\u5220\u9664\u4e86\uff0c\u4ece\u8868\u5f15\u5165\u7684\u5730\u65b9\u53d8\u4e3a\u7a7a\u503cnull\u3002","title":"\u5916\u952e\u7279\u70b9"},{"location":"databases/MySQL/SQL/#2_7","text":"","title":"2. \u6dfb\u52a0\u7ea6\u675f"},{"location":"databases/MySQL/SQL/#21_5","text":"","title":"2.1 \u521b\u5efa\u8868\u65f6\u6dfb\u52a0\u7ea6\u675f"},{"location":"databases/MySQL/SQL/#211","text":"\u8bed\u6cd5\uff1a 1 2 \u76f4\u63a5\u5728\u5b57\u6bb5\u540d\u548c\u7c7b\u578b\u540e\u9762\u8ffd\u52a0\u7ea6\u675f\u7c7b\u578b\u5373\u53ef\u3002 \u53ea\u652f\u6301\uff1a\u9ed8\u8ba4\u3001\u975e\u7a7a\u3001\u4e3b\u952e\u3001\u552f\u4e00\uff08\u9664\u4e86\u5916\u952e\u90fd\u652f\u6301\uff09 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 CREATE DATABASE students ; USE students ; CREATE TABLE stuinfo ( id INT PRIMARY KEY , stuname VARCHAR ( 20 ) NOT NULL , # \u975e\u7a7a gender CHAR ( 1 ) CHECK ( gender = '\u7537' OR gender = '\u5973' ), # CHECK\u5728mysql\u4e2d\u4e0d\u751f\u6548 seat INT UNIQUE , # \u552f\u4e00 age INT DEFAULT 18 , # \u9ed8\u8ba4 majorID INT REFERENCES major ( id ) # \u8bed\u6cd5\u4e0d\u62a5\u9519\uff0c\u4f46\u662f\u6ca1\u6709\u6548\u679c ) ; CREATE TABLE major ( id INT PRIMARY KEY , majorName VARCHAR ( 20 ) ) ; DESC stuinfo ; # \u67e5\u770b\u8868\u7ed3\u6784 SHOW INDEX FROM stuinfo ;","title":"2.1.1 \u6dfb\u52a0\u5217\u7ea7\u7ea6\u675f"},{"location":"databases/MySQL/SQL/#212","text":"\u8bed\u6cd5\uff1a 1 2 3 # \u5728\u5404\u4e2a\u5b57\u6bb5\u7684\u6700\u4e0b\u9762 [ CONSTRAINT \u7ea6\u675f\u540d ] \u7ea6\u675f\u7c7b\u578b ( \u5b57\u6bb5\u540d ) # \u9664\u4e86\u975e\u7a7a\u3001\u9ed8\u8ba4\uff0c\u5176\u4ed6\u7684\u90fd\u652f\u6301 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 CREATE TABLE stuinfo ( id INT , stuname VARCHAR ( 20 ), gender CHAR ( 1 ), seat INT , age INT , majorid INT , CONSTRAINT pk PRIMARY KEY ( id ), # \u4e3b\u952e\u7684\u540d\u5b57\u662fPRIMARY\uff0c\u8d77\u522b\u540d\u6ca1\u6548\u679c CONSTRAINT uq UNIQUE ( seat ), CONSTRAINT ck CHECK ( gender = '\u7537' OR gender = '\u5973' ), CONSTRAINT fk_stuinfo_major FOREIGN KEY ( majorid ) REFERENCES major ( id ) ); SHOW INDEX FROM stuinfo ; \u67e5\u8be2\u7ed3\u679c 1 2 3 4 5 6 7 +---------+------------+------------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+ | Table | Non_unique | Key_name | Seq_in_index | Column_name | Collation | Cardinality | Sub_part | Packed | Null | Index_type | Comment | Index_comment | +---------+------------+------------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+ | stuinfo | 0 | PRIMARY | 1 | id | A | 0 | NULL | NULL | | BTREE | | | | stuinfo | 0 | uq | 1 | seat | A | 0 | NULL | NULL | YES | BTREE | | | | stuinfo | 1 | fk_stuinfo_major | 1 | majorid | A | 0 | NULL | NULL | YES | BTREE | | | +---------+------------+------------------+--------------+-------------+-----------+-------------+----------+--------+------+------------+---------+---------------+","title":"2.1.2 \u6dfb\u52a0\u8868\u7ea7\u7ea6\u675f"},{"location":"databases/MySQL/SQL/#213","text":"1 2 3 4 5 6 7 8 9 CREATE TABLE IF NOT EXISTS stuinfo ( id INT PRIMARY KEY , stuname VARCHAR ( 20 ) NOT NULL , gender CHAR ( 1 ), seat INT UNIQUE , age INT DEFAULT 18 , majorID INT , CONSTRAINT fk_stuinfo_major FOREIGN KEY ( majorid ) REFERENCES major ( id ) ) ;","title":"2.1.3 \u901a\u7528\u5199\u6cd5"},{"location":"databases/MySQL/SQL/#22_4","text":"","title":"2.2 \u4fee\u6539\u8868\u65f6\u6dfb\u52a0\u7ea6\u675f"},{"location":"databases/MySQL/SQL/#221","text":"1 ALTER TABLE stuinfo MODIFY COLUMN stuname VARCHAR ( 20 ) NOT NULL ;","title":"2.2.1  \u6dfb\u52a0\u975e\u7a7a\u7ea6\u675f"},{"location":"databases/MySQL/SQL/#222","text":"1 ALTER TABLE stuinfo MODIFY COLUMN age INT DEFAULT 18 ;","title":"2.2.2 \u6dfb\u52a0\u9ed8\u8ba4\u7ea6\u675f"},{"location":"databases/MySQL/SQL/#223","text":"1 2 3 4 # \u5217\u7ea7\u7ea6\u675f\u7684\u5199\u6cd5 ALTER TABLE stuinfo MODIFY COLUMN id INT PRIMARY KEY ; # \u8868\u7ea7\u7ea6\u675f\u7684\u5199\u6cd5 ALTER TABLE stuinfo ADD PRIMARY KEY ( id ); 2.2.4 \u6dfb\u52a0\u552f\u4e00\u7ea6\u675f 1 2 3 4 # \u5217\u7ea7\u7ea6\u675f\u7684\u5199\u6cd5 ALTER TABLE stuinfo MODIFY COLUMN seat INT UNIQUE ; # \u8868\u7ea7\u7ea6\u675f\u7684\u5199\u6cd5 ALTER TABLE stuinfo ADD UNIQUE ( seat );","title":"2.2.3 \u6dfb\u52a0\u4e3b\u952e\u7ea6\u675f"},{"location":"databases/MySQL/SQL/#225","text":"1 ALTER TABLE ( CONSTRAINT fk_stuinfo_major ) stuinfo ADD FOREIGN KEY ( majorid ) REFERENCES major ( id );","title":"2.2.5 \u6dfb\u52a0\u5916\u952e\u7ea6\u675f"},{"location":"databases/MySQL/SQL/#3_8","text":"","title":"3. \u5220\u9664\u7ea6\u675f"},{"location":"databases/MySQL/SQL/#31_1","text":"","title":"3.1 \u4fee\u6539\u8868\u65f6\u5220\u9664\u7ea6\u675f"},{"location":"databases/MySQL/SQL/#311_1","text":"1 ALTER TABLE stuinfo MODIFY COLUMN stuname VARCHAR ( 20 ) NULL ;","title":"3.1.1 \u5220\u9664\u975e\u7a7a\u7ea6\u675f"},{"location":"databases/MySQL/SQL/#312_2","text":"1 ALTER TABLE stuinfo MODIFY COLUMN age INT ;","title":"3.1.2 \u5220\u9664\u9ed8\u8ba4\u7ea6\u675f"},{"location":"databases/MySQL/SQL/#313","text":"1 ALTER TABLE stuinfo DROP PRIMARY KEY ;","title":"3.1.3 \u5220\u9664\u4e3b\u952e"},{"location":"databases/MySQL/SQL/#314","text":"1 ALTER TABLE stuinfo DROP INDEX seat ;","title":"3.1.4 \u5220\u9664\u552f\u4e00"},{"location":"databases/MySQL/SQL/#315","text":"1 ALTER TABLE stuinfo DROP FOREIGN KEY fk_stuinfo_major ;","title":"3.1.5 \u5220\u9664\u5916\u952e"},{"location":"databases/MySQL/SQL/#4_3","text":"","title":"4. \u6807\u8bc6\u5217"},{"location":"databases/MySQL/SQL/#41_1","text":"\u53c8\u79f0\u4e3a\u81ea\u589e\u957f\u5217,\u53ef\u4ee5\u4e0d\u7528\u624b\u52a8\u7684\u63d2\u5165\u503c\uff0c\u7cfb\u7edf\u63d0\u4f9b\u9ed8\u8ba4\u7684\u5e8f\u5217\u503c","title":"4.1 \u542b\u4e49"},{"location":"databases/MySQL/SQL/#42_1","text":"\u6807\u8bc6\u5217\u5fc5\u987b\u548c\u4e3b\u952e\u642d\u914d\u5417\uff1f\u4e0d\u4e00\u5b9a\uff0c\u4f46\u8981\u6c42\u662f\u4e00\u4e2akey\u3002 \u4e00\u4e2a\u8868\u53ef\u4ee5\u6709\u51e0\u4e2a\u6807\u8bc6\u5217\uff1f\u81f3\u591a\u4e00\u4e2a\u3002 \u6807\u8bc6\u5217\u7684\u7c7b\u578b\uff1f\u53ea\u80fd\u662f\u6570\u503c\u578b\uff08int\uff08\u4e00\u822c\u662fint\uff09\uff0cfloat\uff0cdouble\uff09 \u6807\u8bc6\u5217\u53ef\u4ee5\u901a\u8fc7 SET auto_increment_increment = 1; \u8bbe\u7f6e\u6b65\u957f\uff1b\u53ef\u4ee5\u901a\u8fc7\u624b\u52a8\u63d2\u5165\u503c\u8bbe\u7f6e\u8d77\u59cb\u503c\u3002","title":"4.2 \u7279\u70b9"},{"location":"databases/MySQL/SQL/#43_1","text":"\u8bed\u6cd5\uff1a 1 2 3 CREATE TABLE \u8868 ( \u5b57\u6bb5\u540d \u5b57\u6bb5\u7c7b\u578b \u7ea6\u675f AUTO_INCREMENT ); \u4f8b\uff1a 1 2 3 4 CREATE TABLE tab_identity ( id INT PRIMARY KEY AUTO_INCREMENT , NAME VARCHAR ( 20 ) ) ;","title":"4.3  \u521b\u5efa\u8868\u65f6\u8bbe\u7f6e\u6807\u8bc6\u5217"},{"location":"databases/MySQL/SQL/#44_1","text":"1 ALTER TABLE tab_identity MODIFY COLUMN id INT PRIMARY KEY AUTO_INCREMENT ;","title":"4.4  \u521b\u5efa\u8868\u65f6\u8bbe\u7f6e\u6807\u8bc6\u5217"},{"location":"databases/MySQL/SQL/#45_1","text":"1 ALTER TABLE tab_identity MODIFY COLUMN id INT ;","title":"4.5  \u4fee\u6539\u8868\u65f6\u5220\u9664\u6807\u8bc6\u5217"},{"location":"databases/MySQL/SQL/#46_1","text":"1 2 SHOW VARIABLES LIKE '%auto_increment%' ; SET auto_increment_increment = 3 ;","title":"4.6 \u8bbe\u7f6e\u6807\u8bc6\u5217\u7684\u6b65\u957f"},{"location":"databases/MySQL/SQL/#_4","text":"\u7528\u5230\u7684\u6570\u636e\u5e93\uff1a myemployees \u6570\u636e\u5e93","title":""},{"location":"databases/MySQL/%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E5%92%8C%E5%87%BD%E6%95%B0/","text":"\u5b58\u50a8\u8fc7\u7a0b\u548c\u51fd\u6570 \u00b6 \u4e00\u3001\u51fd\u6570 \u00b6 \u597d\u5904\uff1a \u9690\u85cf\u4e86\u5b9e\u73b0\u7ec6\u8282 \u63d0\u9ad8\u4ee3\u7801\u7684\u91cd\u7528\u6027 \u8c03\u7528\uff1a 1 SELECT \u51fd\u6570\u540d ( \u5b9e\u53c2\u5217\u8868 ) [ FROM \u8868 ]; \u5206\u7c7b\uff1a \u5355\u884c\u51fd\u6570\uff1a \u5982concat\u3001length\u3001ifnull\u7b49 \u5206\u7ec4\u51fd\u6570\uff1a\u505a\u7edf\u8ba1\u4f7f\u7528\uff0c\u53c8\u79f0\u4e3a\u7edf\u8ba1\u51fd\u6570\u3001\u805a\u5408\u51fd\u6570\u3001\u7ec4\u51fd\u6570 1. \u5355\u884c\u51fd\u6570 \u00b6 1.1 \u5b57\u7b26\u51fd\u6570 \u00b6 1. CONCAT \u62fc\u63a5\u5b57\u7b26 \u00b6 1 SELECT CONCAT ( first_name , \" \" , last_name ) \u59d3\u540d FROM employees ; 2. LENGTH \u83b7\u53d6\u5b57\u8282\u957f\u5ea6 \u00b6 1 2 3 4 5 6 mysql [( none )] > SELECT LENGTH ( 'hello \u5317\u4eac' ); +------------------------+ | LENGTH ( 'hello \u5317\u4eac' ) | +------------------------+ | 12 | +------------------------+ 3. CHAR_LENGTH \u83b7\u53d6\u5b57\u7b26\u4e2a\u6570 \u00b6 1 2 3 4 5 6 mysql [( none )] > SELECT CHAR_LENGTH ( 'hello \u5317\u4eac' ); +-----------------------------+ | CHAR_LENGTH ( 'hello \u5317\u4eac' ) | +-----------------------------+ | 8 | +-----------------------------+ 4. SUBSTRING \u622a\u53d6\u5b50\u4e32 \u00b6 \u6ce8\u610f\uff1a\u8d77\u59cb\u7d22\u5f15\u4ece1\u5f00\u59cb\uff01 SUBSTR(str,\u8d77\u59cb\u7d22\u5f15\uff0c\u622a\u53d6\u7684\u5b57\u7b26\u957f\u5ea6) SUBSTR(str,\u8d77\u59cb\u7d22\u5f15) 1 2 3 4 5 6 7 8 9 10 11 12 mysql [( none )] > SELECT SUBSTR ( '\u5f20\u4e09\u4e30\u7231\u4e0a\u4e86\u90ed\u8944' , 1 , 3 ); +----------------------------------------+ | SUBSTR ( '\u5f20\u4e09\u4e30\u7231\u4e0a\u4e86\u90ed\u8944' , 1 , 3 ) | +----------------------------------------+ | \u5f20\u4e09\u4e30 | +----------------------------------------+ mysql [( none )] > SELECT SUBSTR ( '\u5f20\u4e09\u4e30\u7231\u4e0a\u4e86\u90ed\u8944' , 7 ); +--------------------------------------+ | SUBSTR ( '\u5f20\u4e09\u4e30\u7231\u4e0a\u4e86\u90ed\u8944' , 7 ) | +--------------------------------------+ | \u90ed\u8944 | +--------------------------------------+ 5. INSTR \u83b7\u53d6\u5b57\u7b26\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u7d22\u5f15 \u00b6 1 2 3 4 5 6 mysql [( none )] > mysql [( none )] > SELECT INSTR ( '\u5b59\u609f\u7a7a\u5927\u6218\u732a\u516b\u6212\uff0c\u732a\u516b\u6212\u5927\u6218\u5b59\u609f\u7a7a' , '\u732a\u516b\u6212' ) AS output ; +--------+ | output | +--------+ | 6 | +--------+ 6. TRIM \u53bb\u524d\u540e\u6307\u5b9a\u7684\u5b57\u7b26\uff0c\u9ed8\u8ba4\u662f\u53bb\u7a7a\u683c \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 mysql [( none )] > SELECT TRIM ( ' \u865a\u7af9 ' ) AS output ; +--------+ | output | +--------+ | \u865a\u7af9 | +--------+ mysql [( none )] > SELECT TRIM ( 'x' FROM 'xxx\u865axxx\u7af9xxx' ) AS output ; +-----------+ | output | +-----------+ | \u865a xxx\u7af9 | +-----------+ 7. LPAD / RPAD \u5de6\u586b\u5145/\u53f3\u586b\u5145 1 2 3 4 5 6 7 8 9 10 11 12 mysql [( none )] > SELECT LPAD ( '\u6728\u5a49\u6e05' , 10 , 'x' ); +--------------------------+ | LPAD ( '\u6728\u5a49\u6e05' , 10 , 'x' ) | +--------------------------+ | xxxxxxx\u6728\u5a49\u6e05 | +--------------------------+ mysql [( none )] > SELECT RPAD ( '\u6728\u5a49\u6e05' , 10 , 'x' ); +--------------------------+ | RPAD ( '\u6728\u5a49\u6e05' , 10 , 'x' ) | +--------------------------+ | \u6728\u5a49\u6e05 xxxxxxx | +--------------------------+ 8. UPPER / LOWER \u53d8\u5927\u5199/\u53d8\u5c0f\u5199 \u00b6 1 SELECT CONCAT ( UPPER ( SUBSTR ( first_name , 1 , 1 )), LOWER ( SUBSTR ( first_name , 2 )), '_' , UPPER ( last_name )) \"OUTPUT\" FROM myemployees . employees ; 9. STRCMP \u6bd4\u8f83\u4e24\u4e2a\u5b57\u7b26\u5927\u5c0f \u00b6 1 2 3 4 5 6 mysql [( none )] > SELECT STRCMP ( 'aec' , 'aec' ); +---------------------+ | STRCMP ( 'aec' , 'aec' ) | +---------------------+ | 0 | +---------------------+ 10. LEFT / RIGHT \u622a\u53d6\u5b50\u4e32 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 mysql [( none )] > SELECT LEFT ( '\u9e20\u6469\u667a' , 1 ); +---------------------+ | LEFT ( '\u9e20\u6469\u667a' , 1 ) | +---------------------+ | \u9e20 | +---------------------+ mysql [( none )] > SELECT RIGHT ( '\u9e20\u6469\u667a' , 1 ); +----------------------+ | RIGHT ( '\u9e20\u6469\u667a' , 1 ) | +----------------------+ | \u667a | +----------------------+ 1.2 \u6570\u5b66\u51fd\u6570 \u00b6 1. ABS \u7edd\u5bf9\u503c \u00b6 1 2 3 4 5 6 mysql [( none )] > SELECT ABS ( - 2 . 4 ); +-----------+ | ABS ( - 2 . 4 ) | +-----------+ | 2 . 4 | +-----------+ 2. CEI \u5411\u4e0a\u53d6\u6574 \u8fd4\u56de>=\u8be5\u53c2\u6570\u7684\u6700\u5c0f\u6574\u6570 \u00b6 1 2 3 4 5 6 mysql [( none )] > SELECT CEIL ( - 1 . 09 ), CEIL ( 0 . 09 ), CEIL ( 1 . 00 ); +-------------+------------+------------+ | CEIL ( - 1 . 09 ) | CEIL ( 0 . 09 ) | CEIL ( 1 . 00 ) | +-------------+------------+------------+ | - 1 | 1 | 1 | +-------------+------------+------------+ 3. FLOOR \u5411\u4e0b\u53d6\u6574\uff0c\u8fd4\u56de<=\u8be5\u53c2\u6570\u7684\u6700\u5927\u6574\u6570 \u00b6 1 2 3 4 5 6 mysql [( none )] > SELECT FLOOR ( - 1 . 09 ), FLOOR ( 0 . 09 ), FLOOR ( 1 . 00 ); +--------------+-------------+-------------+ | FLOOR ( - 1 . 09 ) | FLOOR ( 0 . 09 ) | FLOOR ( 1 . 00 ) | +--------------+-------------+-------------+ | - 2 | 0 | 1 | +--------------+-------------+-------------+ 4. ROUND \u56db\u820d\u4e94\u5165 \u00b6 1 2 3 4 5 6 mysql [( none )] > SELECT ROUND ( 1 . 8712345 ), ROUND ( 1 . 8712345 , 2 ); +------------------+--------------------+ | ROUND ( 1 . 8712345 ) | ROUND ( 1 . 8712345 , 2 ) | +------------------+--------------------+ | 2 | 1 . 87 | +------------------+--------------------+ 5. TRUNCATE \u622a\u65ad \u00b6 1 2 3 4 5 6 mysql [( none )] > SELECT TRUNCATE ( 1 . 8712345 , 1 ); +-----------------------+ | TRUNCATE ( 1 . 8712345 , 1 ) | +-----------------------+ | 1 . 8 | +-----------------------+ 6. MOD \u53d6\u4f59 \u00b6 1 2 3 4 5 6 7 # \u4e24\u79cd\u65b9\u5f0f mysql [( none )] > SELECT MOD ( - 10 , 3 ), - 10 % 3 , 10 % 3 ; +------------+-------+------+ | MOD ( - 10 , 3 ) | - 10 % 3 | 10 % 3 | +------------+-------+------+ | - 1 | - 1 | 1 | +------------+-------+------+ 1.3 \u65e5\u671f\u51fd\u6570 \u00b6 1. NOW() \u00b6 1 2 3 4 5 6 7 # \u8fd4\u56de\u5f53\u524d\u7cfb\u7edf\u65e5\u671f+\u65f6\u95f4 mysql [( none )] > SELECT NOW (); +---------------------+ | NOW () | +---------------------+ | 2020 - 12 - 09 22 : 45 : 12 | +---------------------+ 2. CURDATE() \u00b6 1 2 3 4 5 6 7 # \u8fd4\u56de\u5f53\u524d\u7cfb\u7edf\u65e5\u671f\uff0c\u4e0d\u5305\u542b\u65f6\u95f4 mysql [( none )] > SELECT CURDATE (); +------------+ | CURDATE () | +------------+ | 2020 - 12 - 09 | +------------+ 3. CURTIME() \u00b6 1 2 3 4 5 6 7 # \u8fd4\u56de\u5f53\u524d\u65f6\u95f4\uff0c\u4e0d\u5305\u542b\u65e5\u671f mysql [( none )] > SELECT CURTIME (); +-----------+ | CURTIME () | +-----------+ | 22 : 47 : 45 | +-----------+ 4. DATEDIFF() \u00b6 1 2 3 4 5 6 7 # \u8fd4\u56de\u4e24\u4e2a\u65e5\u671f\u76f8\u5dee\u7684\u5929\u6570 mysql [( none )] > SELECT DATEDIFF ( '2018-7-16' , '2019-7-13' ); +-----------------------------------+ | DATEDIFF ( '2018-7-16' , '2019-7-13' ) | +-----------------------------------+ | - 362 | +-----------------------------------+ 5. DATE_FORMAT() \u00b6 1 2 3 4 5 6 7 # \u5c06\u65e5\u671f\u8f6c\u6362\u6210\u5b57\u7b26\u4e32 mysql [( none )] > SELECT DATE_FORMAT ( '1998-7-16' , '%Y\u5e74%m\u6708%d\u65e5 %H\u5c0f\u65f6%i\u5206\u949f%s\u79d2' ) \u51fa\u751f\u65e5\u671f ; +-----------------------------------------+ | \u51fa\u751f\u65e5\u671f | +-----------------------------------------+ | 1998 \u5e74 07 \u6708 16 \u65e5 00 \u5c0f\u65f6 00 \u5206\u949f 00 \u79d2 | +-----------------------------------------+ 6. STR_TO_DATE() \u00b6 1 2 3 4 5 6 7 # \u6309\u6307\u5b9a\u683c\u5f0f\u89e3\u6790\u5b57\u7b26\u4e32\u4e3a\u65e5\u671f\u7c7b\u578b mysql [( none )] > SELECT STR_TO_DATE ( '1998 3/2' , '%Y %c/%d' ) AS output ; +------------+ | output | +------------+ | 1998 - 03 - 02 | +------------+ 1.4 \u7cfb\u7edf\u4fe1\u606f\u51fd\u6570 \u00b6 1 2 3 SELECT VERSION (); # \u5f53\u524d\u6570\u636e\u5e93\u670d\u52a1\u5668\u7684\u7248\u672c SELECT DATABASE (); # \u5f53\u524d\u6253\u5f00\u7684\u6570\u636e\u5e93 SELECT USER (); # \u5f53\u524d\u7528\u6237 1.5 \u52a0\u5bc6\u51fd\u6570 \u00b6 1 2 SELECT password ( '123456' ); SELECT md5 ( '123456' ); 2. \u6d41\u7a0b\u63a7\u5236\u51fd\u6570 \u00b6 1. IF \u51fd\u6570 \u00b6 1 2 3 4 5 6 7 8 9 mysql [( none )] > SELECT IF ( 100 > 9 , '\u597d' , '\u574f' ); +-----------------------+ | IF ( 100 > 9 , '\u597d' , '\u574f' ) | +-----------------------+ | \u597d | +-----------------------+ # \u5982\u679c\u6709\u5956\u91d1\uff0c\u5219\u663e\u793a\u6700\u7ec8\u5956\u91d1\uff0c\u5982\u679c\u6ca1\u6709\uff0c\u5219\u663e\u793a0 SELECT IF ( commission_pct IS NULL , 0 , salary * 12 * commission_pct ) \u5956\u91d1 , commission_pct FROM employees ; 2. CASE \u51fd\u6570 \u00b6 2.1 \u4f7f\u75281\uff1a\u7c7b\u4f3c\u4e8eswitch\u8bed\u53e5\uff0c\u53ef\u4ee5\u5b9e\u73b0\u7b49\u503c\u5224\u65ad \u00b6 \u8bed\u6cd5 1 2 3 4 5 6 CASE \u8981\u5224\u65ad\u7684\u5b57\u6bb5\u6216\u8868\u8fbe\u5f0f WHEN \u5e38\u91cf 1 THEN \u8981\u663e\u793a\u7684\u503c 1 \u6216\u8bed\u53e5 1 ; WHEN \u5e38\u91cf 2 THEN \u8981\u663e\u793a\u7684\u503c 2 \u6216\u8bed\u53e5 2 ; ... ELSE \u8981\u663e\u793a\u7684\u503c n\u6216\u8bed\u53e5n ; END \u6848\u4f8b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 # \u90e8\u95e8\u7f16\u53f7\u662f30\uff0c\u5de5\u8d44\u663e\u793a\u4e3a2\u500d # \u90e8\u95e8\u7f16\u53f7\u662f50\uff0c\u5de5\u8d44\u663e\u793a\u4e3a3\u500d # \u90e8\u95e8\u7f16\u53f7\u662f60\uff0c\u5de5\u8d44\u663e\u793a\u4e3a4\u500d # \u5426\u5219\u4e0d\u53d8 # \u663e\u793a \u90e8\u95e8\u7f16\u53f7\uff0c\u65b0\u5de5\u8d44\uff0c\u65e7\u5de5\u8d44 SELECT department_id , salary , CASE department_id WHEN 30 THEN salary * 2 WHEN 50 THEN salary * 3 WHEN 60 THEN salary * 4 ELSE salary END newSalary FROM employees ; 2.2 \u4f7f\u75282\uff1a\u7c7b\u4f3c\u4e8e\u591a\u91cdIF\u8bed\u53e5\uff0c\u5b9e\u73b0\u533a\u95f4\u5224\u65ad \u00b6 \u8bed\u6cd5 1 2 3 4 5 6 CASE WHEN \u6761\u4ef6 1 THEN \u8981\u663e\u793a\u7684\u503c 1 \u6216\u8bed\u53e5 1 WHEN \u6761\u4ef6 2 THEN \u8981\u663e\u793a\u7684\u503c 2 \u6216\u8bed\u53e5 2 ... ELSE \u8981\u663e\u793a\u7684\u503c n\u6216\u8bed\u53e5n END \u6848\u4f8b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 # \u5de5\u8d44>20000,\u663e\u793a\u7ea7\u522bA # \u5de5\u8d44>15000,\u663e\u793a\u7ea7\u522bB # \u5de5\u8d44>10000,\u663e\u793a\u7ea7\u522bC # \u5426\u5219\uff0c\u663e\u793aD SELECT salary , CASE WHEN salary > 20000 THEN 'A' WHEN salary > 15000 THEN 'B' WHEN salary > 10000 THEN 'C' ELSE 'D' END AS \u5de5\u8d44\u7ea7\u522b FROM employees ; 3. \u5206\u7ec4\u51fd\u6570 \u00b6 \u529f\u80fd\uff1a\u7528\u4f5c\u7edf\u8ba1\u4f7f\u7528\uff0c\u53c8\u79f0\u4e3a\u805a\u5408\u51fd\u6570\u6216\u7edf\u8ba1\u51fd\u6570\u6216\u7ec4\u51fd\u6570 \u5206\u7c7b\uff1asum() \u6c42\u548c\u3001avg() \u5e73\u5747\u503c\u3001max() \u6700\u5927\u503c\u3001min() \u6700\u5c0f\u503c\u3001count() \u8ba1\u6570\uff08\u975e\u7a7a\uff09 \u7279\u70b9\uff1a sum\u3001avg\u4e00\u822c\u7528\u4e8e\u5904\u7406\u6570\u503c\u578b\u6570\u636e max\u3001min\u3001count\u53ef\u4ee5\u5904\u7406\u4efb\u4f55\u7c7b\u578b\u6570\u636e \u4ee5\u4e0a\u5206\u7ec4\u51fd\u6570\u90fd\u5ffd\u7565null\u503c 1 2 3 4 5 6 7 # \u67e5\u8be2\u5458\u5de5\u4fe1\u606f\u8868\u4e2d\uff0c\u6240\u6709\u5458\u5de5\u7684\u5de5\u8d44\u548c\u3001\u5de5\u8d44\u5e73\u5747\u503c\u3001\u6700\u4f4e\u5de5\u8d44\u3001\u6700\u9ad8\u5de5\u8d44\u3001\u6709\u5de5\u8d44\u7684\u4e2a\u6570 mysql [ myemployees ] > SELECT SUM ( salary ), AVG ( salary ), MIN ( salary ), MAX ( salary ), COUNT ( salary ) FROM employees ; +-------------+-------------+-------------+-------------+---------------+ | SUM ( salary ) | AVG ( salary ) | MIN ( salary ) | MAX ( salary ) | COUNT ( salary ) | +-------------+-------------+-------------+-------------+---------------+ | 691400 . 00 | 6461 . 682243 | 2100 . 00 | 24000 . 00 | 107 | +-------------+-------------+-------------+-------------+---------------+ 3.1 COUNT() \u00b6 1 \u7edf\u8ba1\u7ed3\u679c\u96c6\u7684\u884c\u6570\uff0c\u63a8\u8350\u4f7f\u7528count(*) 1 2 3 4 5 6 mysql [ myemployees ] > SELECT COUNT ( * ) FROM employees ; +----------+ | COUNT ( * ) | +----------+ | 107 | +----------+ 2 \u642d\u914ddistinct\u5b9e\u73b0\u53bb\u91cd\u7684\u7edf\u8ba1 1 2 3 4 5 6 mysql [ myemployees ] > SELECT COUNT ( DISTINCT department_id ) FROM employees ; +-------------------------------+ | COUNT ( DISTINCT department_id ) | +-------------------------------+ | 11 | +-------------------------------+","title":"\u5b58\u50a8\u8fc7\u7a0b\u548c\u51fd\u6570"},{"location":"databases/MySQL/%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E5%92%8C%E5%87%BD%E6%95%B0/#_1","text":"","title":"\u5b58\u50a8\u8fc7\u7a0b\u548c\u51fd\u6570"},{"location":"databases/MySQL/%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E5%92%8C%E5%87%BD%E6%95%B0/#_2","text":"\u597d\u5904\uff1a \u9690\u85cf\u4e86\u5b9e\u73b0\u7ec6\u8282 \u63d0\u9ad8\u4ee3\u7801\u7684\u91cd\u7528\u6027 \u8c03\u7528\uff1a 1 SELECT \u51fd\u6570\u540d ( \u5b9e\u53c2\u5217\u8868 ) [ FROM \u8868 ]; \u5206\u7c7b\uff1a \u5355\u884c\u51fd\u6570\uff1a \u5982concat\u3001length\u3001ifnull\u7b49 \u5206\u7ec4\u51fd\u6570\uff1a\u505a\u7edf\u8ba1\u4f7f\u7528\uff0c\u53c8\u79f0\u4e3a\u7edf\u8ba1\u51fd\u6570\u3001\u805a\u5408\u51fd\u6570\u3001\u7ec4\u51fd\u6570","title":"\u4e00\u3001\u51fd\u6570"},{"location":"databases/MySQL/%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E5%92%8C%E5%87%BD%E6%95%B0/#1","text":"","title":"1. \u5355\u884c\u51fd\u6570"},{"location":"databases/MySQL/%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E5%92%8C%E5%87%BD%E6%95%B0/#11","text":"","title":"1.1 \u5b57\u7b26\u51fd\u6570"},{"location":"databases/MySQL/%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E5%92%8C%E5%87%BD%E6%95%B0/#1-concat","text":"1 SELECT CONCAT ( first_name , \" \" , last_name ) \u59d3\u540d FROM employees ;","title":"1. CONCAT\u62fc\u63a5\u5b57\u7b26"},{"location":"databases/MySQL/%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E5%92%8C%E5%87%BD%E6%95%B0/#2length","text":"1 2 3 4 5 6 mysql [( none )] > SELECT LENGTH ( 'hello \u5317\u4eac' ); +------------------------+ | LENGTH ( 'hello \u5317\u4eac' ) | +------------------------+ | 12 | +------------------------+","title":"2.LENGTH\u83b7\u53d6\u5b57\u8282\u957f\u5ea6"},{"location":"databases/MySQL/%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E5%92%8C%E5%87%BD%E6%95%B0/#3char_length","text":"1 2 3 4 5 6 mysql [( none )] > SELECT CHAR_LENGTH ( 'hello \u5317\u4eac' ); +-----------------------------+ | CHAR_LENGTH ( 'hello \u5317\u4eac' ) | +-----------------------------+ | 8 | +-----------------------------+","title":"3.CHAR_LENGTH \u83b7\u53d6\u5b57\u7b26\u4e2a\u6570"},{"location":"databases/MySQL/%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E5%92%8C%E5%87%BD%E6%95%B0/#4-substring","text":"\u6ce8\u610f\uff1a\u8d77\u59cb\u7d22\u5f15\u4ece1\u5f00\u59cb\uff01 SUBSTR(str,\u8d77\u59cb\u7d22\u5f15\uff0c\u622a\u53d6\u7684\u5b57\u7b26\u957f\u5ea6) SUBSTR(str,\u8d77\u59cb\u7d22\u5f15) 1 2 3 4 5 6 7 8 9 10 11 12 mysql [( none )] > SELECT SUBSTR ( '\u5f20\u4e09\u4e30\u7231\u4e0a\u4e86\u90ed\u8944' , 1 , 3 ); +----------------------------------------+ | SUBSTR ( '\u5f20\u4e09\u4e30\u7231\u4e0a\u4e86\u90ed\u8944' , 1 , 3 ) | +----------------------------------------+ | \u5f20\u4e09\u4e30 | +----------------------------------------+ mysql [( none )] > SELECT SUBSTR ( '\u5f20\u4e09\u4e30\u7231\u4e0a\u4e86\u90ed\u8944' , 7 ); +--------------------------------------+ | SUBSTR ( '\u5f20\u4e09\u4e30\u7231\u4e0a\u4e86\u90ed\u8944' , 7 ) | +--------------------------------------+ | \u90ed\u8944 | +--------------------------------------+","title":"4. SUBSTRING \u622a\u53d6\u5b50\u4e32"},{"location":"databases/MySQL/%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E5%92%8C%E5%87%BD%E6%95%B0/#5-instr","text":"1 2 3 4 5 6 mysql [( none )] > mysql [( none )] > SELECT INSTR ( '\u5b59\u609f\u7a7a\u5927\u6218\u732a\u516b\u6212\uff0c\u732a\u516b\u6212\u5927\u6218\u5b59\u609f\u7a7a' , '\u732a\u516b\u6212' ) AS output ; +--------+ | output | +--------+ | 6 | +--------+","title":"5. INSTR\u83b7\u53d6\u5b57\u7b26\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u7d22\u5f15"},{"location":"databases/MySQL/%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E5%92%8C%E5%87%BD%E6%95%B0/#6-trim","text":"1 2 3 4 5 6 7 8 9 10 11 12 mysql [( none )] > SELECT TRIM ( ' \u865a\u7af9 ' ) AS output ; +--------+ | output | +--------+ | \u865a\u7af9 | +--------+ mysql [( none )] > SELECT TRIM ( 'x' FROM 'xxx\u865axxx\u7af9xxx' ) AS output ; +-----------+ | output | +-----------+ | \u865a xxx\u7af9 | +-----------+ 7. LPAD / RPAD \u5de6\u586b\u5145/\u53f3\u586b\u5145 1 2 3 4 5 6 7 8 9 10 11 12 mysql [( none )] > SELECT LPAD ( '\u6728\u5a49\u6e05' , 10 , 'x' ); +--------------------------+ | LPAD ( '\u6728\u5a49\u6e05' , 10 , 'x' ) | +--------------------------+ | xxxxxxx\u6728\u5a49\u6e05 | +--------------------------+ mysql [( none )] > SELECT RPAD ( '\u6728\u5a49\u6e05' , 10 , 'x' ); +--------------------------+ | RPAD ( '\u6728\u5a49\u6e05' , 10 , 'x' ) | +--------------------------+ | \u6728\u5a49\u6e05 xxxxxxx | +--------------------------+","title":"6. TRIM\u53bb\u524d\u540e\u6307\u5b9a\u7684\u5b57\u7b26\uff0c\u9ed8\u8ba4\u662f\u53bb\u7a7a\u683c"},{"location":"databases/MySQL/%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E5%92%8C%E5%87%BD%E6%95%B0/#8upperlower","text":"1 SELECT CONCAT ( UPPER ( SUBSTR ( first_name , 1 , 1 )), LOWER ( SUBSTR ( first_name , 2 )), '_' , UPPER ( last_name )) \"OUTPUT\" FROM myemployees . employees ;","title":"8.UPPER/LOWER \u53d8\u5927\u5199/\u53d8\u5c0f\u5199"},{"location":"databases/MySQL/%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E5%92%8C%E5%87%BD%E6%95%B0/#9strcmp","text":"1 2 3 4 5 6 mysql [( none )] > SELECT STRCMP ( 'aec' , 'aec' ); +---------------------+ | STRCMP ( 'aec' , 'aec' ) | +---------------------+ | 0 | +---------------------+","title":"9.STRCMP \u6bd4\u8f83\u4e24\u4e2a\u5b57\u7b26\u5927\u5c0f"},{"location":"databases/MySQL/%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E5%92%8C%E5%87%BD%E6%95%B0/#10leftright","text":"1 2 3 4 5 6 7 8 9 10 11 12 mysql [( none )] > SELECT LEFT ( '\u9e20\u6469\u667a' , 1 ); +---------------------+ | LEFT ( '\u9e20\u6469\u667a' , 1 ) | +---------------------+ | \u9e20 | +---------------------+ mysql [( none )] > SELECT RIGHT ( '\u9e20\u6469\u667a' , 1 ); +----------------------+ | RIGHT ( '\u9e20\u6469\u667a' , 1 ) | +----------------------+ | \u667a | +----------------------+","title":"10.LEFT/RIGHT \u622a\u53d6\u5b50\u4e32"},{"location":"databases/MySQL/%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E5%92%8C%E5%87%BD%E6%95%B0/#12","text":"","title":"1.2 \u6570\u5b66\u51fd\u6570"},{"location":"databases/MySQL/%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E5%92%8C%E5%87%BD%E6%95%B0/#1-abs","text":"1 2 3 4 5 6 mysql [( none )] > SELECT ABS ( - 2 . 4 ); +-----------+ | ABS ( - 2 . 4 ) | +-----------+ | 2 . 4 | +-----------+","title":"1. ABS \u7edd\u5bf9\u503c"},{"location":"databases/MySQL/%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E5%92%8C%E5%87%BD%E6%95%B0/#2-cei","text":"1 2 3 4 5 6 mysql [( none )] > SELECT CEIL ( - 1 . 09 ), CEIL ( 0 . 09 ), CEIL ( 1 . 00 ); +-------------+------------+------------+ | CEIL ( - 1 . 09 ) | CEIL ( 0 . 09 ) | CEIL ( 1 . 00 ) | +-------------+------------+------------+ | - 1 | 1 | 1 | +-------------+------------+------------+","title":"2. CEI \u5411\u4e0a\u53d6\u6574 \u8fd4\u56de&gt;=\u8be5\u53c2\u6570\u7684\u6700\u5c0f\u6574\u6570"},{"location":"databases/MySQL/%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E5%92%8C%E5%87%BD%E6%95%B0/#3-floor","text":"1 2 3 4 5 6 mysql [( none )] > SELECT FLOOR ( - 1 . 09 ), FLOOR ( 0 . 09 ), FLOOR ( 1 . 00 ); +--------------+-------------+-------------+ | FLOOR ( - 1 . 09 ) | FLOOR ( 0 . 09 ) | FLOOR ( 1 . 00 ) | +--------------+-------------+-------------+ | - 2 | 0 | 1 | +--------------+-------------+-------------+","title":"3. FLOOR \u5411\u4e0b\u53d6\u6574\uff0c\u8fd4\u56de&lt;=\u8be5\u53c2\u6570\u7684\u6700\u5927\u6574\u6570"},{"location":"databases/MySQL/%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E5%92%8C%E5%87%BD%E6%95%B0/#4-round","text":"1 2 3 4 5 6 mysql [( none )] > SELECT ROUND ( 1 . 8712345 ), ROUND ( 1 . 8712345 , 2 ); +------------------+--------------------+ | ROUND ( 1 . 8712345 ) | ROUND ( 1 . 8712345 , 2 ) | +------------------+--------------------+ | 2 | 1 . 87 | +------------------+--------------------+","title":"4. ROUND \u56db\u820d\u4e94\u5165"},{"location":"databases/MySQL/%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E5%92%8C%E5%87%BD%E6%95%B0/#5-truncate","text":"1 2 3 4 5 6 mysql [( none )] > SELECT TRUNCATE ( 1 . 8712345 , 1 ); +-----------------------+ | TRUNCATE ( 1 . 8712345 , 1 ) | +-----------------------+ | 1 . 8 | +-----------------------+","title":"5. TRUNCATE \u622a\u65ad"},{"location":"databases/MySQL/%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E5%92%8C%E5%87%BD%E6%95%B0/#6-mod","text":"1 2 3 4 5 6 7 # \u4e24\u79cd\u65b9\u5f0f mysql [( none )] > SELECT MOD ( - 10 , 3 ), - 10 % 3 , 10 % 3 ; +------------+-------+------+ | MOD ( - 10 , 3 ) | - 10 % 3 | 10 % 3 | +------------+-------+------+ | - 1 | - 1 | 1 | +------------+-------+------+","title":"6. MOD \u53d6\u4f59"},{"location":"databases/MySQL/%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E5%92%8C%E5%87%BD%E6%95%B0/#13","text":"","title":"1.3 \u65e5\u671f\u51fd\u6570"},{"location":"databases/MySQL/%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E5%92%8C%E5%87%BD%E6%95%B0/#1-now","text":"1 2 3 4 5 6 7 # \u8fd4\u56de\u5f53\u524d\u7cfb\u7edf\u65e5\u671f+\u65f6\u95f4 mysql [( none )] > SELECT NOW (); +---------------------+ | NOW () | +---------------------+ | 2020 - 12 - 09 22 : 45 : 12 | +---------------------+","title":"1. NOW()"},{"location":"databases/MySQL/%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E5%92%8C%E5%87%BD%E6%95%B0/#2curdate","text":"1 2 3 4 5 6 7 # \u8fd4\u56de\u5f53\u524d\u7cfb\u7edf\u65e5\u671f\uff0c\u4e0d\u5305\u542b\u65f6\u95f4 mysql [( none )] > SELECT CURDATE (); +------------+ | CURDATE () | +------------+ | 2020 - 12 - 09 | +------------+","title":"2.CURDATE()"},{"location":"databases/MySQL/%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E5%92%8C%E5%87%BD%E6%95%B0/#3-curtime","text":"1 2 3 4 5 6 7 # \u8fd4\u56de\u5f53\u524d\u65f6\u95f4\uff0c\u4e0d\u5305\u542b\u65e5\u671f mysql [( none )] > SELECT CURTIME (); +-----------+ | CURTIME () | +-----------+ | 22 : 47 : 45 | +-----------+","title":"3. CURTIME()"},{"location":"databases/MySQL/%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E5%92%8C%E5%87%BD%E6%95%B0/#4-datediff","text":"1 2 3 4 5 6 7 # \u8fd4\u56de\u4e24\u4e2a\u65e5\u671f\u76f8\u5dee\u7684\u5929\u6570 mysql [( none )] > SELECT DATEDIFF ( '2018-7-16' , '2019-7-13' ); +-----------------------------------+ | DATEDIFF ( '2018-7-16' , '2019-7-13' ) | +-----------------------------------+ | - 362 | +-----------------------------------+","title":"4. DATEDIFF()"},{"location":"databases/MySQL/%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E5%92%8C%E5%87%BD%E6%95%B0/#5-date_format","text":"1 2 3 4 5 6 7 # \u5c06\u65e5\u671f\u8f6c\u6362\u6210\u5b57\u7b26\u4e32 mysql [( none )] > SELECT DATE_FORMAT ( '1998-7-16' , '%Y\u5e74%m\u6708%d\u65e5 %H\u5c0f\u65f6%i\u5206\u949f%s\u79d2' ) \u51fa\u751f\u65e5\u671f ; +-----------------------------------------+ | \u51fa\u751f\u65e5\u671f | +-----------------------------------------+ | 1998 \u5e74 07 \u6708 16 \u65e5 00 \u5c0f\u65f6 00 \u5206\u949f 00 \u79d2 | +-----------------------------------------+","title":"5. DATE_FORMAT()"},{"location":"databases/MySQL/%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E5%92%8C%E5%87%BD%E6%95%B0/#6-str_to_date","text":"1 2 3 4 5 6 7 # \u6309\u6307\u5b9a\u683c\u5f0f\u89e3\u6790\u5b57\u7b26\u4e32\u4e3a\u65e5\u671f\u7c7b\u578b mysql [( none )] > SELECT STR_TO_DATE ( '1998 3/2' , '%Y %c/%d' ) AS output ; +------------+ | output | +------------+ | 1998 - 03 - 02 | +------------+","title":"6. STR_TO_DATE()"},{"location":"databases/MySQL/%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E5%92%8C%E5%87%BD%E6%95%B0/#14","text":"1 2 3 SELECT VERSION (); # \u5f53\u524d\u6570\u636e\u5e93\u670d\u52a1\u5668\u7684\u7248\u672c SELECT DATABASE (); # \u5f53\u524d\u6253\u5f00\u7684\u6570\u636e\u5e93 SELECT USER (); # \u5f53\u524d\u7528\u6237","title":"1.4  \u7cfb\u7edf\u4fe1\u606f\u51fd\u6570"},{"location":"databases/MySQL/%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E5%92%8C%E5%87%BD%E6%95%B0/#15","text":"1 2 SELECT password ( '123456' ); SELECT md5 ( '123456' );","title":"1.5 \u52a0\u5bc6\u51fd\u6570"},{"location":"databases/MySQL/%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E5%92%8C%E5%87%BD%E6%95%B0/#2","text":"","title":"2. \u6d41\u7a0b\u63a7\u5236\u51fd\u6570"},{"location":"databases/MySQL/%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E5%92%8C%E5%87%BD%E6%95%B0/#1-if","text":"1 2 3 4 5 6 7 8 9 mysql [( none )] > SELECT IF ( 100 > 9 , '\u597d' , '\u574f' ); +-----------------------+ | IF ( 100 > 9 , '\u597d' , '\u574f' ) | +-----------------------+ | \u597d | +-----------------------+ # \u5982\u679c\u6709\u5956\u91d1\uff0c\u5219\u663e\u793a\u6700\u7ec8\u5956\u91d1\uff0c\u5982\u679c\u6ca1\u6709\uff0c\u5219\u663e\u793a0 SELECT IF ( commission_pct IS NULL , 0 , salary * 12 * commission_pct ) \u5956\u91d1 , commission_pct FROM employees ;","title":"1. IF\u51fd\u6570"},{"location":"databases/MySQL/%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E5%92%8C%E5%87%BD%E6%95%B0/#2-case","text":"","title":"2. CASE\u51fd\u6570"},{"location":"databases/MySQL/%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E5%92%8C%E5%87%BD%E6%95%B0/#21-1switch","text":"\u8bed\u6cd5 1 2 3 4 5 6 CASE \u8981\u5224\u65ad\u7684\u5b57\u6bb5\u6216\u8868\u8fbe\u5f0f WHEN \u5e38\u91cf 1 THEN \u8981\u663e\u793a\u7684\u503c 1 \u6216\u8bed\u53e5 1 ; WHEN \u5e38\u91cf 2 THEN \u8981\u663e\u793a\u7684\u503c 2 \u6216\u8bed\u53e5 2 ; ... ELSE \u8981\u663e\u793a\u7684\u503c n\u6216\u8bed\u53e5n ; END \u6848\u4f8b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 # \u90e8\u95e8\u7f16\u53f7\u662f30\uff0c\u5de5\u8d44\u663e\u793a\u4e3a2\u500d # \u90e8\u95e8\u7f16\u53f7\u662f50\uff0c\u5de5\u8d44\u663e\u793a\u4e3a3\u500d # \u90e8\u95e8\u7f16\u53f7\u662f60\uff0c\u5de5\u8d44\u663e\u793a\u4e3a4\u500d # \u5426\u5219\u4e0d\u53d8 # \u663e\u793a \u90e8\u95e8\u7f16\u53f7\uff0c\u65b0\u5de5\u8d44\uff0c\u65e7\u5de5\u8d44 SELECT department_id , salary , CASE department_id WHEN 30 THEN salary * 2 WHEN 50 THEN salary * 3 WHEN 60 THEN salary * 4 ELSE salary END newSalary FROM employees ;","title":"2.1 \u4f7f\u75281\uff1a\u7c7b\u4f3c\u4e8eswitch\u8bed\u53e5\uff0c\u53ef\u4ee5\u5b9e\u73b0\u7b49\u503c\u5224\u65ad"},{"location":"databases/MySQL/%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E5%92%8C%E5%87%BD%E6%95%B0/#22-2if","text":"\u8bed\u6cd5 1 2 3 4 5 6 CASE WHEN \u6761\u4ef6 1 THEN \u8981\u663e\u793a\u7684\u503c 1 \u6216\u8bed\u53e5 1 WHEN \u6761\u4ef6 2 THEN \u8981\u663e\u793a\u7684\u503c 2 \u6216\u8bed\u53e5 2 ... ELSE \u8981\u663e\u793a\u7684\u503c n\u6216\u8bed\u53e5n END \u6848\u4f8b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 # \u5de5\u8d44>20000,\u663e\u793a\u7ea7\u522bA # \u5de5\u8d44>15000,\u663e\u793a\u7ea7\u522bB # \u5de5\u8d44>10000,\u663e\u793a\u7ea7\u522bC # \u5426\u5219\uff0c\u663e\u793aD SELECT salary , CASE WHEN salary > 20000 THEN 'A' WHEN salary > 15000 THEN 'B' WHEN salary > 10000 THEN 'C' ELSE 'D' END AS \u5de5\u8d44\u7ea7\u522b FROM employees ;","title":"2.2 \u4f7f\u75282\uff1a\u7c7b\u4f3c\u4e8e\u591a\u91cdIF\u8bed\u53e5\uff0c\u5b9e\u73b0\u533a\u95f4\u5224\u65ad"},{"location":"databases/MySQL/%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E5%92%8C%E5%87%BD%E6%95%B0/#3","text":"\u529f\u80fd\uff1a\u7528\u4f5c\u7edf\u8ba1\u4f7f\u7528\uff0c\u53c8\u79f0\u4e3a\u805a\u5408\u51fd\u6570\u6216\u7edf\u8ba1\u51fd\u6570\u6216\u7ec4\u51fd\u6570 \u5206\u7c7b\uff1asum() \u6c42\u548c\u3001avg() \u5e73\u5747\u503c\u3001max() \u6700\u5927\u503c\u3001min() \u6700\u5c0f\u503c\u3001count() \u8ba1\u6570\uff08\u975e\u7a7a\uff09 \u7279\u70b9\uff1a sum\u3001avg\u4e00\u822c\u7528\u4e8e\u5904\u7406\u6570\u503c\u578b\u6570\u636e max\u3001min\u3001count\u53ef\u4ee5\u5904\u7406\u4efb\u4f55\u7c7b\u578b\u6570\u636e \u4ee5\u4e0a\u5206\u7ec4\u51fd\u6570\u90fd\u5ffd\u7565null\u503c 1 2 3 4 5 6 7 # \u67e5\u8be2\u5458\u5de5\u4fe1\u606f\u8868\u4e2d\uff0c\u6240\u6709\u5458\u5de5\u7684\u5de5\u8d44\u548c\u3001\u5de5\u8d44\u5e73\u5747\u503c\u3001\u6700\u4f4e\u5de5\u8d44\u3001\u6700\u9ad8\u5de5\u8d44\u3001\u6709\u5de5\u8d44\u7684\u4e2a\u6570 mysql [ myemployees ] > SELECT SUM ( salary ), AVG ( salary ), MIN ( salary ), MAX ( salary ), COUNT ( salary ) FROM employees ; +-------------+-------------+-------------+-------------+---------------+ | SUM ( salary ) | AVG ( salary ) | MIN ( salary ) | MAX ( salary ) | COUNT ( salary ) | +-------------+-------------+-------------+-------------+---------------+ | 691400 . 00 | 6461 . 682243 | 2100 . 00 | 24000 . 00 | 107 | +-------------+-------------+-------------+-------------+---------------+","title":"3. \u5206\u7ec4\u51fd\u6570"},{"location":"databases/MySQL/%E5%AD%98%E5%82%A8%E8%BF%87%E7%A8%8B%E5%92%8C%E5%87%BD%E6%95%B0/#31-count","text":"1 \u7edf\u8ba1\u7ed3\u679c\u96c6\u7684\u884c\u6570\uff0c\u63a8\u8350\u4f7f\u7528count(*) 1 2 3 4 5 6 mysql [ myemployees ] > SELECT COUNT ( * ) FROM employees ; +----------+ | COUNT ( * ) | +----------+ | 107 | +----------+ 2 \u642d\u914ddistinct\u5b9e\u73b0\u53bb\u91cd\u7684\u7edf\u8ba1 1 2 3 4 5 6 mysql [ myemployees ] > SELECT COUNT ( DISTINCT department_id ) FROM employees ; +-------------------------------+ | COUNT ( DISTINCT department_id ) | +-------------------------------+ | 11 | +-------------------------------+","title":"3.1 COUNT()"},{"location":"databases/MySQL/%E5%AE%89%E8%A3%85/","text":"MySQL\u8fd0\u7ef4 \u00b6 \u4e00\u3001\u5b89\u88c5 \u00b6 \u5b89\u88c5\u73af\u5883 1 2 3 root@ubuntu:~# lsb_release -ir Distributor ID: Ubuntu Release: 18 .04 1. \u4e0b\u8f7d\u4e8c\u8fdb\u5236\u5305 \u00b6 \u5b98\u65b9\u4e0b\u8f7d\u5730\u5740\uff1a https://downloads.mysql.com/archives/community/ \u6e05\u534e\u6e90\u4e0b\u8f7d\u5730\u5740\uff1a https://mirrors.tuna.tsinghua.edu.cn/mysql/downloads/MySQL-5.7/ 1 2 3 root@ubuntu:~# wget https://cdn.mysql.com/archives/mysql-5.7/mysql-5.7.28-linux-glibc2.12-x86_64.tar.gz root@ubuntu:~# ls mysql-5.7.28-linux-glibc2.12-x86_64.tar.gz 2. \u89e3\u538b \u00b6 1 2 3 root@ubuntu:~# mkdir /app root@ubuntu:~# tar zxf mysql-5.7.28-linux-glibc2.12-x86_64.tar.gz -C /app/ root@ubuntu:~# mv /app/mysql-5.7.28-linux-glibc2.12-x86_64 /app/mysql 3. \u6dfb\u52a0\u73af\u5883\u53d8\u91cf \u00b6 1 2 root@ubuntu:~# echo \"export PATH=/app/mysql/bin: $PATH \" >> /etc/profile root@ubuntu:~# source /etc/profile 4. \u521b\u5efa mysql \u7528\u6237 \u00b6 1 2 root@ubuntu:~# groupadd mysql root@ubuntu:~# useradd -r -g mysql -s /bin/false mysql 5. \u521b\u5efa\u6570\u636e\u76ee\u5f55\u5e76\u6388\u6743 \u00b6 1 2 3 root@ubuntu:~# mkdir -p /data/mysql root@ubuntu:~# chown -R mysql:mysql /app/mysql/ root@ubuntu:~# chown -R mysql:mysql /data/mysql/ 6. \u521d\u59cb\u5316\u6570\u636e\u5e93 \u00b6 1 2 3 4 5 6 7 8 root@ubuntu:/app/mysql# mysqld --initialize --user = mysql --basedir = /app/mysql --datadir = /data/mysql 2020 -12-07T13:18:00.977363Z 0 [ Warning ] TIMESTAMP with implicit DEFAULT value is deprecated. Please use --explicit_defaults_for_timestamp server option ( see documentation for more details ) . 2020 -12-07T13:18:01.354479Z 0 [ Warning ] InnoDB: New log files created, LSN = 45790 2020 -12-07T13:18:01.440633Z 0 [ Warning ] InnoDB: Creating foreign key constraint system tables. 2020 -12-07T13:18:01.517152Z 0 [ Warning ] No existing UUID has been found, so we assume that this is the first time that this server has been started. Generating a new UUID: a1c032f1-388e-11eb-8df1-000c2925b751. 2020 -12-07T13:18:01.518560Z 0 [ Warning ] Gtid table is not ready to be used. Table 'mysql.gtid_executed' cannot be opened. 2020 -12-07T13:18:04.839325Z 0 [ Warning ] CA certificate ca.pem is self signed. 2020 -12-07T13:18:05.874593Z 1 [ Note ] A temporary password is generated for root@localhost: /D+ ( Gsb<w3hH \u751f\u6210\u7684\u6570\u636e\u76ee\u5f55\u7ed3\u6784 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 root@ubuntu:/data/mysql# tree -LF 1 . \u251c\u2500\u2500 auto.cnf \u251c\u2500\u2500 ca-key.pem \u251c\u2500\u2500 ca.pem \u251c\u2500\u2500 client-cert.pem \u251c\u2500\u2500 client-key.pem \u251c\u2500\u2500 ib_buffer_pool \u251c\u2500\u2500 ibdata1 \u251c\u2500\u2500 ib_logfile0 \u251c\u2500\u2500 ib_logfile1 \u251c\u2500\u2500 mysql/ \u251c\u2500\u2500 performance_schema/ \u251c\u2500\u2500 private_key.pem \u251c\u2500\u2500 public_key.pem \u251c\u2500\u2500 server-cert.pem \u251c\u2500\u2500 server-key.pem \u2514\u2500\u2500 sys/ 3 directories, 13 files 7. \u5b89\u88c5\u51fa\u73b0\u7684\u9519\u8bef \u00b6 1 2 3 4 root@ubuntu:/app/mysql# mysqld --initialize --user = mysql --basedir = /app/mysql --datadir = /data/mysql mysqld: error while loading shared libraries: libaio.so.1: cannot open shared object file: No such file or director # \u89e3\u51b3\u65b9\u6cd5 root@ubuntu:/app/mysql# apt install -y libaio-dev 8. \u914d\u7f6e\u6587\u4ef6 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 root@gp:~# cat /etc/my.cnf [ mysqld ] user = mysql basedir = /app/mysql # mysql\u8f6f\u4ef6\u6240\u5728\u4f4d\u7f6e datadir = /data/mysql # mysql\u6570\u636e\u5b58\u653e\u8def\u5f84 server_id = 1 # 1-65535 port = 3306 log_error = /var/log/mysql/mysql.err # \u9519\u8bef\u65e5\u5fd7\u6587\u4ef6\u4f4d\u7f6e\uff0c\u6ce8\u610f\u7ed9\u76ee\u5f55\u8d4b\u6743 socket = /tmp/mysql.sock # \u5957\u63a5\u5b57\u6587\u4ef6\u4f4d\u7f6e [ mysql ] socket = /tmp/mysql.sock prompt = mysql [ \\\\ d ] > # \u8fde\u63a5\u5230mysql\u65f6\u663e\u793a\u7684\u540d\u79f0'3306 [(none)]>' 9. \u542f\u52a8\u4e0e\u505c\u6b62 \u00b6 9.1 \u542f\u52a8 \u00b6 1 2 3 4 5 6 7 8 9 10 root@ubuntu:~# mkdir /var/log/mysql root@ubuntu:~# chown mysql:mysql /var/log/mysql root@ubuntu:~# /app/mysql/support-files/mysql.server start Starting MySQL .Logging to '/var/log/mysql/mysql.err' . * root@ubuntu:~# ps aux | grep mysql root 13521 0 .1 0 .0 4636 1820 pts/0 S 21 :22 0 :00 /bin/sh /app/mysql/bin/mysqld_safe --datadir = /data/mysql --pid-file = /data/mysql/ubuntu.pid mysql 13699 2 .4 9 .0 1324608 182216 pts/0 Sl 21 :22 0 :00 /app/mysql/bin/mysqld --basedir = /app/mysql --datadir = /data/mysql --plugin-dir = /app/mysql/lib/plugin --user = mysql --log-error = /var/log/mysql/mysql.err --pid-file = /data/mysql/ubuntu.pid --socket = /tmp/mysql.sock --port = 3306 root 13729 0 .0 0 .0 13144 1076 pts/0 S+ 21 :23 0 :00 grep --color = auto mysql 9.2 \u505c\u6b62 \u00b6 1 2 3 root@ubuntu:~# /app/mysql/support-files/mysql.server stop Shutting down MySQL .. * 10. \u4fee\u6539\u521d\u59cb\u5bc6\u7801 \u00b6 1 2 3 4 5 root@ubuntu:~# mysqladmin -u root -p password Enter password: # \u8f93\u5165\u521d\u59cb\u5316\u65f6\u65e5\u5fd7\u4e2d\u7684\u5bc6\u7801/D+(Gsb<w3hH New password: # \u8f93\u5165\u65b0\u5bc6\u7801 Confirm new password: # \u518d\u6b21\u8f93\u5165\u65b0\u5bc6\u7801 Warning: Since password will be sent to server in plain text, use ssl connection to ensure password safety. 11. MySQL5.7\u7684\u7279\u70b9 \u00b6 \u5f15\u5165\u4e86\u65b0\u7684\u5b89\u5168\u673a\u5236 \u521d\u59cb\u5316\u5b8c\u6210\u540e\u4f1a\u751f\u6210\u4e34\u65f6\u5bc6\u7801 \u5bc6\u7801\u590d\u6742\u5ea6\uff1a\u957f\u5ea6\u8d85\u8fc712\u4f4d \u5bc6\u7801\u8fc7\u671f\u65f6\u95f4180\u5929 \u4e8c\u3001\u7528\u6237\u7ba1\u7406 \u00b6 1. \u8d26\u6237\u7ba1\u7406 \u00b6 1.1 \u67e5\u770b\u5f53\u524d\u7528\u6237 \u00b6 1 2 3 4 5 6 7 8 9 3306 [( none )] >select user,authentication_string,host from mysql.user ; +---------------+-------------------------------------------+-----------+ | user | authentication_string | host | +---------------+-------------------------------------------+-----------+ | root | *81F5E21E35407D884A6CD4A731AEBFB6AF209E1B | localhost | | mysql.session | *THISISNOTAVALIDPASSWORDTHATCANBEUSEDHERE | localhost | | mysql.sys | *THISISNOTAVALIDPASSWORDTHATCANBEUSEDHERE | localhost | +---------------+-------------------------------------------+-----------+ 3 rows in set ( 0 .00 sec ) 1.2 \u7528\u6237\u767d\u540d\u5355 \u00b6 \u652f\u6301\u7684\u65b9\u5f0f\uff1a 1 2 3 4 5 6 7 8 username @ '10.0.0.%' username @ '%' username @ '10.0.0.100' username @ 'localhost' username @ 'www.example.com' username @ '10.0.0.5%' username @ '10.0.0.%' username @ '10.0.0.0/255.255.254.0' 1.3 \u7528\u6237\u521b\u5efa \u00b6 1 2 3306 [( none )] > create user yuanzhi @ '10.0.0.%' identified by '123456' ; Query OK , 0 rows affected ( 0 . 00 sec ) 1.4 \u4fee\u6539\u7528\u6237\u5bc6\u7801 \u00b6 1 2 3306 [( none )] > alter user yuanzhi @ '10.0.0.%' identified by 'yuanzhi' ; Query OK , 0 rows affected ( 0 . 00 sec ) 1.5 \u5220\u9664\u7528\u6237 \u00b6 1 2 3306 [( none )] > drop user yuanzhi @ '10.0.0.%' ; Query OK , 0 rows affected ( 0 . 00 sec ) 2. \u6743\u9650\u7ba1\u7406 \u00b6 2.1 \u6388\u6743 \u00b6 1 \u6388\u4e88\u6240\u6709\u6743\u9650 1 2 3306 [( none )] > grant all on * . * to root @ '10.0.0.%' identified by 'root' ; Query OK , 0 rows affected , 1 warning ( 0 . 01 sec ) 2 \u6388\u4e88\u6307\u5b9a\u6743\u9650 1 2 3306 [( none )] > grant select , update , insert , delete on wordpress . * to wordpress @ '10.0.0.%' identified by 'wordpress' ; Query OK , 0 rows affected , 1 warning ( 0 . 00 sec ) 2.2 \u67e5\u770b\u6743\u9650 \u00b6 1 2 3 4 5 6 7 8 3306 [( none )] >show grants for 'wordpress' @ '10.0.0.%' ; +---------------------------------------------------------------------------------+ | Grants for wordpress@10.0.0.% | +---------------------------------------------------------------------------------+ | GRANT USAGE ON *.* TO 'wordpress' @ '10.0.0.%' | | GRANT SELECT, INSERT, UPDATE, DELETE ON ` wordpress ` .* TO 'wordpress' @ '10.0.0.%' | +---------------------------------------------------------------------------------+ 2 rows in set ( 0 .00 sec ) 2.3 \u56de\u6536\u6743\u9650 \u00b6 1 2 3306 [( none )] > revoke delete on wordpress . * from wordpress @ '10.0.0.%' ; Query OK , 0 rows affected ( 0 . 00 sec ) 3. root\u5bc6\u7801\u4e22\u5931\u5904\u7406 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 # 1.\u5173\u95ed\u6570\u636e\u5e93\u670d\u52a1 root@ubuntu:~#:/app/mysql/support-files# ./mysql.server stop Shutting down MySQL .... * # 2.mysqld_safe \u542f\u52a8\uff08\u5173\u95ed\u8ba4\u8bc1\uff0c\u5173\u95edTCP/IP\u8fde\u63a5\uff09 root@ubuntu:~#:/app/mysql/support-files# mysqld_safe --skip-grant-tables --skip-networking & [ 1 ] 3991 root@ubuntu:~#:/app/mysql/support-files# 2020 -04-20T15:32:55.026585Z mysqld_safe Logging to '/data/mysql/ubuntu.err' . 2020 -04-20T15:32:55.060397Z mysqld_safe Starting mysqld daemon with databases from /data/mysql # 3.\u4fee\u6539\u5bc6\u7801 root@ubuntu:~#:/app/mysql/support-files# mysql -uroot ... 3306 [( none )] >flush privileges ; Query OK, 0 rows affected ( 0 .01 sec ) 3306 [( none )] >alter user root@ 'localhost' identified by 'root' ; Query OK, 0 rows affected ( 0 .00 sec ) \u4e09\u3001MySQL\u8fde\u63a5 \u00b6 1. socket\u8fde\u63a5 \u00b6 1 2 # \u9ed8\u8ba4\u4f7f\u7528socket\u8fde\u63a5 -S /tmp/mysql.sock\u53ef\u4ee5\u4e0d\u52a0 root@ubuntu:~# mysql -uroot -p -S /tmp/mysql.sock 2. TCP/IP\u8fde\u63a5 \u00b6 1 root@ubuntu:~# mysql -h 10 .0.0.131 -P 3306 -uroot -p 3. \u514d\u4ea4\u4e92\u6267\u884cSQL\u8bed\u53e5 \u00b6 1 root@ubuntu:~# mysql -u root -proot -e \"show databases;\" \u56db\u3001\u521d\u59cb\u5316\u914d\u7f6e \u00b6 1.\u521d\u59cb\u5316\u914d\u7f6e\u7684\u65b9\u6cd5 \u00b6 \u9884\u7f16\u8bd1 \u914d\u7f6e\u6587\u4ef6 \u547d\u4ee4\u884c\uff08\u4ec5\u9650\u4e8emysqld\u548cmysqld_safe\uff09 2. \u521d\u59cb\u5316\u914d\u7f6e\u6587\u4ef6 \u00b6 \u914d\u7f6e\u6587\u4ef6\u8bfb\u53d6\u987a\u5e8f 1 2 3 root@ubuntu:~#:~# mysqld --help --verbose | grep my.cnf /etc/my.cnf /etc/mysql/my.cnf /usr/local/mysql/etc/my.cnf ~/.my.cnf my.cnf, $MYSQL_TCP_PORT , /etc/services, built-in default \u5982\u679c--defaults-file\u6307\u5b9a\u4e86\u914d\u7f6e\u6587\u4ef6\uff0c\u4ee5\u4e0a\u6587\u4ef6\u90fd\u4e0d\u4f1a\u88ab\u8bfb\u53d6\u3002 \u914d\u7f6e\u6587\u4ef6\u683c\u5f0f\uff1a 1 2 3 4 5 [\u6807\u7b7e] \u914d\u7f6e\u9879 = \u503c # \u6807\u7b7e\u7c7b\u578b\uff1a\u670d\u52a1\u7aef\u3001\u5ba2\u6237\u7aef # \u670d\u52a1\u7aef\u6807\u7b7e\uff1a[mysqld]\u3001[mysqld_safe]\u3001[server] # \u5ba2\u6237\u7aef\u6807\u7b7e\uff1a[mysql]\u3001[mysqldump]\u3001[client] \u4e94\u3001\u5907\u4efd \u00b6 \u53c2\u8003\uff1a \u8001\u7537\u5b69MySQL\u89c6\u9891\u5b66\u4e60\u7b14\u8bb0\uff08 https://www.bilibili.com/video/BV1qJ411R7CW?p=5 \uff09","title":"\u5b89\u88c5"},{"location":"databases/MySQL/%E5%AE%89%E8%A3%85/#mysql","text":"","title":"MySQL\u8fd0\u7ef4"},{"location":"databases/MySQL/%E5%AE%89%E8%A3%85/#_1","text":"\u5b89\u88c5\u73af\u5883 1 2 3 root@ubuntu:~# lsb_release -ir Distributor ID: Ubuntu Release: 18 .04","title":"\u4e00\u3001\u5b89\u88c5"},{"location":"databases/MySQL/%E5%AE%89%E8%A3%85/#1","text":"\u5b98\u65b9\u4e0b\u8f7d\u5730\u5740\uff1a https://downloads.mysql.com/archives/community/ \u6e05\u534e\u6e90\u4e0b\u8f7d\u5730\u5740\uff1a https://mirrors.tuna.tsinghua.edu.cn/mysql/downloads/MySQL-5.7/ 1 2 3 root@ubuntu:~# wget https://cdn.mysql.com/archives/mysql-5.7/mysql-5.7.28-linux-glibc2.12-x86_64.tar.gz root@ubuntu:~# ls mysql-5.7.28-linux-glibc2.12-x86_64.tar.gz","title":"1. \u4e0b\u8f7d\u4e8c\u8fdb\u5236\u5305"},{"location":"databases/MySQL/%E5%AE%89%E8%A3%85/#2","text":"1 2 3 root@ubuntu:~# mkdir /app root@ubuntu:~# tar zxf mysql-5.7.28-linux-glibc2.12-x86_64.tar.gz -C /app/ root@ubuntu:~# mv /app/mysql-5.7.28-linux-glibc2.12-x86_64 /app/mysql","title":"2. \u89e3\u538b"},{"location":"databases/MySQL/%E5%AE%89%E8%A3%85/#3","text":"1 2 root@ubuntu:~# echo \"export PATH=/app/mysql/bin: $PATH \" >> /etc/profile root@ubuntu:~# source /etc/profile","title":"3. \u6dfb\u52a0\u73af\u5883\u53d8\u91cf"},{"location":"databases/MySQL/%E5%AE%89%E8%A3%85/#4-mysql","text":"1 2 root@ubuntu:~# groupadd mysql root@ubuntu:~# useradd -r -g mysql -s /bin/false mysql","title":"4. \u521b\u5efamysql\u7528\u6237"},{"location":"databases/MySQL/%E5%AE%89%E8%A3%85/#5","text":"1 2 3 root@ubuntu:~# mkdir -p /data/mysql root@ubuntu:~# chown -R mysql:mysql /app/mysql/ root@ubuntu:~# chown -R mysql:mysql /data/mysql/","title":"5. \u521b\u5efa\u6570\u636e\u76ee\u5f55\u5e76\u6388\u6743"},{"location":"databases/MySQL/%E5%AE%89%E8%A3%85/#6","text":"1 2 3 4 5 6 7 8 root@ubuntu:/app/mysql# mysqld --initialize --user = mysql --basedir = /app/mysql --datadir = /data/mysql 2020 -12-07T13:18:00.977363Z 0 [ Warning ] TIMESTAMP with implicit DEFAULT value is deprecated. Please use --explicit_defaults_for_timestamp server option ( see documentation for more details ) . 2020 -12-07T13:18:01.354479Z 0 [ Warning ] InnoDB: New log files created, LSN = 45790 2020 -12-07T13:18:01.440633Z 0 [ Warning ] InnoDB: Creating foreign key constraint system tables. 2020 -12-07T13:18:01.517152Z 0 [ Warning ] No existing UUID has been found, so we assume that this is the first time that this server has been started. Generating a new UUID: a1c032f1-388e-11eb-8df1-000c2925b751. 2020 -12-07T13:18:01.518560Z 0 [ Warning ] Gtid table is not ready to be used. Table 'mysql.gtid_executed' cannot be opened. 2020 -12-07T13:18:04.839325Z 0 [ Warning ] CA certificate ca.pem is self signed. 2020 -12-07T13:18:05.874593Z 1 [ Note ] A temporary password is generated for root@localhost: /D+ ( Gsb<w3hH \u751f\u6210\u7684\u6570\u636e\u76ee\u5f55\u7ed3\u6784 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 root@ubuntu:/data/mysql# tree -LF 1 . \u251c\u2500\u2500 auto.cnf \u251c\u2500\u2500 ca-key.pem \u251c\u2500\u2500 ca.pem \u251c\u2500\u2500 client-cert.pem \u251c\u2500\u2500 client-key.pem \u251c\u2500\u2500 ib_buffer_pool \u251c\u2500\u2500 ibdata1 \u251c\u2500\u2500 ib_logfile0 \u251c\u2500\u2500 ib_logfile1 \u251c\u2500\u2500 mysql/ \u251c\u2500\u2500 performance_schema/ \u251c\u2500\u2500 private_key.pem \u251c\u2500\u2500 public_key.pem \u251c\u2500\u2500 server-cert.pem \u251c\u2500\u2500 server-key.pem \u2514\u2500\u2500 sys/ 3 directories, 13 files","title":"6. \u521d\u59cb\u5316\u6570\u636e\u5e93"},{"location":"databases/MySQL/%E5%AE%89%E8%A3%85/#7","text":"1 2 3 4 root@ubuntu:/app/mysql# mysqld --initialize --user = mysql --basedir = /app/mysql --datadir = /data/mysql mysqld: error while loading shared libraries: libaio.so.1: cannot open shared object file: No such file or director # \u89e3\u51b3\u65b9\u6cd5 root@ubuntu:/app/mysql# apt install -y libaio-dev","title":"7. \u5b89\u88c5\u51fa\u73b0\u7684\u9519\u8bef"},{"location":"databases/MySQL/%E5%AE%89%E8%A3%85/#8","text":"1 2 3 4 5 6 7 8 9 10 11 12 root@gp:~# cat /etc/my.cnf [ mysqld ] user = mysql basedir = /app/mysql # mysql\u8f6f\u4ef6\u6240\u5728\u4f4d\u7f6e datadir = /data/mysql # mysql\u6570\u636e\u5b58\u653e\u8def\u5f84 server_id = 1 # 1-65535 port = 3306 log_error = /var/log/mysql/mysql.err # \u9519\u8bef\u65e5\u5fd7\u6587\u4ef6\u4f4d\u7f6e\uff0c\u6ce8\u610f\u7ed9\u76ee\u5f55\u8d4b\u6743 socket = /tmp/mysql.sock # \u5957\u63a5\u5b57\u6587\u4ef6\u4f4d\u7f6e [ mysql ] socket = /tmp/mysql.sock prompt = mysql [ \\\\ d ] > # \u8fde\u63a5\u5230mysql\u65f6\u663e\u793a\u7684\u540d\u79f0'3306 [(none)]>'","title":"8. \u914d\u7f6e\u6587\u4ef6"},{"location":"databases/MySQL/%E5%AE%89%E8%A3%85/#9","text":"","title":"9. \u542f\u52a8\u4e0e\u505c\u6b62"},{"location":"databases/MySQL/%E5%AE%89%E8%A3%85/#91","text":"1 2 3 4 5 6 7 8 9 10 root@ubuntu:~# mkdir /var/log/mysql root@ubuntu:~# chown mysql:mysql /var/log/mysql root@ubuntu:~# /app/mysql/support-files/mysql.server start Starting MySQL .Logging to '/var/log/mysql/mysql.err' . * root@ubuntu:~# ps aux | grep mysql root 13521 0 .1 0 .0 4636 1820 pts/0 S 21 :22 0 :00 /bin/sh /app/mysql/bin/mysqld_safe --datadir = /data/mysql --pid-file = /data/mysql/ubuntu.pid mysql 13699 2 .4 9 .0 1324608 182216 pts/0 Sl 21 :22 0 :00 /app/mysql/bin/mysqld --basedir = /app/mysql --datadir = /data/mysql --plugin-dir = /app/mysql/lib/plugin --user = mysql --log-error = /var/log/mysql/mysql.err --pid-file = /data/mysql/ubuntu.pid --socket = /tmp/mysql.sock --port = 3306 root 13729 0 .0 0 .0 13144 1076 pts/0 S+ 21 :23 0 :00 grep --color = auto mysql","title":"9.1 \u542f\u52a8"},{"location":"databases/MySQL/%E5%AE%89%E8%A3%85/#92","text":"1 2 3 root@ubuntu:~# /app/mysql/support-files/mysql.server stop Shutting down MySQL .. *","title":"9.2 \u505c\u6b62"},{"location":"databases/MySQL/%E5%AE%89%E8%A3%85/#10","text":"1 2 3 4 5 root@ubuntu:~# mysqladmin -u root -p password Enter password: # \u8f93\u5165\u521d\u59cb\u5316\u65f6\u65e5\u5fd7\u4e2d\u7684\u5bc6\u7801/D+(Gsb<w3hH New password: # \u8f93\u5165\u65b0\u5bc6\u7801 Confirm new password: # \u518d\u6b21\u8f93\u5165\u65b0\u5bc6\u7801 Warning: Since password will be sent to server in plain text, use ssl connection to ensure password safety.","title":"10. \u4fee\u6539\u521d\u59cb\u5bc6\u7801"},{"location":"databases/MySQL/%E5%AE%89%E8%A3%85/#11-mysql57","text":"\u5f15\u5165\u4e86\u65b0\u7684\u5b89\u5168\u673a\u5236 \u521d\u59cb\u5316\u5b8c\u6210\u540e\u4f1a\u751f\u6210\u4e34\u65f6\u5bc6\u7801 \u5bc6\u7801\u590d\u6742\u5ea6\uff1a\u957f\u5ea6\u8d85\u8fc712\u4f4d \u5bc6\u7801\u8fc7\u671f\u65f6\u95f4180\u5929","title":"11. MySQL5.7\u7684\u7279\u70b9"},{"location":"databases/MySQL/%E5%AE%89%E8%A3%85/#_2","text":"","title":"\u4e8c\u3001\u7528\u6237\u7ba1\u7406"},{"location":"databases/MySQL/%E5%AE%89%E8%A3%85/#1_1","text":"","title":"1. \u8d26\u6237\u7ba1\u7406"},{"location":"databases/MySQL/%E5%AE%89%E8%A3%85/#11","text":"1 2 3 4 5 6 7 8 9 3306 [( none )] >select user,authentication_string,host from mysql.user ; +---------------+-------------------------------------------+-----------+ | user | authentication_string | host | +---------------+-------------------------------------------+-----------+ | root | *81F5E21E35407D884A6CD4A731AEBFB6AF209E1B | localhost | | mysql.session | *THISISNOTAVALIDPASSWORDTHATCANBEUSEDHERE | localhost | | mysql.sys | *THISISNOTAVALIDPASSWORDTHATCANBEUSEDHERE | localhost | +---------------+-------------------------------------------+-----------+ 3 rows in set ( 0 .00 sec )","title":"1.1 \u67e5\u770b\u5f53\u524d\u7528\u6237"},{"location":"databases/MySQL/%E5%AE%89%E8%A3%85/#12","text":"\u652f\u6301\u7684\u65b9\u5f0f\uff1a 1 2 3 4 5 6 7 8 username @ '10.0.0.%' username @ '%' username @ '10.0.0.100' username @ 'localhost' username @ 'www.example.com' username @ '10.0.0.5%' username @ '10.0.0.%' username @ '10.0.0.0/255.255.254.0'","title":"1.2 \u7528\u6237\u767d\u540d\u5355"},{"location":"databases/MySQL/%E5%AE%89%E8%A3%85/#13","text":"1 2 3306 [( none )] > create user yuanzhi @ '10.0.0.%' identified by '123456' ; Query OK , 0 rows affected ( 0 . 00 sec )","title":"1.3 \u7528\u6237\u521b\u5efa"},{"location":"databases/MySQL/%E5%AE%89%E8%A3%85/#14","text":"1 2 3306 [( none )] > alter user yuanzhi @ '10.0.0.%' identified by 'yuanzhi' ; Query OK , 0 rows affected ( 0 . 00 sec )","title":"1.4 \u4fee\u6539\u7528\u6237\u5bc6\u7801"},{"location":"databases/MySQL/%E5%AE%89%E8%A3%85/#15","text":"1 2 3306 [( none )] > drop user yuanzhi @ '10.0.0.%' ; Query OK , 0 rows affected ( 0 . 00 sec )","title":"1.5 \u5220\u9664\u7528\u6237"},{"location":"databases/MySQL/%E5%AE%89%E8%A3%85/#2_1","text":"","title":"2. \u6743\u9650\u7ba1\u7406"},{"location":"databases/MySQL/%E5%AE%89%E8%A3%85/#21","text":"1 \u6388\u4e88\u6240\u6709\u6743\u9650 1 2 3306 [( none )] > grant all on * . * to root @ '10.0.0.%' identified by 'root' ; Query OK , 0 rows affected , 1 warning ( 0 . 01 sec ) 2 \u6388\u4e88\u6307\u5b9a\u6743\u9650 1 2 3306 [( none )] > grant select , update , insert , delete on wordpress . * to wordpress @ '10.0.0.%' identified by 'wordpress' ; Query OK , 0 rows affected , 1 warning ( 0 . 00 sec )","title":"2.1 \u6388\u6743"},{"location":"databases/MySQL/%E5%AE%89%E8%A3%85/#22","text":"1 2 3 4 5 6 7 8 3306 [( none )] >show grants for 'wordpress' @ '10.0.0.%' ; +---------------------------------------------------------------------------------+ | Grants for wordpress@10.0.0.% | +---------------------------------------------------------------------------------+ | GRANT USAGE ON *.* TO 'wordpress' @ '10.0.0.%' | | GRANT SELECT, INSERT, UPDATE, DELETE ON ` wordpress ` .* TO 'wordpress' @ '10.0.0.%' | +---------------------------------------------------------------------------------+ 2 rows in set ( 0 .00 sec )","title":"2.2 \u67e5\u770b\u6743\u9650"},{"location":"databases/MySQL/%E5%AE%89%E8%A3%85/#23","text":"1 2 3306 [( none )] > revoke delete on wordpress . * from wordpress @ '10.0.0.%' ; Query OK , 0 rows affected ( 0 . 00 sec )","title":"2.3 \u56de\u6536\u6743\u9650"},{"location":"databases/MySQL/%E5%AE%89%E8%A3%85/#3-root","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 # 1.\u5173\u95ed\u6570\u636e\u5e93\u670d\u52a1 root@ubuntu:~#:/app/mysql/support-files# ./mysql.server stop Shutting down MySQL .... * # 2.mysqld_safe \u542f\u52a8\uff08\u5173\u95ed\u8ba4\u8bc1\uff0c\u5173\u95edTCP/IP\u8fde\u63a5\uff09 root@ubuntu:~#:/app/mysql/support-files# mysqld_safe --skip-grant-tables --skip-networking & [ 1 ] 3991 root@ubuntu:~#:/app/mysql/support-files# 2020 -04-20T15:32:55.026585Z mysqld_safe Logging to '/data/mysql/ubuntu.err' . 2020 -04-20T15:32:55.060397Z mysqld_safe Starting mysqld daemon with databases from /data/mysql # 3.\u4fee\u6539\u5bc6\u7801 root@ubuntu:~#:/app/mysql/support-files# mysql -uroot ... 3306 [( none )] >flush privileges ; Query OK, 0 rows affected ( 0 .01 sec ) 3306 [( none )] >alter user root@ 'localhost' identified by 'root' ; Query OK, 0 rows affected ( 0 .00 sec )","title":"3. root\u5bc6\u7801\u4e22\u5931\u5904\u7406"},{"location":"databases/MySQL/%E5%AE%89%E8%A3%85/#mysql_1","text":"","title":"\u4e09\u3001MySQL\u8fde\u63a5"},{"location":"databases/MySQL/%E5%AE%89%E8%A3%85/#1-socket","text":"1 2 # \u9ed8\u8ba4\u4f7f\u7528socket\u8fde\u63a5 -S /tmp/mysql.sock\u53ef\u4ee5\u4e0d\u52a0 root@ubuntu:~# mysql -uroot -p -S /tmp/mysql.sock","title":"1. socket\u8fde\u63a5"},{"location":"databases/MySQL/%E5%AE%89%E8%A3%85/#2-tcpip","text":"1 root@ubuntu:~# mysql -h 10 .0.0.131 -P 3306 -uroot -p","title":"2. TCP/IP\u8fde\u63a5"},{"location":"databases/MySQL/%E5%AE%89%E8%A3%85/#3-sql","text":"1 root@ubuntu:~# mysql -u root -proot -e \"show databases;\"","title":"3. \u514d\u4ea4\u4e92\u6267\u884cSQL\u8bed\u53e5"},{"location":"databases/MySQL/%E5%AE%89%E8%A3%85/#_3","text":"","title":"\u56db\u3001\u521d\u59cb\u5316\u914d\u7f6e"},{"location":"databases/MySQL/%E5%AE%89%E8%A3%85/#1_2","text":"\u9884\u7f16\u8bd1 \u914d\u7f6e\u6587\u4ef6 \u547d\u4ee4\u884c\uff08\u4ec5\u9650\u4e8emysqld\u548cmysqld_safe\uff09","title":"1.\u521d\u59cb\u5316\u914d\u7f6e\u7684\u65b9\u6cd5"},{"location":"databases/MySQL/%E5%AE%89%E8%A3%85/#2_2","text":"\u914d\u7f6e\u6587\u4ef6\u8bfb\u53d6\u987a\u5e8f 1 2 3 root@ubuntu:~#:~# mysqld --help --verbose | grep my.cnf /etc/my.cnf /etc/mysql/my.cnf /usr/local/mysql/etc/my.cnf ~/.my.cnf my.cnf, $MYSQL_TCP_PORT , /etc/services, built-in default \u5982\u679c--defaults-file\u6307\u5b9a\u4e86\u914d\u7f6e\u6587\u4ef6\uff0c\u4ee5\u4e0a\u6587\u4ef6\u90fd\u4e0d\u4f1a\u88ab\u8bfb\u53d6\u3002 \u914d\u7f6e\u6587\u4ef6\u683c\u5f0f\uff1a 1 2 3 4 5 [\u6807\u7b7e] \u914d\u7f6e\u9879 = \u503c # \u6807\u7b7e\u7c7b\u578b\uff1a\u670d\u52a1\u7aef\u3001\u5ba2\u6237\u7aef # \u670d\u52a1\u7aef\u6807\u7b7e\uff1a[mysqld]\u3001[mysqld_safe]\u3001[server] # \u5ba2\u6237\u7aef\u6807\u7b7e\uff1a[mysql]\u3001[mysqldump]\u3001[client]","title":"2. \u521d\u59cb\u5316\u914d\u7f6e\u6587\u4ef6"},{"location":"databases/MySQL/%E5%AE%89%E8%A3%85/#_4","text":"\u53c2\u8003\uff1a \u8001\u7537\u5b69MySQL\u89c6\u9891\u5b66\u4e60\u7b14\u8bb0\uff08 https://www.bilibili.com/video/BV1qJ411R7CW?p=5 \uff09","title":"\u4e94\u3001\u5907\u4efd"},{"location":"databases/MySQL/%E6%89%A7%E8%A1%8C%E8%AE%A1%E5%88%92/","text":"\u516b\u3001\u6267\u884c\u8ba1\u5212 \u00b6 1. \u83b7\u53d6\u6267\u884c\u8ba1\u5212 \u00b6 1 2 3 4 5 6 7 mysql > DESC SELECT name , population FROM city WHERE name = 'ChongQing' ; +----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+-------------+ | id | select_type | table | partitions | type | possible_keys | key | key_len | ref | rows | filtered | Extra | +----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+-------------+ | 1 | SIMPLE | city | NULL | ALL | NULL | NULL | NULL | NULL | 4046 | 10 . 00 | Using where | +----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+-------------+ 1 row in set , 1 warning ( 0 . 00 sec ) 2. \u5173\u952e\u5b57\u6bb5 \u00b6 2.1 table\u67e5\u8be2\u7684\u8868 \u00b6 2.2 type \u67e5\u8be2\u7684\u7c7b\u578b:\u5168\u8868\uff0c\u7d22\u5f15 \u00b6 type\u5b57\u6bb5\u53ef\u80fd\u51fa\u73b0\u7684\u503c 2.2.1 ALL \u5168\u8868\u626b\u63cf\uff0c\u4e0d\u8d70\u7d22\u5f15 \u00b6 \u4f8b1\uff1a\u67e5\u8be2\u6761\u4ef6\u5217\u6ca1\u6709\u7d22\u5f15 1 SELECT name , population FROM city WHERE name = 'ChongQing' ; \u4f8b2\uff1a\u67e5\u8be2\u6761\u4ef6\u51fa\u73b0\u4ee5\u4e0b\u8bed\u53e5\uff08\u8f85\u52a9\u7d22\u5f15\uff09 1 2 3 4 5 6 7 8 9 10 DESC SELECT * FROM city WHERE countrycode <> 'CHN' ; DESC SELECT * FROM city WHERE countrycode NOT IN ( 'CHN' , 'USA' ); # \u5bf9\u4e8e\u805a\u96c6\u7d22\u5f15\uff0c\u4f7f\u7528\u4ee5\u4e0a\u8bed\u53e5\u4f9d\u7136\u4f1a\u8d70\u7d22\u5f15 DESC SELECT * FROM city WHERE id <> 10 ; +----+-------------+-------+------------+-------+---------------+---------+---------+------+------+----------+-------------+ | id | select_type | table | partitions | type | possible_keys | key | key_len | ref | rows | filtered | Extra | +----+-------------+-------+------------+-------+---------------+---------+---------+------+------+----------+-------------+ | 1 | SIMPLE | city | NULL | range | PRIMARY | PRIMARY | 4 | NULL | 2032 | 100 . 00 | Using where | +----+-------------+-------+------------+-------+---------------+---------+---------+------+------+----------+-------------+ 1 row in set , 1 warning ( 0 . 00 sec ) 2.2.2 INDEX \u5168\u7d22\u5f15 \u00b6 1 2 3 4 5 6 7 8 9 10 # 1. \u67e5\u8be2\u9700\u8981\u83b7\u53d6\u6574\u4e2a\u7d22\u5f15\u6811\u4e2d\u7684\u503c\u65f6 mysql > DESC SELECT countrycode FROM city ; +----+-------------+-------+------------+-------+---------------+-------------+---------+------+------+----------+-------------+ | id | select_type | table | partitions | type | possible_keys | key | key_len | ref | rows | filtered | Extra | +----+-------------+-------+------------+-------+---------------+-------------+---------+------+------+----------+-------------+ | 1 | SIMPLE | city | NULL | index | NULL | CountryCode | 12 | NULL | 4046 | 100 . 00 | Using index | +----+-------------+-------+------------+-------+---------------+-------------+---------+------+------+----------+-------------+ 1 row in set , 1 warning ( 0 . 00 sec ) # 2.\u8054\u5408\u7d22\u5f15\u4e2d\uff0c\u4efb\u4f55\u4e00\u4e2a\u975e\u6700\u5de6\u5217\u4f5c\u4e3a\u67e5\u8be2\u6761\u4ef6\u65f6 SELECT * FROM t1 WHERE b 2.2.3 RANGE \u7d22\u5f15\u8303\u56f4\u626b\u63cf \u00b6 \u8f85\u52a9\u7d22\u5f15\uff1a>\u3001 >=\u3001 <\u3001 <= \u3001LIKE\u3001 IN\u3001 OR \u4e3b\u952e\uff1a<>\u3001 NOT IN \u4f8b\uff1a 1 2 3 4 5 6 7 mysql > DESC SELECT * FROM city WHERE id < 5 ; +----+-------------+-------+------------+-------+---------------+---------+---------+------+------+----------+-------------+ | id | select_type | table | partitions | type | possible_keys | key | key_len | ref | rows | filtered | Extra | +----+-------------+-------+------------+-------+---------------+---------+---------+------+------+----------+-------------+ | 1 | SIMPLE | city | NULL | range | PRIMARY | PRIMARY | 4 | NULL | 4 | 100 . 00 | Using where | +----+-------------+-------+------------+-------+---------------+---------+---------+------+------+----------+-------------+ 1 row in set , 1 warning ( 0 . 00 sec ) \u6ce8\u610f\uff1a 2.2.4 ref \u975e\u552f\u4e00\u6027\u7d22\u5f15\uff0c\u7b49\u503c\u67e5\u8be2 \u00b6 1 2 3 4 5 6 7 8 9 10 11 mysql > ALTER TABLE city ADD INDEX idx_c_p ( countrycode , population ); Query OK , 0 rows affected ( 0 . 19 sec ) Records : 0 Duplicates : 0 Warnings : 0 mysql > DESC SELECT * FROM city WHERE countrycode = 'CHN' ; +----+-------------+-------+------------+------+---------------------+-------------+---------+-------+------+----------+-------+ | id | select_type | table | partitions | type | possible_keys | key | key_len | ref | rows | filtered | Extra | +----+-------------+-------+------------+------+---------------------+-------------+---------+-------+------+----------+-------+ | 1 | SIMPLE | city | NULL | ref | CountryCode , idx_c_p | CountryCode | 12 | const | 363 | 100 . 00 | NULL | +----+-------------+-------+------------+------+---------------------+-------------+---------+-------+------+----------+-------+ 1 row in set , 1 warning ( 0 . 00 sec ) 2.2.5 eq_ref \u5728\u591a\u8868\u8fde\u63a5\u65f6\uff0c\u8fde\u63a5\u6761\u4ef6\u4f7f\u7528\u4e86\u552f\u4e00\u7d22\u5f15 \u00b6 1 2 3 4 5 6 7 8 9 10 11 mysql > DESC SELECT city . name , country . name , country . SurfaceArea -> FROM city JOIN country -> ON city . countrycode = country . code -> WHERE city . Population < 100 ; +----+-------------+---------+------------+--------+---------------------+---------+---------+------------------------+------+----------+-------------+ | id | select_type | table | partitions | type | possible_keys | key | key_len | ref | rows | filtered | Extra | +----+-------------+---------+------------+--------+---------------------+---------+---------+------------------------+------+----------+-------------+ | 1 | SIMPLE | city | NULL | ALL | CountryCode , idx_c_p | NULL | NULL | NULL | 4046 | 33 . 33 | Using where | | 1 | SIMPLE | country | NULL | eq_ref | PRIMARY | PRIMARY | 12 | world . city . CountryCode | 1 | 100 . 00 | NULL | +----+-------------+---------+------------+--------+---------------------+---------+---------+------------------------+------+----------+-------------+ 2 rows in set , 1 warning ( 0 . 00 sec ) 2.2.6 system,const \u552f\u4e00\u7d22\u5f15\u7684\u7b49\u503c\u67e5\u8be2 \u00b6 1 2 3 4 5 6 7 mysql > DESC SELECT * FROM city WHERE id = 5 ; +----+-------------+-------+------------+-------+---------------+---------+---------+-------+------+----------+-------+ | id | select_type | table | partitions | type | possible_keys | key | key_len | ref | rows | filtered | Extra | +----+-------------+-------+------------+-------+---------------+---------+---------+-------+------+----------+-------+ | 1 | SIMPLE | city | NULL | const | PRIMARY | PRIMARY | 4 | const | 1 | 100 . 00 | NULL | +----+-------------+-------+------------+-------+---------------+---------+---------+-------+------+----------+-------+ 1 row in set , 1 warning ( 0 . 01 sec ) 2.3 possible_keys \u53ef\u80fd\u4f1a\u7528\u5230\u7684\u7d22\u5f15 \u00b6 2.4 key \u4f7f\u7528\u5230\u7684\u7d22\u5f15\uff0c\u5224\u65ad\u7d22\u5f15\u662f\u5426\u5408\u7406 \u00b6 2.5 extra \u989d\u5916\u4fe1\u606f \u00b6 2.5.1 filesort \u6587\u4ef6\u6392\u5e8f \u00b6 \u8bf4\u660e\u5728SQL\u8bed\u53e5\u4e2d\u5b58\u5728\u6392\u5e8f 1 2 3 4 5 6 7 mysql > DESC SELECT * FROM city WHERE countrycode = 'CHN' ORDER BY population ; +----+-------------+-------+------------+------+---------------+-------------+---------+-------+------+----------+---------------------------------------+ | id | select_type | table | partitions | type | possible_keys | key | key_len | ref | rows | filtered | Extra | +----+-------------+-------+------------+------+---------------+-------------+---------+-------+------+----------+---------------------------------------+ | 1 | SIMPLE | city | NULL | ref | CountryCode | CountryCode | 12 | const | 363 | 100 . 00 | Using index condition ; Using filesort | +----+-------------+-------+------------+------+---------------+-------------+---------+-------+------+----------+---------------------------------------+ 1 row in set , 1 warning ( 0 . 00 sec ) 1 2 3 4 5 6 7 8 9 10 11 mysql > ALTER TABLE city ADD INDEX idx_c_p ( countrycode , population ); Query OK , 0 rows affected ( 0 . 12 sec ) Records : 0 Duplicates : 0 Warnings : 0 mysql > DESC SELECT * FROM city WHERE countrycode = 'CHN' ORDER BY population ; +----+-------------+-------+------------+------+---------------------+---------+---------+-------+------+----------+-----------------------+ | id | select_type | table | partitions | type | possible_keys | key | key_len | ref | rows | filtered | Extra | +----+-------------+-------+------------+------+---------------------+---------+---------+-------+------+----------+-----------------------+ | 1 | SIMPLE | city | NULL | ref | CountryCode , idx_c_p | idx_c_p | 12 | const | 363 | 100 . 00 | Using index condition | +----+-------------+-------+------------+------+---------------------+---------+---------+-------+------+----------+-----------------------+ 1 row in set , 1 warning ( 0 . 00 sec ) \u5f53\u770b\u5230\u6267\u884c\u8ba1\u5212extra\u4f4d\u7f6e\u51fa\u73b0filesort\uff0c\u8bf4\u660e\u6709\u6587\u4ef6\u6392\u5e8f\u51fa\u73b0 \u89c2\u5bdf\u9700\u8981\u6392\u5e8f\uff08ORDER BY\uff0cGROUP BY\uff0cDISTINCT\uff09\u7684\u6761\u4ef6\u6709\u6ca1\u6709\u7d22\u5f15 \u6839\u636e\u5b50\u53e5\u7684\u6307\u5411\u987a\u5e8f\u53bb\u521b\u5efa\u8054\u5408\u7d22\u5f15","title":"\u6267\u884c\u8ba1\u5212"},{"location":"databases/MySQL/%E6%89%A7%E8%A1%8C%E8%AE%A1%E5%88%92/#_1","text":"","title":"\u516b\u3001\u6267\u884c\u8ba1\u5212"},{"location":"databases/MySQL/%E6%89%A7%E8%A1%8C%E8%AE%A1%E5%88%92/#1","text":"1 2 3 4 5 6 7 mysql > DESC SELECT name , population FROM city WHERE name = 'ChongQing' ; +----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+-------------+ | id | select_type | table | partitions | type | possible_keys | key | key_len | ref | rows | filtered | Extra | +----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+-------------+ | 1 | SIMPLE | city | NULL | ALL | NULL | NULL | NULL | NULL | 4046 | 10 . 00 | Using where | +----+-------------+-------+------------+------+---------------+------+---------+------+------+----------+-------------+ 1 row in set , 1 warning ( 0 . 00 sec )","title":"1. \u83b7\u53d6\u6267\u884c\u8ba1\u5212"},{"location":"databases/MySQL/%E6%89%A7%E8%A1%8C%E8%AE%A1%E5%88%92/#2","text":"","title":"2. \u5173\u952e\u5b57\u6bb5"},{"location":"databases/MySQL/%E6%89%A7%E8%A1%8C%E8%AE%A1%E5%88%92/#21-table","text":"","title":"2.1 table\u67e5\u8be2\u7684\u8868"},{"location":"databases/MySQL/%E6%89%A7%E8%A1%8C%E8%AE%A1%E5%88%92/#22-type","text":"type\u5b57\u6bb5\u53ef\u80fd\u51fa\u73b0\u7684\u503c","title":"2.2  type \u67e5\u8be2\u7684\u7c7b\u578b:\u5168\u8868\uff0c\u7d22\u5f15"},{"location":"databases/MySQL/%E6%89%A7%E8%A1%8C%E8%AE%A1%E5%88%92/#221-all","text":"\u4f8b1\uff1a\u67e5\u8be2\u6761\u4ef6\u5217\u6ca1\u6709\u7d22\u5f15 1 SELECT name , population FROM city WHERE name = 'ChongQing' ; \u4f8b2\uff1a\u67e5\u8be2\u6761\u4ef6\u51fa\u73b0\u4ee5\u4e0b\u8bed\u53e5\uff08\u8f85\u52a9\u7d22\u5f15\uff09 1 2 3 4 5 6 7 8 9 10 DESC SELECT * FROM city WHERE countrycode <> 'CHN' ; DESC SELECT * FROM city WHERE countrycode NOT IN ( 'CHN' , 'USA' ); # \u5bf9\u4e8e\u805a\u96c6\u7d22\u5f15\uff0c\u4f7f\u7528\u4ee5\u4e0a\u8bed\u53e5\u4f9d\u7136\u4f1a\u8d70\u7d22\u5f15 DESC SELECT * FROM city WHERE id <> 10 ; +----+-------------+-------+------------+-------+---------------+---------+---------+------+------+----------+-------------+ | id | select_type | table | partitions | type | possible_keys | key | key_len | ref | rows | filtered | Extra | +----+-------------+-------+------------+-------+---------------+---------+---------+------+------+----------+-------------+ | 1 | SIMPLE | city | NULL | range | PRIMARY | PRIMARY | 4 | NULL | 2032 | 100 . 00 | Using where | +----+-------------+-------+------------+-------+---------------+---------+---------+------+------+----------+-------------+ 1 row in set , 1 warning ( 0 . 00 sec )","title":"2.2.1 ALL \u5168\u8868\u626b\u63cf\uff0c\u4e0d\u8d70\u7d22\u5f15"},{"location":"databases/MySQL/%E6%89%A7%E8%A1%8C%E8%AE%A1%E5%88%92/#222-index","text":"1 2 3 4 5 6 7 8 9 10 # 1. \u67e5\u8be2\u9700\u8981\u83b7\u53d6\u6574\u4e2a\u7d22\u5f15\u6811\u4e2d\u7684\u503c\u65f6 mysql > DESC SELECT countrycode FROM city ; +----+-------------+-------+------------+-------+---------------+-------------+---------+------+------+----------+-------------+ | id | select_type | table | partitions | type | possible_keys | key | key_len | ref | rows | filtered | Extra | +----+-------------+-------+------------+-------+---------------+-------------+---------+------+------+----------+-------------+ | 1 | SIMPLE | city | NULL | index | NULL | CountryCode | 12 | NULL | 4046 | 100 . 00 | Using index | +----+-------------+-------+------------+-------+---------------+-------------+---------+------+------+----------+-------------+ 1 row in set , 1 warning ( 0 . 00 sec ) # 2.\u8054\u5408\u7d22\u5f15\u4e2d\uff0c\u4efb\u4f55\u4e00\u4e2a\u975e\u6700\u5de6\u5217\u4f5c\u4e3a\u67e5\u8be2\u6761\u4ef6\u65f6 SELECT * FROM t1 WHERE b","title":"2.2.2 INDEX \u5168\u7d22\u5f15"},{"location":"databases/MySQL/%E6%89%A7%E8%A1%8C%E8%AE%A1%E5%88%92/#223-range","text":"\u8f85\u52a9\u7d22\u5f15\uff1a>\u3001 >=\u3001 <\u3001 <= \u3001LIKE\u3001 IN\u3001 OR \u4e3b\u952e\uff1a<>\u3001 NOT IN \u4f8b\uff1a 1 2 3 4 5 6 7 mysql > DESC SELECT * FROM city WHERE id < 5 ; +----+-------------+-------+------------+-------+---------------+---------+---------+------+------+----------+-------------+ | id | select_type | table | partitions | type | possible_keys | key | key_len | ref | rows | filtered | Extra | +----+-------------+-------+------------+-------+---------------+---------+---------+------+------+----------+-------------+ | 1 | SIMPLE | city | NULL | range | PRIMARY | PRIMARY | 4 | NULL | 4 | 100 . 00 | Using where | +----+-------------+-------+------------+-------+---------------+---------+---------+------+------+----------+-------------+ 1 row in set , 1 warning ( 0 . 00 sec ) \u6ce8\u610f\uff1a","title":"2.2.3 RANGE \u7d22\u5f15\u8303\u56f4\u626b\u63cf"},{"location":"databases/MySQL/%E6%89%A7%E8%A1%8C%E8%AE%A1%E5%88%92/#224-ref","text":"1 2 3 4 5 6 7 8 9 10 11 mysql > ALTER TABLE city ADD INDEX idx_c_p ( countrycode , population ); Query OK , 0 rows affected ( 0 . 19 sec ) Records : 0 Duplicates : 0 Warnings : 0 mysql > DESC SELECT * FROM city WHERE countrycode = 'CHN' ; +----+-------------+-------+------------+------+---------------------+-------------+---------+-------+------+----------+-------+ | id | select_type | table | partitions | type | possible_keys | key | key_len | ref | rows | filtered | Extra | +----+-------------+-------+------------+------+---------------------+-------------+---------+-------+------+----------+-------+ | 1 | SIMPLE | city | NULL | ref | CountryCode , idx_c_p | CountryCode | 12 | const | 363 | 100 . 00 | NULL | +----+-------------+-------+------------+------+---------------------+-------------+---------+-------+------+----------+-------+ 1 row in set , 1 warning ( 0 . 00 sec )","title":"2.2.4 ref \u975e\u552f\u4e00\u6027\u7d22\u5f15\uff0c\u7b49\u503c\u67e5\u8be2"},{"location":"databases/MySQL/%E6%89%A7%E8%A1%8C%E8%AE%A1%E5%88%92/#225-eq_ref","text":"1 2 3 4 5 6 7 8 9 10 11 mysql > DESC SELECT city . name , country . name , country . SurfaceArea -> FROM city JOIN country -> ON city . countrycode = country . code -> WHERE city . Population < 100 ; +----+-------------+---------+------------+--------+---------------------+---------+---------+------------------------+------+----------+-------------+ | id | select_type | table | partitions | type | possible_keys | key | key_len | ref | rows | filtered | Extra | +----+-------------+---------+------------+--------+---------------------+---------+---------+------------------------+------+----------+-------------+ | 1 | SIMPLE | city | NULL | ALL | CountryCode , idx_c_p | NULL | NULL | NULL | 4046 | 33 . 33 | Using where | | 1 | SIMPLE | country | NULL | eq_ref | PRIMARY | PRIMARY | 12 | world . city . CountryCode | 1 | 100 . 00 | NULL | +----+-------------+---------+------------+--------+---------------------+---------+---------+------------------------+------+----------+-------------+ 2 rows in set , 1 warning ( 0 . 00 sec )","title":"2.2.5 eq_ref \u5728\u591a\u8868\u8fde\u63a5\u65f6\uff0c\u8fde\u63a5\u6761\u4ef6\u4f7f\u7528\u4e86\u552f\u4e00\u7d22\u5f15"},{"location":"databases/MySQL/%E6%89%A7%E8%A1%8C%E8%AE%A1%E5%88%92/#226-systemconst","text":"1 2 3 4 5 6 7 mysql > DESC SELECT * FROM city WHERE id = 5 ; +----+-------------+-------+------------+-------+---------------+---------+---------+-------+------+----------+-------+ | id | select_type | table | partitions | type | possible_keys | key | key_len | ref | rows | filtered | Extra | +----+-------------+-------+------------+-------+---------------+---------+---------+-------+------+----------+-------+ | 1 | SIMPLE | city | NULL | const | PRIMARY | PRIMARY | 4 | const | 1 | 100 . 00 | NULL | +----+-------------+-------+------------+-------+---------------+---------+---------+-------+------+----------+-------+ 1 row in set , 1 warning ( 0 . 01 sec )","title":"2.2.6 system,const \u552f\u4e00\u7d22\u5f15\u7684\u7b49\u503c\u67e5\u8be2"},{"location":"databases/MySQL/%E6%89%A7%E8%A1%8C%E8%AE%A1%E5%88%92/#23-possible_keys","text":"","title":"2.3 possible_keys \u53ef\u80fd\u4f1a\u7528\u5230\u7684\u7d22\u5f15"},{"location":"databases/MySQL/%E6%89%A7%E8%A1%8C%E8%AE%A1%E5%88%92/#24-key","text":"","title":"2.4 key \u4f7f\u7528\u5230\u7684\u7d22\u5f15\uff0c\u5224\u65ad\u7d22\u5f15\u662f\u5426\u5408\u7406"},{"location":"databases/MySQL/%E6%89%A7%E8%A1%8C%E8%AE%A1%E5%88%92/#25-extra","text":"","title":"2.5 extra \u989d\u5916\u4fe1\u606f"},{"location":"databases/MySQL/%E6%89%A7%E8%A1%8C%E8%AE%A1%E5%88%92/#251-filesort","text":"\u8bf4\u660e\u5728SQL\u8bed\u53e5\u4e2d\u5b58\u5728\u6392\u5e8f 1 2 3 4 5 6 7 mysql > DESC SELECT * FROM city WHERE countrycode = 'CHN' ORDER BY population ; +----+-------------+-------+------------+------+---------------+-------------+---------+-------+------+----------+---------------------------------------+ | id | select_type | table | partitions | type | possible_keys | key | key_len | ref | rows | filtered | Extra | +----+-------------+-------+------------+------+---------------+-------------+---------+-------+------+----------+---------------------------------------+ | 1 | SIMPLE | city | NULL | ref | CountryCode | CountryCode | 12 | const | 363 | 100 . 00 | Using index condition ; Using filesort | +----+-------------+-------+------------+------+---------------+-------------+---------+-------+------+----------+---------------------------------------+ 1 row in set , 1 warning ( 0 . 00 sec ) 1 2 3 4 5 6 7 8 9 10 11 mysql > ALTER TABLE city ADD INDEX idx_c_p ( countrycode , population ); Query OK , 0 rows affected ( 0 . 12 sec ) Records : 0 Duplicates : 0 Warnings : 0 mysql > DESC SELECT * FROM city WHERE countrycode = 'CHN' ORDER BY population ; +----+-------------+-------+------------+------+---------------------+---------+---------+-------+------+----------+-----------------------+ | id | select_type | table | partitions | type | possible_keys | key | key_len | ref | rows | filtered | Extra | +----+-------------+-------+------------+------+---------------------+---------+---------+-------+------+----------+-----------------------+ | 1 | SIMPLE | city | NULL | ref | CountryCode , idx_c_p | idx_c_p | 12 | const | 363 | 100 . 00 | Using index condition | +----+-------------+-------+------------+------+---------------------+---------+---------+-------+------+----------+-----------------------+ 1 row in set , 1 warning ( 0 . 00 sec ) \u5f53\u770b\u5230\u6267\u884c\u8ba1\u5212extra\u4f4d\u7f6e\u51fa\u73b0filesort\uff0c\u8bf4\u660e\u6709\u6587\u4ef6\u6392\u5e8f\u51fa\u73b0 \u89c2\u5bdf\u9700\u8981\u6392\u5e8f\uff08ORDER BY\uff0cGROUP BY\uff0cDISTINCT\uff09\u7684\u6761\u4ef6\u6709\u6ca1\u6709\u7d22\u5f15 \u6839\u636e\u5b50\u53e5\u7684\u6307\u5411\u987a\u5e8f\u53bb\u521b\u5efa\u8054\u5408\u7d22\u5f15","title":"2.5.1 filesort \u6587\u4ef6\u6392\u5e8f"},{"location":"databases/MySQL/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%92%8C%E8%BF%90%E7%AE%97%E7%AC%A6/","text":"\u6570\u636e\u7c7b\u578b\u548c\u8fd0\u7b97\u7b26 \u00b6 \u4e00\u3001\u6570\u636e\u7c7b\u578b \u00b6 1. \u6574\u6570\u7c7b\u578b \u00b6 mysql\u4e2d\u6574\u6570\u578b\u6570\u636e\u7c7b\u578b \u7c7b\u578b\u540d\u79f0 \u6709\u7b26\u53f7 \u65e0\u7b26\u53f7 TINYINT -128 ~ 127 0 ~ 255 SMALLINT -32768 ~ 32767 0 ~ 65535 MEDIUMINT -8388608 ~ 8388607 0 ~ 16777215 INT -2147483648 ~ 2147483647 0 ~ 4294967295 BIGINT -9223372036854775808 ~ 9223372036854775807. 0 ~ 18446744073709551615 \u5728mysql\u4e2d\u6267\u884c HELP \u7c7b\u578b\u540d\u79f0 \u53ef\u4ee5\u67e5\u770b\u5177\u4f53\u8303\u56f4\u3002 2. \u6d6e\u70b9\u6570\u7c7b\u578b\u548c\u5b9a\u70b9\u6570\u7c7b\u578b \u00b6 \u7c7b\u578b\u540d\u79f0 \u65e0\u7b26\u53f7 \u6709\u7b26\u53f7 FLOAT 0\u548c1.175494351E-38 ~ 3.402823466E+38 -3.402823466E+38 ~ -1.175494351E-38 DOUBLE 0\u548c2.2250738585072014E-308 ~ 1.7976931348623157E+308 -1.7976931348623157E+308 ~ -2.2250738585072014E-308 DECIMAL(M,D), DEC(M,D) \u540cDOUBLE \u540cDOUBLE \u7279\u70b9\uff1a M\uff1a\u6574\u6570\u90e8\u4f4d+\u5c0f\u6570\u90e8 D\uff1a\u5c0f\u6570\u90e8\u4f4d \u5982\u679c\u8d85\u8fc7\u8303\u56f4\uff0c\u5219\u63d2\u5165\u4e34\u754c\u503c M\u548cD\u90fd\u53ef\u4ee5\u7701\u7565\uff0c\u5982\u679c\u662fdecimal\uff0c\u5219M\u9ed8\u8ba4\u4e3a10\uff0cD\u9ed8\u8ba4\u4e3a0 \u5982\u679c\u662ffloat\u548cdouble\uff0c\u5219\u4f1a\u6839\u636e\u63d2\u5165\u7684\u6570\u503c\u7684\u7cbe\u5ea6\u6765\u51b3\u5b9a\u7cbe\u5ea6 \u5b9a\u70b9\u578b\u7684\u7cbe\u786e\u5ea6\u8f83\u9ad8\uff0c\u5982\u679c\u8981\u6c42\u63d2\u5165\u6570\u503c\u7684\u7cbe\u5ea6\u8f83\u9ad8\u5982\u8d27\u5e01\u8fd0\u7b97\u7b49\u5219\u8003\u8651\u4f7f\u7528\u5b9a\u70b9\u578b 3. \u65e5\u671f\u548c\u65f6\u95f4 \u00b6 \u7c7b\u578b\u540d\u79f0 \u65e5\u671f\u683c\u5f0f \u65e5\u671f\u8303\u56f4 YEAR YYYY 1901 ~ 2155 TIME HH:MM:SS[.fraction] -838:59:59.000000 ~ 838:59:59.000000 DATE YYYY-MM-DD 1000-01-01 ~ 9999-12-31 DATETIME YYYY-MM-DD HH:MM:SS[.fraction] 1000-01-01 00:00:00.000000 ~ 9999-12-31 23:59:59.999999 TIMESTAMP YYYYMMDDHHMMSS 1970-01-01 00:00:01.000000 ~ 2038-01-19 03:14:07.999999 4. \u6587\u672c\u5b57\u7b26\u4e32\u7c7b\u578b \u00b6 \u7c7b\u578b\u540d\u79f0 \u5b58\u50a8\u9700\u6c42 CHAR(M) M\u5b57\u8282,1<=M<=255\uff08M\u8868\u793a\u5217\u957f\u5ea6\uff09 VARCHAR(M) L+1\u5b57\u8282\uff0cL<=M\uff0c1<=M<=65535 TINYTEXT L+1\u5b57\u8282\uff0cL<2^8 TEXT L+2\u5b57\u8282\uff0cL<2^16 MEDIUMTEXT L+3\u5b57\u8282\uff0cL<2^24 LONGTEXT L+4\u5b57\u8282\uff0cL<2^32 ENUM 1\u62162\u4e2a\u5b57\u8282\uff0c\u53d6\u51b3\u4e8e\u679a\u4e3e\u503c\u7684\u6570\u636e(\u6700\u5927\u503c65535) SET 1,2,3,4\u62168\u4e2a\u5b57\u8282\uff0c\u53d6\u51b3\u4e8e\u96c6\u5408\u6210\u5458\u7684\u6570\u91cf(\u6700\u591a64\u4e2a\u6210\u5458) L\uff1a\u5217\u503c\u7684\u5b9e\u9645\u957f\u5ea6 5. \u4e8c\u8fdb\u5236\u5b57\u7b26\u4e32 \u00b6 \u7c7b\u578b\u540d\u79f0 BIT(M) M\u4f4d\u4e8c\u8fdb\u5236\u6570\uff0c\u6700\u5927\u503c\u4e3a64\uff0c\u9ed8\u8ba4\u4e3a1 BINARY(M) \u5b57\u8282\u6570\u4e3aM\uff0c\u5141\u8bb8\u957f\u5ea6\u4e3a0-M\u7684\u5b9a\u957f\u4e8c\u8fdb\u5236\u5b57\u7b26\u4e32 VARBINARY(M) \u5141\u8bb8\u957f\u5ea6\u4e3a0-M\u7684\u53d8\u957f\u4e8c\u8fdb\u5236\u5b57\u7b26\u4e32 TINYBLOB \u53ef\u8fb9\u957f\u4e8c\u8fdb\u5236\u6570\u636e\uff0c\u6700\u591a255\u4e2a\u5b57\u8282 BLOB \u53ef\u8fb9\u957f\u4e8c\u8fdb\u5236\u6570\u636e\uff0c\u6700\u591a2^16-1\u4e2a\u5b57\u8282 MEDIUMBLOB \u53ef\u8fb9\u957f\u4e8c\u8fdb\u5236\u6570\u636e\uff0c\u6700\u591a2^24-1\u4e2a\u5b57\u8282 LONGBLOB \u53ef\u8fb9\u957f\u4e8c\u8fdb\u5236\u6570\u636e\uff0c\u6700\u591a2^32-1\u4e2a\u5b57\u8282 \u6570\u636e\u7c7b\u578b\u7684\u9009\u62e9\uff1a \u5982\u679c\u8981\u5bf9\u5c0f\u6570\u8fdb\u884c\u6570\u503c\u6bd4\u8f83\uff0c\u6700\u597d\u7528DECIMAL float(M,D)\u662f\u975e\u6807\u51c6SQL\u5b9a\u4e49\uff0c\u5c3d\u91cf\u4e0d\u8981\u4f7f\u7528 \u5bf9\u4e8e\u5b58\u50a8\u4e0d\u5927\uff0c\u4f46\u5728\u901f\u5ea6\u4e0a\u6709\u8981\u6c42\u7684\u7528CHAR\uff0c\u53cd\u4e4b\u7528VARCHAR \u4e8c\u3001\u8fd0\u7b97\u7b26 \u00b6","title":"\u6570\u636e\u7c7b\u578b\u548c\u8fd0\u7b97\u7b26"},{"location":"databases/MySQL/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%92%8C%E8%BF%90%E7%AE%97%E7%AC%A6/#_1","text":"","title":"\u6570\u636e\u7c7b\u578b\u548c\u8fd0\u7b97\u7b26"},{"location":"databases/MySQL/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%92%8C%E8%BF%90%E7%AE%97%E7%AC%A6/#_2","text":"","title":"\u4e00\u3001\u6570\u636e\u7c7b\u578b"},{"location":"databases/MySQL/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%92%8C%E8%BF%90%E7%AE%97%E7%AC%A6/#1","text":"mysql\u4e2d\u6574\u6570\u578b\u6570\u636e\u7c7b\u578b \u7c7b\u578b\u540d\u79f0 \u6709\u7b26\u53f7 \u65e0\u7b26\u53f7 TINYINT -128 ~ 127 0 ~ 255 SMALLINT -32768 ~ 32767 0 ~ 65535 MEDIUMINT -8388608 ~ 8388607 0 ~ 16777215 INT -2147483648 ~ 2147483647 0 ~ 4294967295 BIGINT -9223372036854775808 ~ 9223372036854775807. 0 ~ 18446744073709551615 \u5728mysql\u4e2d\u6267\u884c HELP \u7c7b\u578b\u540d\u79f0 \u53ef\u4ee5\u67e5\u770b\u5177\u4f53\u8303\u56f4\u3002","title":"1. \u6574\u6570\u7c7b\u578b"},{"location":"databases/MySQL/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%92%8C%E8%BF%90%E7%AE%97%E7%AC%A6/#2","text":"\u7c7b\u578b\u540d\u79f0 \u65e0\u7b26\u53f7 \u6709\u7b26\u53f7 FLOAT 0\u548c1.175494351E-38 ~ 3.402823466E+38 -3.402823466E+38 ~ -1.175494351E-38 DOUBLE 0\u548c2.2250738585072014E-308 ~ 1.7976931348623157E+308 -1.7976931348623157E+308 ~ -2.2250738585072014E-308 DECIMAL(M,D), DEC(M,D) \u540cDOUBLE \u540cDOUBLE \u7279\u70b9\uff1a M\uff1a\u6574\u6570\u90e8\u4f4d+\u5c0f\u6570\u90e8 D\uff1a\u5c0f\u6570\u90e8\u4f4d \u5982\u679c\u8d85\u8fc7\u8303\u56f4\uff0c\u5219\u63d2\u5165\u4e34\u754c\u503c M\u548cD\u90fd\u53ef\u4ee5\u7701\u7565\uff0c\u5982\u679c\u662fdecimal\uff0c\u5219M\u9ed8\u8ba4\u4e3a10\uff0cD\u9ed8\u8ba4\u4e3a0 \u5982\u679c\u662ffloat\u548cdouble\uff0c\u5219\u4f1a\u6839\u636e\u63d2\u5165\u7684\u6570\u503c\u7684\u7cbe\u5ea6\u6765\u51b3\u5b9a\u7cbe\u5ea6 \u5b9a\u70b9\u578b\u7684\u7cbe\u786e\u5ea6\u8f83\u9ad8\uff0c\u5982\u679c\u8981\u6c42\u63d2\u5165\u6570\u503c\u7684\u7cbe\u5ea6\u8f83\u9ad8\u5982\u8d27\u5e01\u8fd0\u7b97\u7b49\u5219\u8003\u8651\u4f7f\u7528\u5b9a\u70b9\u578b","title":"2. \u6d6e\u70b9\u6570\u7c7b\u578b\u548c\u5b9a\u70b9\u6570\u7c7b\u578b"},{"location":"databases/MySQL/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%92%8C%E8%BF%90%E7%AE%97%E7%AC%A6/#3","text":"\u7c7b\u578b\u540d\u79f0 \u65e5\u671f\u683c\u5f0f \u65e5\u671f\u8303\u56f4 YEAR YYYY 1901 ~ 2155 TIME HH:MM:SS[.fraction] -838:59:59.000000 ~ 838:59:59.000000 DATE YYYY-MM-DD 1000-01-01 ~ 9999-12-31 DATETIME YYYY-MM-DD HH:MM:SS[.fraction] 1000-01-01 00:00:00.000000 ~ 9999-12-31 23:59:59.999999 TIMESTAMP YYYYMMDDHHMMSS 1970-01-01 00:00:01.000000 ~ 2038-01-19 03:14:07.999999","title":"3. \u65e5\u671f\u548c\u65f6\u95f4"},{"location":"databases/MySQL/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%92%8C%E8%BF%90%E7%AE%97%E7%AC%A6/#4","text":"\u7c7b\u578b\u540d\u79f0 \u5b58\u50a8\u9700\u6c42 CHAR(M) M\u5b57\u8282,1<=M<=255\uff08M\u8868\u793a\u5217\u957f\u5ea6\uff09 VARCHAR(M) L+1\u5b57\u8282\uff0cL<=M\uff0c1<=M<=65535 TINYTEXT L+1\u5b57\u8282\uff0cL<2^8 TEXT L+2\u5b57\u8282\uff0cL<2^16 MEDIUMTEXT L+3\u5b57\u8282\uff0cL<2^24 LONGTEXT L+4\u5b57\u8282\uff0cL<2^32 ENUM 1\u62162\u4e2a\u5b57\u8282\uff0c\u53d6\u51b3\u4e8e\u679a\u4e3e\u503c\u7684\u6570\u636e(\u6700\u5927\u503c65535) SET 1,2,3,4\u62168\u4e2a\u5b57\u8282\uff0c\u53d6\u51b3\u4e8e\u96c6\u5408\u6210\u5458\u7684\u6570\u91cf(\u6700\u591a64\u4e2a\u6210\u5458) L\uff1a\u5217\u503c\u7684\u5b9e\u9645\u957f\u5ea6","title":"4. \u6587\u672c\u5b57\u7b26\u4e32\u7c7b\u578b"},{"location":"databases/MySQL/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%92%8C%E8%BF%90%E7%AE%97%E7%AC%A6/#5","text":"\u7c7b\u578b\u540d\u79f0 BIT(M) M\u4f4d\u4e8c\u8fdb\u5236\u6570\uff0c\u6700\u5927\u503c\u4e3a64\uff0c\u9ed8\u8ba4\u4e3a1 BINARY(M) \u5b57\u8282\u6570\u4e3aM\uff0c\u5141\u8bb8\u957f\u5ea6\u4e3a0-M\u7684\u5b9a\u957f\u4e8c\u8fdb\u5236\u5b57\u7b26\u4e32 VARBINARY(M) \u5141\u8bb8\u957f\u5ea6\u4e3a0-M\u7684\u53d8\u957f\u4e8c\u8fdb\u5236\u5b57\u7b26\u4e32 TINYBLOB \u53ef\u8fb9\u957f\u4e8c\u8fdb\u5236\u6570\u636e\uff0c\u6700\u591a255\u4e2a\u5b57\u8282 BLOB \u53ef\u8fb9\u957f\u4e8c\u8fdb\u5236\u6570\u636e\uff0c\u6700\u591a2^16-1\u4e2a\u5b57\u8282 MEDIUMBLOB \u53ef\u8fb9\u957f\u4e8c\u8fdb\u5236\u6570\u636e\uff0c\u6700\u591a2^24-1\u4e2a\u5b57\u8282 LONGBLOB \u53ef\u8fb9\u957f\u4e8c\u8fdb\u5236\u6570\u636e\uff0c\u6700\u591a2^32-1\u4e2a\u5b57\u8282 \u6570\u636e\u7c7b\u578b\u7684\u9009\u62e9\uff1a \u5982\u679c\u8981\u5bf9\u5c0f\u6570\u8fdb\u884c\u6570\u503c\u6bd4\u8f83\uff0c\u6700\u597d\u7528DECIMAL float(M,D)\u662f\u975e\u6807\u51c6SQL\u5b9a\u4e49\uff0c\u5c3d\u91cf\u4e0d\u8981\u4f7f\u7528 \u5bf9\u4e8e\u5b58\u50a8\u4e0d\u5927\uff0c\u4f46\u5728\u901f\u5ea6\u4e0a\u6709\u8981\u6c42\u7684\u7528CHAR\uff0c\u53cd\u4e4b\u7528VARCHAR","title":"5. \u4e8c\u8fdb\u5236\u5b57\u7b26\u4e32"},{"location":"databases/MySQL/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B%E5%92%8C%E8%BF%90%E7%AE%97%E7%AC%A6/#_3","text":"","title":"\u4e8c\u3001\u8fd0\u7b97\u7b26"},{"location":"databases/MySQL/%E7%94%A8%E6%88%B7%E7%AE%A1%E7%90%86/","text":"\u7528\u6237\u7ba1\u7406 \u00b6 1. \u8d26\u6237\u7ba1\u7406 \u00b6 1.1 \u67e5\u770b\u5f53\u524d\u7528\u6237 \u00b6 1 2 3 4 5 6 7 8 9 3306 [( none )] >select user,authentication_string,host from mysql.user ; +---------------+-------------------------------------------+-----------+ | user | authentication_string | host | +---------------+-------------------------------------------+-----------+ | root | *81F5E21E35407D884A6CD4A731AEBFB6AF209E1B | localhost | | mysql.session | *THISISNOTAVALIDPASSWORDTHATCANBEUSEDHERE | localhost | | mysql.sys | *THISISNOTAVALIDPASSWORDTHATCANBEUSEDHERE | localhost | +---------------+-------------------------------------------+-----------+ 3 rows in set ( 0 .00 sec ) 1.2 \u7528\u6237\u767d\u540d\u5355 \u00b6 \u652f\u6301\u7684\u65b9\u5f0f\uff1a 1 2 3 4 5 6 7 8 username @ '10.0.0.%' username @ '%' username @ '10.0.0.100' username @ 'localhost' username @ 'www.example.com' username @ '10.0.0.5%' username @ '10.0.0.%' username @ '10.0.0.0/255.255.254.0' 1.3 \u7528\u6237\u521b\u5efa \u00b6 1 2 3306 [( none )] > create user yuanzhi @ '10.0.0.%' identified by '123456' ; Query OK , 0 rows affected ( 0 . 00 sec ) 1.4 \u4fee\u6539\u7528\u6237\u5bc6\u7801 \u00b6 1 2 3306 [( none )] > alter user yuanzhi @ '10.0.0.%' identified by 'yuanzhi' ; Query OK , 0 rows affected ( 0 . 00 sec ) 1.5 \u5220\u9664\u7528\u6237 \u00b6 1 2 3306 [( none )] > drop user yuanzhi @ '10.0.0.%' ; Query OK , 0 rows affected ( 0 . 00 sec ) 2. \u6743\u9650\u7ba1\u7406 \u00b6 2.1 \u6388\u6743 \u00b6 1 \u6388\u4e88\u6240\u6709\u6743\u9650 \u00b6 1 2 3306 [( none )] > grant all on * . * to root @ '10.0.0.%' identified by 'root' ; Query OK , 0 rows affected , 1 warning ( 0 . 01 sec ) 2 \u6388\u4e88\u6307\u5b9a\u6743\u9650 \u00b6 1 2 3306 [( none )] > grant select , update , insert , delete on wordpress . * to wordpress @ '10.0.0.%' identified by 'wordpress' ; Query OK , 0 rows affected , 1 warning ( 0 . 00 sec ) 2.2 \u67e5\u770b\u6743\u9650 \u00b6 1 2 3 4 5 6 7 8 3306 [( none )] >show grants for 'wordpress' @ '10.0.0.%' ; +---------------------------------------------------------------------------------+ | Grants for wordpress@10.0.0.% | +---------------------------------------------------------------------------------+ | GRANT USAGE ON *.* TO 'wordpress' @ '10.0.0.%' | | GRANT SELECT, INSERT, UPDATE, DELETE ON ` wordpress ` .* TO 'wordpress' @ '10.0.0.%' | +---------------------------------------------------------------------------------+ 2 rows in set ( 0 .00 sec ) 2.3 \u56de\u6536\u6743\u9650 \u00b6 1 2 3306 [( none )] > revoke delete on wordpress . * from wordpress @ '10.0.0.%' ; Query OK , 0 rows affected ( 0 . 00 sec ) 3. root\u5bc6\u7801\u4e22\u5931\u5904\u7406 \u00b6 1. \u5173\u95ed\u6570\u636e\u5e93\u670d\u52a1 \u00b6 1 2 3 root@ubuntu:~#:/app/mysql/support-files# ./mysql.server stop Shutting down MySQL .... * 2. mysqld_safe \u542f\u52a8 \u00b6 1 2 3 4 5 # \u5173\u95ed\u8ba4\u8bc1\uff0c\u5173\u95edTCP/IP\u8fde\u63a5 root@ubuntu:~#:/app/mysql/support-files# mysqld_safe --skip-grant-tables --skip-networking & [ 1 ] 3991 root@ubuntu:~#:/app/mysql/support-files# 2020 -04-20T15:32:55.026585Z mysqld_safe Logging to '/data/mysql/ubuntu.err' . 2020 -04-20T15:32:55.060397Z mysqld_safe Starting mysqld daemon with databases from /data/mysql 3. \u4fee\u6539\u5bc6\u7801 \u00b6 1 2 3 4 5 6 7 root@ubuntu:~#:/app/mysql/support-files# mysql -uroot ... 3306 [( none )] >flush privileges ; Query OK, 0 rows affected ( 0 .01 sec ) 3306 [( none )] >alter user root@ 'localhost' identified by 'root' ; Query OK, 0 rows affected ( 0 .00 sec )","title":"\u7528\u6237\u7ba1\u7406"},{"location":"databases/MySQL/%E7%94%A8%E6%88%B7%E7%AE%A1%E7%90%86/#_1","text":"","title":"\u7528\u6237\u7ba1\u7406"},{"location":"databases/MySQL/%E7%94%A8%E6%88%B7%E7%AE%A1%E7%90%86/#1","text":"","title":"1. \u8d26\u6237\u7ba1\u7406"},{"location":"databases/MySQL/%E7%94%A8%E6%88%B7%E7%AE%A1%E7%90%86/#11","text":"1 2 3 4 5 6 7 8 9 3306 [( none )] >select user,authentication_string,host from mysql.user ; +---------------+-------------------------------------------+-----------+ | user | authentication_string | host | +---------------+-------------------------------------------+-----------+ | root | *81F5E21E35407D884A6CD4A731AEBFB6AF209E1B | localhost | | mysql.session | *THISISNOTAVALIDPASSWORDTHATCANBEUSEDHERE | localhost | | mysql.sys | *THISISNOTAVALIDPASSWORDTHATCANBEUSEDHERE | localhost | +---------------+-------------------------------------------+-----------+ 3 rows in set ( 0 .00 sec )","title":"1.1 \u67e5\u770b\u5f53\u524d\u7528\u6237"},{"location":"databases/MySQL/%E7%94%A8%E6%88%B7%E7%AE%A1%E7%90%86/#12","text":"\u652f\u6301\u7684\u65b9\u5f0f\uff1a 1 2 3 4 5 6 7 8 username @ '10.0.0.%' username @ '%' username @ '10.0.0.100' username @ 'localhost' username @ 'www.example.com' username @ '10.0.0.5%' username @ '10.0.0.%' username @ '10.0.0.0/255.255.254.0'","title":"1.2 \u7528\u6237\u767d\u540d\u5355"},{"location":"databases/MySQL/%E7%94%A8%E6%88%B7%E7%AE%A1%E7%90%86/#13","text":"1 2 3306 [( none )] > create user yuanzhi @ '10.0.0.%' identified by '123456' ; Query OK , 0 rows affected ( 0 . 00 sec )","title":"1.3 \u7528\u6237\u521b\u5efa"},{"location":"databases/MySQL/%E7%94%A8%E6%88%B7%E7%AE%A1%E7%90%86/#14","text":"1 2 3306 [( none )] > alter user yuanzhi @ '10.0.0.%' identified by 'yuanzhi' ; Query OK , 0 rows affected ( 0 . 00 sec )","title":"1.4 \u4fee\u6539\u7528\u6237\u5bc6\u7801"},{"location":"databases/MySQL/%E7%94%A8%E6%88%B7%E7%AE%A1%E7%90%86/#15","text":"1 2 3306 [( none )] > drop user yuanzhi @ '10.0.0.%' ; Query OK , 0 rows affected ( 0 . 00 sec )","title":"1.5 \u5220\u9664\u7528\u6237"},{"location":"databases/MySQL/%E7%94%A8%E6%88%B7%E7%AE%A1%E7%90%86/#2","text":"","title":"2. \u6743\u9650\u7ba1\u7406"},{"location":"databases/MySQL/%E7%94%A8%E6%88%B7%E7%AE%A1%E7%90%86/#21","text":"","title":"2.1 \u6388\u6743"},{"location":"databases/MySQL/%E7%94%A8%E6%88%B7%E7%AE%A1%E7%90%86/#1_1","text":"1 2 3306 [( none )] > grant all on * . * to root @ '10.0.0.%' identified by 'root' ; Query OK , 0 rows affected , 1 warning ( 0 . 01 sec )","title":"1 \u6388\u4e88\u6240\u6709\u6743\u9650"},{"location":"databases/MySQL/%E7%94%A8%E6%88%B7%E7%AE%A1%E7%90%86/#2_1","text":"1 2 3306 [( none )] > grant select , update , insert , delete on wordpress . * to wordpress @ '10.0.0.%' identified by 'wordpress' ; Query OK , 0 rows affected , 1 warning ( 0 . 00 sec )","title":"2 \u6388\u4e88\u6307\u5b9a\u6743\u9650"},{"location":"databases/MySQL/%E7%94%A8%E6%88%B7%E7%AE%A1%E7%90%86/#22","text":"1 2 3 4 5 6 7 8 3306 [( none )] >show grants for 'wordpress' @ '10.0.0.%' ; +---------------------------------------------------------------------------------+ | Grants for wordpress@10.0.0.% | +---------------------------------------------------------------------------------+ | GRANT USAGE ON *.* TO 'wordpress' @ '10.0.0.%' | | GRANT SELECT, INSERT, UPDATE, DELETE ON ` wordpress ` .* TO 'wordpress' @ '10.0.0.%' | +---------------------------------------------------------------------------------+ 2 rows in set ( 0 .00 sec )","title":"2.2 \u67e5\u770b\u6743\u9650"},{"location":"databases/MySQL/%E7%94%A8%E6%88%B7%E7%AE%A1%E7%90%86/#23","text":"1 2 3306 [( none )] > revoke delete on wordpress . * from wordpress @ '10.0.0.%' ; Query OK , 0 rows affected ( 0 . 00 sec )","title":"2.3 \u56de\u6536\u6743\u9650"},{"location":"databases/MySQL/%E7%94%A8%E6%88%B7%E7%AE%A1%E7%90%86/#3-root","text":"","title":"3. root\u5bc6\u7801\u4e22\u5931\u5904\u7406"},{"location":"databases/MySQL/%E7%94%A8%E6%88%B7%E7%AE%A1%E7%90%86/#1_2","text":"1 2 3 root@ubuntu:~#:/app/mysql/support-files# ./mysql.server stop Shutting down MySQL .... *","title":"1. \u5173\u95ed\u6570\u636e\u5e93\u670d\u52a1"},{"location":"databases/MySQL/%E7%94%A8%E6%88%B7%E7%AE%A1%E7%90%86/#2-mysqld_safe","text":"1 2 3 4 5 # \u5173\u95ed\u8ba4\u8bc1\uff0c\u5173\u95edTCP/IP\u8fde\u63a5 root@ubuntu:~#:/app/mysql/support-files# mysqld_safe --skip-grant-tables --skip-networking & [ 1 ] 3991 root@ubuntu:~#:/app/mysql/support-files# 2020 -04-20T15:32:55.026585Z mysqld_safe Logging to '/data/mysql/ubuntu.err' . 2020 -04-20T15:32:55.060397Z mysqld_safe Starting mysqld daemon with databases from /data/mysql","title":"2. mysqld_safe \u542f\u52a8"},{"location":"databases/MySQL/%E7%94%A8%E6%88%B7%E7%AE%A1%E7%90%86/#3","text":"1 2 3 4 5 6 7 root@ubuntu:~#:/app/mysql/support-files# mysql -uroot ... 3306 [( none )] >flush privileges ; Query OK, 0 rows affected ( 0 .01 sec ) 3306 [( none )] >alter user root@ 'localhost' identified by 'root' ; Query OK, 0 rows affected ( 0 .00 sec )","title":"3. \u4fee\u6539\u5bc6\u7801"},{"location":"databases/MySQL/%E7%B4%A2%E5%BC%95/","text":"\u4e03\u3001\u7d22\u5f15 \u00b6 \u7d22\u5f15\u662f\u4e00\u4e2a\u5355\u72ec\u7684\u3001\u5b58\u5728\u78c1\u76d8\u4e0a\u7684\u6570\u636e\u5e93\u7ed3\u6784\uff0c\u5b83\u4eec\u5305\u542b\u7740\u5bf9\u6570\u636e\u8868\u91cc\u6240\u6709\u8bb0\u5f55\u7684\u5f15\u7528\u6307\u9488\u3002 1. \u7d22\u5f15\u4f5c\u7528 \u00b6 \u63d0\u4f9b\u4e86\u7c7b\u4f3c\u4e8e\u4e66\u4e2d\u76ee\u5f55\u7684\u4f5c\u7528\uff0c\u76ee\u7684\u662f\u4e3a\u4e86\u7b80\u5316\u67e5\u8be2 2. \u7d22\u5f15\u7684\u79cd\u7c7b \u00b6 2.1 \u6309\u7b97\u6cd5\u5206 \u00b6 B\u6811\u7d22\u5f15 Hash\u7d22\u5f15 R\u6811 Full text GIS 2.2 \u6309\u529f\u80fd\u5206 \u00b6 2.2.1 \u805a\u7c07\u7d22\u5f15 \u00b6 2.2.2 \u8f85\u52a9\u7d22\u5f15\uff08\u4e8c\u7ea7\u7d22\u5f15\uff09 \u00b6 \u8f85\u52a9\u7d22\u5f15\u548c \u805a\u7c07\u7d22\u5f15\u7684\u533a\u522b \u805a\u7c07\u7d22\u5f15\u53ea\u80fd\u6709\u4e00\u4e2a\uff0c\u975e\u7a7a\u552f\u4e00\uff0c\u4e00\u822c\u662f\u4e3b\u952e \u8f85\u52a9\u7d22\u5f15\u53ef\u4ee5\u6709\u591a\u4e2a\uff0c\u662f\u914d\u5408\u805a\u7c07\u7d22\u5f15\u4f7f\u7528\u7684 \u805a\u7c07\u7d22\u5f15\u53f6\u8282\u70b9\u5c31\u662f\u78c1\u76d8\u6570\u636e\u884c\u5b58\u50a8\u7684\u6570\u636e\u9875 MySQL\u6839\u636e\u805a\u7c07\u7d22\u5f15\u7ec4\u7ec7\u5b58\u50a8\u7ed3\u6784\uff0c\u6570\u636e\u5b58\u50a8\u65f6\u5c31\u662f\u6309\u7167\u805a\u7c07\u7d22\u5f15\u7684\u987a\u5e8f\u8fdb\u884c\u5b58\u50a8\u6570\u636e \u8f85\u52a9\u7d22\u5f15\u53ea\u4f1a\u63d0\u53d6\u7d22\u5f15\u952e\u503c\u8fdb\u884c\u81ea\u52a8\u6392\u5e8f\u751f\u6210B\u6811 3. \u8f85\u52a9\u7d22\u5f15\u7684\u5206\u7c7b \u00b6 3.1 \u666e\u901a\u7d22\u5f15 \u00b6 \u57fa\u672c\u7d22\u5f15\u7c7b\u578b\uff0c\u5141\u8bb8\u5728\u5b9a\u4e49\u7d22\u5f15\u7684\u5217\u4e2d\u63d2\u5165\u91cd\u590d\u503c\u548c\u7a7a\u503c\uff0c\u5176\u4f5c\u7528\u53ea\u662f\u52a0\u5feb\u6570\u636e\u7684\u8bbf\u95ee\u901f\u5ea6\u3002 3.2 \u552f\u4e00\u7d22\u5f15 \u00b6 \u7d22\u5f15\u5217\u7684\u503c\u5fc5\u987b\u552f\u4e00\uff0c\u53ef\u4ee5\u5141\u8bb8\u6709\u7a7a\u503c\uff0c\u53ef\u4ee5\u51cf\u5c11\u67e5\u8be2\u7d22\u5f15\u5217\u64cd\u4f5c\u7684\u65f6\u95f4\uff0c\u5c24\u5176\u662f\u5bf9\u6bd4\u8f83\u5e9e\u5927\u7684\u6570\u636e\u8868 3.3 \u5355\u5217\u7d22\u5f15 \u00b6 \u4e00\u4e2a\u7d22\u5f15\u53ea\u5305\u542b\u5355\u4e2a\u5217\uff0c\u4e00\u4e2a\u8868\u53ef\u4ee5\u6709\u591a\u4e2a\u5355\u5217\u7d22\u5f15 3.4 \u7ec4\u5408\u7d22\u5f15 \u00b6 \u5728\u8868\u7684\u591a\u4e2a\u5b57\u6bb5\u4e0a\u7ec4\u4e2a\u521b\u5efa\u7d22\u5f15\uff0c\u53ea\u6709\u5728\u67e5\u8be2\u6761\u4ef6\u4e2d\u4f7f\u7528\u4e86\u8fd9\u4e9b\u5b57\u6bb5\u7684\u5de6\u8fb9\u5b57\u6bb5\u65f6\uff0c\u7d22\u5f15\u624d\u4f1a\u88ab\u4f7f\u7528 4. \u7d22\u5f15\u6811\u9ad8\u5ea6\u7684\u5f71\u54cd\u56e0\u7d20 \u00b6 \u6570\u636e\u91cf\u7ea7\uff0c\u89e3\u51b3\u65b9\u6cd5\uff1a\u5206\u5e93\uff0c\u5206\u8868\uff0c\u5206\u5e03\u5f0f \u7d22\u5f15\u5217\u503c\u8fc7\u957f\uff0c\u89e3\u51b3\u65b9\u6cd5\uff1a\u524d\u7f00\u7d22\u5f15 \u6570\u636e\u7c7b\u578b 5. \u521b\u5efa\u7d22\u5f15 \u00b6 5.1. \u521b\u5efa\u8868\u7684\u65f6\u5019\u521b\u5efa\u7d22\u5f15 \u00b6 \u8bed\u6cd5\u89c4\u5219 1 2 3 4 5 6 7 8 9 10 11 CREATE TABLE \u8868\u540d ( \u5b57\u6bb5\u540d \u6570\u636e\u7c7b\u578b [ \u5b8c\u6574\u6027\u7ea6\u675f\u6761\u4ef6 ], [ UNIQUE | FULLTEXT | SPATIAL ] INDEX | KEY [ \u522b\u540d ] ( \u5b57\u6bb5\u540d [( \u957f\u5ea6 )] [ ASC | DESC ] ) ); UNIQUE : \u552f\u4e00\u6027\u7d22\u5f15 FULLTEXT \uff1a\u5168\u6587\u7d22\u5f15 SPATIAL \uff1a\u7a7a\u95f4\u7d22\u5f15 INDEX | KEY \uff1a\u4f5c\u7528\u76f8\u540c\uff0c\u7528\u6765\u6267\u884c\u521b\u5efa\u7d22\u5f15 \u957f\u5ea6\uff1a\u6307\u5b9a\u7d22\u5f15\u7684\u957f\u5ea6 ASC | DESC \uff1a \u5347\u5e8f\u6216\u964d\u5e8f\u7684\u7d22\u5f15\u503c\u5b58\u50a8 5.1.1 \u521b\u5efa\u666e\u901a\u7d22\u5f15 \u00b6 1 2 3 4 5 6 CREATE TABLE accounts ( id int PRIMARY KEY AUTO_INCREMENT , username VARCHAR ( 20 ), password VARCHAR ( 20 ), INDEX ( username ) ); 5.1.2 \u521b\u5efa\u552f\u4e00\u7d22\u5f15 \u00b6 1 2 3 4 5 6 CREATE TABLE accounts ( id int PRIMARY KEY AUTO_INCREMENT , username VARCHAR ( 20 ), password VARCHAR ( 20 ), UNIQUE INDEX ( username ) ); 5.1.3 \u521b\u5efa\u5355\u5217\u7d22\u5f15 \u00b6 1 2 3 4 5 6 CREATE TABLE accounts ( id int PRIMARY KEY AUTO_INCREMENT , username VARCHAR ( 20 ), password VARCHAR ( 20 ), UNIQUE INDEX user ( username ) ); 5.1.4 \u521b\u5efa\u7ec4\u5408\u7d22\u5f15 \u00b6 1 2 3 4 5 6 CREATE TABLE accounts ( username VARCHAR ( 20 ), email VARCHAR ( 50 ), password VARCHAR ( 20 ), INDEX user ( username , email ) ); 5.2. \u5728\u5df2\u7ecf\u5b58\u5728\u7684\u8868\u4e0a\u521b\u5efa\u7d22\u5f15 \u00b6 5.2.1 \u4f7f\u7528ALTER TABLE\u8bed\u53e5\u521b\u5efa\u7d22\u5f15 \u00b6 \u8bed\u6cd5\u89c4\u5219 1 ALTER TABLE \u8868\u540d ADD [ UNIQUE | FULLTEXT | SPATIAL ] [ INDEX | KEY ] [ \u7d22\u5f15\u540d ] ( \u5b57\u6bb5\u540d [( \u957f\u5ea6 )] [ ASC | DESC ]) \u4f8b\uff1a 1 ALTER TABLE accounts ADD INDEX user ( username ); 5.2.2 \u4f7f\u7528CREATE INDEX\u521b\u5efa\u7d22\u5f15 \u00b6 \u8bed\u6cd5\u89c4\u5219 1 CREATE [ UNIQUE | FULLTEXT | SPATIAL ] INDEX \u7d22\u5f15\u540d ON \u8868\u540d ( \u5b57\u6bb5\u540d [( \u957f\u5ea6 )] [ ASC | DESC ]) 1 CREATE UNIQUE INDEX user on accounts ( username ); 6. \u5220\u9664\u7d22\u5f15 \u00b6 6.1 \u4f7f\u7528ALTER TABLE\u5220\u9664\u7d22\u5f15 \u00b6 \u8bed\u6cd5\u89c4\u5219 1 ALTER TABLE \u8868\u540d DROP INDEX \u7d22\u5f15\u540d ; 6.2 \u4f7f\u7528DROP INDEX\u8bed\u53e5\u5220\u9664\u7d22\u5f15 \u00b6 1 DROP INDEX \u7d22\u5f15\u540d ON \u8868\u540d ; 7. \u67e5\u770b\u7d22\u5f15 \u00b6 1 SHOW INDEX FROM city ; 8. \u7d22\u5f15\u5efa\u7acb\u539f\u5219 \u00b6 \u5efa\u8868\u65f6\u4e00\u5b9a\u8981\u6709\u4e3b\u952e\uff0c\u4e00\u822c\u662f\u4e00\u4e2a\u65e0\u5173\u5217 \u9009\u62e9\u552f\u4e00\u6027\u7d22\u5f15 \u9650\u5236\u6240\u6709\u7684\u6570\u76ee \u5927\u8868\u52a0\u7d22\u5f15\u9700\u8981\u5728\u4e1a\u52a1\u4e0d\u7e41\u5fd9\u671f\u95f4\u64cd\u4f5c \u5c3d\u91cf\u5c11\u5728\u7ecf\u5e38\u66f4\u65b0\u503c\u5f97\u5217\u4e0a\u521b\u5efa\u7d22\u5f15","title":"\u7d22\u5f15"},{"location":"databases/MySQL/%E7%B4%A2%E5%BC%95/#_1","text":"\u7d22\u5f15\u662f\u4e00\u4e2a\u5355\u72ec\u7684\u3001\u5b58\u5728\u78c1\u76d8\u4e0a\u7684\u6570\u636e\u5e93\u7ed3\u6784\uff0c\u5b83\u4eec\u5305\u542b\u7740\u5bf9\u6570\u636e\u8868\u91cc\u6240\u6709\u8bb0\u5f55\u7684\u5f15\u7528\u6307\u9488\u3002","title":"\u4e03\u3001\u7d22\u5f15"},{"location":"databases/MySQL/%E7%B4%A2%E5%BC%95/#1","text":"\u63d0\u4f9b\u4e86\u7c7b\u4f3c\u4e8e\u4e66\u4e2d\u76ee\u5f55\u7684\u4f5c\u7528\uff0c\u76ee\u7684\u662f\u4e3a\u4e86\u7b80\u5316\u67e5\u8be2","title":"1. \u7d22\u5f15\u4f5c\u7528"},{"location":"databases/MySQL/%E7%B4%A2%E5%BC%95/#2","text":"","title":"2. \u7d22\u5f15\u7684\u79cd\u7c7b"},{"location":"databases/MySQL/%E7%B4%A2%E5%BC%95/#21","text":"B\u6811\u7d22\u5f15 Hash\u7d22\u5f15 R\u6811 Full text GIS","title":"2.1 \u6309\u7b97\u6cd5\u5206"},{"location":"databases/MySQL/%E7%B4%A2%E5%BC%95/#22","text":"","title":"2.2 \u6309\u529f\u80fd\u5206"},{"location":"databases/MySQL/%E7%B4%A2%E5%BC%95/#221","text":"","title":"2.2.1 \u805a\u7c07\u7d22\u5f15"},{"location":"databases/MySQL/%E7%B4%A2%E5%BC%95/#222","text":"\u8f85\u52a9\u7d22\u5f15\u548c \u805a\u7c07\u7d22\u5f15\u7684\u533a\u522b \u805a\u7c07\u7d22\u5f15\u53ea\u80fd\u6709\u4e00\u4e2a\uff0c\u975e\u7a7a\u552f\u4e00\uff0c\u4e00\u822c\u662f\u4e3b\u952e \u8f85\u52a9\u7d22\u5f15\u53ef\u4ee5\u6709\u591a\u4e2a\uff0c\u662f\u914d\u5408\u805a\u7c07\u7d22\u5f15\u4f7f\u7528\u7684 \u805a\u7c07\u7d22\u5f15\u53f6\u8282\u70b9\u5c31\u662f\u78c1\u76d8\u6570\u636e\u884c\u5b58\u50a8\u7684\u6570\u636e\u9875 MySQL\u6839\u636e\u805a\u7c07\u7d22\u5f15\u7ec4\u7ec7\u5b58\u50a8\u7ed3\u6784\uff0c\u6570\u636e\u5b58\u50a8\u65f6\u5c31\u662f\u6309\u7167\u805a\u7c07\u7d22\u5f15\u7684\u987a\u5e8f\u8fdb\u884c\u5b58\u50a8\u6570\u636e \u8f85\u52a9\u7d22\u5f15\u53ea\u4f1a\u63d0\u53d6\u7d22\u5f15\u952e\u503c\u8fdb\u884c\u81ea\u52a8\u6392\u5e8f\u751f\u6210B\u6811","title":"2.2.2 \u8f85\u52a9\u7d22\u5f15\uff08\u4e8c\u7ea7\u7d22\u5f15\uff09"},{"location":"databases/MySQL/%E7%B4%A2%E5%BC%95/#3","text":"","title":"3. \u8f85\u52a9\u7d22\u5f15\u7684\u5206\u7c7b"},{"location":"databases/MySQL/%E7%B4%A2%E5%BC%95/#31","text":"\u57fa\u672c\u7d22\u5f15\u7c7b\u578b\uff0c\u5141\u8bb8\u5728\u5b9a\u4e49\u7d22\u5f15\u7684\u5217\u4e2d\u63d2\u5165\u91cd\u590d\u503c\u548c\u7a7a\u503c\uff0c\u5176\u4f5c\u7528\u53ea\u662f\u52a0\u5feb\u6570\u636e\u7684\u8bbf\u95ee\u901f\u5ea6\u3002","title":"3.1 \u666e\u901a\u7d22\u5f15"},{"location":"databases/MySQL/%E7%B4%A2%E5%BC%95/#32","text":"\u7d22\u5f15\u5217\u7684\u503c\u5fc5\u987b\u552f\u4e00\uff0c\u53ef\u4ee5\u5141\u8bb8\u6709\u7a7a\u503c\uff0c\u53ef\u4ee5\u51cf\u5c11\u67e5\u8be2\u7d22\u5f15\u5217\u64cd\u4f5c\u7684\u65f6\u95f4\uff0c\u5c24\u5176\u662f\u5bf9\u6bd4\u8f83\u5e9e\u5927\u7684\u6570\u636e\u8868","title":"3.2 \u552f\u4e00\u7d22\u5f15"},{"location":"databases/MySQL/%E7%B4%A2%E5%BC%95/#33","text":"\u4e00\u4e2a\u7d22\u5f15\u53ea\u5305\u542b\u5355\u4e2a\u5217\uff0c\u4e00\u4e2a\u8868\u53ef\u4ee5\u6709\u591a\u4e2a\u5355\u5217\u7d22\u5f15","title":"3.3 \u5355\u5217\u7d22\u5f15"},{"location":"databases/MySQL/%E7%B4%A2%E5%BC%95/#34","text":"\u5728\u8868\u7684\u591a\u4e2a\u5b57\u6bb5\u4e0a\u7ec4\u4e2a\u521b\u5efa\u7d22\u5f15\uff0c\u53ea\u6709\u5728\u67e5\u8be2\u6761\u4ef6\u4e2d\u4f7f\u7528\u4e86\u8fd9\u4e9b\u5b57\u6bb5\u7684\u5de6\u8fb9\u5b57\u6bb5\u65f6\uff0c\u7d22\u5f15\u624d\u4f1a\u88ab\u4f7f\u7528","title":"3.4 \u7ec4\u5408\u7d22\u5f15"},{"location":"databases/MySQL/%E7%B4%A2%E5%BC%95/#4","text":"\u6570\u636e\u91cf\u7ea7\uff0c\u89e3\u51b3\u65b9\u6cd5\uff1a\u5206\u5e93\uff0c\u5206\u8868\uff0c\u5206\u5e03\u5f0f \u7d22\u5f15\u5217\u503c\u8fc7\u957f\uff0c\u89e3\u51b3\u65b9\u6cd5\uff1a\u524d\u7f00\u7d22\u5f15 \u6570\u636e\u7c7b\u578b","title":"4. \u7d22\u5f15\u6811\u9ad8\u5ea6\u7684\u5f71\u54cd\u56e0\u7d20"},{"location":"databases/MySQL/%E7%B4%A2%E5%BC%95/#5","text":"","title":"5. \u521b\u5efa\u7d22\u5f15"},{"location":"databases/MySQL/%E7%B4%A2%E5%BC%95/#51","text":"\u8bed\u6cd5\u89c4\u5219 1 2 3 4 5 6 7 8 9 10 11 CREATE TABLE \u8868\u540d ( \u5b57\u6bb5\u540d \u6570\u636e\u7c7b\u578b [ \u5b8c\u6574\u6027\u7ea6\u675f\u6761\u4ef6 ], [ UNIQUE | FULLTEXT | SPATIAL ] INDEX | KEY [ \u522b\u540d ] ( \u5b57\u6bb5\u540d [( \u957f\u5ea6 )] [ ASC | DESC ] ) ); UNIQUE : \u552f\u4e00\u6027\u7d22\u5f15 FULLTEXT \uff1a\u5168\u6587\u7d22\u5f15 SPATIAL \uff1a\u7a7a\u95f4\u7d22\u5f15 INDEX | KEY \uff1a\u4f5c\u7528\u76f8\u540c\uff0c\u7528\u6765\u6267\u884c\u521b\u5efa\u7d22\u5f15 \u957f\u5ea6\uff1a\u6307\u5b9a\u7d22\u5f15\u7684\u957f\u5ea6 ASC | DESC \uff1a \u5347\u5e8f\u6216\u964d\u5e8f\u7684\u7d22\u5f15\u503c\u5b58\u50a8","title":"5.1. \u521b\u5efa\u8868\u7684\u65f6\u5019\u521b\u5efa\u7d22\u5f15"},{"location":"databases/MySQL/%E7%B4%A2%E5%BC%95/#511","text":"1 2 3 4 5 6 CREATE TABLE accounts ( id int PRIMARY KEY AUTO_INCREMENT , username VARCHAR ( 20 ), password VARCHAR ( 20 ), INDEX ( username ) );","title":"5.1.1 \u521b\u5efa\u666e\u901a\u7d22\u5f15"},{"location":"databases/MySQL/%E7%B4%A2%E5%BC%95/#512","text":"1 2 3 4 5 6 CREATE TABLE accounts ( id int PRIMARY KEY AUTO_INCREMENT , username VARCHAR ( 20 ), password VARCHAR ( 20 ), UNIQUE INDEX ( username ) );","title":"5.1.2 \u521b\u5efa\u552f\u4e00\u7d22\u5f15"},{"location":"databases/MySQL/%E7%B4%A2%E5%BC%95/#513","text":"1 2 3 4 5 6 CREATE TABLE accounts ( id int PRIMARY KEY AUTO_INCREMENT , username VARCHAR ( 20 ), password VARCHAR ( 20 ), UNIQUE INDEX user ( username ) );","title":"5.1.3 \u521b\u5efa\u5355\u5217\u7d22\u5f15"},{"location":"databases/MySQL/%E7%B4%A2%E5%BC%95/#514","text":"1 2 3 4 5 6 CREATE TABLE accounts ( username VARCHAR ( 20 ), email VARCHAR ( 50 ), password VARCHAR ( 20 ), INDEX user ( username , email ) );","title":"5.1.4 \u521b\u5efa\u7ec4\u5408\u7d22\u5f15"},{"location":"databases/MySQL/%E7%B4%A2%E5%BC%95/#52","text":"","title":"5.2.  \u5728\u5df2\u7ecf\u5b58\u5728\u7684\u8868\u4e0a\u521b\u5efa\u7d22\u5f15"},{"location":"databases/MySQL/%E7%B4%A2%E5%BC%95/#521-alter-table","text":"\u8bed\u6cd5\u89c4\u5219 1 ALTER TABLE \u8868\u540d ADD [ UNIQUE | FULLTEXT | SPATIAL ] [ INDEX | KEY ] [ \u7d22\u5f15\u540d ] ( \u5b57\u6bb5\u540d [( \u957f\u5ea6 )] [ ASC | DESC ]) \u4f8b\uff1a 1 ALTER TABLE accounts ADD INDEX user ( username );","title":"5.2.1 \u4f7f\u7528ALTER TABLE\u8bed\u53e5\u521b\u5efa\u7d22\u5f15"},{"location":"databases/MySQL/%E7%B4%A2%E5%BC%95/#522-create-index","text":"\u8bed\u6cd5\u89c4\u5219 1 CREATE [ UNIQUE | FULLTEXT | SPATIAL ] INDEX \u7d22\u5f15\u540d ON \u8868\u540d ( \u5b57\u6bb5\u540d [( \u957f\u5ea6 )] [ ASC | DESC ]) 1 CREATE UNIQUE INDEX user on accounts ( username );","title":"5.2.2 \u4f7f\u7528CREATE INDEX\u521b\u5efa\u7d22\u5f15"},{"location":"databases/MySQL/%E7%B4%A2%E5%BC%95/#6","text":"","title":"6. \u5220\u9664\u7d22\u5f15"},{"location":"databases/MySQL/%E7%B4%A2%E5%BC%95/#61-alter-table","text":"\u8bed\u6cd5\u89c4\u5219 1 ALTER TABLE \u8868\u540d DROP INDEX \u7d22\u5f15\u540d ;","title":"6.1 \u4f7f\u7528ALTER TABLE\u5220\u9664\u7d22\u5f15"},{"location":"databases/MySQL/%E7%B4%A2%E5%BC%95/#62-drop-index","text":"1 DROP INDEX \u7d22\u5f15\u540d ON \u8868\u540d ;","title":"6.2 \u4f7f\u7528DROP INDEX\u8bed\u53e5\u5220\u9664\u7d22\u5f15"},{"location":"databases/MySQL/%E7%B4%A2%E5%BC%95/#7","text":"1 SHOW INDEX FROM city ;","title":"7. \u67e5\u770b\u7d22\u5f15"},{"location":"databases/MySQL/%E7%B4%A2%E5%BC%95/#8","text":"\u5efa\u8868\u65f6\u4e00\u5b9a\u8981\u6709\u4e3b\u952e\uff0c\u4e00\u822c\u662f\u4e00\u4e2a\u65e0\u5173\u5217 \u9009\u62e9\u552f\u4e00\u6027\u7d22\u5f15 \u9650\u5236\u6240\u6709\u7684\u6570\u76ee \u5927\u8868\u52a0\u7d22\u5f15\u9700\u8981\u5728\u4e1a\u52a1\u4e0d\u7e41\u5fd9\u671f\u95f4\u64cd\u4f5c \u5c3d\u91cf\u5c11\u5728\u7ecf\u5e38\u66f4\u65b0\u503c\u5f97\u5217\u4e0a\u521b\u5efa\u7d22\u5f15","title":"8. \u7d22\u5f15\u5efa\u7acb\u539f\u5219"},{"location":"linux/ShellScript/","text":"Shell\u811a\u672c\u57fa\u7840 \u00b6 \u4e00\u3001\u53d8\u91cf \u00b6 1. \u53d8\u91cf\u5206\u7c7b \u00b6 1.1 \u73af\u5883\u53d8\u91cf \u00b6 \u7528\u6765\u5b58\u50a8\u6709\u5173shell\u4f1a\u8bdd\u548c\u5de5\u4f5c\u73af\u5883\u7684\u4fe1\u606f\u3002\u5728bash shell\u4e2d\u73af\u5883\u53d8\u91cf\u5206\u4e3a\u5168\u5c40\u53d8\u91cf\u548c\u5c40\u90e8\u53d8\u91cf\u3002 \u73af\u5883\u53d8\u91cf\uff1a \u5168\u5c40\u73af\u5883\u53d8\u91cf\uff1a\u5bf9\u4e8eshell\u4f1a\u8bdd\u548c\u6240\u6709\u751f\u6210\u7684\u5b50shell\u90fd\u662f\u53ef\u89c1\u7684\u3002 \u5c40\u90e8\u73af\u5883\u53d8\u91cf\uff1a\u53ea\u5bf9\u521b\u5efa\u5b83\u4eec\u7684shell\u53ef\u89c1 \u4f7f\u7528 env \u6216 printenv \u67e5\u770b\u5168\u5c40\u53d8\u91cf\uff0c\u6240\u6709\u7684\u73af\u5883\u53d8\u91cf\u540d\u5747\u4f7f\u7528\u5927\u5199\u5b57\u6bcd\u3002 1 2 3 4 5 6 7 #!/bin/bash # \u73af\u5883\u53d8\u91cf echo \"User Info:\" echo \"user: $USER \" echo \"UID : $EUID \" echo \"home: $HOME \" echo \u201c $HOSTNAME \u201d \u5e38\u7528\u9ed8\u8ba4\u73af\u5883\u53d8\u91cf \u53d8\u91cf \u63cf\u8ff0 HOME \u5f53\u524d\u7528\u6237\u4e3b\u76ee\u5f55 BASH \u5f53\u524dshell\u7684\u5168\u8def\u5f84\u540d\uff08/bin/bash\uff09 BASH_SOURCE \u542b\u6709\u5f53\u524d\u6b63\u5728\u6267\u884c\u7684shell\u51fd\u6570\u6240\u5728\u6e90\u6587\u4ef6\u540d\u7684\u6570\u7ec4 FUNCTION \u5f53\u524d\u6267\u884c\u7684shell\u51fd\u6570\u7684\u540d\u79f0 HOSTNAME \u5f53\u524d\u4e3b\u673a\u7684\u540d\u79f0 LINENO \u5f53\u524d\u6267\u884c\u7684\u811a\u672c\u7684\u884c\u53f7 PWD \u5f53\u524d\u5de5\u4f5c\u76ee\u5f55 1.2 \u7528\u6237\u53d8\u91cf \u00b6 \u53d8\u91cf\u547d\u540d\u89c4\u5219\uff1a \u7531\u5b57\u6bcd\u3001\u6570\u5b57\u548c\u4e0b\u5212\u7ebf\u7ec4\u6210\u5927\u5c0f\u5199\u654f\u611f \u5927\u5c0f\u5199\u654f\u611f \u7528\u6237\u53d8\u91cf\u7684\u5206\u7c7b\uff1a \u5c40\u90e8\u7528\u6237\u53d8\u91cf \u5168\u5c40\u73af\u5883\u53d8\u91cf\uff1a\u4f7f\u7528 export \u53d8\u91cf\u540d \u5c06\u5c40\u90e8\u53d8\u91cf\u5bfc\u51fa\u5230\u5168\u5c40\u73af\u5883\u4e2d\u3002 1 2 3 4 5 6 #!/bin/bash # \u7528\u6237\u53d8\u91cf var1 = 100 var2 = hello var3 = \"hello world\" echo \" $var1 $var2 $var3 \" 1.3 \u7279\u6b8a\u53d8\u91cf \u00b6 \u53d8\u91cf \u542b\u4e49 $0 \u5f53\u524d\u811a\u672c\u7684\u6587\u4ef6\u540d $n \u4f20\u9012\u7ed9\u811a\u672c\u6216\u51fd\u6570\u7684\u53c2\u6570\u3002n \u662f\u4e00\u4e2a\u6570\u5b57 $# \u4f20\u9012\u7ed9\u811a\u672c\u6216\u51fd\u6570\u7684\u53c2\u6570\u4e2a\u6570\u3002 $* \u4f20\u9012\u7ed9\u811a\u672c\u6216\u51fd\u6570\u7684\u6240\u6709\u53c2\u6570\u3002 $@ \u4f20\u9012\u7ed9\u811a\u672c\u6216\u51fd\u6570\u7684\u6240\u6709\u53c2\u6570 $? \u4e0a\u4e2a\u547d\u4ee4\u7684\u9000\u51fa\u72b6\u6001\uff0c\u6216\u51fd\u6570\u7684\u8fd4\u56de\u503c\u3002 $$ \u5f53\u524dShell\u8fdb\u7a0bID\u3002\u5bf9\u4e8e Shell \u811a\u672c\uff0c\u5c31\u662f\u8fd9\u4e9b\u811a\u672c\u6240\u5728\u7684\u8fdb\u7a0bID\u3002 1 2 3 4 5 6 7 8 9 #!/bin/bash echo \"Total Number of Parameters : $# \" echo \"File Name: $0 \" echo \"First Parameter : $1 \" echo \"First Parameter : $2 \" echo \"Quoted Values: $@ \" echo \"Quoted Values: $* \" echo \"PID $$ \" echo \" $? \" $@ \u4e0e $* \u7684\u533a\u522b $* \u548c $@ \u90fd\u8868\u793a\u4f20\u9012\u7ed9\u51fd\u6570\u6216\u811a\u672c\u7684\u6240\u6709\u53c2\u6570\uff0c\u4e0d\u88ab\u53cc\u5f15\u53f7(\" \")\u5305\u542b\u65f6\uff0c\u90fd\u4ee5\"$1\" \"$2\" \u2026 \"$n\" \u7684\u5f62\u5f0f\u8f93\u51fa\u6240\u6709\u53c2\u6570\u3002 \u4f46\u662f\u5f53\u5b83\u4eec\u88ab\u53cc\u5f15\u53f7(\" \")\u5305\u542b\u65f6\uff0c\"$*\" \u4f1a\u5c06\u6240\u6709\u7684\u53c2\u6570\u4f5c\u4e3a\u4e00\u4e2a\u6574\u4f53\uff0c\u4ee5\"$1 $2 \u2026 $n\"\u7684\u5f62\u5f0f\u8f93\u51fa\u6240\u6709\u53c2\u6570\uff1b\"$@\" \u4f1a\u5c06\u5404\u4e2a\u53c2\u6570\u5206\u5f00\uff0c\u4ee5\"$1\" \"$2\" \u2026 \"$n\" \u7684\u5f62\u5f0f\u8f93\u51fa\u6240\u6709\u53c2\u6570\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 #!/bin/bash echo '$@:' for i in $@ ; do echo $i done echo '\"$@:\"' for i in \" $@ \" ; do echo $i done echo '$*:' for i in $* ; do echo $i done echo '\"$*:\"' for i in \" $* \" ; do echo $i done \u7ed3\u679c\uff1a $@ : 1 2 3 \" $* \" : 1 2 3 $@ : 1 2 3 \" $* \" : 1 2 3 2.\u53d8\u91cf\u5b9a\u4e49 \u00b6 1. \u53ea\u8bfb\u53d8\u91cf \u00b6 1 2 3 4 root@localhost:~# cat file.sh #!/bin/bash readonly hours_per_day = 24 hours_per_day = 12 \u66f4\u6539\u53d8\u91cf\u4f1a\u89e6\u53d1\u5f02\u5e38 1 2 root@localhost:~# ./file.sh ./file.sh: line 3 : hours_per_day: readonly variable 3. \u53d8\u91cf\u66ff\u6362 \u00b6 \u8bed\u6cd5 \u8bf4\u660e ${\u53d8\u91cf\u540d#\u5339\u914d\u89c4\u5219} \u4ece\u53d8\u91cf\u5f00\u5934\u8fdb\u884c\u89c4\u5219\u5339\u914d\uff0c\u5c06\u7b26\u5408\u6700\u77ed\u7684\u6570\u636e\u5220\u9664 ${\u53d8\u91cf\u540d##\u5339\u914d\u89c4\u5219} \u4ece\u53d8\u91cf\u5f00\u5934\u8fdb\u884c\u89c4\u5219\u5339\u914d\uff0c\u5c06\u7b26\u5408\u6700\u957f\u7684\u6570\u636e\u5220\u9664 ${\u53d8\u91cf\u540d%\u5339\u914d\u89c4\u5219} \u4ece\u53d8\u91cf\u5c3e\u90e8\u8fdb\u884c\u89c4\u5219\u5339\u914d\uff0c\u5c06\u7b26\u5408\u6700\u77ed\u7684\u6570\u636e\u5220\u9664 ${\u53d8\u91cf\u540d%%\u5339\u914d\u89c4\u5219} \u4ece\u53d8\u91cf\u5c3e\u90e8\u8fdb\u884c\u89c4\u5219\u5339\u914d\uff0c\u5c06\u7b26\u5408\u6700\u957f\u7684\u6570\u636e\u5220\u9664 ${\u53d8\u91cf\u540d/\u65e7\u5b57\u7b26\u4e32/\u65b0\u5b57\u7b26\u4e32} \u53d8\u91cf\u5185\u5bb9\u7b26\u5408\u65e7\u5b57\u7b26\u4e32\u89c4\u5219\uff0c\u5219\u7b2c\u4e00\u4e2a\u65e7\u5b57\u7b26\u4e32\u4f1a\u88ab\u65b0\u5b57\u7b26\u4e32\u53d6\u4ee3 ${\u53d8\u91cf\u540d//\u65e7\u5b57\u7b26\u4e32/\u65b0\u5b57\u7b26\u4e32} \u53d8\u91cf\u5185\u5bb9\u7b26\u5408\u65e7\u5b57\u7b26\u4e32\u89c4\u5219\uff0c\u5219\u5168\u90e8\u7684\u65e7\u5b57\u7b26\u4e32\u4f1a\u88ab\u65b0\u5b57\u7b26\u4e32\u53d6\u4ee3 4. \u53d8\u91cf\u6d4b\u8bd5\uff08\u4e0d\u5e38\u7528\uff09 \u00b6 \u8fd0\u7b97\u7b26 \u7528\u9014 ${varname:-word} \u5982\u679c\u53d8\u91cf\u5b58\u5728\u4e14\u975enull\uff0c\u5219\u8fd4\u56de\u5176\u503c\uff1b\u5426\u5219\u8fd4\u56deword ${varname:=word} \u5982\u679c\u53d8\u91cf\u5b58\u5728\u4e14\u975enull\uff0c\u5219\u8fd4\u56de\u5176\u503c\uff1b\u5426\u5219\u8bbe\u7f6e\u5b83\u7684\u503c\u4e3aword\u5e76\u8fd4\u56de ${varname:+word} \u5982\u679c\u53d8\u91cf\u5b58\u5728\u4e14\u975enull\uff0c\u5219\u8fd4\u56deword;\u5426\u5219\u8fd4\u56denull ${varname:?message} \u5982\u679c\u53d8\u91cf\u5b58\u5728\u4e14\u975enull,\u5219\u8fd4\u56de\u5176\u503c\uff1b\u5426\u5219\u663e\u793amessage\uff0c\u5e76\u9000\u51fa\u5f53\u524d\u811a\u672c\u6216\u547d\u4ee4; message\u9ed8\u8ba4\u4fe1\u606f\u4e3a\uff1aparameter null or not set 5.\u5b57\u7b26\u4e32\u5904\u7406 \u00b6 5.1 \u8ba1\u7b97\u5b57\u7b26\u4e32\u957f\u5ea6 \u00b6 \u65b9\u6cd51\uff1a ${#string} \u65b9\u6cd52\uff1a expr length \"$string\" 5.2 \u83b7\u53d6\u5b57\u7b26\u5728\u5b57\u7b26\u4e32\u4e2d\u7684\u7d22\u5f15\u4f4d\u7f6e \u00b6 expr index $string substring 5.3 \u8ba1\u7b97\u5b50\u4e32\u957f\u5ea6 \u00b6 expr match $string substr 1 expr match \"hello world\" .*w # 7 5.4 \u62bd\u53d6\u5b50\u4e32 \u00b6 \u8bed\u6cd5 \u8bf4\u660e ${string:position} \u4ecestring\u4e2d\u7684position\u5f00\u59cb ${string:position:length} \u4eceposition\u5f00\u59cb\uff0c\u5339\u914d\u957f\u5ea6\u4e3alength ${string:-position} \u4ece\u53f3\u8fb9\u5f00\u59cb\u5339\u914d ${string:(position)} \u4ece\u5de6\u8fb9\u5f00\u59cb\u5339\u914d expr substr $string $postion $length \u4eceposition\u5f00\u59cb\uff0c\u5339\u914d\u957f\u5ea6\u4e3alength \u6ce8\u610f\uff1a\u4f7f\u7528expr\u7d22\u5f15\u8ba1\u6570\u4ece1\u5f00\u59cb\uff1b\u4f7f\u7528${:}\uff0c\u7d22\u5f15\u8ba1\u6570\u4ece1\u5f00\u59cb\u3002 6. \u547d\u4ee4\u66ff\u6362 \u00b6 \u628a\u547d\u4ee4\u7684\u6267\u884c\u7ed3\u679c\u8d4b\u7ed9\u53d8\u91cf 1 2 3 4 5 #!/bin/bash # \u65b9\u6cd51 time = ` date +%y%m%d ` # \u65b9\u6cd52 \u63a8\u8350\u4f7f\u7528 time = $( date +%y%m%d ) 7.\u6709\u7c7b\u578b\u53d8\u91cf \u00b6 \u4f7f\u7528 declare \u6216 typeset \u5b9a\u4e49\u53d8\u91cf\u7c7b\u578b \u53c2\u6570 \u542b\u4e49 -r \u5c06\u53d8\u91cf\u8bbe\u4e3a\u53ea\u8bfb -i \u5c06\u53d8\u91cf\u8bbe\u4e3a\u6574\u6570 -a \u5c06\u53d8\u91cf\u5b9a\u4e49\u4e3a\u6570\u7ec4 -f \u663e\u793a\u6b64\u811a\u672c\u524d\u5b9a\u4e49\u8fc7\u5f97\u6240\u6709\u51fd\u6570\u53ca\u5185\u5bb9 -F \u4ec5\u663e\u793a\u6b64\u811a\u672c\u524d\u5b9a\u4e49\u8fc7\u5f97\u51fd\u6570\u540d -x \u5c06\u53d8\u91cf\u58f0\u660e\u4e3a\u73af\u5883\u53d8\u91cf \u4e8c\u3001\u6570\u7ec4 \u00b6 1. \u6570\u7ec4\u7684\u5b9a\u4e49 \u00b6 1.1 \u65b9\u6cd5\u4e00\uff1a 1 arr =( 1 2 3 4 5 ) 1.2 \u65b9\u6cd5\u4e8c\uff1a 1 2 3 arr [ 0 ]= 1 arr [ 1 ]= 2 arr [ 2 ]= 3 2. \u8f93\u51fa\u6570\u7ec4\u4e2d\u7684\u503c \u00b6 1 2 3 4 5 6 7 root@localhost:~# arr =( 1 2 3 4 5 ) root@localhost:~# echo ${ arr [2] } 3 root@localhost:~# echo ${ arr [*] } 1 2 3 4 5 root@localhost:~# echo ${ arr [@] } 1 2 3 4 5 3. \u5173\u8054\u6570\u7ec4 \u00b6 \u666e\u901a\u6570\u7ec4\u53ea\u80fd\u4f7f\u7528\u6574\u6570\u4f5c\u4e3a\u7d22\u5f15\u503c\uff0c\u800c\u5173\u8054\u6570\u7ec4\u53ef\u4ee5\u4f7f\u7528\u4efb\u610f\u6587\u672c\u4f5c\u4e3a\u7d22\u5f15\u503c\uff08\u6709\u70b9\u7c7b\u4f3c\u4e8ePython\u4e2d\u7684\u5b57\u5178\uff09\uff0c\u5173\u8054\u6570\u7ec4\u53ea\u5728bash 4.0\u4ee5\u4e0a\u652f\u6301\u3002 1 2 3 4 5 6 7 8 root@localhost:~# declare -A person root@localhost:~# person =([ name ]= \"Wang\" [ age ]= 18 ) root@localhost:~# echo ${ person [name] } Wang root@localhost:~# echo ${ person [age] } 18 root@localhost:~# echo ${ person [*] } Wang 18 \u4e09\u3001\u6570\u5b66\u8ba1\u7b97 \u00b6 1. let \u00b6 let\u547d\u4ee4\u53ef\u4ee5\u76f4\u63a5\u6267\u884c\u57fa\u672c\u7684\u7b97\u6570\u64cd\u4f5c\uff0c\u5e76\u4e14\u53d8\u91cf\u540d\u4e4b\u524d\u4e0d\u9700\u8981\u6dfb\u52a0 $ \u3002 1 2 3 4 5 6 7 8 9 10 gp@gp:~$ a = 2 gp@gp:~$ b = 3 gp@gp:~$ let c = a+b gp@gp:~$ echo $c 5 # let \u8fd8\u53ef\u4ee5\u6267\u884c\u81ea\u52a0\u81ea\u51cf\u64cd\u4f5c gp@gp:~$ let a++ gp@gp:~$ let b-- gp@gp:~$ echo $a $b 3 2 2. expr \u00b6 1 2 3 4 #!/bin/bash # expr \u548c = \u4e4b\u95f4\u8981\u6709\u4e00\u4e2a\u7a7a\u683c var = expr 1 + 2 echo $var expr \u64cd\u4f5c\u7b26\u5bf9\u7167\u8868 \u64cd\u4f5c\u7b26 \u542b\u4e49 num1 | num2 num1\u4e0d\u4e3a\u7a7a\u4e14\u975e0\uff0c\u8fd4\u56denum1\uff1b\u5426\u5219\u8fd4\u56denum2 num1 & num2 num1\u4e0d\u4e3a\u7a7a\u4e14\u975e0\uff0c\u8fd4\u56denum1\uff1b\u5426\u5219\u8fd4\u56de0 num1 < num2 num1\u5c0f\u4e8enum2\uff0c\u8fd4\u56de1\uff1b\u5426\u5219\u8fd4\u56de0 num1 <= num2 num1\u5c0f\u4e8e\u7b49\u4e8enum2\uff0c\u8fd4\u56de1\uff1b\u5426\u5219\u8fd4\u56de0 num1 = num2 num1\u7b49\u4e8enum2\uff0c\u8fd4\u56de1\uff1b\u5426\u5219\u8fd4\u56de0 num1 != num2 num1\u4e0d\u7b49\u4e8enum2\uff0c\u8fd4\u56de1\uff1b\u5426\u5219\u8fd4\u56de0 num1 > num2 num1\u5927\u4e8enum2\uff0c\u8fd4\u56de1\uff1b\u5426\u5219\u8fd4\u56de0 num1 >= num2 num1\u5927\u4e8e\u7b49\u4e8enum2\uff0c\u8fd4\u56de1\uff1b\u5426\u5219\u8fd4\u56de0 num1 + num2 \u6c42\u548c num1 - num2 \u6c42\u5dee num1 * num2 \u6c42\u79ef num1 / num2 \u6c42\u5546 num1 % num2 \u6c42\u4f59 \u4f7f\u7528\u65f6\u8981\u5bf9\u7279\u6b8a\u5b57\u7b26\u8fdb\u884c\u8f6c\u4e49 expr 5 \\* 2 3. [ ] \u4e0e (( )) \u00b6 1 2 3 #!/bin/bash var = $ [ 1 + 2 ] var = $(( 3 + 4 )) 4. bc \u00b6 \u4e0a\u8ff0\u4e24\u79cd\u53ea\u80fd\u8ba1\u7b97\u6574\u6570\uff0c\u5bf9\u4e8e\u6d6e\u70b9\u6570\u9700\u8981\u4f7f\u7528 bc \u5728\u811a\u672c\u4e2d\u4f7f\u7528 bc \u7684\u683c\u5f0f\uff1a 1 variable = ` echo \"option; expression\" | bc ` 1 2 3 #!/bin/bash var = ` echo \"scale=2;5/3\" | bc ` echo $var \u56db\u3001\u903b\u8f91\u63a7\u5236 \u00b6 1. if \u00b6 1.1 if-then \u00b6 \u683c\u5f0f\uff1a 1 2 3 4 if command then command fi \u4f8b\uff1a 1 2 3 4 5 #!/bin/bash if date then echo \"command is succeed\" fi 1.2 if-then-else \u00b6 \u683c\u5f0f\uff1a 1 2 3 4 5 6 if command then command else command fi \u4f8b\uff1a 1 2 3 4 5 6 7 8 #!/bin/bash # \u67e5\u627e\u7cfb\u7edf\u4e2d\u662f\u5426\u5b58\u5728httpd\u7528\u6237 if grep httpd /etc/passwd then echo \"httpd is exist\" else echo \"httpd not find\" fi 1.3 if\u5d4c\u5957 \u00b6 \u683c\u5f0f\uff1a 1 2 3 4 5 6 7 8 if command then command elif command command else command fi 2. test \u00b6 \u529f\u80fd\uff1a \u6570\u503c\u6bd4\u8f83 \u5b57\u7b26\u4e32\u6bd4\u8f83 \u6587\u4ef6\u6bd4\u8f83 \u683c\u5f0f\uff1a 1 2 3 test condition \u6216 [ command ] 2.1 \u6570\u503c\u6bd4\u8f83 \u00b6 \u6bd4\u8f83 \u63cf\u8ff0 -eq \u7b49\u4e8e -ge \u5927\u4e8e\u7b49\u4e8e -gt \u5927\u4e8e -le \u5c0f\u4e8e\u7b49\u4e8e -lt \u5c0f\u4e8e -ne \u4e0d\u7b49\u4e8e \u4f8b\uff1a 1 2 3 4 5 6 7 8 9 #!/bin/bash date if [ $? -eq 0 ] ; then echo \"command is succeed\" fi # \u6216 if test date ; then echo \"command is succeed\" fi 2.2 \u5b57\u7b26\u4e32\u6bd4\u8f83 \u00b6 \u6bd4\u8f83 \u63cf\u8ff0 \u4f8b str1 = str2 \u5b57\u7b26\u4e32\u662f\u5426\u76f8\u540c str1 != str2 \u5b57\u7b26\u4e32\u662f\u5426\u4e0d\u540c str1 < str2 str1\u662f\u5426\u6bd4str2\u5c0f str1 > str2 str1\u662f\u5426\u6bd4str2\u5927 [ b \\> a ] && echo \"true\" \uff08\u6ce8\u610f>\u9700\u8981\u8f6c\u4e49\uff09 -n str \u5b57\u7b26\u4e32\u957f\u5ea6\u975e0\u4e3a\u771f [ -n \"str\" ] && echo \"str is not null\" -z str \u5b57\u7b26\u4e32\u957f\u5ea6\u4e3a0\u4e3a\u771f [ -z \"\" ] && echo \"str is null\" 2.3 \u6587\u4ef6\u6bd4\u8f83 \u00b6 \u6bd4\u8f83 \u63cf\u8ff0 -d file \u68c0\u67e5file\u662f\u5426\u5b58\u5728\u5e76\u662f\u4e00\u4e2a\u76ee\u5f55 -f file \u68c0\u67e5file\u662f\u5426\u5b58\u5728\u5e76\u662f\u4e00\u4e2a\u76ee\u5f55 -e file \u68c0\u67e5file\u662f\u5426\u5b58\u5728 -r file \u68c0\u67e5file\u662f\u5426\u5b58\u5728\u5e76\u53ef\u8bfb -s file \u68c0\u67e5file\u662f\u5426\u5b58\u5728\u5e76\u975e\u7a7a -w file \u68c0\u67e5file\u662f\u5426\u5b58\u5728\u5e76\u53ef\u5199 -x file \u68c0\u67e5file\u662f\u5426\u5b58\u5728\u5e76\u53ef\u6267\u884c -O file \u68c0\u67e5file\u662f\u5426\u5b58\u5728\u5e76\u5c5e\u5f53\u524d\u7528\u6237\u6240\u6709 -G file \u68c0\u67e5file\u662f\u5426\u5b58\u5728\u5e76\u4e14\u9ed8\u8ba4\u7ec4\u4e0e\u5f53\u524d\u7528\u6237\u76f8\u540c file1 -nt file2 file1\u662f\u5426\u6bd4file2\u65b0 file1 -ot file2 file1\u662f\u5426\u6bd4file2\u65e7 2.4 \u590d\u5408\u6761\u4ef6 \u00b6 1 2 [ condition1 ] && [ condition2 ] [ condition1 ] || [ condition2 ] 3. case \u00b6 \u683c\u5f0f\uff1a 1 2 3 4 5 case variable in pattern1 | pattern2 ) command1 ;; pattern3 ) command2 ;; * ) default command ;; esca \u4f8b\uff1a 1 2 3 4 5 6 7 8 9 10 #!/bin/bash read -p \"input something: \" var case $var in [ 0 -9 ]) echo \"number\" ;; [ a-z ]) echo \"character\" ;; * ) echo \"other\" ;; esac 4. for \u00b6 4.1 bash\u4e2d\u7684for \u00b6 \u683c\u5f0f\uff1a 1 2 3 4 for var in list do command done \u4f8b1\uff1a\u67e5\u770b\u670d\u52a1\u72b6\u6001 1 2 3 4 5 6 #!/bin/bash for service in apache2 mysqld zabbix-server zabbix-agent do status = $( systemctl status mysql | awk '/Active/ {print $2,$3}' ) echo $service $status done \u4f8b2\uff1a\u4f7f\u7528\u901a\u914d\u7b26 1 2 3 4 5 6 7 8 9 10 11 12 #!/bin/bash # \u6ce8\u610f\u5728$file\u4e0a\u52a0\u201c\u201d\uff0c\u5426\u5219\u5982\u679c\u51fa\u73b0\u5e26\u7a7a\u683c\u7684\u76ee\u5f55\u540d\uff0c\u811a\u672c\u4f1a\u51fa\u9519 for file in /tmp/* do if [ -d \" $file \" ] then echo \" $file \" is a directory elif [ -f \" $file \" ] then echo \" $file \" is a file fi done 4.2 C \u8bed\u8a00\u98ce\u683c\u7684for \u00b6 \u4f8b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 #!/bin/bash for (( i = 1 ; i< = 10 ; i++ )) do echo $i done #!/bin/bash # \u5355\u53d8\u91cf for (( i = 1 ; i< = 10 ; i++ )) do echo $i done # \u591a\u53d8\u91cf for (( i = 1 ,j = 10 ; i< = 10 ; i++,j-- )) do echo $i $j done 5. while \u00b6 \u4f8b\uff1a\u68c0\u6d4b\u7ad9\u70b9\u72b6\u6001 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 #!/bin/bash urls = \" https://www.baidu.com https://www.taobao.com https://www.jd.com/abc https://www.12306.cn/index/ 192.168.1.111 \" for url in $urls ; do count = 0 while [ $count -lt 3 ] ; do STATUS = $( curl -I -m 10 -o /dev/null -s -w % { http_code } $url ) if [ $STATUS -eq 200 ] ; then echo \" $url OK\" break 1 fi count = $(( $count + 1 )) done if [ $count -eq 3 ] ; then echo \" $url Error\" fi done 6. until \u00b6 1 2 3 4 5 6 #!/bin/bash var = 10 until [ $var -eq 0 ] ; do var = $ [ $var -2 ] echo $var done 7. \u63a7\u5236\u5faa\u73af \u00b6 7.1 break \u00b6 1 2 3 4 5 6 7 8 9 #!/bin/bash # break \u8df3\u51fa\u5f53\u524d\u5faa\u73af # break n \u8df3\u51fan\u5c42\u5faa\u73af for (( i = 0 ; i< 10 ; i++ )) ; do if [ $i -eq 5 ] ; then break fi echo $i done 7.2 continue \u00b6 \u4e94\u3001\u8f93\u5165 \u00b6 1. \u547d\u4ee4\u884c\u53c2\u6570 \u00b6 \u4f8b1\uff1a 1 2 3 4 5 #!/bin/bash echo $1 + $2 = $ [ $1 + $2 ] ./add.sh 3 4 3 +4 = 7 \u4f8b2\uff1a shift 1 2 3 4 5 6 #!/bin/bash # \u628a\u53d8\u91cf\u7684\u4f4d\u7f6e\u5411\u5de6\u79fb while [ -n \" $1 \" ] ; do echo $1 shift done 2.getopts \u00b6 \u683c\u5f0f\uff1a getopts optstring variable optstring: \u9009\u9879\u5b57\u6bcd\uff0c\u5982\u679c\u5b57\u6bcd\u8981\u6c42\u6709\u53c2\u6570\u5c31\u52a0\u4e00\u4e2a : \uff0c\u8981\u53bb\u6389\u9519\u8bef\u6d88\u606f\u7684\u8bdd\u53ef\u4ee5\u5728optstring\u524d\u52a0\u4e00\u4e2a : variable: \u4fdd\u5b58\u5f53\u524d\u53c2\u6570 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 #!/bin/bash # getopts\u7684\u7528\u6cd5 # opt \u4f1a\u4fdd\u5b58\u8f93\u5165\u7684\u53c2\u6570\uff0c\u5982 r i # OPTARG\u4fdd\u5b58\u53c2\u6570\u503c # \u53c2\u6570\u9700\u8981\u4e00\u4e2a\u503c\u5c31\u5728\u53c2\u6570\u540e\u9762\u52a0\u4e00\u4e2a: \u5982i: while getopts ri: opt do case \" $opt \" in i ) echo \"install service $OPTARG \" ;; r ) echo \"remove all service\" ;; * ) echo \"Unknown option: $opt \" ;; esac done root@localhost:/# ./getopts.sh -i apache2 install service apache2 root@localhost:/# ./getopts.sh -r remove all service root@localhost:/# ./getopts.sh -a ./getopts.sh: illegal option -- a Unknown option: ? 3. \u83b7\u5f97\u7528\u6237\u8f93\u5165 read \u00b6 3.1 \u666e\u901a\u7528\u6cd5 \u00b6 1 2 3 #!/bin/bash read name echo $name 3.2 \u6307\u5b9a\u63d0\u793a\u7b26 \u00b6 1 2 3 #!/bin/bash read -p \"Enter your name: \" name echo \"Hello $name \" 3.3 \u6307\u5b9a\u8d85\u65f6\u65f6\u95f4 \u00b6 1 2 3 4 5 6 7 #!/bin/bash if read -t 5 -p \"Enter your name: \" name then echo \"Hello $name \" else echo \"TIME OUT\" fi 3.4 \u9690\u85cf\u6570\u636e \u00b6 1 2 3 #!/bin/bash read -s -p \"Enter passwd: \" passwd echo \" $passwd \" 3.5 \u9650\u5236\u8f93\u5165\u957f\u5ea6 \u00b6 1 2 3 4 #!/bin/bash read -n1 -p \"Do you want continue[Y/N]?\" answer echo echo \" $answer \" \u516d\u3001\u8f93\u51fa \u00b6 \u663e\u793a\u811a\u672c\u8f93\u51fa\u7684\u65b9\u6cd5\uff1a \u5728\u663e\u793a\u5668\u4e0a\u663e\u793a \u5c06\u8f93\u51fa\u91cd\u5b9a\u5411\u5230\u6587\u4ef6 \u63cf\u8ff0\u7b26 \u7f29\u5199 \u63cf\u8ff0 0 STDIN \u6807\u51c6\u8f93\u5165 1 STDOUT \u6807\u51c6\u8f93\u51fa 2 STDERR \u6807\u51c6\u9519\u8bef 1. \u5728\u811a\u672c\u4e2d\u91cd\u5b9a\u5411 \u00b6 1. \u4e34\u65f6\u91cd\u5b9a\u5411 \u00b6 \u4f7f\u7528\u573a\u666f\uff1a\u5728\u811a\u672c\u4e2d\u751f\u6210\u9519\u8bef\u6d88\u606f 1 2 3 #!/bin/bash echo \"This is an error message\" > & 2 echo \"This is normal output\" \u9ed8\u8ba4\u60c5\u51b5\u4e0bLinux \u4f1a\u5c06STDERR\u5b9a\u5411\u5230STDOUT 1 2 3 $./error.sh This is an error message This is normal output \u5728\u6267\u884c\u811a\u672c\u7684\u65f6\u5019\u91cd\u5b9a\u5411STDERR\uff0cERR\u6587\u672c\u5c31\u4f1a\u88ab\u91cd\u5b9a\u5411 1 2 3 4 $ ./error.sh 2 > error.log This is normal output $ cat error.log This is an error message 2. \u6c38\u4e45\u91cd\u5b9a\u5411 \u00b6 \u7528exec\u547d\u4ee4\u544a\u8bc9shell\u5728\u6267\u884c\u811a\u672c\u671f\u95f4\u91cd\u5b9a\u5411\u67d0\u4e2a\u7279\u5b9a\u6587\u4ef6\u63cf\u8ff0\u7b26 1 2 3 4 5 6 #!/bin/bash exec 2 >errout echo \"This is error\" exec 1 >testout echo \"testout\" echo \"testout to errout\" > & 2 1 2 3 4 5 6 $ ./test.sh This is error $ cat errout testout to errout $ cat testout testout 2. \u8bb0\u5f55\u6d88\u606f \u00b6 tee : \u5c06\u8f93\u51fa\u4e00\u8fb9\u53d1\u9001\u5230\u663e\u793a\u5668\u4e00\u8fb9\u53d1\u9001\u5230\u65e5\u5fd7\u6587\u4ef6 tee \u9ed8\u8ba4\u4f1a\u8986\u76d6\u539f\u6765\u7684\u6587\u4ef6\uff0c\u53ef\u4ee5\u4f7f\u7528-a\u8ffd\u52a0 1 2 3 4 5 $ date | tee -a date.txt Fri Nov 23 11 :03:15 CST 2018 $ cat date.txt Fri Nov 23 11 :03:07 CST 2018 Fri Nov 23 11 :03:15 CST 2018 \u4e03\u3001\u51fd\u6570 \u00b6 1.\u51fd\u6570\u5b9a\u4e49 \u00b6 1 2 3 4 5 6 7 8 9 10 11 #!/bin/bash # \u5b9a\u4e49\u65b9\u5f0f1 function foo { echo \"This is a func\" } # \u5b9a\u4e49\u65b9\u5f0f2 bar () { echo \"This is another func\" } 2. \u51fd\u6570\u8c03\u7528 \u00b6 \u76f4\u63a5\u4f7f\u7528\u51fd\u6570\u540d\u8c03\u7528 3.\u8fd4\u56de\u503c \u00b6 3.1 \u9ed8\u8ba4\u9000\u51fa\u72b6\u6001\u7801 \u00b6 1 2 3 4 5 6 #!/bin/bash function foo { echo \"This is a func\" } foo echo \"Exit status is $? \" 3.2 \u4f7f\u7528return\u547d\u4ee4 \u00b6 1 2 3 4 5 6 7 #!/bin/bash function foo { echo \"Hello world\" return 2 } foo echo \"Exit status is $? \" 1 2 3 ./func.sh Hello world Exit status is 2 3.3 \u4f7f\u7528\u51fd\u6570\u8f93\u51fa \u00b6 1 2 3 4 5 6 7 8 #!/bin/bash function foo { echo \"Hello world\" } foo # \u628a\u51fd\u6570\u7684\u8f93\u51fa\u8d4b\u503c\u7ed9\u53d8\u91cf result = ` foo ` echo \"Exit status is $result \" 1 2 3 $./func.sh Hello world Exit status is Hello world 4. \u53c2\u6570 \u00b6 4.2 \u53c2\u6570\u4f20\u9012 \u00b6 1 2 3 4 5 #!/bin/bash function status { systemctl status $1 } status sshd 4.2 \u5c40\u90e8\u53d8\u91cf\u4e0e\u5168\u5c40\u53d8\u91cf \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 #!/bin/bash # \u5b9a\u4e49\u5168\u5c40\u53d8\u91cf hostname = \"web\" function foo { str = \"hello\" # \u4f7f\u7528 local \u5b9a\u4e49\u5c40\u90e8\u53d8\u91cf local user = \"http\" # \u53ef\u4ee5\u5728\u51fd\u6570\u5185\u4f7f\u7528\u5168\u5c40\u53d8\u91cf echo \" $hostname \" echo \" $user \" } foo # \u5728\u51fd\u6570\u4e2d\u5b9a\u4e49\u7684\u5c40\u90e8\u53d8\u91cf\u4e0d\u80fd\u5728\u5168\u5c40\u4f7f\u7528 echo \" $str $user \" 4.3 \u6570\u7ec4\u53d8\u91cf \u00b6 \u5982\u679c\u5c06\u6570\u7ec4\u53d8\u91cf\u4f5c\u4e3a\u51fd\u6570\u53c2\u6570\uff0c\u51fd\u6570\u53ea\u4f1a\u53d6\u6570\u7ec4\u53d8\u91cf\u7684\u7b2c\u4e00\u4e2a\u503c 1 2 3 4 5 6 7 8 9 #!/bin/bash function foo { arr = $1 echo \"The received array is ${ arr [*] } \" } myarr =( 1 2 3 4 5 ) foo $myarr # The received array is 1 \u89e3\u51b3\u65b9\u6cd5 1 2 3 4 5 6 7 8 9 10 #!/bin/bash function foo { arr = $@ echo \"The received array is ${ arr [*] } \" } myarr =( 1 2 3 4 5 ) # \u5c06\u8be5\u6570\u7ec4\u53d8\u91cf\u7684\u503c\u5206\u89e3\u6210\u5355\u4e2a\u7684\u503c\uff0c\u7136\u540e\u5c06\u8fd9\u4e9b\u503c\u4f5c\u4e3a\u51fd\u6570\u53c2\u6570\u4f7f\u7528\u3002 foo ${ myarr [*] } # The received array is 1 2 3 4 5 \u516b\u3001\u8f93\u51fa\u683c\u5f0f\u5316 \u00b6 1. C\u8bed\u8a00\u98ce\u683c\u7684\u683c\u5f0f\u5316 \u00b6 1 2 3 4 #!/bin/bash printf \"%-5s %-10s %-4s\\n\" NO. Name Mark printf \"%-5s %-10s %-4.2f\\n\" 1 Sarath 80 .3456 printf \"%-5s %-10s %-4.2f\\n\" 2 James 90 .9989 1 2 3 4 root@localhost:/tmp# ./test.sh NO. Name Mark 1 Sarath 80 .35 2 James 91 .00 2. echo \u00b6 2.1 \u4e0d\u6362\u884c \u00b6 echo -n \"hello world\" 2.2 \u8f6c\u4e49 \u00b6 echo -e \"hello\\t\\tworld\" 2.3 \u5f69\u8272\u8f93\u51fa \u00b6 \u989c\u8272 \u91cd\u7f6e \u9ed1 \u7ea2 \u7eff \u9ec4 \u84dd \u7d2b \u9752 \u767d \u524d\u666f\u8272 0 30 31 32 33 34 35 36 37 \u80cc\u666f\u8272 0 40 41 42 43 44 45 46 47 1 2 3 echo -e \"\\e[1;31m This is red test \\e[0m\" # \u6216 echo -e \"\\033[47;31m This is red test \\033[0m\" \u4e5d\u3001shell \u811a\u672c\u7684\u6267\u884c \u00b6 1. \u811a\u672c\u6267\u884c\u76844\u79cd\u65b9\u6cd5 \u00b6 1 2 3 4 5 6 #!/bin/bash # test.sh # \u8fd9\u91cc\u501f\u52a9SHLVL\u8fd9\u4e2a\u53d8\u91cf\uff0cSHLVL\u53ef\u4ee5\u663e\u793ashell\u7684\u5c42\u7ea7\uff0c # \u6bcf\u542f\u52a8\u4e00\u4e2ashell\uff0c\u8fd9\u4e2a\u503c\u5c31\u52a01 echo \"shell level : $SHLVL \" echo \"hello world!\" 1.1 \u5207\u6362\u5230shell\u811a\u672c\u6240\u5728\u76ee\u5f55\u6267\u884c \u00b6 1 2 3 4 5 root@localhost:/# cd /tmp/ root@localhost:/tmp# chmod +x test.sh root@localhost:/tmp# ./test.sh shell level :2 hello world! 1.2 \u4ee5\u7edd\u5bf9\u8def\u5f84\u6267\u884c \u00b6 1 2 3 4 root@localhost:~# chmod +x /tmp/test.sh root@localhost:~# /tmp/test.sh shell level :2 hello world! 1.3 \u76f4\u63a5\u4f7f\u7528bash\u6216sh \u6765\u6267\u884cbash shell\u811a\u672c \u00b6 1 2 3 4 5 6 root@localhost:/tmp# bash test.sh shell level :2 hello world! root@localhost:/tmp# sh test.sh shell level :1 hello world! 1.4 \u5728\u5f53\u524dshell \u73af\u5883\u4e2d\u6267\u884c \u00b6 1 2 3 4 5 6 root@localhost:/tmp# . test.sh shell level :1 hello world! root@localhost:/tmp# source test.sh shell level :1 hello world! \u603b\u7ed3\uff1a\u6ce8\u610f\u770bSHLVL\u7684\u503c\uff0c\u524d3\u79cd\u65b9\u5f0f\u90fd\u5728\u5b50shell\u4e2d\u6267\u884c\uff08sh\u9664\u5916\uff09\uff0c\u7b2c4\u79cd\u5728\u5f53\u524dshell\u79cd\u6267\u884c\u3002 2.\u8c03\u8bd5\u811a\u672c \u00b6 bash -x script.sh \u8ddf\u8e2a\u8c03\u8bd5shell\u811a\u672c \u4f8b\uff1a 1 2 3 4 5 root@localhost:/tmp# bash -x test.sh + echo 'shell level :2' shell level :2 + echo 'hello world!' hello world! -x \u6253\u5370\u6240\u6267\u884c\u7684\u6bcf\u4e00\u884c\u547d\u4ee4\u4ee5\u53ca\u5f53\u524d\u72b6\u6001 set -x : \u5728\u6267\u884c\u65f6\u663e\u793a\u53c2\u6570\u548c\u547d\u4ee4 set +x : \u7981\u6b62\u8c03\u8bd5 set -v : \u5f53\u547d\u4ee4\u8fdb\u884c\u8bfb\u53d6\u65f6\u663e\u793a\u8f93\u5165 set +v : \u7981\u6b62\u6253\u5370\u8f93\u5165 \u5341\u3001\u63a7\u5236\u811a\u672c \u00b6 1.\u5904\u7406\u4fe1\u53f7 \u00b6 1.1\u67e5\u770bLinux\u4fe1\u53f7 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 kill -l 1 ) SIGHUP 2 ) SIGINT 3 ) SIGQUIT 4 ) SIGILL 5 ) SIGTRAP 6 ) SIGABRT 7 ) SIGBUS 8 ) SIGFPE 9 ) SIGKILL 10 ) SIGUSR1 11 ) SIGSEGV 12 ) SIGUSR2 13 ) SIGPIPE 14 ) SIGALRM 15 ) SIGTERM 16 ) SIGSTKFLT 17 ) SIGCHLD 18 ) SIGCONT 19 ) SIGSTOP 20 ) SIGTSTP 21 ) SIGTTIN 22 ) SIGTTOU 23 ) SIGURG 24 ) SIGXCPU 25 ) SIGXFSZ 26 ) SIGVTALRM 27 ) SIGPROF 28 ) SIGWINCH 29 ) SIGIO 30 ) SIGPWR 31 ) SIGSYS 34 ) SIGRTMIN 35 ) SIGRTMIN+1 36 ) SIGRTMIN+2 37 ) SIGRTMIN+3 38 ) SIGRTMIN+4 39 ) SIGRTMIN+5 40 ) SIGRTMIN+6 41 ) SIGRTMIN+7 42 ) SIGRTMIN+8 43 ) SIGRTMIN+9 44 ) SIGRTMIN+10 45 ) SIGRTMIN+11 46 ) SIGRTMIN+12 47 ) SIGRTMIN+13 48 ) SIGRTMIN+14 49 ) SIGRTMIN+15 50 ) SIGRTMAX-14 51 ) SIGRTMAX-13 52 ) SIGRTMAX-12 53 ) SIGRTMAX-11 54 ) SIGRTMAX-10 55 ) SIGRTMAX-9 56 ) SIGRTMAX-8 57 ) SIGRTMAX-7 58 ) SIGRTMAX-6 59 ) SIGRTMAX-5 60 ) SIGRTMAX-4 61 ) SIGRTMAX-3 62 ) SIGRTMAX-2 63 ) SIGRTMAX-1 64 ) SIGRTMAX \u5728Linux\u7f16\u7a0b\u65f6\u4f1a\u9047\u5230\u7684\u6700\u5e38\u89c1\u7684Linux\u7cfb\u7edf\u4fe1\u53f7 \u4fe1 \u53f7 \u503c \u63cf \u8ff0 \u89e6\u53d1 1 SIGHUP \u6302\u8d77\u8fdb\u7a0b 2 SIGINT \u7ec8\u6b62\u8fdb\u7a0b Ctrl + C 3 SIGQUIT \u505c\u6b62\u8fdb\u7a0b 9 SIGKILL \u65e0\u6761\u4ef6\u7ec8\u6b62\u8fdb\u7a0b 15 SIGTERM \u5c3d\u53ef\u80fd\u7ec8\u6b62\u8fdb\u7a0b 17 SIGSTOP \u65e0\u6761\u4ef6\u505c\u6b62\u8fdb\u7a0b\uff0c\u4f46\u4e0d\u662f\u7ec8\u6b62\u8fdb\u7a0b 18 SIGTSTP \u505c\u6b62\u6216\u6682\u505c\u8fdb\u7a0b\uff0c\u4f46\u4e0d\u7ec8\u6b62\u8fdb\u7a0b Ctrl+Z 19 SIGCONT \u7ee7\u7eed\u8fd0\u884c\u505c\u6b62\u7684\u8fdb\u7a0b 1.2 \u6355\u6349\u4fe1\u53f7 \u00b6 \u683c\u5f0f\uff1a trap command signals \u4f8b 1 2 3 4 5 6 #!/bin/bash trap \"echo 'You Enter Ctrl + C'\" SIGINT for (( i = 0 ; i< 10 ; i++ )) ; do echo $i sleep 1 done 1 2 3 4 5 6 # ./signal.sh 0 1 ^CYou Enter Ctrl + C 2 ^CYou Enter Ctrl + C 2. \u9000\u51fa\u72b6\u6001 \u00b6 \u53ef\u4ee5\u4f7f\u7528 $? \u67e5\u770b\u4e0a\u4e00\u4e2a\u547d\u4ee4\u7684\u9000\u51fa\u72b6\u6001\u7801 \u72b6\u6001\u7801 \u542b\u4e49 0 \u547d\u4ee4\u6210\u529f\u7ed3\u675f 1 \u901a\u7528\u672a\u77e5\u9519\u8bef 2 \u8bef\u7528shell\u547d\u4ee4 126 \u547d\u4ee4\u4e0d\u53ef\u6267\u884c 127 \u6ca1\u6709\u627e\u5230\u547d\u4ee4 128+x Linux\u4fe1\u53f7x\u7684\u4e25\u91cd\u9519\u8bef 130 \u547d\u4ee4\u901a\u8fc7Ctrl+C\u7ec8\u6b62 255 \u9000\u51fa\u72b6\u6001\u7801\u8d8a\u754c","title":"Shell\u811a\u672c\u57fa\u7840"},{"location":"linux/ShellScript/#shell","text":"","title":"Shell\u811a\u672c\u57fa\u7840"},{"location":"linux/ShellScript/#_1","text":"","title":"\u4e00\u3001\u53d8\u91cf"},{"location":"linux/ShellScript/#1","text":"","title":"1. \u53d8\u91cf\u5206\u7c7b"},{"location":"linux/ShellScript/#11","text":"\u7528\u6765\u5b58\u50a8\u6709\u5173shell\u4f1a\u8bdd\u548c\u5de5\u4f5c\u73af\u5883\u7684\u4fe1\u606f\u3002\u5728bash shell\u4e2d\u73af\u5883\u53d8\u91cf\u5206\u4e3a\u5168\u5c40\u53d8\u91cf\u548c\u5c40\u90e8\u53d8\u91cf\u3002 \u73af\u5883\u53d8\u91cf\uff1a \u5168\u5c40\u73af\u5883\u53d8\u91cf\uff1a\u5bf9\u4e8eshell\u4f1a\u8bdd\u548c\u6240\u6709\u751f\u6210\u7684\u5b50shell\u90fd\u662f\u53ef\u89c1\u7684\u3002 \u5c40\u90e8\u73af\u5883\u53d8\u91cf\uff1a\u53ea\u5bf9\u521b\u5efa\u5b83\u4eec\u7684shell\u53ef\u89c1 \u4f7f\u7528 env \u6216 printenv \u67e5\u770b\u5168\u5c40\u53d8\u91cf\uff0c\u6240\u6709\u7684\u73af\u5883\u53d8\u91cf\u540d\u5747\u4f7f\u7528\u5927\u5199\u5b57\u6bcd\u3002 1 2 3 4 5 6 7 #!/bin/bash # \u73af\u5883\u53d8\u91cf echo \"User Info:\" echo \"user: $USER \" echo \"UID : $EUID \" echo \"home: $HOME \" echo \u201c $HOSTNAME \u201d \u5e38\u7528\u9ed8\u8ba4\u73af\u5883\u53d8\u91cf \u53d8\u91cf \u63cf\u8ff0 HOME \u5f53\u524d\u7528\u6237\u4e3b\u76ee\u5f55 BASH \u5f53\u524dshell\u7684\u5168\u8def\u5f84\u540d\uff08/bin/bash\uff09 BASH_SOURCE \u542b\u6709\u5f53\u524d\u6b63\u5728\u6267\u884c\u7684shell\u51fd\u6570\u6240\u5728\u6e90\u6587\u4ef6\u540d\u7684\u6570\u7ec4 FUNCTION \u5f53\u524d\u6267\u884c\u7684shell\u51fd\u6570\u7684\u540d\u79f0 HOSTNAME \u5f53\u524d\u4e3b\u673a\u7684\u540d\u79f0 LINENO \u5f53\u524d\u6267\u884c\u7684\u811a\u672c\u7684\u884c\u53f7 PWD \u5f53\u524d\u5de5\u4f5c\u76ee\u5f55","title":"1.1 \u73af\u5883\u53d8\u91cf"},{"location":"linux/ShellScript/#12","text":"\u53d8\u91cf\u547d\u540d\u89c4\u5219\uff1a \u7531\u5b57\u6bcd\u3001\u6570\u5b57\u548c\u4e0b\u5212\u7ebf\u7ec4\u6210\u5927\u5c0f\u5199\u654f\u611f \u5927\u5c0f\u5199\u654f\u611f \u7528\u6237\u53d8\u91cf\u7684\u5206\u7c7b\uff1a \u5c40\u90e8\u7528\u6237\u53d8\u91cf \u5168\u5c40\u73af\u5883\u53d8\u91cf\uff1a\u4f7f\u7528 export \u53d8\u91cf\u540d \u5c06\u5c40\u90e8\u53d8\u91cf\u5bfc\u51fa\u5230\u5168\u5c40\u73af\u5883\u4e2d\u3002 1 2 3 4 5 6 #!/bin/bash # \u7528\u6237\u53d8\u91cf var1 = 100 var2 = hello var3 = \"hello world\" echo \" $var1 $var2 $var3 \"","title":"1.2  \u7528\u6237\u53d8\u91cf"},{"location":"linux/ShellScript/#13","text":"\u53d8\u91cf \u542b\u4e49 $0 \u5f53\u524d\u811a\u672c\u7684\u6587\u4ef6\u540d $n \u4f20\u9012\u7ed9\u811a\u672c\u6216\u51fd\u6570\u7684\u53c2\u6570\u3002n \u662f\u4e00\u4e2a\u6570\u5b57 $# \u4f20\u9012\u7ed9\u811a\u672c\u6216\u51fd\u6570\u7684\u53c2\u6570\u4e2a\u6570\u3002 $* \u4f20\u9012\u7ed9\u811a\u672c\u6216\u51fd\u6570\u7684\u6240\u6709\u53c2\u6570\u3002 $@ \u4f20\u9012\u7ed9\u811a\u672c\u6216\u51fd\u6570\u7684\u6240\u6709\u53c2\u6570 $? \u4e0a\u4e2a\u547d\u4ee4\u7684\u9000\u51fa\u72b6\u6001\uff0c\u6216\u51fd\u6570\u7684\u8fd4\u56de\u503c\u3002 $$ \u5f53\u524dShell\u8fdb\u7a0bID\u3002\u5bf9\u4e8e Shell \u811a\u672c\uff0c\u5c31\u662f\u8fd9\u4e9b\u811a\u672c\u6240\u5728\u7684\u8fdb\u7a0bID\u3002 1 2 3 4 5 6 7 8 9 #!/bin/bash echo \"Total Number of Parameters : $# \" echo \"File Name: $0 \" echo \"First Parameter : $1 \" echo \"First Parameter : $2 \" echo \"Quoted Values: $@ \" echo \"Quoted Values: $* \" echo \"PID $$ \" echo \" $? \" $@ \u4e0e $* \u7684\u533a\u522b $* \u548c $@ \u90fd\u8868\u793a\u4f20\u9012\u7ed9\u51fd\u6570\u6216\u811a\u672c\u7684\u6240\u6709\u53c2\u6570\uff0c\u4e0d\u88ab\u53cc\u5f15\u53f7(\" \")\u5305\u542b\u65f6\uff0c\u90fd\u4ee5\"$1\" \"$2\" \u2026 \"$n\" \u7684\u5f62\u5f0f\u8f93\u51fa\u6240\u6709\u53c2\u6570\u3002 \u4f46\u662f\u5f53\u5b83\u4eec\u88ab\u53cc\u5f15\u53f7(\" \")\u5305\u542b\u65f6\uff0c\"$*\" \u4f1a\u5c06\u6240\u6709\u7684\u53c2\u6570\u4f5c\u4e3a\u4e00\u4e2a\u6574\u4f53\uff0c\u4ee5\"$1 $2 \u2026 $n\"\u7684\u5f62\u5f0f\u8f93\u51fa\u6240\u6709\u53c2\u6570\uff1b\"$@\" \u4f1a\u5c06\u5404\u4e2a\u53c2\u6570\u5206\u5f00\uff0c\u4ee5\"$1\" \"$2\" \u2026 \"$n\" \u7684\u5f62\u5f0f\u8f93\u51fa\u6240\u6709\u53c2\u6570\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 #!/bin/bash echo '$@:' for i in $@ ; do echo $i done echo '\"$@:\"' for i in \" $@ \" ; do echo $i done echo '$*:' for i in $* ; do echo $i done echo '\"$*:\"' for i in \" $* \" ; do echo $i done \u7ed3\u679c\uff1a $@ : 1 2 3 \" $* \" : 1 2 3 $@ : 1 2 3 \" $* \" : 1 2 3","title":"1.3 \u7279\u6b8a\u53d8\u91cf"},{"location":"linux/ShellScript/#2","text":"","title":"2.\u53d8\u91cf\u5b9a\u4e49"},{"location":"linux/ShellScript/#1_1","text":"1 2 3 4 root@localhost:~# cat file.sh #!/bin/bash readonly hours_per_day = 24 hours_per_day = 12 \u66f4\u6539\u53d8\u91cf\u4f1a\u89e6\u53d1\u5f02\u5e38 1 2 root@localhost:~# ./file.sh ./file.sh: line 3 : hours_per_day: readonly variable","title":"1. \u53ea\u8bfb\u53d8\u91cf"},{"location":"linux/ShellScript/#3","text":"\u8bed\u6cd5 \u8bf4\u660e ${\u53d8\u91cf\u540d#\u5339\u914d\u89c4\u5219} \u4ece\u53d8\u91cf\u5f00\u5934\u8fdb\u884c\u89c4\u5219\u5339\u914d\uff0c\u5c06\u7b26\u5408\u6700\u77ed\u7684\u6570\u636e\u5220\u9664 ${\u53d8\u91cf\u540d##\u5339\u914d\u89c4\u5219} \u4ece\u53d8\u91cf\u5f00\u5934\u8fdb\u884c\u89c4\u5219\u5339\u914d\uff0c\u5c06\u7b26\u5408\u6700\u957f\u7684\u6570\u636e\u5220\u9664 ${\u53d8\u91cf\u540d%\u5339\u914d\u89c4\u5219} \u4ece\u53d8\u91cf\u5c3e\u90e8\u8fdb\u884c\u89c4\u5219\u5339\u914d\uff0c\u5c06\u7b26\u5408\u6700\u77ed\u7684\u6570\u636e\u5220\u9664 ${\u53d8\u91cf\u540d%%\u5339\u914d\u89c4\u5219} \u4ece\u53d8\u91cf\u5c3e\u90e8\u8fdb\u884c\u89c4\u5219\u5339\u914d\uff0c\u5c06\u7b26\u5408\u6700\u957f\u7684\u6570\u636e\u5220\u9664 ${\u53d8\u91cf\u540d/\u65e7\u5b57\u7b26\u4e32/\u65b0\u5b57\u7b26\u4e32} \u53d8\u91cf\u5185\u5bb9\u7b26\u5408\u65e7\u5b57\u7b26\u4e32\u89c4\u5219\uff0c\u5219\u7b2c\u4e00\u4e2a\u65e7\u5b57\u7b26\u4e32\u4f1a\u88ab\u65b0\u5b57\u7b26\u4e32\u53d6\u4ee3 ${\u53d8\u91cf\u540d//\u65e7\u5b57\u7b26\u4e32/\u65b0\u5b57\u7b26\u4e32} \u53d8\u91cf\u5185\u5bb9\u7b26\u5408\u65e7\u5b57\u7b26\u4e32\u89c4\u5219\uff0c\u5219\u5168\u90e8\u7684\u65e7\u5b57\u7b26\u4e32\u4f1a\u88ab\u65b0\u5b57\u7b26\u4e32\u53d6\u4ee3","title":"3. \u53d8\u91cf\u66ff\u6362"},{"location":"linux/ShellScript/#4","text":"\u8fd0\u7b97\u7b26 \u7528\u9014 ${varname:-word} \u5982\u679c\u53d8\u91cf\u5b58\u5728\u4e14\u975enull\uff0c\u5219\u8fd4\u56de\u5176\u503c\uff1b\u5426\u5219\u8fd4\u56deword ${varname:=word} \u5982\u679c\u53d8\u91cf\u5b58\u5728\u4e14\u975enull\uff0c\u5219\u8fd4\u56de\u5176\u503c\uff1b\u5426\u5219\u8bbe\u7f6e\u5b83\u7684\u503c\u4e3aword\u5e76\u8fd4\u56de ${varname:+word} \u5982\u679c\u53d8\u91cf\u5b58\u5728\u4e14\u975enull\uff0c\u5219\u8fd4\u56deword;\u5426\u5219\u8fd4\u56denull ${varname:?message} \u5982\u679c\u53d8\u91cf\u5b58\u5728\u4e14\u975enull,\u5219\u8fd4\u56de\u5176\u503c\uff1b\u5426\u5219\u663e\u793amessage\uff0c\u5e76\u9000\u51fa\u5f53\u524d\u811a\u672c\u6216\u547d\u4ee4; message\u9ed8\u8ba4\u4fe1\u606f\u4e3a\uff1aparameter null or not set","title":"4. \u53d8\u91cf\u6d4b\u8bd5\uff08\u4e0d\u5e38\u7528\uff09"},{"location":"linux/ShellScript/#5","text":"","title":"5.\u5b57\u7b26\u4e32\u5904\u7406"},{"location":"linux/ShellScript/#51","text":"\u65b9\u6cd51\uff1a ${#string} \u65b9\u6cd52\uff1a expr length \"$string\"","title":"5.1 \u8ba1\u7b97\u5b57\u7b26\u4e32\u957f\u5ea6"},{"location":"linux/ShellScript/#52","text":"expr index $string substring","title":"5.2 \u83b7\u53d6\u5b57\u7b26\u5728\u5b57\u7b26\u4e32\u4e2d\u7684\u7d22\u5f15\u4f4d\u7f6e"},{"location":"linux/ShellScript/#53","text":"expr match $string substr 1 expr match \"hello world\" .*w # 7","title":"5.3 \u8ba1\u7b97\u5b50\u4e32\u957f\u5ea6"},{"location":"linux/ShellScript/#54","text":"\u8bed\u6cd5 \u8bf4\u660e ${string:position} \u4ecestring\u4e2d\u7684position\u5f00\u59cb ${string:position:length} \u4eceposition\u5f00\u59cb\uff0c\u5339\u914d\u957f\u5ea6\u4e3alength ${string:-position} \u4ece\u53f3\u8fb9\u5f00\u59cb\u5339\u914d ${string:(position)} \u4ece\u5de6\u8fb9\u5f00\u59cb\u5339\u914d expr substr $string $postion $length \u4eceposition\u5f00\u59cb\uff0c\u5339\u914d\u957f\u5ea6\u4e3alength \u6ce8\u610f\uff1a\u4f7f\u7528expr\u7d22\u5f15\u8ba1\u6570\u4ece1\u5f00\u59cb\uff1b\u4f7f\u7528${:}\uff0c\u7d22\u5f15\u8ba1\u6570\u4ece1\u5f00\u59cb\u3002","title":"5.4 \u62bd\u53d6\u5b50\u4e32"},{"location":"linux/ShellScript/#6","text":"\u628a\u547d\u4ee4\u7684\u6267\u884c\u7ed3\u679c\u8d4b\u7ed9\u53d8\u91cf 1 2 3 4 5 #!/bin/bash # \u65b9\u6cd51 time = ` date +%y%m%d ` # \u65b9\u6cd52 \u63a8\u8350\u4f7f\u7528 time = $( date +%y%m%d )","title":"6. \u547d\u4ee4\u66ff\u6362"},{"location":"linux/ShellScript/#7","text":"\u4f7f\u7528 declare \u6216 typeset \u5b9a\u4e49\u53d8\u91cf\u7c7b\u578b \u53c2\u6570 \u542b\u4e49 -r \u5c06\u53d8\u91cf\u8bbe\u4e3a\u53ea\u8bfb -i \u5c06\u53d8\u91cf\u8bbe\u4e3a\u6574\u6570 -a \u5c06\u53d8\u91cf\u5b9a\u4e49\u4e3a\u6570\u7ec4 -f \u663e\u793a\u6b64\u811a\u672c\u524d\u5b9a\u4e49\u8fc7\u5f97\u6240\u6709\u51fd\u6570\u53ca\u5185\u5bb9 -F \u4ec5\u663e\u793a\u6b64\u811a\u672c\u524d\u5b9a\u4e49\u8fc7\u5f97\u51fd\u6570\u540d -x \u5c06\u53d8\u91cf\u58f0\u660e\u4e3a\u73af\u5883\u53d8\u91cf","title":"7.\u6709\u7c7b\u578b\u53d8\u91cf"},{"location":"linux/ShellScript/#_2","text":"","title":"\u4e8c\u3001\u6570\u7ec4"},{"location":"linux/ShellScript/#1_2","text":"1.1 \u65b9\u6cd5\u4e00\uff1a 1 arr =( 1 2 3 4 5 ) 1.2 \u65b9\u6cd5\u4e8c\uff1a 1 2 3 arr [ 0 ]= 1 arr [ 1 ]= 2 arr [ 2 ]= 3","title":"1. \u6570\u7ec4\u7684\u5b9a\u4e49"},{"location":"linux/ShellScript/#2_1","text":"1 2 3 4 5 6 7 root@localhost:~# arr =( 1 2 3 4 5 ) root@localhost:~# echo ${ arr [2] } 3 root@localhost:~# echo ${ arr [*] } 1 2 3 4 5 root@localhost:~# echo ${ arr [@] } 1 2 3 4 5","title":"2. \u8f93\u51fa\u6570\u7ec4\u4e2d\u7684\u503c"},{"location":"linux/ShellScript/#3_1","text":"\u666e\u901a\u6570\u7ec4\u53ea\u80fd\u4f7f\u7528\u6574\u6570\u4f5c\u4e3a\u7d22\u5f15\u503c\uff0c\u800c\u5173\u8054\u6570\u7ec4\u53ef\u4ee5\u4f7f\u7528\u4efb\u610f\u6587\u672c\u4f5c\u4e3a\u7d22\u5f15\u503c\uff08\u6709\u70b9\u7c7b\u4f3c\u4e8ePython\u4e2d\u7684\u5b57\u5178\uff09\uff0c\u5173\u8054\u6570\u7ec4\u53ea\u5728bash 4.0\u4ee5\u4e0a\u652f\u6301\u3002 1 2 3 4 5 6 7 8 root@localhost:~# declare -A person root@localhost:~# person =([ name ]= \"Wang\" [ age ]= 18 ) root@localhost:~# echo ${ person [name] } Wang root@localhost:~# echo ${ person [age] } 18 root@localhost:~# echo ${ person [*] } Wang 18","title":"3. \u5173\u8054\u6570\u7ec4"},{"location":"linux/ShellScript/#_3","text":"","title":"\u4e09\u3001\u6570\u5b66\u8ba1\u7b97"},{"location":"linux/ShellScript/#1-let","text":"let\u547d\u4ee4\u53ef\u4ee5\u76f4\u63a5\u6267\u884c\u57fa\u672c\u7684\u7b97\u6570\u64cd\u4f5c\uff0c\u5e76\u4e14\u53d8\u91cf\u540d\u4e4b\u524d\u4e0d\u9700\u8981\u6dfb\u52a0 $ \u3002 1 2 3 4 5 6 7 8 9 10 gp@gp:~$ a = 2 gp@gp:~$ b = 3 gp@gp:~$ let c = a+b gp@gp:~$ echo $c 5 # let \u8fd8\u53ef\u4ee5\u6267\u884c\u81ea\u52a0\u81ea\u51cf\u64cd\u4f5c gp@gp:~$ let a++ gp@gp:~$ let b-- gp@gp:~$ echo $a $b 3 2","title":"1. let"},{"location":"linux/ShellScript/#2-expr","text":"1 2 3 4 #!/bin/bash # expr \u548c = \u4e4b\u95f4\u8981\u6709\u4e00\u4e2a\u7a7a\u683c var = expr 1 + 2 echo $var expr \u64cd\u4f5c\u7b26\u5bf9\u7167\u8868 \u64cd\u4f5c\u7b26 \u542b\u4e49 num1 | num2 num1\u4e0d\u4e3a\u7a7a\u4e14\u975e0\uff0c\u8fd4\u56denum1\uff1b\u5426\u5219\u8fd4\u56denum2 num1 & num2 num1\u4e0d\u4e3a\u7a7a\u4e14\u975e0\uff0c\u8fd4\u56denum1\uff1b\u5426\u5219\u8fd4\u56de0 num1 < num2 num1\u5c0f\u4e8enum2\uff0c\u8fd4\u56de1\uff1b\u5426\u5219\u8fd4\u56de0 num1 <= num2 num1\u5c0f\u4e8e\u7b49\u4e8enum2\uff0c\u8fd4\u56de1\uff1b\u5426\u5219\u8fd4\u56de0 num1 = num2 num1\u7b49\u4e8enum2\uff0c\u8fd4\u56de1\uff1b\u5426\u5219\u8fd4\u56de0 num1 != num2 num1\u4e0d\u7b49\u4e8enum2\uff0c\u8fd4\u56de1\uff1b\u5426\u5219\u8fd4\u56de0 num1 > num2 num1\u5927\u4e8enum2\uff0c\u8fd4\u56de1\uff1b\u5426\u5219\u8fd4\u56de0 num1 >= num2 num1\u5927\u4e8e\u7b49\u4e8enum2\uff0c\u8fd4\u56de1\uff1b\u5426\u5219\u8fd4\u56de0 num1 + num2 \u6c42\u548c num1 - num2 \u6c42\u5dee num1 * num2 \u6c42\u79ef num1 / num2 \u6c42\u5546 num1 % num2 \u6c42\u4f59 \u4f7f\u7528\u65f6\u8981\u5bf9\u7279\u6b8a\u5b57\u7b26\u8fdb\u884c\u8f6c\u4e49 expr 5 \\* 2","title":"2. expr"},{"location":"linux/ShellScript/#3_2","text":"1 2 3 #!/bin/bash var = $ [ 1 + 2 ] var = $(( 3 + 4 ))","title":"3. [ ] \u4e0e (( ))"},{"location":"linux/ShellScript/#4-bc","text":"\u4e0a\u8ff0\u4e24\u79cd\u53ea\u80fd\u8ba1\u7b97\u6574\u6570\uff0c\u5bf9\u4e8e\u6d6e\u70b9\u6570\u9700\u8981\u4f7f\u7528 bc \u5728\u811a\u672c\u4e2d\u4f7f\u7528 bc \u7684\u683c\u5f0f\uff1a 1 variable = ` echo \"option; expression\" | bc ` 1 2 3 #!/bin/bash var = ` echo \"scale=2;5/3\" | bc ` echo $var","title":"4. bc"},{"location":"linux/ShellScript/#_4","text":"","title":"\u56db\u3001\u903b\u8f91\u63a7\u5236"},{"location":"linux/ShellScript/#1-if","text":"","title":"1. if"},{"location":"linux/ShellScript/#11-if-then","text":"\u683c\u5f0f\uff1a 1 2 3 4 if command then command fi \u4f8b\uff1a 1 2 3 4 5 #!/bin/bash if date then echo \"command is succeed\" fi","title":"1.1  if-then"},{"location":"linux/ShellScript/#12-if-then-else","text":"\u683c\u5f0f\uff1a 1 2 3 4 5 6 if command then command else command fi \u4f8b\uff1a 1 2 3 4 5 6 7 8 #!/bin/bash # \u67e5\u627e\u7cfb\u7edf\u4e2d\u662f\u5426\u5b58\u5728httpd\u7528\u6237 if grep httpd /etc/passwd then echo \"httpd is exist\" else echo \"httpd not find\" fi","title":"1.2 if-then-else"},{"location":"linux/ShellScript/#13-if","text":"\u683c\u5f0f\uff1a 1 2 3 4 5 6 7 8 if command then command elif command command else command fi","title":"1.3 if\u5d4c\u5957"},{"location":"linux/ShellScript/#2-test","text":"\u529f\u80fd\uff1a \u6570\u503c\u6bd4\u8f83 \u5b57\u7b26\u4e32\u6bd4\u8f83 \u6587\u4ef6\u6bd4\u8f83 \u683c\u5f0f\uff1a 1 2 3 test condition \u6216 [ command ]","title":"2. test"},{"location":"linux/ShellScript/#21","text":"\u6bd4\u8f83 \u63cf\u8ff0 -eq \u7b49\u4e8e -ge \u5927\u4e8e\u7b49\u4e8e -gt \u5927\u4e8e -le \u5c0f\u4e8e\u7b49\u4e8e -lt \u5c0f\u4e8e -ne \u4e0d\u7b49\u4e8e \u4f8b\uff1a 1 2 3 4 5 6 7 8 9 #!/bin/bash date if [ $? -eq 0 ] ; then echo \"command is succeed\" fi # \u6216 if test date ; then echo \"command is succeed\" fi","title":"2.1 \u6570\u503c\u6bd4\u8f83"},{"location":"linux/ShellScript/#22","text":"\u6bd4\u8f83 \u63cf\u8ff0 \u4f8b str1 = str2 \u5b57\u7b26\u4e32\u662f\u5426\u76f8\u540c str1 != str2 \u5b57\u7b26\u4e32\u662f\u5426\u4e0d\u540c str1 < str2 str1\u662f\u5426\u6bd4str2\u5c0f str1 > str2 str1\u662f\u5426\u6bd4str2\u5927 [ b \\> a ] && echo \"true\" \uff08\u6ce8\u610f>\u9700\u8981\u8f6c\u4e49\uff09 -n str \u5b57\u7b26\u4e32\u957f\u5ea6\u975e0\u4e3a\u771f [ -n \"str\" ] && echo \"str is not null\" -z str \u5b57\u7b26\u4e32\u957f\u5ea6\u4e3a0\u4e3a\u771f [ -z \"\" ] && echo \"str is null\"","title":"2.2 \u5b57\u7b26\u4e32\u6bd4\u8f83"},{"location":"linux/ShellScript/#23","text":"\u6bd4\u8f83 \u63cf\u8ff0 -d file \u68c0\u67e5file\u662f\u5426\u5b58\u5728\u5e76\u662f\u4e00\u4e2a\u76ee\u5f55 -f file \u68c0\u67e5file\u662f\u5426\u5b58\u5728\u5e76\u662f\u4e00\u4e2a\u76ee\u5f55 -e file \u68c0\u67e5file\u662f\u5426\u5b58\u5728 -r file \u68c0\u67e5file\u662f\u5426\u5b58\u5728\u5e76\u53ef\u8bfb -s file \u68c0\u67e5file\u662f\u5426\u5b58\u5728\u5e76\u975e\u7a7a -w file \u68c0\u67e5file\u662f\u5426\u5b58\u5728\u5e76\u53ef\u5199 -x file \u68c0\u67e5file\u662f\u5426\u5b58\u5728\u5e76\u53ef\u6267\u884c -O file \u68c0\u67e5file\u662f\u5426\u5b58\u5728\u5e76\u5c5e\u5f53\u524d\u7528\u6237\u6240\u6709 -G file \u68c0\u67e5file\u662f\u5426\u5b58\u5728\u5e76\u4e14\u9ed8\u8ba4\u7ec4\u4e0e\u5f53\u524d\u7528\u6237\u76f8\u540c file1 -nt file2 file1\u662f\u5426\u6bd4file2\u65b0 file1 -ot file2 file1\u662f\u5426\u6bd4file2\u65e7","title":"2.3 \u6587\u4ef6\u6bd4\u8f83"},{"location":"linux/ShellScript/#24","text":"1 2 [ condition1 ] && [ condition2 ] [ condition1 ] || [ condition2 ]","title":"2.4 \u590d\u5408\u6761\u4ef6"},{"location":"linux/ShellScript/#3-case","text":"\u683c\u5f0f\uff1a 1 2 3 4 5 case variable in pattern1 | pattern2 ) command1 ;; pattern3 ) command2 ;; * ) default command ;; esca \u4f8b\uff1a 1 2 3 4 5 6 7 8 9 10 #!/bin/bash read -p \"input something: \" var case $var in [ 0 -9 ]) echo \"number\" ;; [ a-z ]) echo \"character\" ;; * ) echo \"other\" ;; esac","title":"3. case"},{"location":"linux/ShellScript/#4-for","text":"","title":"4. for"},{"location":"linux/ShellScript/#41-bashfor","text":"\u683c\u5f0f\uff1a 1 2 3 4 for var in list do command done \u4f8b1\uff1a\u67e5\u770b\u670d\u52a1\u72b6\u6001 1 2 3 4 5 6 #!/bin/bash for service in apache2 mysqld zabbix-server zabbix-agent do status = $( systemctl status mysql | awk '/Active/ {print $2,$3}' ) echo $service $status done \u4f8b2\uff1a\u4f7f\u7528\u901a\u914d\u7b26 1 2 3 4 5 6 7 8 9 10 11 12 #!/bin/bash # \u6ce8\u610f\u5728$file\u4e0a\u52a0\u201c\u201d\uff0c\u5426\u5219\u5982\u679c\u51fa\u73b0\u5e26\u7a7a\u683c\u7684\u76ee\u5f55\u540d\uff0c\u811a\u672c\u4f1a\u51fa\u9519 for file in /tmp/* do if [ -d \" $file \" ] then echo \" $file \" is a directory elif [ -f \" $file \" ] then echo \" $file \" is a file fi done","title":"4.1 bash\u4e2d\u7684for"},{"location":"linux/ShellScript/#42-c-for","text":"\u4f8b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 #!/bin/bash for (( i = 1 ; i< = 10 ; i++ )) do echo $i done #!/bin/bash # \u5355\u53d8\u91cf for (( i = 1 ; i< = 10 ; i++ )) do echo $i done # \u591a\u53d8\u91cf for (( i = 1 ,j = 10 ; i< = 10 ; i++,j-- )) do echo $i $j done","title":"4.2 C \u8bed\u8a00\u98ce\u683c\u7684for"},{"location":"linux/ShellScript/#5-while","text":"\u4f8b\uff1a\u68c0\u6d4b\u7ad9\u70b9\u72b6\u6001 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 #!/bin/bash urls = \" https://www.baidu.com https://www.taobao.com https://www.jd.com/abc https://www.12306.cn/index/ 192.168.1.111 \" for url in $urls ; do count = 0 while [ $count -lt 3 ] ; do STATUS = $( curl -I -m 10 -o /dev/null -s -w % { http_code } $url ) if [ $STATUS -eq 200 ] ; then echo \" $url OK\" break 1 fi count = $(( $count + 1 )) done if [ $count -eq 3 ] ; then echo \" $url Error\" fi done","title":"5. while"},{"location":"linux/ShellScript/#6-until","text":"1 2 3 4 5 6 #!/bin/bash var = 10 until [ $var -eq 0 ] ; do var = $ [ $var -2 ] echo $var done","title":"6. until"},{"location":"linux/ShellScript/#7_1","text":"","title":"7. \u63a7\u5236\u5faa\u73af"},{"location":"linux/ShellScript/#71-break","text":"1 2 3 4 5 6 7 8 9 #!/bin/bash # break \u8df3\u51fa\u5f53\u524d\u5faa\u73af # break n \u8df3\u51fan\u5c42\u5faa\u73af for (( i = 0 ; i< 10 ; i++ )) ; do if [ $i -eq 5 ] ; then break fi echo $i done","title":"7.1 break"},{"location":"linux/ShellScript/#72-continue","text":"","title":"7.2 continue"},{"location":"linux/ShellScript/#_5","text":"","title":"\u4e94\u3001\u8f93\u5165"},{"location":"linux/ShellScript/#1_3","text":"\u4f8b1\uff1a 1 2 3 4 5 #!/bin/bash echo $1 + $2 = $ [ $1 + $2 ] ./add.sh 3 4 3 +4 = 7 \u4f8b2\uff1a shift 1 2 3 4 5 6 #!/bin/bash # \u628a\u53d8\u91cf\u7684\u4f4d\u7f6e\u5411\u5de6\u79fb while [ -n \" $1 \" ] ; do echo $1 shift done","title":"1. \u547d\u4ee4\u884c\u53c2\u6570"},{"location":"linux/ShellScript/#2getopts","text":"\u683c\u5f0f\uff1a getopts optstring variable optstring: \u9009\u9879\u5b57\u6bcd\uff0c\u5982\u679c\u5b57\u6bcd\u8981\u6c42\u6709\u53c2\u6570\u5c31\u52a0\u4e00\u4e2a : \uff0c\u8981\u53bb\u6389\u9519\u8bef\u6d88\u606f\u7684\u8bdd\u53ef\u4ee5\u5728optstring\u524d\u52a0\u4e00\u4e2a : variable: \u4fdd\u5b58\u5f53\u524d\u53c2\u6570 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 #!/bin/bash # getopts\u7684\u7528\u6cd5 # opt \u4f1a\u4fdd\u5b58\u8f93\u5165\u7684\u53c2\u6570\uff0c\u5982 r i # OPTARG\u4fdd\u5b58\u53c2\u6570\u503c # \u53c2\u6570\u9700\u8981\u4e00\u4e2a\u503c\u5c31\u5728\u53c2\u6570\u540e\u9762\u52a0\u4e00\u4e2a: \u5982i: while getopts ri: opt do case \" $opt \" in i ) echo \"install service $OPTARG \" ;; r ) echo \"remove all service\" ;; * ) echo \"Unknown option: $opt \" ;; esac done root@localhost:/# ./getopts.sh -i apache2 install service apache2 root@localhost:/# ./getopts.sh -r remove all service root@localhost:/# ./getopts.sh -a ./getopts.sh: illegal option -- a Unknown option: ?","title":"2.getopts"},{"location":"linux/ShellScript/#3-read","text":"","title":"3. \u83b7\u5f97\u7528\u6237\u8f93\u5165 read"},{"location":"linux/ShellScript/#31","text":"1 2 3 #!/bin/bash read name echo $name","title":"3.1 \u666e\u901a\u7528\u6cd5"},{"location":"linux/ShellScript/#32","text":"1 2 3 #!/bin/bash read -p \"Enter your name: \" name echo \"Hello $name \"","title":"3.2 \u6307\u5b9a\u63d0\u793a\u7b26"},{"location":"linux/ShellScript/#33","text":"1 2 3 4 5 6 7 #!/bin/bash if read -t 5 -p \"Enter your name: \" name then echo \"Hello $name \" else echo \"TIME OUT\" fi","title":"3.3 \u6307\u5b9a\u8d85\u65f6\u65f6\u95f4"},{"location":"linux/ShellScript/#34","text":"1 2 3 #!/bin/bash read -s -p \"Enter passwd: \" passwd echo \" $passwd \"","title":"3.4 \u9690\u85cf\u6570\u636e"},{"location":"linux/ShellScript/#35","text":"1 2 3 4 #!/bin/bash read -n1 -p \"Do you want continue[Y/N]?\" answer echo echo \" $answer \"","title":"3.5 \u9650\u5236\u8f93\u5165\u957f\u5ea6"},{"location":"linux/ShellScript/#_6","text":"\u663e\u793a\u811a\u672c\u8f93\u51fa\u7684\u65b9\u6cd5\uff1a \u5728\u663e\u793a\u5668\u4e0a\u663e\u793a \u5c06\u8f93\u51fa\u91cd\u5b9a\u5411\u5230\u6587\u4ef6 \u63cf\u8ff0\u7b26 \u7f29\u5199 \u63cf\u8ff0 0 STDIN \u6807\u51c6\u8f93\u5165 1 STDOUT \u6807\u51c6\u8f93\u51fa 2 STDERR \u6807\u51c6\u9519\u8bef","title":"\u516d\u3001\u8f93\u51fa"},{"location":"linux/ShellScript/#1_4","text":"","title":"1. \u5728\u811a\u672c\u4e2d\u91cd\u5b9a\u5411"},{"location":"linux/ShellScript/#1_5","text":"\u4f7f\u7528\u573a\u666f\uff1a\u5728\u811a\u672c\u4e2d\u751f\u6210\u9519\u8bef\u6d88\u606f 1 2 3 #!/bin/bash echo \"This is an error message\" > & 2 echo \"This is normal output\" \u9ed8\u8ba4\u60c5\u51b5\u4e0bLinux \u4f1a\u5c06STDERR\u5b9a\u5411\u5230STDOUT 1 2 3 $./error.sh This is an error message This is normal output \u5728\u6267\u884c\u811a\u672c\u7684\u65f6\u5019\u91cd\u5b9a\u5411STDERR\uff0cERR\u6587\u672c\u5c31\u4f1a\u88ab\u91cd\u5b9a\u5411 1 2 3 4 $ ./error.sh 2 > error.log This is normal output $ cat error.log This is an error message","title":"1. \u4e34\u65f6\u91cd\u5b9a\u5411"},{"location":"linux/ShellScript/#2_2","text":"\u7528exec\u547d\u4ee4\u544a\u8bc9shell\u5728\u6267\u884c\u811a\u672c\u671f\u95f4\u91cd\u5b9a\u5411\u67d0\u4e2a\u7279\u5b9a\u6587\u4ef6\u63cf\u8ff0\u7b26 1 2 3 4 5 6 #!/bin/bash exec 2 >errout echo \"This is error\" exec 1 >testout echo \"testout\" echo \"testout to errout\" > & 2 1 2 3 4 5 6 $ ./test.sh This is error $ cat errout testout to errout $ cat testout testout","title":"2. \u6c38\u4e45\u91cd\u5b9a\u5411"},{"location":"linux/ShellScript/#2_3","text":"tee : \u5c06\u8f93\u51fa\u4e00\u8fb9\u53d1\u9001\u5230\u663e\u793a\u5668\u4e00\u8fb9\u53d1\u9001\u5230\u65e5\u5fd7\u6587\u4ef6 tee \u9ed8\u8ba4\u4f1a\u8986\u76d6\u539f\u6765\u7684\u6587\u4ef6\uff0c\u53ef\u4ee5\u4f7f\u7528-a\u8ffd\u52a0 1 2 3 4 5 $ date | tee -a date.txt Fri Nov 23 11 :03:15 CST 2018 $ cat date.txt Fri Nov 23 11 :03:07 CST 2018 Fri Nov 23 11 :03:15 CST 2018","title":"2. \u8bb0\u5f55\u6d88\u606f"},{"location":"linux/ShellScript/#_7","text":"","title":"\u4e03\u3001\u51fd\u6570"},{"location":"linux/ShellScript/#1_6","text":"1 2 3 4 5 6 7 8 9 10 11 #!/bin/bash # \u5b9a\u4e49\u65b9\u5f0f1 function foo { echo \"This is a func\" } # \u5b9a\u4e49\u65b9\u5f0f2 bar () { echo \"This is another func\" }","title":"1.\u51fd\u6570\u5b9a\u4e49"},{"location":"linux/ShellScript/#2_4","text":"\u76f4\u63a5\u4f7f\u7528\u51fd\u6570\u540d\u8c03\u7528","title":"2. \u51fd\u6570\u8c03\u7528"},{"location":"linux/ShellScript/#3_3","text":"","title":"3.\u8fd4\u56de\u503c"},{"location":"linux/ShellScript/#31_1","text":"1 2 3 4 5 6 #!/bin/bash function foo { echo \"This is a func\" } foo echo \"Exit status is $? \"","title":"3.1 \u9ed8\u8ba4\u9000\u51fa\u72b6\u6001\u7801"},{"location":"linux/ShellScript/#32-return","text":"1 2 3 4 5 6 7 #!/bin/bash function foo { echo \"Hello world\" return 2 } foo echo \"Exit status is $? \" 1 2 3 ./func.sh Hello world Exit status is 2","title":"3.2 \u4f7f\u7528return\u547d\u4ee4"},{"location":"linux/ShellScript/#33_1","text":"1 2 3 4 5 6 7 8 #!/bin/bash function foo { echo \"Hello world\" } foo # \u628a\u51fd\u6570\u7684\u8f93\u51fa\u8d4b\u503c\u7ed9\u53d8\u91cf result = ` foo ` echo \"Exit status is $result \" 1 2 3 $./func.sh Hello world Exit status is Hello world","title":"3.3 \u4f7f\u7528\u51fd\u6570\u8f93\u51fa"},{"location":"linux/ShellScript/#4_1","text":"","title":"4. \u53c2\u6570"},{"location":"linux/ShellScript/#42","text":"1 2 3 4 5 #!/bin/bash function status { systemctl status $1 } status sshd","title":"4.2 \u53c2\u6570\u4f20\u9012"},{"location":"linux/ShellScript/#42_1","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 #!/bin/bash # \u5b9a\u4e49\u5168\u5c40\u53d8\u91cf hostname = \"web\" function foo { str = \"hello\" # \u4f7f\u7528 local \u5b9a\u4e49\u5c40\u90e8\u53d8\u91cf local user = \"http\" # \u53ef\u4ee5\u5728\u51fd\u6570\u5185\u4f7f\u7528\u5168\u5c40\u53d8\u91cf echo \" $hostname \" echo \" $user \" } foo # \u5728\u51fd\u6570\u4e2d\u5b9a\u4e49\u7684\u5c40\u90e8\u53d8\u91cf\u4e0d\u80fd\u5728\u5168\u5c40\u4f7f\u7528 echo \" $str $user \"","title":"4.2 \u5c40\u90e8\u53d8\u91cf\u4e0e\u5168\u5c40\u53d8\u91cf"},{"location":"linux/ShellScript/#43","text":"\u5982\u679c\u5c06\u6570\u7ec4\u53d8\u91cf\u4f5c\u4e3a\u51fd\u6570\u53c2\u6570\uff0c\u51fd\u6570\u53ea\u4f1a\u53d6\u6570\u7ec4\u53d8\u91cf\u7684\u7b2c\u4e00\u4e2a\u503c 1 2 3 4 5 6 7 8 9 #!/bin/bash function foo { arr = $1 echo \"The received array is ${ arr [*] } \" } myarr =( 1 2 3 4 5 ) foo $myarr # The received array is 1 \u89e3\u51b3\u65b9\u6cd5 1 2 3 4 5 6 7 8 9 10 #!/bin/bash function foo { arr = $@ echo \"The received array is ${ arr [*] } \" } myarr =( 1 2 3 4 5 ) # \u5c06\u8be5\u6570\u7ec4\u53d8\u91cf\u7684\u503c\u5206\u89e3\u6210\u5355\u4e2a\u7684\u503c\uff0c\u7136\u540e\u5c06\u8fd9\u4e9b\u503c\u4f5c\u4e3a\u51fd\u6570\u53c2\u6570\u4f7f\u7528\u3002 foo ${ myarr [*] } # The received array is 1 2 3 4 5","title":"4.3 \u6570\u7ec4\u53d8\u91cf"},{"location":"linux/ShellScript/#_8","text":"","title":"\u516b\u3001\u8f93\u51fa\u683c\u5f0f\u5316"},{"location":"linux/ShellScript/#1-c","text":"1 2 3 4 #!/bin/bash printf \"%-5s %-10s %-4s\\n\" NO. Name Mark printf \"%-5s %-10s %-4.2f\\n\" 1 Sarath 80 .3456 printf \"%-5s %-10s %-4.2f\\n\" 2 James 90 .9989 1 2 3 4 root@localhost:/tmp# ./test.sh NO. Name Mark 1 Sarath 80 .35 2 James 91 .00","title":"1. C\u8bed\u8a00\u98ce\u683c\u7684\u683c\u5f0f\u5316"},{"location":"linux/ShellScript/#2-echo","text":"","title":"2. echo"},{"location":"linux/ShellScript/#21_1","text":"echo -n \"hello world\"","title":"2.1 \u4e0d\u6362\u884c"},{"location":"linux/ShellScript/#22_1","text":"echo -e \"hello\\t\\tworld\"","title":"2.2 \u8f6c\u4e49"},{"location":"linux/ShellScript/#23_1","text":"\u989c\u8272 \u91cd\u7f6e \u9ed1 \u7ea2 \u7eff \u9ec4 \u84dd \u7d2b \u9752 \u767d \u524d\u666f\u8272 0 30 31 32 33 34 35 36 37 \u80cc\u666f\u8272 0 40 41 42 43 44 45 46 47 1 2 3 echo -e \"\\e[1;31m This is red test \\e[0m\" # \u6216 echo -e \"\\033[47;31m This is red test \\033[0m\"","title":"2.3 \u5f69\u8272\u8f93\u51fa"},{"location":"linux/ShellScript/#shell_1","text":"","title":"\u4e5d\u3001shell \u811a\u672c\u7684\u6267\u884c"},{"location":"linux/ShellScript/#1-4","text":"1 2 3 4 5 6 #!/bin/bash # test.sh # \u8fd9\u91cc\u501f\u52a9SHLVL\u8fd9\u4e2a\u53d8\u91cf\uff0cSHLVL\u53ef\u4ee5\u663e\u793ashell\u7684\u5c42\u7ea7\uff0c # \u6bcf\u542f\u52a8\u4e00\u4e2ashell\uff0c\u8fd9\u4e2a\u503c\u5c31\u52a01 echo \"shell level : $SHLVL \" echo \"hello world!\"","title":"1. \u811a\u672c\u6267\u884c\u76844\u79cd\u65b9\u6cd5"},{"location":"linux/ShellScript/#11-shell","text":"1 2 3 4 5 root@localhost:/# cd /tmp/ root@localhost:/tmp# chmod +x test.sh root@localhost:/tmp# ./test.sh shell level :2 hello world!","title":"1.1 \u5207\u6362\u5230shell\u811a\u672c\u6240\u5728\u76ee\u5f55\u6267\u884c"},{"location":"linux/ShellScript/#12_1","text":"1 2 3 4 root@localhost:~# chmod +x /tmp/test.sh root@localhost:~# /tmp/test.sh shell level :2 hello world!","title":"1.2 \u4ee5\u7edd\u5bf9\u8def\u5f84\u6267\u884c"},{"location":"linux/ShellScript/#13-bashsh-bash-shell","text":"1 2 3 4 5 6 root@localhost:/tmp# bash test.sh shell level :2 hello world! root@localhost:/tmp# sh test.sh shell level :1 hello world!","title":"1.3 \u76f4\u63a5\u4f7f\u7528bash\u6216sh \u6765\u6267\u884cbash shell\u811a\u672c"},{"location":"linux/ShellScript/#14-shell","text":"1 2 3 4 5 6 root@localhost:/tmp# . test.sh shell level :1 hello world! root@localhost:/tmp# source test.sh shell level :1 hello world! \u603b\u7ed3\uff1a\u6ce8\u610f\u770bSHLVL\u7684\u503c\uff0c\u524d3\u79cd\u65b9\u5f0f\u90fd\u5728\u5b50shell\u4e2d\u6267\u884c\uff08sh\u9664\u5916\uff09\uff0c\u7b2c4\u79cd\u5728\u5f53\u524dshell\u79cd\u6267\u884c\u3002","title":"1.4 \u5728\u5f53\u524dshell \u73af\u5883\u4e2d\u6267\u884c"},{"location":"linux/ShellScript/#2_5","text":"bash -x script.sh \u8ddf\u8e2a\u8c03\u8bd5shell\u811a\u672c \u4f8b\uff1a 1 2 3 4 5 root@localhost:/tmp# bash -x test.sh + echo 'shell level :2' shell level :2 + echo 'hello world!' hello world! -x \u6253\u5370\u6240\u6267\u884c\u7684\u6bcf\u4e00\u884c\u547d\u4ee4\u4ee5\u53ca\u5f53\u524d\u72b6\u6001 set -x : \u5728\u6267\u884c\u65f6\u663e\u793a\u53c2\u6570\u548c\u547d\u4ee4 set +x : \u7981\u6b62\u8c03\u8bd5 set -v : \u5f53\u547d\u4ee4\u8fdb\u884c\u8bfb\u53d6\u65f6\u663e\u793a\u8f93\u5165 set +v : \u7981\u6b62\u6253\u5370\u8f93\u5165","title":"2.\u8c03\u8bd5\u811a\u672c"},{"location":"linux/ShellScript/#_9","text":"","title":"\u5341\u3001\u63a7\u5236\u811a\u672c"},{"location":"linux/ShellScript/#1_7","text":"","title":"1.\u5904\u7406\u4fe1\u53f7"},{"location":"linux/ShellScript/#11linux","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 kill -l 1 ) SIGHUP 2 ) SIGINT 3 ) SIGQUIT 4 ) SIGILL 5 ) SIGTRAP 6 ) SIGABRT 7 ) SIGBUS 8 ) SIGFPE 9 ) SIGKILL 10 ) SIGUSR1 11 ) SIGSEGV 12 ) SIGUSR2 13 ) SIGPIPE 14 ) SIGALRM 15 ) SIGTERM 16 ) SIGSTKFLT 17 ) SIGCHLD 18 ) SIGCONT 19 ) SIGSTOP 20 ) SIGTSTP 21 ) SIGTTIN 22 ) SIGTTOU 23 ) SIGURG 24 ) SIGXCPU 25 ) SIGXFSZ 26 ) SIGVTALRM 27 ) SIGPROF 28 ) SIGWINCH 29 ) SIGIO 30 ) SIGPWR 31 ) SIGSYS 34 ) SIGRTMIN 35 ) SIGRTMIN+1 36 ) SIGRTMIN+2 37 ) SIGRTMIN+3 38 ) SIGRTMIN+4 39 ) SIGRTMIN+5 40 ) SIGRTMIN+6 41 ) SIGRTMIN+7 42 ) SIGRTMIN+8 43 ) SIGRTMIN+9 44 ) SIGRTMIN+10 45 ) SIGRTMIN+11 46 ) SIGRTMIN+12 47 ) SIGRTMIN+13 48 ) SIGRTMIN+14 49 ) SIGRTMIN+15 50 ) SIGRTMAX-14 51 ) SIGRTMAX-13 52 ) SIGRTMAX-12 53 ) SIGRTMAX-11 54 ) SIGRTMAX-10 55 ) SIGRTMAX-9 56 ) SIGRTMAX-8 57 ) SIGRTMAX-7 58 ) SIGRTMAX-6 59 ) SIGRTMAX-5 60 ) SIGRTMAX-4 61 ) SIGRTMAX-3 62 ) SIGRTMAX-2 63 ) SIGRTMAX-1 64 ) SIGRTMAX \u5728Linux\u7f16\u7a0b\u65f6\u4f1a\u9047\u5230\u7684\u6700\u5e38\u89c1\u7684Linux\u7cfb\u7edf\u4fe1\u53f7 \u4fe1 \u53f7 \u503c \u63cf \u8ff0 \u89e6\u53d1 1 SIGHUP \u6302\u8d77\u8fdb\u7a0b 2 SIGINT \u7ec8\u6b62\u8fdb\u7a0b Ctrl + C 3 SIGQUIT \u505c\u6b62\u8fdb\u7a0b 9 SIGKILL \u65e0\u6761\u4ef6\u7ec8\u6b62\u8fdb\u7a0b 15 SIGTERM \u5c3d\u53ef\u80fd\u7ec8\u6b62\u8fdb\u7a0b 17 SIGSTOP \u65e0\u6761\u4ef6\u505c\u6b62\u8fdb\u7a0b\uff0c\u4f46\u4e0d\u662f\u7ec8\u6b62\u8fdb\u7a0b 18 SIGTSTP \u505c\u6b62\u6216\u6682\u505c\u8fdb\u7a0b\uff0c\u4f46\u4e0d\u7ec8\u6b62\u8fdb\u7a0b Ctrl+Z 19 SIGCONT \u7ee7\u7eed\u8fd0\u884c\u505c\u6b62\u7684\u8fdb\u7a0b","title":"1.1\u67e5\u770bLinux\u4fe1\u53f7"},{"location":"linux/ShellScript/#12_2","text":"\u683c\u5f0f\uff1a trap command signals \u4f8b 1 2 3 4 5 6 #!/bin/bash trap \"echo 'You Enter Ctrl + C'\" SIGINT for (( i = 0 ; i< 10 ; i++ )) ; do echo $i sleep 1 done 1 2 3 4 5 6 # ./signal.sh 0 1 ^CYou Enter Ctrl + C 2 ^CYou Enter Ctrl + C","title":"1.2 \u6355\u6349\u4fe1\u53f7"},{"location":"linux/ShellScript/#2_6","text":"\u53ef\u4ee5\u4f7f\u7528 $? \u67e5\u770b\u4e0a\u4e00\u4e2a\u547d\u4ee4\u7684\u9000\u51fa\u72b6\u6001\u7801 \u72b6\u6001\u7801 \u542b\u4e49 0 \u547d\u4ee4\u6210\u529f\u7ed3\u675f 1 \u901a\u7528\u672a\u77e5\u9519\u8bef 2 \u8bef\u7528shell\u547d\u4ee4 126 \u547d\u4ee4\u4e0d\u53ef\u6267\u884c 127 \u6ca1\u6709\u627e\u5230\u547d\u4ee4 128+x Linux\u4fe1\u53f7x\u7684\u4e25\u91cd\u9519\u8bef 130 \u547d\u4ee4\u901a\u8fc7Ctrl+C\u7ec8\u6b62 255 \u9000\u51fa\u72b6\u6001\u7801\u8d8a\u754c","title":"2. \u9000\u51fa\u72b6\u6001"},{"location":"linux/command-line/","text":"Linux\u547d\u4ee4\u884c \u00b6 \u4e00\u3001\u7cfb\u7edf\u7ba1\u7406 \u00b6 1.\u7528\u6237\u7ba1\u7406 \u00b6 passwd useradd userdel groupadd groupdel uesrmod groupmod whoami who id 2.\u65f6\u95f4\u7ba1\u7406 \u00b6 date \u4e8c\u3001\u6587\u4ef6\u7ba1\u7406 \u00b6 cd touch cat head tail less more file chown chmod rm mv cp mkdir rmdir \u4e09\u3001\u78c1\u76d8\u7ba1\u7406 \u00b6 df fdisk lsblk du mount umount tree mkfs \u56db\u3001\u7f51\u7edc\u7ba1\u7406 \u00b6 ping ipconfig ip telnet \u4e94\u3001\u5907\u4efd\u538b\u7f29 \u00b6 zip unzip tar \u516d\u3001\u8fdb\u7a0b\u7ba1\u7406 \u00b6 ps kill pkill killall nohup \u9644\u3001\u547d\u4ee4\u884c\u5feb\u6377\u952e \u00b6 1. \u5149\u6807\u79fb\u52a8 \u00b6 \u5feb\u6377\u952e \u8bf4\u660e Ctrl+f \u5149\u6807\u5411\u524d\u79fb\u52a8\u4e00\u4e2a\u5b57\u7b26\uff0c\u76f8\u5f53\u4e8e\u65b9\u5411\u952e\u7684\u53f3\u952e Ctrl+b \u5149\u6807\u5411\u540e\u79fb\u52a8\u4e00\u4e2a\u5b57\u7b26\uff0c\u76f8\u5f53\u4e8e\u65b9\u5411\u952e\u7684\u5de6\u952e Alt+f \u5149\u6807\u5411\u540e\u79fb\u52a8\u4e00\u4e2a\u5355\u8bcd Alt+b \u5149\u6807\u5411\u540e\u79fb\u52a8\u4e00\u4e2a\u5355\u8bcd Ctrl+a \u5149\u6807\u79fb\u52a8\u5230\u5f53\u524d\u884c\u7684\u5f00\u5934 Ctrl+e \u5149\u6807\u79fb\u52a8\u5230\u5f53\u524d\u884c\u7684\u7ed3\u5c3e Esc+b \u5149\u6807\u79fb\u52a8\u5230\u5f53\u524d\u5355\u8bcd\u7684\u5f00\u5934 Esc+f \u5149\u6807\u79fb\u52a8\u5230\u5f53\u524d\u5355\u8bcd\u7684\u7ed3\u5c3e Ctrl+ ] \u4ece\u5f53\u524d\u5149\u6807\u5f80\u540e\u641c\u7d22\u5b57\u7b26\u4e32\uff0c\u7528\u4e8e\u5feb\u901f\u79fb\u52a8\u5230\u8be5\u5b57\u7b26\u4e32 Ctrl+ alt + ] \u4ece\u5f53\u524d\u5149\u6807\u5f80\u524d\u641c\u7d22\u5b57\u7b26\u4e32\uff0c\u7528\u4e8e\u5feb\u901f\u79fb\u52a8\u5230\u8be5\u5b57\u7b26\u4e32 2. \u547d\u4ee4\u884c\u5b57\u7b26\u4fee\u6539 \u00b6 \u5feb\u6377\u952e \u8bf4\u660e Ctrl+d \u5220\u9664\u5149\u6807\u6240\u5728\u5904\u5b57\u7b26 Ctrl+h \u5220\u9664\u5149\u6807\u6240\u5728\u5904\u524d\u4e00\u4e2a\u5b57\u7b26 Ctrl+w \u526a\u5207\u5149\u6807\u6240\u5728\u5904\u4e4b\u524d\u7684\u4e00\u4e2a\u8bcd\uff08\u4ee5\u7a7a\u683c\u3001\u6807\u70b9\u7b49\u4e3a\u5206\u9694\u7b26\uff09 Alt+d \u526a\u5207\u5149\u6807\u4e4b\u540e\u7684\u8bcd\uff08\u4ee5\u7a7a\u683c\u3001\u6807\u70b9\u7b49\u4e3a\u5206\u9694\u7b26\uff09 Ctrl+u \u526a\u5207\u547d\u4ee4\u884c\u4e2d\u5149\u6807\u6240\u5728\u5904\u4e4b\u524d\u7684\u6240\u6709\u5b57\u7b26\uff08\u4e0d\u5305\u62ec\u81ea\u8eab Ctrl+k \u526a\u5207\u547d\u4ee4\u884c\u4e2d\u5149\u6807\u6240\u5728\u5904\u4e4b\u540e\u7684\u6240\u6709\u5b57\u7b26\uff08\u5305\u62ec\u81ea\u8eab\uff09 Ctrl+y \u7c98\u8d34\u521a\u624d\u6240\u5220\u9664\u7684\u8bcd Ctrl+t \u98a0\u5012\u5149\u6807\u6240\u5728\u5904\u53ca\u5176\u4e4b\u524d\u7684\u5b57\u7b26\u4f4d\u7f6e\uff0c\u5e76\u5c06\u5149\u6807\u79fb\u52a8\u5230\u4e0b\u4e00\u4e2a\u5b57\u7b26 Alt+t \u4ea4\u6362\u5f53\u524d\u548c\u4e0a\u4e00\u4e2a\u5355\u8bcd\u7684\u4f4d\u7f6e Alt+u \u628a\u5149\u6807\u5230\u5f53\u524d\u8bcd\u7ed3\u5c3e\u8f6c\u5316\u4e3a\u5927\u5199\uff0c\u5149\u6807\u79fb\u52a8\u5230\u5355\u8bcd\u672b\u5c3e Alt+l \u628a\u5149\u6807\u5230\u5f53\u524d\u8bcd\u7ed3\u5c3e\u8f6c\u5316\u4e3a\u5c0f\u5199\uff0c\u5149\u6807\u79fb\u52a8\u5230\u5355\u8bcd\u672b\u5c3e Alt+c \u628a\u5149\u6807\u6240\u5728\u5b57\u7b26\u8f6c\u4e3a\u5927\u5199\uff0c\u5149\u6807\u79fb\u52a8\u5230\u5355\u8bcd\u672b\u5c3e Esc+t \u98a0\u5012\u5149\u6807\u6240\u5728\u5904\u53ca\u5176\u4e4b\u524d\u5355\u8bcd\u7684\u4f4d\u7f6e Ctrl+x+u \u64a4\u9500\u521a\u624d\u7684\u64cd\u4f5c Ctrl+? \u64a4\u9500\u4e0a\u4e00\u6b21\u8f93\u5165 3. \u7ec8\u7aef\u64cd\u4f5c \u00b6 \u5feb\u6377\u952e \u8bf4\u660e Ctrl+l \u6e05\u7a7a\u5f53\u524d\u5c4f\u5e55 Ctrl+s \u505c\u6b62\u5411\u5c4f\u5e55\u8f93\u51fa Ctrl+q \u91cd\u65b0\u6fc0\u6d3b\u5411\u5c4f\u5e55\u8f93\u51fa Ctrl+d \u6ce8\u9500\u5f53\u524d\u7ec8\u7aef\u767b\u5f55\u7684\u7528\u6237 4. \u5386\u53f2\u547d\u4ee4 \u00b6 \u5feb\u6377\u952e \u8bf4\u660e Ctrl+p \u663e\u793a\u4e0a\u4e00\u6761\u547d\u4ee4 Ctrl+n \u663e\u793a\u4e0b\u4e00\u6761\u547d\u4ee4 Ctrl+r \u5411\u4e0a\u641c\u7d22\u5305\u542b\u8f93\u5165\u5b57\u7b26\u7684\u547d\u4ee4\uff0c\u7ee7\u7eed\u6309 Ctrl+r \uff0c\u641c\u7d22\u4e0a\u4e00\u6761\u5339\u914d\u7684\u547d\u4ee4 Ctrl+g \u4ece\u6b63\u5728\u6267\u884c Ctrl+ r\u7684\u641c\u7d22\u4e2d\u9000\u51fa !num \u6267\u884c\u5386\u53f2\u547d\u4ee4\u5217\u8868\u4e2d\u7684\u7b2cnum\u6761\u547d\u4ee4 !! \u6267\u884c\u4e0a\u4e00\u6761\u547d\u4ee4 !?string? \u6267\u884c\u542b\u6709string\u5b57\u7b26\u4e32\u7684\u6700\u65b0\u547d\u4ee4 5. \u547d\u4ee4\u6267\u884c \u00b6 \u5feb\u6377\u952e \u8bf4\u660e Ctrl+m \u6267\u884c\u5f53\u524d\u884c\u547d\u4ee4\uff0c\u76f8\u5f53\u4e8e\u56de\u8f66 Ctrl+o \u6267\u884c\u5f53\u524d\u884c\u547d\u4ee4\uff0c\u76f8\u5f53\u4e8e\u56de\u8f66","title":"Linux\u547d\u4ee4\u884c"},{"location":"linux/command-line/#linux","text":"","title":"Linux\u547d\u4ee4\u884c"},{"location":"linux/command-line/#_1","text":"","title":"\u4e00\u3001\u7cfb\u7edf\u7ba1\u7406"},{"location":"linux/command-line/#1","text":"passwd useradd userdel groupadd groupdel uesrmod groupmod whoami who id","title":"1.\u7528\u6237\u7ba1\u7406"},{"location":"linux/command-line/#2","text":"date","title":"2.\u65f6\u95f4\u7ba1\u7406"},{"location":"linux/command-line/#_2","text":"cd touch cat head tail less more file chown chmod rm mv cp mkdir rmdir","title":"\u4e8c\u3001\u6587\u4ef6\u7ba1\u7406"},{"location":"linux/command-line/#_3","text":"df fdisk lsblk du mount umount tree mkfs","title":"\u4e09\u3001\u78c1\u76d8\u7ba1\u7406"},{"location":"linux/command-line/#_4","text":"ping ipconfig ip telnet","title":"\u56db\u3001\u7f51\u7edc\u7ba1\u7406"},{"location":"linux/command-line/#_5","text":"zip unzip tar","title":"\u4e94\u3001\u5907\u4efd\u538b\u7f29"},{"location":"linux/command-line/#_6","text":"ps kill pkill killall nohup","title":"\u516d\u3001\u8fdb\u7a0b\u7ba1\u7406"},{"location":"linux/command-line/#_7","text":"","title":"\u9644\u3001\u547d\u4ee4\u884c\u5feb\u6377\u952e"},{"location":"linux/command-line/#1_1","text":"\u5feb\u6377\u952e \u8bf4\u660e Ctrl+f \u5149\u6807\u5411\u524d\u79fb\u52a8\u4e00\u4e2a\u5b57\u7b26\uff0c\u76f8\u5f53\u4e8e\u65b9\u5411\u952e\u7684\u53f3\u952e Ctrl+b \u5149\u6807\u5411\u540e\u79fb\u52a8\u4e00\u4e2a\u5b57\u7b26\uff0c\u76f8\u5f53\u4e8e\u65b9\u5411\u952e\u7684\u5de6\u952e Alt+f \u5149\u6807\u5411\u540e\u79fb\u52a8\u4e00\u4e2a\u5355\u8bcd Alt+b \u5149\u6807\u5411\u540e\u79fb\u52a8\u4e00\u4e2a\u5355\u8bcd Ctrl+a \u5149\u6807\u79fb\u52a8\u5230\u5f53\u524d\u884c\u7684\u5f00\u5934 Ctrl+e \u5149\u6807\u79fb\u52a8\u5230\u5f53\u524d\u884c\u7684\u7ed3\u5c3e Esc+b \u5149\u6807\u79fb\u52a8\u5230\u5f53\u524d\u5355\u8bcd\u7684\u5f00\u5934 Esc+f \u5149\u6807\u79fb\u52a8\u5230\u5f53\u524d\u5355\u8bcd\u7684\u7ed3\u5c3e Ctrl+ ] \u4ece\u5f53\u524d\u5149\u6807\u5f80\u540e\u641c\u7d22\u5b57\u7b26\u4e32\uff0c\u7528\u4e8e\u5feb\u901f\u79fb\u52a8\u5230\u8be5\u5b57\u7b26\u4e32 Ctrl+ alt + ] \u4ece\u5f53\u524d\u5149\u6807\u5f80\u524d\u641c\u7d22\u5b57\u7b26\u4e32\uff0c\u7528\u4e8e\u5feb\u901f\u79fb\u52a8\u5230\u8be5\u5b57\u7b26\u4e32","title":"1. \u5149\u6807\u79fb\u52a8"},{"location":"linux/command-line/#2_1","text":"\u5feb\u6377\u952e \u8bf4\u660e Ctrl+d \u5220\u9664\u5149\u6807\u6240\u5728\u5904\u5b57\u7b26 Ctrl+h \u5220\u9664\u5149\u6807\u6240\u5728\u5904\u524d\u4e00\u4e2a\u5b57\u7b26 Ctrl+w \u526a\u5207\u5149\u6807\u6240\u5728\u5904\u4e4b\u524d\u7684\u4e00\u4e2a\u8bcd\uff08\u4ee5\u7a7a\u683c\u3001\u6807\u70b9\u7b49\u4e3a\u5206\u9694\u7b26\uff09 Alt+d \u526a\u5207\u5149\u6807\u4e4b\u540e\u7684\u8bcd\uff08\u4ee5\u7a7a\u683c\u3001\u6807\u70b9\u7b49\u4e3a\u5206\u9694\u7b26\uff09 Ctrl+u \u526a\u5207\u547d\u4ee4\u884c\u4e2d\u5149\u6807\u6240\u5728\u5904\u4e4b\u524d\u7684\u6240\u6709\u5b57\u7b26\uff08\u4e0d\u5305\u62ec\u81ea\u8eab Ctrl+k \u526a\u5207\u547d\u4ee4\u884c\u4e2d\u5149\u6807\u6240\u5728\u5904\u4e4b\u540e\u7684\u6240\u6709\u5b57\u7b26\uff08\u5305\u62ec\u81ea\u8eab\uff09 Ctrl+y \u7c98\u8d34\u521a\u624d\u6240\u5220\u9664\u7684\u8bcd Ctrl+t \u98a0\u5012\u5149\u6807\u6240\u5728\u5904\u53ca\u5176\u4e4b\u524d\u7684\u5b57\u7b26\u4f4d\u7f6e\uff0c\u5e76\u5c06\u5149\u6807\u79fb\u52a8\u5230\u4e0b\u4e00\u4e2a\u5b57\u7b26 Alt+t \u4ea4\u6362\u5f53\u524d\u548c\u4e0a\u4e00\u4e2a\u5355\u8bcd\u7684\u4f4d\u7f6e Alt+u \u628a\u5149\u6807\u5230\u5f53\u524d\u8bcd\u7ed3\u5c3e\u8f6c\u5316\u4e3a\u5927\u5199\uff0c\u5149\u6807\u79fb\u52a8\u5230\u5355\u8bcd\u672b\u5c3e Alt+l \u628a\u5149\u6807\u5230\u5f53\u524d\u8bcd\u7ed3\u5c3e\u8f6c\u5316\u4e3a\u5c0f\u5199\uff0c\u5149\u6807\u79fb\u52a8\u5230\u5355\u8bcd\u672b\u5c3e Alt+c \u628a\u5149\u6807\u6240\u5728\u5b57\u7b26\u8f6c\u4e3a\u5927\u5199\uff0c\u5149\u6807\u79fb\u52a8\u5230\u5355\u8bcd\u672b\u5c3e Esc+t \u98a0\u5012\u5149\u6807\u6240\u5728\u5904\u53ca\u5176\u4e4b\u524d\u5355\u8bcd\u7684\u4f4d\u7f6e Ctrl+x+u \u64a4\u9500\u521a\u624d\u7684\u64cd\u4f5c Ctrl+? \u64a4\u9500\u4e0a\u4e00\u6b21\u8f93\u5165","title":"2. \u547d\u4ee4\u884c\u5b57\u7b26\u4fee\u6539"},{"location":"linux/command-line/#3","text":"\u5feb\u6377\u952e \u8bf4\u660e Ctrl+l \u6e05\u7a7a\u5f53\u524d\u5c4f\u5e55 Ctrl+s \u505c\u6b62\u5411\u5c4f\u5e55\u8f93\u51fa Ctrl+q \u91cd\u65b0\u6fc0\u6d3b\u5411\u5c4f\u5e55\u8f93\u51fa Ctrl+d \u6ce8\u9500\u5f53\u524d\u7ec8\u7aef\u767b\u5f55\u7684\u7528\u6237","title":"3. \u7ec8\u7aef\u64cd\u4f5c"},{"location":"linux/command-line/#4","text":"\u5feb\u6377\u952e \u8bf4\u660e Ctrl+p \u663e\u793a\u4e0a\u4e00\u6761\u547d\u4ee4 Ctrl+n \u663e\u793a\u4e0b\u4e00\u6761\u547d\u4ee4 Ctrl+r \u5411\u4e0a\u641c\u7d22\u5305\u542b\u8f93\u5165\u5b57\u7b26\u7684\u547d\u4ee4\uff0c\u7ee7\u7eed\u6309 Ctrl+r \uff0c\u641c\u7d22\u4e0a\u4e00\u6761\u5339\u914d\u7684\u547d\u4ee4 Ctrl+g \u4ece\u6b63\u5728\u6267\u884c Ctrl+ r\u7684\u641c\u7d22\u4e2d\u9000\u51fa !num \u6267\u884c\u5386\u53f2\u547d\u4ee4\u5217\u8868\u4e2d\u7684\u7b2cnum\u6761\u547d\u4ee4 !! \u6267\u884c\u4e0a\u4e00\u6761\u547d\u4ee4 !?string? \u6267\u884c\u542b\u6709string\u5b57\u7b26\u4e32\u7684\u6700\u65b0\u547d\u4ee4","title":"4. \u5386\u53f2\u547d\u4ee4"},{"location":"linux/command-line/#5","text":"\u5feb\u6377\u952e \u8bf4\u660e Ctrl+m \u6267\u884c\u5f53\u524d\u884c\u547d\u4ee4\uff0c\u76f8\u5f53\u4e8e\u56de\u8f66 Ctrl+o \u6267\u884c\u5f53\u524d\u884c\u547d\u4ee4\uff0c\u76f8\u5f53\u4e8e\u56de\u8f66","title":"5. \u547d\u4ee4\u6267\u884c"},{"location":"linux/grep_sed_awk/","text":"\u6587\u672c\u5904\u7406\u4e09\u5251\u5ba2 \u00b6 \u5305\u62ecawk\u3001sed\u548cgrep\u4e09\u79cd\u6587\u672c\u5904\u7406\u5de5\u5177\u3002 \u4e00\u3001grep \u00b6 grep\u547d\u4ee4\uff1a\u901a\u8fc7\u6b63\u5219\u8868\u8fbe\u5f0f\u67e5\u627e\u6587\u4ef6\u4e2d\u7684\u5173\u952e\u5b57 1. \u8bed\u6cd5\u683c\u5f0f \u00b6 grep [option] [pattern] [file1,file2] command | grep [option] [pattern] 2. \u9009\u9879 \u00b6 \u9009\u9879 \u542b\u4e49 -v \u4e0d\u663e\u793a\u5339\u914d\u884c\u4fe1\u606f -i \u641c\u7d22\u65f6\u5ffd\u7565\u5927\u5c0f\u5199 -n \u663e\u793a\u884c\u53f7 -r \u9012\u5f52\u641c\u7d22 -E \u652f\u6301\u6269\u5c55\u6b63\u5219\u8868\u8fbe\u5f0f -F \u4e0d\u6309\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d\uff0c\u6309\u7167\u5b57\u7b26\u4e32\u5b57\u9762\u610f\u601d\u5339\u914d -c \u53ea\u663e\u793a\u5339\u914d\u884c\u6570 -w \u5339\u914d\u6574\u8bcd -x \u5339\u914d\u6574\u884c -l \u53ea\u663e\u793a\u6587\u4ef6\u540d\uff0c\u4e0d\u663e\u793a\u5185\u5bb9 -s \u4e0d\u663e\u793a\u9519\u8bef\u4fe1\u606f -A <N> \u663e\u793a\u6240\u627e\u7684\u5339\u914d\u5b57\u6bb5\uff0c\u5e76\u663e\u793a\u4e0b\u9762\u6307\u5b9a\u7684\u884c\u6570\u7684\u4fe1\u606f -B <N> \u663e\u793a\u6240\u627e\u7684\u5339\u914d\u5b57\u6bb5\uff0c\u5e76\u663e\u793a\u4e0a\u9762\u6307\u5b9a\u7684\u884c\u6570\u7684\u4fe1\u606f -C <N> \u6253\u5370\u51fa\u5339\u914d\u7684\u4e0a\u4e0b\u6587\uff08\u4e0aN\u884c\uff0c\u4e0bN\u884c\uff09\u524d\u540e\u7684N\u884c \u4e8c\u3001sed \u00b6 sed\u547d\u4ee4\uff1a\u5b57\u7b26\u6d41\u7f16\u8f91\u5de5\u5177\uff0c\u5bf9\u6807\u51c6\u8f93\u51fa\u6216\u6587\u4ef6\u9010\u884c\u8fdb\u884c\u5904\u7406\u3002 sed\u7684\u4e24\u4e2a\u4e34\u65f6\u7f13\u51b2\u533a\uff08\u7a7a\u95f4\uff09\uff1a \u6a21\u5f0f\u7a7a\u95f4\uff1a\u4fdd\u5b58\u5f53\u524d\u88ab\u5904\u7406\u7684\u884c \u4fdd\u6301\u7a7a\u95f4 1.\u529f\u80fd \u00b6 \u5bf9\u884c\u8fdb\u884c\u64cd\u4f5c\u5904\u7406 \u5bf9\u6587\u4ef6\u5185\u5bb9\u4fe1\u606f\u8fdb\u884c\u4fee\u6539\uff0c\u5220\u9664\u3001\u6dfb\u52a0\u3001\u67e5\u8be2 2.\u8bed\u6cd5\u683c\u5f0f \u00b6 sed [OPTION] \"pattern command\" file command | sed [OPTION] \"pattern command\" 3.\u5de5\u4f5c\u6a21\u5f0f \u00b6 sed \u4e00\u6b21\u5904\u7406\u4e00\u884c\u6587\u4ef6\u7684\u6587\u672c\u5e76\u5c06\u5f53\u524d\u5904\u7406\u7684\u884c\u5b58\u50a8\u5728\u4e34\u65f6\u7f13\u51b2\u533a\u4e2d\uff08\u6b64\u53c8\u88ab\u79f0\u4e3a\u6a21\u5f0f\u7a7a\u95f4\u201c pattern space\u201d) Sed \u4e00\u65e6\u5b8c\u6210\u5bf9\u6a21\u5f0f\u7a7a\u95f4\u4e2d\u7684\u884c\u7684\u5904\u7406\uff0c\u884c\u5c06\u4ece\u7a7a\u95f4\u4e2d\u8f93\u51fa\u5230\u5c4f\u5e55\u3002 sed \u5728\u7ee7\u7eed\u8bfb\u5165\u4e0b\u4e00\u884c\uff0c\u5728\u5982\u6b64\u7ee7\u7eed\uff0c\u76f4\u81f3\u5168\u90e8\u6267\u884c\u5b8c\u6210 4.\u9009\u9879 \u00b6 \u9009\u9879 \u542b\u4e49 -n \u53ea\u6253\u5370\u6a21\u5f0f\u5339\u914d\u884c\uff0c\u9ed8\u8ba4\u8f93\u51fa -e \u5141\u8bb8\u591a\u70b9\u7f16\u8f91 -f \u7f16\u8f91\u52a8\u4f5c\u4fdd\u5b58\u5728\u6587\u4ef6\u4e2d\uff0c\u6307\u5b9a\u6587\u4ef6\u6267\u884c -r \u652f\u6301\u6269\u5c55\u6b63\u5219\u8868\u8fbe\u5f0f -i \u76f4\u63a5\u4fee\u6539\u6587\u4ef6\u5185\u5bb9 5.pattern\u7528\u6cd5 \u00b6 \u5339\u914d\u6a21\u5f0f \u542b\u4e49 10command \u5339\u914d\u7b2c10\u884c 10,20command \u4ece10\u884c\u5f00\u59cb\u5339\u914d\u523020\u884c\u7ed3\u675f 10,+5command \u4ece10\u884c\u5f00\u59cb\u5339\u914d\uff0c\u523015\u884c\u7ed3\u675f /pattern/command \u5339\u914d\u6709pattern\u7684\u884c\uff0cpattern\u53ef\u4ee5\u662f\u5b57\u7b26\u4e32\u6216\u6b63\u5219\u8868\u8fbe\u5f0f /pattern1/,/pattern2/command \u5339\u914d\u5230pattern1\u7684\u884c\u5f00\u59cb\uff0c\u5230\u5339\u914d\u5230pattern2\u7684\u884c\u7ed3\u675f 10,/pattern/command \u4ece10\u884c\u5f00\u59cb\uff0c\u5230\u5339\u914d\u5230pattern\u7684\u884c\u7ed3\u675f /pattern/,10command \u4ece\u5339\u914d\u5230pattern\u7684\u884c\u5f00\u59cb\uff0c\u5230\u7b2c10\u884c\u7ed3\u675f 6.sed\u547d\u4ee4 \u00b6 \u547d\u4ee4\u8bed\u6cd5\uff1a [address]command [address]{command1;command2} 6.1 \u57fa\u7840\u547d\u4ee4 \u00b6 6.1 \u66ff\u6362\uff08s\uff09 \u00b6 1 root@gp:~# sed -i 's/UNIX/unix/g' file \u5e38\u7528\u7684\u5b9a\u754c\u7b26 # \u3001 @ \u3001 / 6.2 \u5220\u9664\uff08d\uff09 \u00b6 \u5982\u679c\u5339\u914d\u4f1a\u5220\u9664\u6574\u884c 1 2 # \u5220\u9664\u7a7a\u884c root@gp:~# sed -i '/^$/d' file 6.3 \u8ffd\u52a0\uff08a\uff09 \u00b6 \u5728\u5339\u914d\u884c\u540e\u6dfb\u52a0 1 sed '/word/a \\text' file 6.4 \u63d2\u5165\uff08i\uff09 \u00b6 \u5728\u5339\u914d\u884c\u524d\u6dfb\u52a0 1 sed '/word/i \\text' file 6.5 \u66f4\u6539\uff08c\uff09 \u00b6 \u5220\u9664\u5339\u914d\u7684\u884c\u5e76\u66ff\u6362\u4e3a\u6307\u5b9a\u5185\u5bb9 1 2 root@gp:~# sed '/hello/c \\HELLO WORLD' file HELLO WORLD 6.5 \u5217\u8868\uff08l\uff09 \u00b6 \u663e\u793a\u6a21\u5f0f\u7a7a\u95f4\u7684\u5185\u5bb9\uff0c\u53ef\u4ee5\u663e\u793a\u975e\u6253\u5370\u5b57\u7b26\uff0c\u5982\u5236\u8868\u7b26\u7b49 1 2 3 root@gp:~# sed -n 'l' file hello$ \\t world$ 6.6 \u6253\u5370\uff08p\uff09 \u00b6 \u8f93\u51fa\u6a21\u5f0f\u7a7a\u95f4\u7684\u5185\u5bb9\u3002 1 root@gp:~# sed -n '$p' /etc/passwd 6.7 \u6253\u5370\u884c\u53f7\uff08=\uff09 \u00b6 \u6253\u5370\u88ab\u5339\u914d\u7684\u884c\u7684\u884c\u53f7 6.8 \u4e0b\u4e00\u6b65\uff08n\uff09 \u00b6 \u5c0f\u5199n\u547d\u4ee4\u4f1a\u544a\u8bc9sed\u7f16\u8f91\u5668\u79fb\u52a8\u5230\u6570\u636e\u6d41\u7684\u4e0b\u4e00\u884c\u6587\u672c\uff0c\u800c\u4e0d\u7528\u91cd\u65b0\u56de\u5230\u547d\u4ee4\u6700\u5f00\u59cb\u518d\u6267\u884c\u4e00\u904d\u3002\u901a\u5e38sed\u7f16\u8f91\u5668\u5728\u79fb\u52a8\u5230\u6570\u636e\u6d41\u4e2d\u7684\u4e0b\u4e00\u884c\u6587\u672c\u4e4b\u524d\uff0c\u4f1a\u5728\u5f53\u524d\u884c\u4e0a\u6267\u884c\u5b8c\u6240\u6709\u5b9a\u4e49\u597d\u7684\u76ee\u547d\u4ee4\u3002 1 $ sed -i \"/baidu/{n;/baidu/d}\" hosts 6.9 \u8bfb\uff08r\uff09 \u00b6 \u5c06\u4e00\u4e2a\u6587\u4ef6\u7684\u5185\u5bb9\u63d2\u5165\u5230\u6307\u5b9a\u4f4d\u7f6e 6.9 \u5199\uff08w\uff09 \u00b6 \u5c06\u6a21\u5f0f\u7a7a\u95f4\u7684\u5185\u5bb9\u5199\u5230\u6587\u4ef6\u4e2d 6.10 \u9000\u51fa\uff08q\uff09 \u00b6 \u4f7fsed\u505c\u6b62\u8bfb\u53d6\u65b0\u7684\u8f93\u5165\u884c 1 2 # \u8f93\u51fa\u524d5\u884c root@gp:~# sed '5q' /etc/passwd 6.2 \u9ad8\u7ea7\u547d\u4ee4 \u00b6 \u9ad8\u7ea7\u547d\u4ee4\u6539\u53d8\u4e86\u6267\u884c\u6216\u63a7\u5236\u7684\u6d41\u7a0b\u987a\u5e8f\u3002 6.2.1 \u591a\u884cNext\uff08N\uff09 \u00b6 \u8bfb\u53d6\u65b0\u7684\u8f93\u5165\u884c\uff0c\u5e76\u5c06\u5b83\u6dfb\u52a0\u5230\u6a21\u5f0f\u7a7a\u95f4\u7684\u73b0\u6709\u5185\u5bb9\u4e4b\u540e\u3002 \u4f8b1\uff1a 1 2 3 4 5 6 7 8 9 10 root@gp:~# cat file This is the header line. This is the first line. This is the second line. This is the last line. # \u5c06\u4e24\u884c\u5408\u5e76\u4e3a\u4e00\u884c root@gp:~# sed '/first/{N; s/\\n/ /}' file This is the header line. This is the first line. This is the second line. This is the last line. \u4f8b2\uff1a 1 2 3 4 5 6 7 8 9 10 11 root@gp:~# cat file.txt On Tuesday, the Linux System Administrator 's group meeting will be held. All System Administrator should attent. Thank you for your attend. # \u66ff\u6362\u5206\u6563\u5728\u4e24\u884c\u4e2d\u7684\u6587\u672c\u77ed\u8bed root@gp:~# sed ' s/System Administrator/Desktop User/ ; N ; s/System \\n Administrator/Desktop \\n User/ ' file.txt On Tuesday, the Linux Desktop User' s group meeting will be held. All Desktop User should attent. Thank you for your attend. 6.2.2 \u591a\u884c\u5220\u9664\uff08D\uff09 \u00b6 \u53ea\u5220\u9664\u6a21\u5f0f4\u7a7a\u95f4\u7684\u7b2c\u4e00\u884c\u3002\u8be5\u547d\u4ee4\u4f1a\u5220\u9664\u5230\u6362\u884c\u7b26\u4e3a\u6b62\u7684\u6240\u6709\u5b57\u7b26\u3002 D\u547d\u4ee4\u4f1a\u5f3a\u5236sed\u7f16\u8f91\u5668\u8fd4\u56de\u5230\u811a\u672c\u7684\u8d77\u59cb\u5904\uff0c\u5bf9\u6a21\u5f0f\u7a7a\u95f4\u4e2d\u7684\u5185\u5bb9\u91cd\u65b0\u6267\u884c\u8fd9\u4e9b\u547d\u4ee4\uff08\u4e0d\u4f1a\u4ece\u6570\u636e\u6d41\u4e2d\u8bfb\u53d6\u65b0\u7684\u6587\u672c\u884c\uff09 \u4f8b1\uff1a\u5220\u9664\u5339\u914d\u884c\u7684\u524d\u4e00\u884c\u6587\u672c 1 2 3 4 5 6 7 8 9 10 11 12 13 14 root@gp:~# cat file This is the header line. This is the first line. This is the second line. This is the last line. # \u5220\u9664\u5339\u914d\u884c\u7684\u524d\u4e00\u884c\u6587\u672c root@gp:~# sed '/^$/{N;/header/D}' file This is the header line. This is the first line. This is the second line. This is the last line. \u4f8b2\uff1a\u5c06\u591a\u4e2a\u7a7a\u884c\u5408\u5e76\u4e3a\u4e00\u4e2a\u7a7a\u884c 1 root@gp:~# sed '/^$/{N;/^\\n$/D}' file 6.2.3 \u591a\u884c\u6253\u5370\uff08P\uff09 \u00b6 \u8f93\u51fa\u591a\u884c\u6a21\u5f0f\u7a7a\u95f4\u7684\u7b2c\u4e00\u90e8\u5206\uff0c\u76f4\u5230\u7b2c\u4e00\u4e2a\u6362\u884c\u7b26\u4e3a\u6b62\u3002\u8fd9\u4e2a\u547d\u4ee4\u7ecf\u5e38\u51fa\u73b0\u5728Next\u4e4b\u540e\u548cDelete\u4e4b\u524d\u3002 6.3 \u4fdd\u6301\u7a7a\u95f4 \u00b6 \u7528\u9014: \u5728\u5904\u7406\u6a21\u5f0f\u7a7a\u95f4\u4e2d\u7684\u67d0\u4e9b\u884c\u65f6\uff0c\u53ef\u4ee5\u7528\u4fdd\u6301\u7a7a\u95f4\u6765\u4e34\u65f6\u4fdd\u5b58\u4e00\u4e9b\u884c\u3002 \u547d\u4ee4 \u63cf\u8ff0 h \u5c06\u6a21\u5f0f\u7a7a\u95f4\u590d\u5236\u5230\u4fdd\u6301\u7a7a\u95f4 H \u5c06\u6a21\u5f0f\u7a7a\u95f4\u8ffd\u52a0\u5230\u4fdd\u6301\u7a7a\u95f4 g \u5c06\u4fdd\u6301\u7a7a\u95f4\u590d\u5236\u5230\u6a21\u5f0f\u7a7a\u95f4 G \u5c06\u4fdd\u6301\u7a7a\u95f4\u8ffd\u52a0\u5230\u6a21\u5f0f\u7a7a\u95f4 x \u4ea4\u6362\u6a21\u5f0f\u7a7a\u95f4\u548c\u4fdd\u6301\u7a7a\u95f4\u7684\u5185\u5bb9 6.4 \u6d41\u7a0b\u63a7\u5236 \u00b6 1. \u5206\u652f\uff08b\uff09 \u00b6 \u5728\u811a\u672c\u4e2d\u5c06\u63a7\u5236\u6743\u8f6c\u79fb\u5230\u53e6\u4e00\u884c [address]b[label] address\uff1a\u51b3\u5b9a\u54ea\u4e9b\u884c\u7684\u6570\u636e\u4f1a\u89e6\u53d1\u5206\u652f\u547d\u4ee4 label\uff1a\u5b9a\u4e49\u8981\u8df3\u8f6c\u5230\u7684\u4f4d\u7f6e\uff0c\u5982\u679c\u6ca1\u6709label\uff0c\u5c31\u8df3\u8f6c\u5230\u811a\u672c\u7684\u7ed3\u5c3e \u4f8b1\uff1a\u4e0d\u52a0\u6807\u7b7e 1 2 3 4 5 6 7 8 9 10 11 root@gp:~# cat file This is the header line. This is the first line. This is the second line. This is the last line. # \u8df3\u8fc7\u7b2c2,3\u884c root@gp:~# sed '{2,3b; s/This is/Is this/; s/line./test?/}' file Is this the header test? This is the first line. This is the second line. Is this the last test? \u4f8b2\uff1a\u4f7f\u7528\u6807\u7b7e \u7f16\u8f91\u547d\u4ee4 \u542b\u4e49 p \u6253\u5370 a \u884c\u540e\u8ffd\u52a0 i \u884c\u524d\u8ffd\u52a0 r \u5916\u90e8\u6587\u4ef6\u8bfb\u53d6\uff0c\u884c\u540e\u8ffd\u52a0 w \u5339\u914d\u884c\u5199\u5165\u5916\u90e8\u6587\u4ef6 d \u5220\u9664 s/old/new/ \u5c06\u884c\u5185\u7684\u7b2c\u4e00\u4e2aold\u66ff\u6362\u4e3anew s/old/new/g \u5c06\u884c\u5185\u5168\u90e8\u7684old\u66ff\u6362\u4e3anew s/old/new/2g \u540c\u4e00\u884c\u5185\uff0c\u53ea\u66ff\u6362\u4ece\u7b2c2\u4e2a\u5f00\u59cb\u5230\u5269\u4e0b\u6240\u6709\u7b26\u5408\u6761\u4ef6\u7684 s/old/new/ig \u5c06\u884c\u5185\u5168\u90e8\u7684old\u66ff\u6362\u4e3anew\uff0c\u5ffd\u7565\u5927\u5c0f\u5199 = \u663e\u793a\u5339\u914d\u7684\u884c\u53f7\uff0c\u4f46\u662f\u4e0d\u663e\u793a\u5185\u5bb9 7.\u53cd\u5411\u5f15\u7528 \u00b6 \u5b57\u7b26 \u529f\u80fd & \u4fdd\u5b58\u6240\u641c\u7d22\u5b57\u7b26\u7528\u6765\u66ff\u6362\u5176\u4ed6\u5b57\u7b26 () \u5206\u7ec4\uff0c\u628a\u9700\u8981\u5f15\u7528\u7684\u90e8\u5206\u62ec\u8d77\u6765 7.1. \u4f7f\u7528 & \u5f15\u7528 1 2 $ sed -n 's/ubuntu/++&++/p' passwd ++ubuntu++:x:1000:1000:ubuntu,,,:/home/ubuntu:/bin/bash 7.2. \u4f7f\u7528 () \u5206\u7ec4\u5f15\u7528 1 2 $ sed -n 's/\\(ro\\)../\\1OT/gp' passwd roOT:x:0:0:roOT:/roOT:/bin/bash 8.\u53d8\u91cf\u5f15\u7528 \u00b6 \u5339\u914d\u6a21\u5f0f\u4e2d\u4f7f\u7528\u53d8\u91cf\u65f6\uff0c\u4f7f\u7528\u53cc\u5f15\u53f7\uff0c\u5426\u5219\u9700\u8981\u628a\u53d8\u91cf\u7528\u5355\u5f15\u53f7\u62ec\u8d77\u6765 \"s/$old/$new/g\" \u6216 's/'$old'/'$new'/g' \u4e09\u3001awk \u00b6 awk\uff1a\u62a5\u544a\u751f\u6210\u5668\uff0c\u662f Alfred Aho,Peter Weinberger,Brian Kernighan \u4e09\u4f4d\u4f5c\u8005\u8054\u5408\u5f00\u53d1\u7684\u3002 1.\u8bed\u6cd5\u683c\u5f0f \u00b6 awk 'BEGIN{}pattern{commmand}END{}' file command | awk 'BEGIN{}pattern{commmand}END{}' \u8bed\u6cd5\u683c\u5f0f \u542b\u4e49 BEGIN{} \u6b63\u5f0f\u5904\u7406\u6570\u636e\u4e4b\u524d\u6267\u884c pattern \u5339\u914d\u6a21\u5f0f {commands} \u5904\u7406\u547d\u4ee4\uff0c\u53ef\u4ee5\u591a\u884c END{} \u5904\u7406\u5b8c\u6240\u6709\u5339\u914d\u6570\u636e\u540e\u7684\u6267\u884c 2.\u5185\u7f6e\u53d8\u91cf \u00b6 \u5185\u7f6e\u53d8\u91cf \u542b\u4e49 $0 \u6574\u884c\u5185\u5bb9 $ \u5f53\u524d\u884c\u7684\u7b2cn\u4e2a\u5b57\u6bb5 NF Number Field\uff0c\u5f53\u524d\u884c\u7684\u5b57\u6bb5\u4e2a\u6570\uff0c\u4e5f\u5c31\u662f\u6709\u591a\u5c11\u5217 NR Number Row\uff0c\u5f53\u524d\u884c\u7684\u884c\u53f7\uff0c\u4ece1\u5f00\u59cb\u8ba1\u6570 FNR File Number Row\u591a\u6587\u4ef6\u5904\u7406\u662f\uff0c\u6bcf\u4e2a\u6587\u4ef6\u884c\u53f7\u5355\u72ec\u8ba1\u6570\uff0c\u90fd\u662f\u4ece1\u5f00\u59cb FS Field Separator\uff0c\u8f93\u5165\u5b57\u6bb5\u5206\u5272\u7b26\uff0c\u9ed8\u8ba4\u4ee5\u7a7a\u683c\u6216tab\u5206\u5272 RS Row Separator\uff0c\u8f93\u5165\u884c\u5206\u9694\u7b26\uff0c\u9ed8\u8ba4\u56de\u8f66\u6362\u884c OFS Output Field Separator\uff0c\u8f93\u51fa\u5b57\u6bb5\u5206\u9694\u7b26\uff0c\u9ed8\u8ba4\u7a7a\u683c ORS Output Row Separator\uff0c\u8f93\u51fa\u884c\u5206\u9694\u7b26\uff0c\u9ed8\u8ba4\u56de\u8f66\u6362\u884c FILENAME \u5f53\u524d\u8f93\u5165\u7684\u6587\u4ef6\u540d\u79f0 ARGC \u547d\u4ee4\u884c\u53c2\u6570\u4e2a\u6570 ARGV \u547d\u4ee4\u884c\u53c2\u6570\u6570\u7ec4 3. \u8f93\u51fa \u00b6 3.1. printf \u00b6 \u683c\u5f0f\u7b26 \u542b\u4e49 %s \u6253\u5370\u5b57\u7b26\u4e32 %d \u6253\u5370\u5341\u8fdb\u5236\u6570 %f \u6253\u5370\u6d6e\u70b9\u6570 %x \u6253\u5370\u5341\u516d\u8fdb\u5236\u6570 %o \u6253\u5370\u516b\u8fdb\u5236\u6570 %e \u6253\u5370\u6570\u5b57\u7684\u79d1\u5b66\u6280\u672f\u6cd5\u683c\u5f0f %c \u6253\u5370\u5355\u4e2a\u5b57\u7b26\u7684ASCII \u4fee\u9970\u7b26 \u542b\u4e49 - \u5de6\u5bf9\u9f50 + \u53f3\u5bf9\u9f50 # \u663e\u793a8\u8fdb\u5236\u5728\u524d\u9762\u52a00\uff0c\u663e\u793a16\u8fdb\u5236\u5728\u524d\u9762\u52a00x 1 2 # printf $ awk 'BEGIN{FS=\":\"}{printf \"%-20s %10s\\n\",$1,$7}' /etc/passwd 3.2 print \u00b6 1 2 $ awk 'BEGIN{FS=\":\"}/root/{printf $0}' /etc/passwd root:x:0:0:root:/root:/bin/bash 4.\u5339\u914d\u6a21\u5f0f \u00b6 4.1.\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d \u00b6 1 2 $ awk 'BEGIN{FS=\":\"}/root/{printf $0}' /etc/passwd root:x:0:0:root:/root:/bin/bash 4.2.\u5173\u7cfb\u8fd0\u7b97\u5339\u914d \u00b6 \u5173\u7cfb\u8fd0\u7b97\u7b26 \u542b\u4e49 < \u5c0f\u4e8e <= \u5c0f\u4e8e\u7b49\u4e8e > \u5927\u4e8e >= \u5927\u4e8e\u7b49\u4e8e == \u7b49\u4e8e != \u4e0d\u7b49\u4e8e ~ \u5339\u914d\u6b63\u5219\u8868\u8fbe\u5f0f !~ \u4e0d\u5339\u914d\u6b63\u5219\u8868\u8fbe\u5f0f 1 2 3 4 # \u5173\u7cfb\u8fd0\u7b97\u7b26\u5339\u914d $ awk -F \":\" '$3>=1000 {print $0}' /etc/passwd nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin ubuntu:x:1000:1000:ubuntu,,,:/home/ubuntu:/bin/bash 1 2 3 # \u6b63\u5219\u5339\u914d $ awk -F \":\" '$1~/root/ {print $0}' /etc/passwd root:x:0:0:root:/root:/bin/bash 4.3. \u5e03\u5c14\u8fd0\u7b97\u7b26\u5339\u914d \u00b6 \u5e03\u5c14\u8fd0\u7b97\u7b26 \u542b\u4e49 || \u6216 && \u4e0e ! \u975e 1 2 3 4 5 # \u5e03\u5c14\u8fd0\u7b97\u7b26\u5339\u914d $ awk -F \":\" '$3==0 || $3>=1000 {printf \"%s\\n\",$0}' /etc/passwd root:x:0:0:root:/root:/bin/bash nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin ubuntu:x:1000:1000:ubuntu,,,:/home/ubuntu:/bin/bash 5. \u8868\u8fbe\u5f0f \u00b6 5.1. \u7b97\u6570\u8fd0\u7b97\u7b26 \u00b6 \u8fd0\u7b97\u7b26 \u542b\u4e49 + \u52a0 - \u51cf * \u4e58 / \u9664 % \u53d6\u6a21 ^\u6216** \u4e58\u65b9 ++x \u5728\u8fd4\u56dex\u53d8\u91cf\u4e4b\u524d\uff0cx\u53d8\u91cf\u52a01 x++ \u5728\u8fd4\u56dex\u53d8\u91cf\u4e4b\u540e\uff0cx\u53d8\u91cf\u52a01 1 2 3 # \u7b97\u6570\u8fd0\u7b97 $ awk 'BEGIN{x=10;y=30;print x+y}' 40 1 2 3 # \u7edf\u8ba1\u7a7a\u884c $ awk '/^$/{cnt++}END{print cnt}' /etc/services 6 6. \u903b\u8f91\u63a7\u5236 \u00b6 \u8bed\u6cd5\u683c\u5f0f\u540cC\u8bed\u8a00\u3002 6.1. if \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 $ awk -F \":\" '{if ($3==0) {printf \"%-10s%s\\n\",\"root\u7528\u6237:\",$1} else {printf \"%-10s%s\\n\",\"\u666e\u901a\u7528\u6237:\",$1}}' /etc/passwd root\u7528\u6237: root \u666e\u901a\u7528\u6237: daemon \u666e\u901a\u7528\u6237: bin \u666e\u901a\u7528\u6237: sys \u666e\u901a\u7528\u6237: sync \u666e\u901a\u7528\u6237: games \u666e\u901a\u7528\u6237: man \u666e\u901a\u7528\u6237: lp \u666e\u901a\u7528\u6237: mail \u666e\u901a\u7528\u6237: news \u666e\u901a\u7528\u6237: uucp \u666e\u901a\u7528\u6237: proxy \u666e\u901a\u7528\u6237: www-data \u666e\u901a\u7528\u6237: backup \u666e\u901a\u7528\u6237: list \u666e\u901a\u7528\u6237: irc \u666e\u901a\u7528\u6237: gnats \u666e\u901a\u7528\u6237: nobody \u666e\u901a\u7528\u6237: systemd-timesync \u666e\u901a\u7528\u6237: systemd-network \u666e\u901a\u7528\u6237: systemd-resolve \u666e\u901a\u7528\u6237: systemd-bus-proxy \u666e\u901a\u7528\u6237: syslog \u666e\u901a\u7528\u6237: _apt \u666e\u901a\u7528\u6237: lxd \u666e\u901a\u7528\u6237: messagebus \u666e\u901a\u7528\u6237: uuidd \u666e\u901a\u7528\u6237: dnsmasq \u666e\u901a\u7528\u6237: sshd \u666e\u901a\u7528\u6237: ubuntu 6.2. do...while \u00b6 1 2 $ awk 'BEGIN{do{sum+=i;i++}while(i<=100) print sum}' 5050 6.3. while \u00b6 1 2 $ awk 'BEGIN{while(i<=100){sum+=i;i++}print sum}' 5050 6.4. for \u00b6 7. \u5b57\u7b26\u4e32\u51fd\u6570 \u00b6 \u51fd\u6570\u540d \u89e3\u91ca \u8fd4\u56de\u503c length(str) \u8ba1\u7b97\u5b57\u7b26\u4e32\u957f\u5ea6 \u6574\u6570\u957f\u5ea6\u503c index(str1,str2) \u5728str1\u4e2d\u67e5\u627estr2\u7684\u4f4d\u7f6e \u8fd4\u56de\u503c\u4e3a\u4f4d\u7f6e\u7d22\u5f15\uff0c\u4ece1\u8ba1\u6570 tolower(str) \u8f6c\u6362\u4e3a\u5c0f\u5199 \u8f6c\u6362\u540e\u7684\u5c0f\u5199\u5b57\u7b26\u4e32 toupper(str) \u8f6c\u6362\u4e3a\u5927\u5199 \u8f6c\u6362\u540e\u7684\u5927\u5199\u5b57\u7b26\u4e32 substr(str,m,n) \u4ecestr\u7684m\u4e2a\u5b57\u7b26\u5f00\u59cb\uff0c\u622a\u53d6n\u4f4d \u622a\u53d6\u540e\u7684\u5b50\u4e32 split(str,arr,fs) \u6309fs\u5206\u5272\u5b57\u7b26\u4e32\uff0c\u7ed3\u679c\u4fdd\u5b58arr \u5207\u5272\u540e\u7684\u5b50\u4e32\u4e2a\u6570 match(str,RE) \u5728str\u4e2d\u6309\u7167RE\u67e5\u627e\uff0c\u8fd4\u56de\u4f4d\u7f6e \u8fd4\u56de\u7d22\u5f15\u4f4d\u7f6e sub(RE,RepStr,str) \u5728str\u4e2d\u641c\u7d22\u7b26\u5408RE\u7684\u5b57\u4e32\uff0c\u5c06\u5176\u66ff\u6362\u4e3aRepStr\uff0c\u53ea\u66ff\u6362\u7b2c\u4e00\u4e2a \u66ff\u6362\u7684\u4e2a\u6570 gsub(RE,RepStr,str) \u5728str\u4e2d\u641c\u7d22\u7b26\u5408RE\u7684\u5b57\u4e32\uff0c\u5c06\u5176\u66ff\u6362\u4e3aRepStr\uff0c\u66ff\u6362\u6240\u6709 \u66ff\u6362\u7684\u4e2a\u6570 8. \u9009\u9879 \u00b6 \u9009\u9879 \u89e3\u91ca -v \u5b9a\u4e49\u6216\u5f15\u7528\u53d8\u91cf -f \u6307\u5b9a\u811a\u672c\u6587\u4ef6 -F \u6307\u5b9a\u5206\u9694\u7b26 -V \u67e5\u770b\u7248\u672c\u53f7 1 2 3 4 # \u628a\u5916\u90e8\u53d8\u91cf\u5f15\u5165awk $ x = 12 $ awk -v y = \" $x \" 'BEGIN{print y}' 12","title":"\u6587\u672c\u5904\u7406"},{"location":"linux/grep_sed_awk/#_1","text":"\u5305\u62ecawk\u3001sed\u548cgrep\u4e09\u79cd\u6587\u672c\u5904\u7406\u5de5\u5177\u3002","title":"\u6587\u672c\u5904\u7406\u4e09\u5251\u5ba2"},{"location":"linux/grep_sed_awk/#grep","text":"grep\u547d\u4ee4\uff1a\u901a\u8fc7\u6b63\u5219\u8868\u8fbe\u5f0f\u67e5\u627e\u6587\u4ef6\u4e2d\u7684\u5173\u952e\u5b57","title":"\u4e00\u3001grep"},{"location":"linux/grep_sed_awk/#1","text":"grep [option] [pattern] [file1,file2] command | grep [option] [pattern]","title":"1. \u8bed\u6cd5\u683c\u5f0f"},{"location":"linux/grep_sed_awk/#2","text":"\u9009\u9879 \u542b\u4e49 -v \u4e0d\u663e\u793a\u5339\u914d\u884c\u4fe1\u606f -i \u641c\u7d22\u65f6\u5ffd\u7565\u5927\u5c0f\u5199 -n \u663e\u793a\u884c\u53f7 -r \u9012\u5f52\u641c\u7d22 -E \u652f\u6301\u6269\u5c55\u6b63\u5219\u8868\u8fbe\u5f0f -F \u4e0d\u6309\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d\uff0c\u6309\u7167\u5b57\u7b26\u4e32\u5b57\u9762\u610f\u601d\u5339\u914d -c \u53ea\u663e\u793a\u5339\u914d\u884c\u6570 -w \u5339\u914d\u6574\u8bcd -x \u5339\u914d\u6574\u884c -l \u53ea\u663e\u793a\u6587\u4ef6\u540d\uff0c\u4e0d\u663e\u793a\u5185\u5bb9 -s \u4e0d\u663e\u793a\u9519\u8bef\u4fe1\u606f -A <N> \u663e\u793a\u6240\u627e\u7684\u5339\u914d\u5b57\u6bb5\uff0c\u5e76\u663e\u793a\u4e0b\u9762\u6307\u5b9a\u7684\u884c\u6570\u7684\u4fe1\u606f -B <N> \u663e\u793a\u6240\u627e\u7684\u5339\u914d\u5b57\u6bb5\uff0c\u5e76\u663e\u793a\u4e0a\u9762\u6307\u5b9a\u7684\u884c\u6570\u7684\u4fe1\u606f -C <N> \u6253\u5370\u51fa\u5339\u914d\u7684\u4e0a\u4e0b\u6587\uff08\u4e0aN\u884c\uff0c\u4e0bN\u884c\uff09\u524d\u540e\u7684N\u884c","title":"2. \u9009\u9879"},{"location":"linux/grep_sed_awk/#sed","text":"sed\u547d\u4ee4\uff1a\u5b57\u7b26\u6d41\u7f16\u8f91\u5de5\u5177\uff0c\u5bf9\u6807\u51c6\u8f93\u51fa\u6216\u6587\u4ef6\u9010\u884c\u8fdb\u884c\u5904\u7406\u3002 sed\u7684\u4e24\u4e2a\u4e34\u65f6\u7f13\u51b2\u533a\uff08\u7a7a\u95f4\uff09\uff1a \u6a21\u5f0f\u7a7a\u95f4\uff1a\u4fdd\u5b58\u5f53\u524d\u88ab\u5904\u7406\u7684\u884c \u4fdd\u6301\u7a7a\u95f4","title":"\u4e8c\u3001sed"},{"location":"linux/grep_sed_awk/#1_1","text":"\u5bf9\u884c\u8fdb\u884c\u64cd\u4f5c\u5904\u7406 \u5bf9\u6587\u4ef6\u5185\u5bb9\u4fe1\u606f\u8fdb\u884c\u4fee\u6539\uff0c\u5220\u9664\u3001\u6dfb\u52a0\u3001\u67e5\u8be2","title":"1.\u529f\u80fd"},{"location":"linux/grep_sed_awk/#2_1","text":"sed [OPTION] \"pattern command\" file command | sed [OPTION] \"pattern command\"","title":"2.\u8bed\u6cd5\u683c\u5f0f"},{"location":"linux/grep_sed_awk/#3","text":"sed \u4e00\u6b21\u5904\u7406\u4e00\u884c\u6587\u4ef6\u7684\u6587\u672c\u5e76\u5c06\u5f53\u524d\u5904\u7406\u7684\u884c\u5b58\u50a8\u5728\u4e34\u65f6\u7f13\u51b2\u533a\u4e2d\uff08\u6b64\u53c8\u88ab\u79f0\u4e3a\u6a21\u5f0f\u7a7a\u95f4\u201c pattern space\u201d) Sed \u4e00\u65e6\u5b8c\u6210\u5bf9\u6a21\u5f0f\u7a7a\u95f4\u4e2d\u7684\u884c\u7684\u5904\u7406\uff0c\u884c\u5c06\u4ece\u7a7a\u95f4\u4e2d\u8f93\u51fa\u5230\u5c4f\u5e55\u3002 sed \u5728\u7ee7\u7eed\u8bfb\u5165\u4e0b\u4e00\u884c\uff0c\u5728\u5982\u6b64\u7ee7\u7eed\uff0c\u76f4\u81f3\u5168\u90e8\u6267\u884c\u5b8c\u6210","title":"3.\u5de5\u4f5c\u6a21\u5f0f"},{"location":"linux/grep_sed_awk/#4","text":"\u9009\u9879 \u542b\u4e49 -n \u53ea\u6253\u5370\u6a21\u5f0f\u5339\u914d\u884c\uff0c\u9ed8\u8ba4\u8f93\u51fa -e \u5141\u8bb8\u591a\u70b9\u7f16\u8f91 -f \u7f16\u8f91\u52a8\u4f5c\u4fdd\u5b58\u5728\u6587\u4ef6\u4e2d\uff0c\u6307\u5b9a\u6587\u4ef6\u6267\u884c -r \u652f\u6301\u6269\u5c55\u6b63\u5219\u8868\u8fbe\u5f0f -i \u76f4\u63a5\u4fee\u6539\u6587\u4ef6\u5185\u5bb9","title":"4.\u9009\u9879"},{"location":"linux/grep_sed_awk/#5pattern","text":"\u5339\u914d\u6a21\u5f0f \u542b\u4e49 10command \u5339\u914d\u7b2c10\u884c 10,20command \u4ece10\u884c\u5f00\u59cb\u5339\u914d\u523020\u884c\u7ed3\u675f 10,+5command \u4ece10\u884c\u5f00\u59cb\u5339\u914d\uff0c\u523015\u884c\u7ed3\u675f /pattern/command \u5339\u914d\u6709pattern\u7684\u884c\uff0cpattern\u53ef\u4ee5\u662f\u5b57\u7b26\u4e32\u6216\u6b63\u5219\u8868\u8fbe\u5f0f /pattern1/,/pattern2/command \u5339\u914d\u5230pattern1\u7684\u884c\u5f00\u59cb\uff0c\u5230\u5339\u914d\u5230pattern2\u7684\u884c\u7ed3\u675f 10,/pattern/command \u4ece10\u884c\u5f00\u59cb\uff0c\u5230\u5339\u914d\u5230pattern\u7684\u884c\u7ed3\u675f /pattern/,10command \u4ece\u5339\u914d\u5230pattern\u7684\u884c\u5f00\u59cb\uff0c\u5230\u7b2c10\u884c\u7ed3\u675f","title":"5.pattern\u7528\u6cd5"},{"location":"linux/grep_sed_awk/#6sed","text":"\u547d\u4ee4\u8bed\u6cd5\uff1a [address]command [address]{command1;command2}","title":"6.sed\u547d\u4ee4"},{"location":"linux/grep_sed_awk/#61","text":"","title":"6.1 \u57fa\u7840\u547d\u4ee4"},{"location":"linux/grep_sed_awk/#61-s","text":"1 root@gp:~# sed -i 's/UNIX/unix/g' file \u5e38\u7528\u7684\u5b9a\u754c\u7b26 # \u3001 @ \u3001 /","title":"6.1 \u66ff\u6362\uff08s\uff09"},{"location":"linux/grep_sed_awk/#62-d","text":"\u5982\u679c\u5339\u914d\u4f1a\u5220\u9664\u6574\u884c 1 2 # \u5220\u9664\u7a7a\u884c root@gp:~# sed -i '/^$/d' file","title":"6.2 \u5220\u9664\uff08d\uff09"},{"location":"linux/grep_sed_awk/#63-a","text":"\u5728\u5339\u914d\u884c\u540e\u6dfb\u52a0 1 sed '/word/a \\text' file","title":"6.3 \u8ffd\u52a0\uff08a\uff09"},{"location":"linux/grep_sed_awk/#64-i","text":"\u5728\u5339\u914d\u884c\u524d\u6dfb\u52a0 1 sed '/word/i \\text' file","title":"6.4 \u63d2\u5165\uff08i\uff09"},{"location":"linux/grep_sed_awk/#65-c","text":"\u5220\u9664\u5339\u914d\u7684\u884c\u5e76\u66ff\u6362\u4e3a\u6307\u5b9a\u5185\u5bb9 1 2 root@gp:~# sed '/hello/c \\HELLO WORLD' file HELLO WORLD","title":"6.5 \u66f4\u6539\uff08c\uff09"},{"location":"linux/grep_sed_awk/#65-l","text":"\u663e\u793a\u6a21\u5f0f\u7a7a\u95f4\u7684\u5185\u5bb9\uff0c\u53ef\u4ee5\u663e\u793a\u975e\u6253\u5370\u5b57\u7b26\uff0c\u5982\u5236\u8868\u7b26\u7b49 1 2 3 root@gp:~# sed -n 'l' file hello$ \\t world$","title":"6.5 \u5217\u8868\uff08l\uff09"},{"location":"linux/grep_sed_awk/#66-p","text":"\u8f93\u51fa\u6a21\u5f0f\u7a7a\u95f4\u7684\u5185\u5bb9\u3002 1 root@gp:~# sed -n '$p' /etc/passwd","title":"6.6 \u6253\u5370\uff08p\uff09"},{"location":"linux/grep_sed_awk/#67","text":"\u6253\u5370\u88ab\u5339\u914d\u7684\u884c\u7684\u884c\u53f7","title":"6.7 \u6253\u5370\u884c\u53f7\uff08=\uff09"},{"location":"linux/grep_sed_awk/#68-n","text":"\u5c0f\u5199n\u547d\u4ee4\u4f1a\u544a\u8bc9sed\u7f16\u8f91\u5668\u79fb\u52a8\u5230\u6570\u636e\u6d41\u7684\u4e0b\u4e00\u884c\u6587\u672c\uff0c\u800c\u4e0d\u7528\u91cd\u65b0\u56de\u5230\u547d\u4ee4\u6700\u5f00\u59cb\u518d\u6267\u884c\u4e00\u904d\u3002\u901a\u5e38sed\u7f16\u8f91\u5668\u5728\u79fb\u52a8\u5230\u6570\u636e\u6d41\u4e2d\u7684\u4e0b\u4e00\u884c\u6587\u672c\u4e4b\u524d\uff0c\u4f1a\u5728\u5f53\u524d\u884c\u4e0a\u6267\u884c\u5b8c\u6240\u6709\u5b9a\u4e49\u597d\u7684\u76ee\u547d\u4ee4\u3002 1 $ sed -i \"/baidu/{n;/baidu/d}\" hosts","title":"6.8 \u4e0b\u4e00\u6b65\uff08n\uff09"},{"location":"linux/grep_sed_awk/#69-r","text":"\u5c06\u4e00\u4e2a\u6587\u4ef6\u7684\u5185\u5bb9\u63d2\u5165\u5230\u6307\u5b9a\u4f4d\u7f6e","title":"6.9 \u8bfb\uff08r\uff09"},{"location":"linux/grep_sed_awk/#69-w","text":"\u5c06\u6a21\u5f0f\u7a7a\u95f4\u7684\u5185\u5bb9\u5199\u5230\u6587\u4ef6\u4e2d","title":"6.9 \u5199\uff08w\uff09"},{"location":"linux/grep_sed_awk/#610-q","text":"\u4f7fsed\u505c\u6b62\u8bfb\u53d6\u65b0\u7684\u8f93\u5165\u884c 1 2 # \u8f93\u51fa\u524d5\u884c root@gp:~# sed '5q' /etc/passwd","title":"6.10 \u9000\u51fa\uff08q\uff09"},{"location":"linux/grep_sed_awk/#62","text":"\u9ad8\u7ea7\u547d\u4ee4\u6539\u53d8\u4e86\u6267\u884c\u6216\u63a7\u5236\u7684\u6d41\u7a0b\u987a\u5e8f\u3002","title":"6.2 \u9ad8\u7ea7\u547d\u4ee4"},{"location":"linux/grep_sed_awk/#621-nextn","text":"\u8bfb\u53d6\u65b0\u7684\u8f93\u5165\u884c\uff0c\u5e76\u5c06\u5b83\u6dfb\u52a0\u5230\u6a21\u5f0f\u7a7a\u95f4\u7684\u73b0\u6709\u5185\u5bb9\u4e4b\u540e\u3002 \u4f8b1\uff1a 1 2 3 4 5 6 7 8 9 10 root@gp:~# cat file This is the header line. This is the first line. This is the second line. This is the last line. # \u5c06\u4e24\u884c\u5408\u5e76\u4e3a\u4e00\u884c root@gp:~# sed '/first/{N; s/\\n/ /}' file This is the header line. This is the first line. This is the second line. This is the last line. \u4f8b2\uff1a 1 2 3 4 5 6 7 8 9 10 11 root@gp:~# cat file.txt On Tuesday, the Linux System Administrator 's group meeting will be held. All System Administrator should attent. Thank you for your attend. # \u66ff\u6362\u5206\u6563\u5728\u4e24\u884c\u4e2d\u7684\u6587\u672c\u77ed\u8bed root@gp:~# sed ' s/System Administrator/Desktop User/ ; N ; s/System \\n Administrator/Desktop \\n User/ ' file.txt On Tuesday, the Linux Desktop User' s group meeting will be held. All Desktop User should attent. Thank you for your attend.","title":"6.2.1 \u591a\u884cNext\uff08N\uff09"},{"location":"linux/grep_sed_awk/#622-d","text":"\u53ea\u5220\u9664\u6a21\u5f0f4\u7a7a\u95f4\u7684\u7b2c\u4e00\u884c\u3002\u8be5\u547d\u4ee4\u4f1a\u5220\u9664\u5230\u6362\u884c\u7b26\u4e3a\u6b62\u7684\u6240\u6709\u5b57\u7b26\u3002 D\u547d\u4ee4\u4f1a\u5f3a\u5236sed\u7f16\u8f91\u5668\u8fd4\u56de\u5230\u811a\u672c\u7684\u8d77\u59cb\u5904\uff0c\u5bf9\u6a21\u5f0f\u7a7a\u95f4\u4e2d\u7684\u5185\u5bb9\u91cd\u65b0\u6267\u884c\u8fd9\u4e9b\u547d\u4ee4\uff08\u4e0d\u4f1a\u4ece\u6570\u636e\u6d41\u4e2d\u8bfb\u53d6\u65b0\u7684\u6587\u672c\u884c\uff09 \u4f8b1\uff1a\u5220\u9664\u5339\u914d\u884c\u7684\u524d\u4e00\u884c\u6587\u672c 1 2 3 4 5 6 7 8 9 10 11 12 13 14 root@gp:~# cat file This is the header line. This is the first line. This is the second line. This is the last line. # \u5220\u9664\u5339\u914d\u884c\u7684\u524d\u4e00\u884c\u6587\u672c root@gp:~# sed '/^$/{N;/header/D}' file This is the header line. This is the first line. This is the second line. This is the last line. \u4f8b2\uff1a\u5c06\u591a\u4e2a\u7a7a\u884c\u5408\u5e76\u4e3a\u4e00\u4e2a\u7a7a\u884c 1 root@gp:~# sed '/^$/{N;/^\\n$/D}' file","title":"6.2.2 \u591a\u884c\u5220\u9664\uff08D\uff09"},{"location":"linux/grep_sed_awk/#623-p","text":"\u8f93\u51fa\u591a\u884c\u6a21\u5f0f\u7a7a\u95f4\u7684\u7b2c\u4e00\u90e8\u5206\uff0c\u76f4\u5230\u7b2c\u4e00\u4e2a\u6362\u884c\u7b26\u4e3a\u6b62\u3002\u8fd9\u4e2a\u547d\u4ee4\u7ecf\u5e38\u51fa\u73b0\u5728Next\u4e4b\u540e\u548cDelete\u4e4b\u524d\u3002","title":"6.2.3 \u591a\u884c\u6253\u5370\uff08P\uff09"},{"location":"linux/grep_sed_awk/#63","text":"\u7528\u9014: \u5728\u5904\u7406\u6a21\u5f0f\u7a7a\u95f4\u4e2d\u7684\u67d0\u4e9b\u884c\u65f6\uff0c\u53ef\u4ee5\u7528\u4fdd\u6301\u7a7a\u95f4\u6765\u4e34\u65f6\u4fdd\u5b58\u4e00\u4e9b\u884c\u3002 \u547d\u4ee4 \u63cf\u8ff0 h \u5c06\u6a21\u5f0f\u7a7a\u95f4\u590d\u5236\u5230\u4fdd\u6301\u7a7a\u95f4 H \u5c06\u6a21\u5f0f\u7a7a\u95f4\u8ffd\u52a0\u5230\u4fdd\u6301\u7a7a\u95f4 g \u5c06\u4fdd\u6301\u7a7a\u95f4\u590d\u5236\u5230\u6a21\u5f0f\u7a7a\u95f4 G \u5c06\u4fdd\u6301\u7a7a\u95f4\u8ffd\u52a0\u5230\u6a21\u5f0f\u7a7a\u95f4 x \u4ea4\u6362\u6a21\u5f0f\u7a7a\u95f4\u548c\u4fdd\u6301\u7a7a\u95f4\u7684\u5185\u5bb9","title":"6.3 \u4fdd\u6301\u7a7a\u95f4"},{"location":"linux/grep_sed_awk/#64","text":"","title":"6.4 \u6d41\u7a0b\u63a7\u5236"},{"location":"linux/grep_sed_awk/#1-b","text":"\u5728\u811a\u672c\u4e2d\u5c06\u63a7\u5236\u6743\u8f6c\u79fb\u5230\u53e6\u4e00\u884c [address]b[label] address\uff1a\u51b3\u5b9a\u54ea\u4e9b\u884c\u7684\u6570\u636e\u4f1a\u89e6\u53d1\u5206\u652f\u547d\u4ee4 label\uff1a\u5b9a\u4e49\u8981\u8df3\u8f6c\u5230\u7684\u4f4d\u7f6e\uff0c\u5982\u679c\u6ca1\u6709label\uff0c\u5c31\u8df3\u8f6c\u5230\u811a\u672c\u7684\u7ed3\u5c3e \u4f8b1\uff1a\u4e0d\u52a0\u6807\u7b7e 1 2 3 4 5 6 7 8 9 10 11 root@gp:~# cat file This is the header line. This is the first line. This is the second line. This is the last line. # \u8df3\u8fc7\u7b2c2,3\u884c root@gp:~# sed '{2,3b; s/This is/Is this/; s/line./test?/}' file Is this the header test? This is the first line. This is the second line. Is this the last test? \u4f8b2\uff1a\u4f7f\u7528\u6807\u7b7e \u7f16\u8f91\u547d\u4ee4 \u542b\u4e49 p \u6253\u5370 a \u884c\u540e\u8ffd\u52a0 i \u884c\u524d\u8ffd\u52a0 r \u5916\u90e8\u6587\u4ef6\u8bfb\u53d6\uff0c\u884c\u540e\u8ffd\u52a0 w \u5339\u914d\u884c\u5199\u5165\u5916\u90e8\u6587\u4ef6 d \u5220\u9664 s/old/new/ \u5c06\u884c\u5185\u7684\u7b2c\u4e00\u4e2aold\u66ff\u6362\u4e3anew s/old/new/g \u5c06\u884c\u5185\u5168\u90e8\u7684old\u66ff\u6362\u4e3anew s/old/new/2g \u540c\u4e00\u884c\u5185\uff0c\u53ea\u66ff\u6362\u4ece\u7b2c2\u4e2a\u5f00\u59cb\u5230\u5269\u4e0b\u6240\u6709\u7b26\u5408\u6761\u4ef6\u7684 s/old/new/ig \u5c06\u884c\u5185\u5168\u90e8\u7684old\u66ff\u6362\u4e3anew\uff0c\u5ffd\u7565\u5927\u5c0f\u5199 = \u663e\u793a\u5339\u914d\u7684\u884c\u53f7\uff0c\u4f46\u662f\u4e0d\u663e\u793a\u5185\u5bb9","title":"1. \u5206\u652f\uff08b\uff09"},{"location":"linux/grep_sed_awk/#7","text":"\u5b57\u7b26 \u529f\u80fd & \u4fdd\u5b58\u6240\u641c\u7d22\u5b57\u7b26\u7528\u6765\u66ff\u6362\u5176\u4ed6\u5b57\u7b26 () \u5206\u7ec4\uff0c\u628a\u9700\u8981\u5f15\u7528\u7684\u90e8\u5206\u62ec\u8d77\u6765 7.1. \u4f7f\u7528 & \u5f15\u7528 1 2 $ sed -n 's/ubuntu/++&++/p' passwd ++ubuntu++:x:1000:1000:ubuntu,,,:/home/ubuntu:/bin/bash 7.2. \u4f7f\u7528 () \u5206\u7ec4\u5f15\u7528 1 2 $ sed -n 's/\\(ro\\)../\\1OT/gp' passwd roOT:x:0:0:roOT:/roOT:/bin/bash","title":"7.\u53cd\u5411\u5f15\u7528"},{"location":"linux/grep_sed_awk/#8","text":"\u5339\u914d\u6a21\u5f0f\u4e2d\u4f7f\u7528\u53d8\u91cf\u65f6\uff0c\u4f7f\u7528\u53cc\u5f15\u53f7\uff0c\u5426\u5219\u9700\u8981\u628a\u53d8\u91cf\u7528\u5355\u5f15\u53f7\u62ec\u8d77\u6765 \"s/$old/$new/g\" \u6216 's/'$old'/'$new'/g'","title":"8.\u53d8\u91cf\u5f15\u7528"},{"location":"linux/grep_sed_awk/#awk","text":"awk\uff1a\u62a5\u544a\u751f\u6210\u5668\uff0c\u662f Alfred Aho,Peter Weinberger,Brian Kernighan \u4e09\u4f4d\u4f5c\u8005\u8054\u5408\u5f00\u53d1\u7684\u3002","title":"\u4e09\u3001awk"},{"location":"linux/grep_sed_awk/#1_2","text":"awk 'BEGIN{}pattern{commmand}END{}' file command | awk 'BEGIN{}pattern{commmand}END{}' \u8bed\u6cd5\u683c\u5f0f \u542b\u4e49 BEGIN{} \u6b63\u5f0f\u5904\u7406\u6570\u636e\u4e4b\u524d\u6267\u884c pattern \u5339\u914d\u6a21\u5f0f {commands} \u5904\u7406\u547d\u4ee4\uff0c\u53ef\u4ee5\u591a\u884c END{} \u5904\u7406\u5b8c\u6240\u6709\u5339\u914d\u6570\u636e\u540e\u7684\u6267\u884c","title":"1.\u8bed\u6cd5\u683c\u5f0f"},{"location":"linux/grep_sed_awk/#2_2","text":"\u5185\u7f6e\u53d8\u91cf \u542b\u4e49 $0 \u6574\u884c\u5185\u5bb9 $ \u5f53\u524d\u884c\u7684\u7b2cn\u4e2a\u5b57\u6bb5 NF Number Field\uff0c\u5f53\u524d\u884c\u7684\u5b57\u6bb5\u4e2a\u6570\uff0c\u4e5f\u5c31\u662f\u6709\u591a\u5c11\u5217 NR Number Row\uff0c\u5f53\u524d\u884c\u7684\u884c\u53f7\uff0c\u4ece1\u5f00\u59cb\u8ba1\u6570 FNR File Number Row\u591a\u6587\u4ef6\u5904\u7406\u662f\uff0c\u6bcf\u4e2a\u6587\u4ef6\u884c\u53f7\u5355\u72ec\u8ba1\u6570\uff0c\u90fd\u662f\u4ece1\u5f00\u59cb FS Field Separator\uff0c\u8f93\u5165\u5b57\u6bb5\u5206\u5272\u7b26\uff0c\u9ed8\u8ba4\u4ee5\u7a7a\u683c\u6216tab\u5206\u5272 RS Row Separator\uff0c\u8f93\u5165\u884c\u5206\u9694\u7b26\uff0c\u9ed8\u8ba4\u56de\u8f66\u6362\u884c OFS Output Field Separator\uff0c\u8f93\u51fa\u5b57\u6bb5\u5206\u9694\u7b26\uff0c\u9ed8\u8ba4\u7a7a\u683c ORS Output Row Separator\uff0c\u8f93\u51fa\u884c\u5206\u9694\u7b26\uff0c\u9ed8\u8ba4\u56de\u8f66\u6362\u884c FILENAME \u5f53\u524d\u8f93\u5165\u7684\u6587\u4ef6\u540d\u79f0 ARGC \u547d\u4ee4\u884c\u53c2\u6570\u4e2a\u6570 ARGV \u547d\u4ee4\u884c\u53c2\u6570\u6570\u7ec4","title":"2.\u5185\u7f6e\u53d8\u91cf"},{"location":"linux/grep_sed_awk/#3_1","text":"","title":"3. \u8f93\u51fa"},{"location":"linux/grep_sed_awk/#31-printf","text":"\u683c\u5f0f\u7b26 \u542b\u4e49 %s \u6253\u5370\u5b57\u7b26\u4e32 %d \u6253\u5370\u5341\u8fdb\u5236\u6570 %f \u6253\u5370\u6d6e\u70b9\u6570 %x \u6253\u5370\u5341\u516d\u8fdb\u5236\u6570 %o \u6253\u5370\u516b\u8fdb\u5236\u6570 %e \u6253\u5370\u6570\u5b57\u7684\u79d1\u5b66\u6280\u672f\u6cd5\u683c\u5f0f %c \u6253\u5370\u5355\u4e2a\u5b57\u7b26\u7684ASCII \u4fee\u9970\u7b26 \u542b\u4e49 - \u5de6\u5bf9\u9f50 + \u53f3\u5bf9\u9f50 # \u663e\u793a8\u8fdb\u5236\u5728\u524d\u9762\u52a00\uff0c\u663e\u793a16\u8fdb\u5236\u5728\u524d\u9762\u52a00x 1 2 # printf $ awk 'BEGIN{FS=\":\"}{printf \"%-20s %10s\\n\",$1,$7}' /etc/passwd","title":"3.1. printf"},{"location":"linux/grep_sed_awk/#32-print","text":"1 2 $ awk 'BEGIN{FS=\":\"}/root/{printf $0}' /etc/passwd root:x:0:0:root:/root:/bin/bash","title":"3.2 print"},{"location":"linux/grep_sed_awk/#4_1","text":"","title":"4.\u5339\u914d\u6a21\u5f0f"},{"location":"linux/grep_sed_awk/#41","text":"1 2 $ awk 'BEGIN{FS=\":\"}/root/{printf $0}' /etc/passwd root:x:0:0:root:/root:/bin/bash","title":"4.1.\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d"},{"location":"linux/grep_sed_awk/#42","text":"\u5173\u7cfb\u8fd0\u7b97\u7b26 \u542b\u4e49 < \u5c0f\u4e8e <= \u5c0f\u4e8e\u7b49\u4e8e > \u5927\u4e8e >= \u5927\u4e8e\u7b49\u4e8e == \u7b49\u4e8e != \u4e0d\u7b49\u4e8e ~ \u5339\u914d\u6b63\u5219\u8868\u8fbe\u5f0f !~ \u4e0d\u5339\u914d\u6b63\u5219\u8868\u8fbe\u5f0f 1 2 3 4 # \u5173\u7cfb\u8fd0\u7b97\u7b26\u5339\u914d $ awk -F \":\" '$3>=1000 {print $0}' /etc/passwd nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin ubuntu:x:1000:1000:ubuntu,,,:/home/ubuntu:/bin/bash 1 2 3 # \u6b63\u5219\u5339\u914d $ awk -F \":\" '$1~/root/ {print $0}' /etc/passwd root:x:0:0:root:/root:/bin/bash","title":"4.2.\u5173\u7cfb\u8fd0\u7b97\u5339\u914d"},{"location":"linux/grep_sed_awk/#43","text":"\u5e03\u5c14\u8fd0\u7b97\u7b26 \u542b\u4e49 || \u6216 && \u4e0e ! \u975e 1 2 3 4 5 # \u5e03\u5c14\u8fd0\u7b97\u7b26\u5339\u914d $ awk -F \":\" '$3==0 || $3>=1000 {printf \"%s\\n\",$0}' /etc/passwd root:x:0:0:root:/root:/bin/bash nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin ubuntu:x:1000:1000:ubuntu,,,:/home/ubuntu:/bin/bash","title":"4.3. \u5e03\u5c14\u8fd0\u7b97\u7b26\u5339\u914d"},{"location":"linux/grep_sed_awk/#5","text":"","title":"5. \u8868\u8fbe\u5f0f"},{"location":"linux/grep_sed_awk/#51","text":"\u8fd0\u7b97\u7b26 \u542b\u4e49 + \u52a0 - \u51cf * \u4e58 / \u9664 % \u53d6\u6a21 ^\u6216** \u4e58\u65b9 ++x \u5728\u8fd4\u56dex\u53d8\u91cf\u4e4b\u524d\uff0cx\u53d8\u91cf\u52a01 x++ \u5728\u8fd4\u56dex\u53d8\u91cf\u4e4b\u540e\uff0cx\u53d8\u91cf\u52a01 1 2 3 # \u7b97\u6570\u8fd0\u7b97 $ awk 'BEGIN{x=10;y=30;print x+y}' 40 1 2 3 # \u7edf\u8ba1\u7a7a\u884c $ awk '/^$/{cnt++}END{print cnt}' /etc/services 6","title":"5.1. \u7b97\u6570\u8fd0\u7b97\u7b26"},{"location":"linux/grep_sed_awk/#6","text":"\u8bed\u6cd5\u683c\u5f0f\u540cC\u8bed\u8a00\u3002","title":"6. \u903b\u8f91\u63a7\u5236"},{"location":"linux/grep_sed_awk/#61-if","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 $ awk -F \":\" '{if ($3==0) {printf \"%-10s%s\\n\",\"root\u7528\u6237:\",$1} else {printf \"%-10s%s\\n\",\"\u666e\u901a\u7528\u6237:\",$1}}' /etc/passwd root\u7528\u6237: root \u666e\u901a\u7528\u6237: daemon \u666e\u901a\u7528\u6237: bin \u666e\u901a\u7528\u6237: sys \u666e\u901a\u7528\u6237: sync \u666e\u901a\u7528\u6237: games \u666e\u901a\u7528\u6237: man \u666e\u901a\u7528\u6237: lp \u666e\u901a\u7528\u6237: mail \u666e\u901a\u7528\u6237: news \u666e\u901a\u7528\u6237: uucp \u666e\u901a\u7528\u6237: proxy \u666e\u901a\u7528\u6237: www-data \u666e\u901a\u7528\u6237: backup \u666e\u901a\u7528\u6237: list \u666e\u901a\u7528\u6237: irc \u666e\u901a\u7528\u6237: gnats \u666e\u901a\u7528\u6237: nobody \u666e\u901a\u7528\u6237: systemd-timesync \u666e\u901a\u7528\u6237: systemd-network \u666e\u901a\u7528\u6237: systemd-resolve \u666e\u901a\u7528\u6237: systemd-bus-proxy \u666e\u901a\u7528\u6237: syslog \u666e\u901a\u7528\u6237: _apt \u666e\u901a\u7528\u6237: lxd \u666e\u901a\u7528\u6237: messagebus \u666e\u901a\u7528\u6237: uuidd \u666e\u901a\u7528\u6237: dnsmasq \u666e\u901a\u7528\u6237: sshd \u666e\u901a\u7528\u6237: ubuntu","title":"6.1. if"},{"location":"linux/grep_sed_awk/#62-dowhile","text":"1 2 $ awk 'BEGIN{do{sum+=i;i++}while(i<=100) print sum}' 5050","title":"6.2. do...while"},{"location":"linux/grep_sed_awk/#63-while","text":"1 2 $ awk 'BEGIN{while(i<=100){sum+=i;i++}print sum}' 5050","title":"6.3. while"},{"location":"linux/grep_sed_awk/#64-for","text":"","title":"6.4. for"},{"location":"linux/grep_sed_awk/#7_1","text":"\u51fd\u6570\u540d \u89e3\u91ca \u8fd4\u56de\u503c length(str) \u8ba1\u7b97\u5b57\u7b26\u4e32\u957f\u5ea6 \u6574\u6570\u957f\u5ea6\u503c index(str1,str2) \u5728str1\u4e2d\u67e5\u627estr2\u7684\u4f4d\u7f6e \u8fd4\u56de\u503c\u4e3a\u4f4d\u7f6e\u7d22\u5f15\uff0c\u4ece1\u8ba1\u6570 tolower(str) \u8f6c\u6362\u4e3a\u5c0f\u5199 \u8f6c\u6362\u540e\u7684\u5c0f\u5199\u5b57\u7b26\u4e32 toupper(str) \u8f6c\u6362\u4e3a\u5927\u5199 \u8f6c\u6362\u540e\u7684\u5927\u5199\u5b57\u7b26\u4e32 substr(str,m,n) \u4ecestr\u7684m\u4e2a\u5b57\u7b26\u5f00\u59cb\uff0c\u622a\u53d6n\u4f4d \u622a\u53d6\u540e\u7684\u5b50\u4e32 split(str,arr,fs) \u6309fs\u5206\u5272\u5b57\u7b26\u4e32\uff0c\u7ed3\u679c\u4fdd\u5b58arr \u5207\u5272\u540e\u7684\u5b50\u4e32\u4e2a\u6570 match(str,RE) \u5728str\u4e2d\u6309\u7167RE\u67e5\u627e\uff0c\u8fd4\u56de\u4f4d\u7f6e \u8fd4\u56de\u7d22\u5f15\u4f4d\u7f6e sub(RE,RepStr,str) \u5728str\u4e2d\u641c\u7d22\u7b26\u5408RE\u7684\u5b57\u4e32\uff0c\u5c06\u5176\u66ff\u6362\u4e3aRepStr\uff0c\u53ea\u66ff\u6362\u7b2c\u4e00\u4e2a \u66ff\u6362\u7684\u4e2a\u6570 gsub(RE,RepStr,str) \u5728str\u4e2d\u641c\u7d22\u7b26\u5408RE\u7684\u5b57\u4e32\uff0c\u5c06\u5176\u66ff\u6362\u4e3aRepStr\uff0c\u66ff\u6362\u6240\u6709 \u66ff\u6362\u7684\u4e2a\u6570","title":"7. \u5b57\u7b26\u4e32\u51fd\u6570"},{"location":"linux/grep_sed_awk/#8_1","text":"\u9009\u9879 \u89e3\u91ca -v \u5b9a\u4e49\u6216\u5f15\u7528\u53d8\u91cf -f \u6307\u5b9a\u811a\u672c\u6587\u4ef6 -F \u6307\u5b9a\u5206\u9694\u7b26 -V \u67e5\u770b\u7248\u672c\u53f7 1 2 3 4 # \u628a\u5916\u90e8\u53d8\u91cf\u5f15\u5165awk $ x = 12 $ awk -v y = \" $x \" 'BEGIN{print y}' 12","title":"8. \u9009\u9879"},{"location":"linux/service/","text":"Linux\u4e2d\u5e38\u7528\u7684\u670d\u52a1 \u00b6 \u4e00\u3001FTP \u00b6 1. \u4ecb\u7ecd \u00b6 FTP \u662f File Transfer Protocol \uff08\u6587\u4ef6\u4f20\u8f93\u534f\u8bae\uff09\u7684\u7f29\u5199 \uff0c\u5728 Unix/Linux \u7cfb\u7edf\u4e2d\u5e38\u7528\u7684\u514d\u8d39 FTP \u670d\u52a1\u5668\u8f6f\u4ef6\u4e3b\u8981\u662f VSFTP\uff0cvsftp\u7684\u5b98\u65b9\u5730\u5740\uff1ahttp://vsftpd.beasts.org 1. FTP \u7684\u5de5\u4f5c\u6a21\u5f0f \u00b6 FTP\u5de5\u4f5c\u65f6\u4f1a\u5f00\u4e24\u4e2a\u7aef\u53e3\uff0c\u4e00\u4e2a\u547d\u4ee4\u7aef\u53e3\uff08TCP:21\uff09\uff0c\u4e00\u4e2a\u6570\u636e\u7aef\u53e3(TCP:20) 1.1 \u4e3b\u52a8\u6a21\u5f0f \uff08Active FTP\uff09 \u670d\u52a1\u5668\u4e3b\u52a8\u8fde\u63a5\u5ba2\u6237\u7aef FTP \u5ba2\u6237\u7aef\u968f\u673a\u5f00\u542f\u4e00\u4e2a\u5927\u4e8e1024 \u7684\u7aef\u53e3 N \u5411\u670d\u52a1\u5668\u7684 21 \u53f7\u7aef\u53e3\u53d1\u8d77\u8fde\u63a5\uff0c\u7136\u540e\u5f00\u653e N+1 \u53f7\u7aef\u53e3\u8fdb\u884c\u76d1\u542c\uff0c\u5e76\u5411\u670d\u52a1\u5668\u53d1\u51faPORT N+1 \u547d\u4ee4\u3002\u670d\u52a1\u5668\u63a5\u6536\u5230\u547d\u4ee4\u540e\uff0c\u4f1a\u7528\u5176\u672c\u5730\u7684 FTP \u6570\u636e\u7aef\u53e3\uff08\u901a\u5e38\u662f 20 \uff09\u6765\u8fde\u63a5\u5ba2\u6237\u7aef\u6307\u5b9a\u7684\u7aef\u53e3 N+1 \uff0c\u8fdb\u884c\u6570\u636e\u4f20\u8f93 1 2 3 4 5 client server \u547d\u4ee4\u63a7\u5236 1088 ------> 21 \u6570\u636e\u4f20\u8f93 1089 <------ \u3000\u3000\u3000\u3000 20 1.2 \u88ab\u52a8\u6a21\u5f0f\uff08Passive FTP\uff09 \u5ba2\u6237\u7aef\u4e3b\u52a8\u94fe\u63a5\u670d\u52a1\u5668\u7aef FTP \u5ba2\u6237\u7aef\u968f\u673a\u5f00\u542f\u4e00\u4e2a\u5927\u4e8e1024 \u7684\u7aef\u53e3 N \u5411\u670d\u52a1\u5668\u7684 21 \u53f7\u7aef\u53e3\u53d1\u8d77\u8fde\u63a5\uff0c\u540c\u65f6\u4f1a\u5f00\u542f N+1 \u53f7\u7aef\u53e3\u3002\u7136\u540e\u5411\u670d\u52a1\u5668\u53d1\u9001PASV \u547d\u4ee4\uff0c\u901a\u77e5\u670d\u52a1\u5668\u81ea\u5df1\u5904\u4e8e\u88ab\u52a8\u6a21\u5f0f\u3002\u670d\u52a1\u5668\u6536\u5230\u547d\u4ee4\u540e\uff0c\u4f1a\u5f00\u653e\u4e00\u4e2a\u5927\u4e8e 1024 \u7684\u7aef\u53e3 P \u8fdb\u884c\u76d1\u542c\uff0c\u7136\u540e\u7528 PORT P \u547d\u4ee4\u901a\u77e5\u5ba2\u6237\u7aef\uff0c\u81ea\u5df1\u7684\u6570\u636e\u7aef\u53e3\u662f P \u3002\u5ba2\u6237\u7aef\u6536\u5230\u547d\u4ee4\u540e\uff0c\u4f1a\u901a\u8fc7 N+1\u53f7\u7aef\u540e\u8fde\u63a5\u670d\u52a1\u5668\u7684\u7aef\u53e3 P \uff0c\u7136\u540e\u5728\u4e24\u4e2a\u7aef\u53e3\u4e4b\u95f4\u8fdb\u884c\u6570\u636e\u4f20\u8f93 1 2 3 client server \u547d\u4ee4\u63a7\u5236 1088 ----------> 21 \u6570\u636e\u4f20\u8f93 1089 -- PASV --> 1099 \u5173\u4e8e\u4e24\u8005\u7684\u533a\u522b\u53c2\u8003\uff1ahttp://slacksite.com/other/ftp.html 2.\u7528\u6237\u8ba4\u8bc1\u65b9\u5f0f \u00b6 1.\u533f\u540d\u7528\u6237\uff1aftp \u00b6 2.\u7cfb\u7edf\u7528\u6237\uff1aLinux\u7cfb\u7edf\u7528\u6237 \u00b6 3.\u865a\u62df\u7528\u6237\uff1a\u591a\u4e2a\u865a\u62df\u7528\u6237\u6620\u5c04\u5230\u4e00\u4e2a\u7cfb\u7edf\u7528\u6237 \u00b6 2.\u5b89\u88c5 \u00b6 ubuntu14.04 1 2 3 $ sudo dpkg -i vsftpd_3.0.2-1ubuntu2.14.04.1_amd64.deb $ netstat -lant | grep 21 tcp 0 0 0 .0.0.0:21 0 .0.0.0:* LISTEN 3. \u914d\u7f6e\u6587\u4ef6 \u00b6 \u7528\u6237\u8ba4\u8bc1\u914d\u7f6e\u6587\u4ef6:/etc/pam.d/vsftpd \u4e3b\u914d\u7f6e\u6587\u4ef6:/etc/vsftpd.conf \u533f\u540d\u7528\u6237\uff08\u6620\u5c04\u4e3a\u7cfb\u7edf\u7528\u6237ftp \uff09\u5171\u4eab\u6587\u4ef6\u4f4d\u7f6e\uff1a/srv/ftp 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 anonymous_enable = NO # \u662f\u5426\u5141\u8bb8\u533f\u540d\u7528\u6237\u767b\u9646\uff0c\u6a21\u5f0f\u4e0d\u5141\u8bb8 local_enable = YES # \u5141\u8bb8\u7cfb\u7edf\u7528\u6237\u767b\u9646 #write_enable=YES # \u5141\u8bb8\u767b\u9646\u7528\u6237\u8fdb\u884c\u5199\u64cd\u4f5c\uff0c\u9ed8\u8ba4\u4e0d\u5141\u8bb8 #local_umask=022 #\u3000\u7528\u6237\u767b\u9646\u540e\u521b\u5efa\u6587\u4ef6\u7684umask\u503c #anon_upload_enable=YES #\u3000\u5141\u8bb8\u533f\u540d\u7528\u6237\u4e0a\u4f20\u6587\u4ef6 #anon_mkdir_write_enable=YES #\u3000\u5141\u8bb8\u533f\u540d\u7528\u6237\u521b\u5efa\u76ee\u5f55 dirmessage_enable = YES #\u3000\u662f\u5426\u663e\u793a\u76ee\u5f55\u8bf4\u660e\u6587\u4ef6, \u9700\u8981\u6536\u5de5\u521b\u5efa.message\u6587\u4ef6 use_localtime = YES #\u3000\u4f7f\u7528\u672c\u5730\u65f6\u95f4 xferlog_enable = YES #\u3000\u5f00\u542f\u4e0a\u4f20\u4e0b\u8f7d\u65e5\u5fd7 connect_from_port_20 = YES #\u3000\u6570\u636e\u4f20\u8f93\u7aef\u53e3 #chown_uploads=YES # \u662f\u5426\u6539\u53d8\u4e0a\u4f20\u6587\u4ef6\u7684\u5c5e\u4e3b #chown_username=whoever \u00b7 # \u5982\u679c\u662f\u9700\u8981\u8f93\u5165\u4e00\u4e2a\u7cfb\u7edf\u7528\u6237\u540d #xferlog_file=/var/log/vsftpd.log \uff03\u3000\u65e5\u5fd7\u6587\u4ef6\u7684\u8def\u5f84 #xferlog_std_format=YES # \u662f\u5426\u4f7f\u7528\u6807\u51c6\u7684ftp xferlog\u6a21\u5f0f #idle_session_timeout=600 # session\u8d85\u65f6\u65f6\u95f4 #data_connection_timeout=120\u3000\u3000 # \u8bbe\u7f6e\u6570\u636e\u4f20\u8f93\u8d85\u65f6\u65f6\u95f4 #nopriv_user=ftpsecure # \u8fd0\u884cvsftpd\u9700\u8981\u7684\u975e\u7279\u6743\u7cfb\u7edf\u7528\u6237\u9ed8\u8ba4\u662fnobody #async_abor_enable=YES # \u662f\u5426\u5141\u8bb8\u8fd0\u884c\u7279\u6b8a\u7684ftp\u547d\u4ee4async ABOR #ascii_upload_enable=YES # \u662f\u5426\u4f7f\u7528ascii\u7801\u65b9\u5f0f\u4e0a\u4f20\u6587\u4ef6 #ascii_download_enable=YES # \u662f\u5426\u4f7f\u7528ascii\u7801\u65b9\u5f0f\u4e0b\u8f7d\u6587\u4ef6 #ftpd_banner=Welcome to blah FTP service. # \u5b9a\u5236\u6b22\u8fce\u4fe1\u606f #deny_email_enable=YES # \u662f\u5426\u5141\u8bb8\u7981\u6b62\u533f\u540d\u7528\u6237\u4f7f\u7528\u67d0\u4e9b\u90ae\u4ef6\u5730\u5740 #banned_email_file=/etc/vsftpd.banned_emails # \u7981\u6b62\u90ae\u4ef6\u5730\u5740\u7684\u6587\u4ef6\u8def\u5f84 #chroot_local_user=YES # \u672c\u5730\u7528\u6237\u7981\u9522\u5728\u5bbf\u4e3b\u76ee\u5f55\u4e2d #chroot_list_enable=YES # \u662f\u5426\u5c06\u7cfb\u7edf\u7528\u6237\u9650\u6b62\u5728\u81ea\u5df1\u7684home\u76ee\u5f55\u4e0b #chroot_list_file=/etc/vsftpd.chroot_list # \u5217\u51fa\u7684\u662f\u4e0dchroot\u7684\u7528\u6237\u7684\u5217\u8868 #ls_recurse_enable=YES # \u662f\u5426\u5141\u8bb8\u4f7f\u7528ls -R\u7b49\u547d\u4ee4 secure_chroot_dir = /var/run/vsftpd/empty pam_service_name = vsftpd # pam\u7684\u914d\u7f6e\u6587\u4ef6\u540d\u79f0 /etc/pam.d/vsftpd rsa_cert_file = /etc/ssl/certs/ssl-cert-snakeoil.pem rsa_private_key_file = /etc/ssl/private/ssl-cert-snakeoil.key 4. \u7528\u6237\u7ba1\u7406 \u00b6 \uff11. \u533f\u540d\u7528\u6237 \u00b6 1.1 \u5141\u8bb8\u533f\u540d\u7528\u6237\u767b\u9646 \u00b6 \u4fee\u6539\u914d\u7f6e\u6587\u4ef6 1 2 3 $ sudo vim /etc/vsftpd.conf nonymous_enable = YES $ sudo service vsftpd restart \u6d4b\u8bd5\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 shuowei@gaopeng:~$ ftp 172 .16.10.101 Connected to 172 .16.10.101. 220 ( vsFTPd 3 .0.2 ) Name ( 172 .16.10.101:shuowei ) : ftp # \u767b\u9646\u7528\u6237\u4e3aftp 331 Please specify the password. Password: # \u5bc6\u7801\u968f\u610f\uff0c\u53ef\u4ee5\u4e3a\u7a7a 230 Login successful. Remote system type is UNIX. Using binary mode to transfer files. ftp> ls 200 PORT command successful. Consider using PASV. 150 Here comes the directory listing. -rw-r--r-- 1 0 0 0 Jan 25 11 :12 test.txt 226 Directory send OK. ftp> get test.txt # \u6709\u4e0b\u8f7d\u7684\u6743\u9650 local: test.txt remote: test.txt 200 PORT command successful. Consider using PASV. 150 Opening BINARY mode data connection for test.txt ( 0 bytes ) . 226 Transfer complete. ftp> delete test.txt # \u6ca1\u6709\u5199\u7684\u6743\u9650 550 Permission denied. ftp> 1.2 \u5141\u8bb8\u533f\u540d\u7528\u6237\u4e0a\u4f20\u548c\u5efa\u7acb\u76ee\u5f55 \u00b6 \u4fee\u6539\u914d\u7f6e\u6587\u4ef6 1 2 3 4 5 6 $ sudo vim /etc/vsftpd.conf nonymous_enable = YES write_enable = YES anon_upload_enable = YES anon_mkdir_write_enable = YES $ sudo service vsftpd restart 1 2 3 $ sudo mkdir /srv/ftp/pub $ sudo chown ftp. /srv/ftp/pub/ $ sudo chmod 777 /srv/ftp/pub/ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 shuowei@gaopeng:~$ ftp 172 .16.10.101 Connected to 172 .16.10.101. 220 ( vsFTPd 3 .0.2 ) Name ( 172 .16.10.101:shuowei ) : ftp 331 Please specify the password. Password: 230 Login successful. Remote system type is UNIX. Using binary mode to transfer files. ftp> ls 200 PORT command successful. Consider using PASV. 150 Here comes the directory listing. drwxrwxrwx 2 105 112 4096 Jan 25 11 :33 pub -rw-r--r-- 1 0 0 0 Jan 25 11 :12 test.txt 226 Directory send OK. ftp> cd pub # \u8fdb\u5165pub\u76ee\u5f55 250 Directory successfully changed. ftp> ls 200 PORT command successful. Consider using PASV. 150 Here comes the directory listing. 226 Directory send OK. ftp> mkdir testdir # \u6587\u4ef6\u521b\u5efa\u6210\u529f 257 \"/pub/testdir\" created ftp> put zabbix-3.0.tar.gz # \u53ef\u4ee5\u4e0a\u4f20\u6587\u4ef6 local: zabbix-3.0.tar.gz remote: zabbix-3.0.tar.gz 200 PORT command successful. Consider using PASV. 150 Ok to send data. 226 Transfer complete. 15653160 bytes sent in 0 .10 secs ( 143 .7224 MB/s ) ftp> ls 200 PORT command successful. Consider using PASV. 150 Here comes the directory listing. drwx------ 2 105 112 4096 Jan 25 11 :36 testdir -rw------- 1 105 112 15653160 Jan 25 11 :42 zabbix-3.0.tar.gz 226 Directory send OK. 2. \u7cfb\u7edf\u7528\u6237 \u00b6 1. \u7cfb\u7edf\u7528\u6237\u767b\u9646 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 shuowei@gaopeng:~$ ftp 172 .16.10.101 Connected to 172 .16.10.101. 220 ( vsFTPd 3 .0.2 ) Name ( 172 .16.10.101:shuowei ) : ubuntu # \u7cfb\u7edf\u7528\u6237\u540d 331 Please specify the password. Password: # \u7cfb\u7edf\u7528\u6237\u7684\u5bc6\u7801 230 Login successful. Remote system type is UNIX. Using binary mode to transfer files. ftp> ls 200 PORT command successful. Consider using PASV. 150 Here comes the directory listing. -rw-r--r-- 1 1000 1000 111462 Jan 25 10 :30 vsftpd_3.0.2-1ubuntu2.14.04.1_amd64.deb 226 Directory send OK. ftp> pwd 257 \"/home/ubuntu\" # \u767b\u9646\u540e\u5728\u81ea\u5df1\u7684\u5bb6\u76ee\u5f55 ftp> get vsftpd_3.0.2-1ubuntu2.14.04.1_amd64.deb# \u6709\u4e0b\u8f7d\u7684\u6743\u9650 local: vsftpd_3.0.2-1ubuntu2.14.04.1_amd64.deb remote: vsftpd_3.0.2-1ubuntu2.14.04.1_amd64.deb 200 PORT command successful. Consider using PASV. 150 Opening BINARY mode data connection for vsftpd_3.0.2-1ubuntu2.14.04.1_amd64.deb ( 111462 bytes ) . 226 Transfer complete. 111462 bytes received in 0 .00 secs ( 52 .1582 MB/s ) ftp> delete vsftpd_3.0.2-1ubuntu2.14.04.1_amd64.deb # \u6ca1\u6709\u5199\u7684\u6743\u9650\u3000\u9700\u8981\u5f00\u542fwrite_enable=YES 550 Permission denied. 3.\u865a\u62df\u7528\u6237 \u00b6 VSFTP \u4e00\u4e2a\u79f0\u4e3a\u5b89\u5168\u7684\u4fdd\u8bc1\u662f\u91c7\u7528\u4e86\u865a\u62df\u7528\u6237\u7684\u8ba4\u8bc1\u65b9\u5f0f\uff0c\u5b83\u9760\u5bf9 /etc/pam.d/ \u76ee\u5f55\u4e0b\u6307\u5b9a\u7684\u4e00\u4e2a\u8ba4\u8bc1\u6587\u4ef6\u5bf9\u7528\u6237\u8fdb\u884c\u8ba4\u8bc1\uff0c\u8ba4\u8bc1\u6210\u529f\u540e\u518d\u628a\u865a\u62df\u7528\u6237\u6620\u5c04\u4e3a\u672c\u5730\u7528\u6237\uff0c\u8be5\u672c\u5730\u7528\u6237\u7531\u670d\u52a1\u5668\u914d\u7f6e\u6587\u4ef6\u91cc\u7684\u8bed\u53e5 ftp_username \u7684\u503c\u6307\u5b9a\u3002\u4f7f\u7528\u865a\u62df\u7528\u6237\u8ba4\u8bc1\uff0c\u5219\u539f\u6709\u7cfb\u7edf\u8d26\u6237\u5c06\u4e0d\u518d\u53ef\u7528\u3002 \u6240\u6709\u865a\u62df\u7528\u6237\u4f1a\u7edf\u4e00\u6620\u5c04\u4e3a\u4e00\u4e2a\u6307\u5b9a\u7684\u7cfb\u7edf\u666e\u901a\u8d26\u53f7\uff1a\u8bbf\u95ee\u5171\u4eab\u4f4d\u7f6e\uff0c\u5373\u4e3a\u6b64\u7cfb\u7edf\u666e\u901a\u7528\u6237\u7684\u5bb6\u76ee\u5f55\uff0c\u5f53\u7136\u6bcf\u4e2a\u865a\u62df\u7528\u6237\u4e5f\u53ef\u88ab\u8d4b\u4e88\u4e0d\u540c\u7684\u8bbf\u95ee\u6743\u9650\uff0c\u901a\u8fc7\u533f\u540d\u7528\u6237\u7684\u6743\u9650\u63a7\u5236\u53c2\u6570\u8fdb\u884c\u6307\u5b9a \u4e3a\u4e86\u5b9e\u73b0\u865a\u62df\u7528\u6237\u6211\u4eec\u9700\u8981\u51c6\u5907\u7684\u73af\u5883 \u4e00\u4e2a\u4e0d\u53ef\u767b\u9646\u7684\u7cfb\u7edf\u8d26\u6237\uff0c\u5e76\u4e3a\u8fd9\u4e2a\u7cfb\u7edf\u521b\u5efa\u4e00\u4e2a\u5bb6\u76ee\u5f55\u3002\u865a\u62df\u8d26\u6237\u5c31\u5728\u8fd9\u4e2a\u5bb6\u76ee\u5f55\u91cc\u6d3b\u52a8\u3002 \u521b\u5efa\u865a\u62df\u8d26\u6237\u540d\u5355\uff0c\u5e76\u4e3a\u8fd9\u4e9b\u7528\u6237\u521b\u5efa\u4e00\u4e2a\u8ba4\u8bc1\u6570\u636e\u5e93 3.1 \u521b\u5efa\u865a\u62df\u7528\u6237 \u00b6 3.1.\uff11. \u521b\u5efa\u672c\u5730\u7cfb\u7edf\u7528\u6237 \u00b6 1 2 3 $ sudo mkdir /data $ sudo useradd -m -d /data/ftp -s /bin/false ftpadmin $ sudo chwon -R ftpadmin /data/ftp 3.1.2. \u5efa\u7acb\u865a\u62df\u8d26\u6237\u540d\u5355 \u00b6 1 2 3 4 5 6 ubuntu@node1:~$ sudo mkdir /etc/vsftpd/ ubuntu@node1:~$ sudo vim /etc/vsftpd/ftpusers.txt jdyyy 123456 yuanzhi 123456 3.1.\uff13.\u751f\u6210\u865a\u62df\u8d26\u6237\u7684\u6570\u636e\u5e93 \u00b6 \u521b\u5efa\u6570\u636e\u5e93\u6587\u4ef6\u9700\u8981\u5b89\u88c5db-util 1 $ sudo dpkg -i db5.3-util_5.3.28-3ubuntu3.1_amd64.deb db-util_1%3a5.3.21~exp1ubuntu1_all.deb \u751f\u6210\u8ba4\u8bc1\u6570\u636e\u5e93\u6587\u4ef6 1 2 3 4 5 ubuntu@node1:~$ sudo db_load -T -t hash -f /etc/vsftpd/ftpusers.txt /etc/vsftpd/ftpusers.db # -T: \u5141\u8bb8\u4f7f\u7528\u6587\u672c\u6587\u4ef6\u4fe1\u606f\u52a0\u8f7d\u5230\u6570\u636e\u5e93\u4e2d # -t : \u6307\u5b9a\u52a0\u5bc6\u7b97\u6cd5 # -f : \u6307\u5b9a\u6587\u4ef6 ubuntu@node1:~$ sudo chmod 600 /etc/vsftpd/ftpusers.db \u521b\u5efa\u6570\u636e\u5e93\u7684pam\u6587\u4ef6 1 2 3 4 5 6 7 8 9 10 # \u5907\u4efd\u539f\u6765\u7684pam\u6587\u4ef6 $ sudo cp /etc/pam.d/vsftpd /etc/pam.d/vsftpd.bak # \u62f7\u8d1dpam\u6a21\u677f\u6587\u4ef6\u5230/etc/pam.d/ $ sudo cp /usr/share/doc/vsftpd/examples/VIRTUAL_USERS/vsftpd.pam /etc/pam.d/vsftpd # \u7f16\u8bd1\u65b0\u7684pam\u6587\u4ef6 # \u6ce8\u610fpam_userdb.so\u7684\u4f4d\u7f6e\uff0c\u6a21\u677f\u4e2d/lib/security/pam_userdb.so\u662f\u627e\u4e0d\u5230\u7684 # \u6839\u636e\u7cfb\u7edf\u7684\u60c5\u51b5\u6539\uff0cdb=/etc/vsftpd/ftpusers ftpuser\u662f\u8ba4\u8bc1\u6570\u636e\u5e93\u6587\u4ef6\u7684\u6587\u4ef6\u540d\uff0c\u8fd9\u91cc\u4e0d\u9700\u8981\u52a0\u540e\u7f00 $ sudo vim /etc/pam.d/vsftpd auth required /lib/x86_64-linux-gnu/security/pam_userdb.so db = /etc/vsftpd/ftpusers account required /lib/x86_64-linux-gnu/security/pam_userdb.so db = /etc/vsftpd/ftpusers 3.1.4.\u4fee\u6539\u914d\u7f6e\u6587\u4ef6 \u00b6 1 2 3 4 5 6 # \u6fc0\u6d3b\u865a\u62df\u7528\u6237 guest_enable = YES # \u865a\u62df\u7528\u6237\u6620\u5c04\u5230\u7cfb\u7edf\u7528\u6237\u7684\u7528\u6237\u540d\u79f0(\u7cfb\u7edf\u7528\u6237\u7684\u540d\u79f0) guest_username = ftpadmin # \u865a\u62df\u7528\u6237\u62e5\u6709\u4e0e\u7cfb\u7edf\u7528\u6237\u76f8\u540c\u7684\u6743\u9650 virtual_use_local_privs = YES 3.1.5.\u91cd\u542f\u670d\u52a1 \u00b6 \u5f02\u5e38\u5904\u7406 \u5982\u679c\u914d\u7f6e\u6587\u4ef6\u4e2d\u6ca1\u6709\u52a0\uff1avirtual_use_local_privs=YES \u767b\u9646\u62a5\u9519\uff1a500 OOPS: vsftpd: refusing to run with writable root inside chroot() 1 2 3 4 5 6 7 8 9 shuowei@gaopeng:~$ ftp 172 .16.10.101 Connected to 172 .16.10.101. 220 ( vsFTPd 3 .0.2 ) Name ( 172 .16.10.101:shuowei ) : jdyyy 331 Please specify the password. Password: 500 OOPS: vsftpd: refusing to run with writable root inside chroot () Login failed. ftp> \u53bb\u9664\u7cfb\u7edf\u7528\u6237\u5bb6\u76ee\u5f55\u5199\u6743\u9650 1 $ sudo chmod a-w /data/ftp/ \u4f46\u662f\u53c8\u6ca1\u6709\u5199\u7684\u6743\u9650\u4e86\u3002 3.1.6. \u6700\u7ec8\u914d\u7f6e \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 listen = YES anonymous_enable = NO local_enable = YES write_enable = YES dirmessage_enable = YES use_localtime = YES xferlog_enable = YES connect_from_port_20 = YES xferlog_file = /var/log/vsftpd.log secure_chroot_dir = /var/run/vsftpd/empty pam_service_name = vsftpd rsa_cert_file = /etc/ssl/certs/ssl-cert-snakeoil.pem rsa_private_key_file = /etc/ssl/private/ssl-cert-snakeoil.key guest_enable = YES guest_username = ftpadmin virtual_use_local_privs = YES \u8fd9\u6837\u865a\u62df\u7528\u6237\u8bfb\u5199\u5220\u6743\u9650\u90fd\u6709 3.2. \u5b9e\u73b0\u865a\u62df\u7528\u6237\u4e0d\u540c\u6743\u9650 \u00b6 3.2.1 \u4fee\u6539FTP\u4e3b\u914d\u7f6e\u6587\u4ef6 \u00b6 1 2 $ sudo vim /etc/vsftpd.conf user_config_dir = /etc/vsftpd_user_conf 3.2.2 \u7ed9\u6bcf\u4e2a\u865a\u62df\u7528\u6237\u521b\u5efa\u4e00\u4e2a\u72ec\u7acb\u7684\u6743\u9650\u914d\u7f6e\u6587\u4ef6-\u7248\u672c1 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 $ sudo mkdir /data/ftp/jdyyy $ sudo mkdir /etc/vsftpd_user_conf $ sudo vim /etc/vsftpd_user_conf/jdyyy # \u53ea\u6709\u4e0a\u4f20\u6743\u9650\uff0c\u6ca1\u6709\u4e0b\u8f7d\u6743\u9650 write_enable = YES virtual_use_local_privs = NO anon_upload_enable = YES anon_world_readable_only = YES anon_mkdir_write_enable = YES anon_other_write_enable = NO $ sudo vim /etc/vsftpd_user_conf/yuanzhi # \u53ea\u6709\u4e0b\u8f7d\u6743\u9650 write_enable = NO virtual_use_local_privs = NO anon_upload_enable = NO anon_world_readable_only = NO anon_mkdir_write_enable = NO anon_other_write_enable = NO # \u6ce8\u610fftp\u6587\u4ef6\u5939\u7684\u6743\u9650 ubuntu@node1:/$ ll /data/ total 12 drwxr-xr-x 3 root root 4096 Jan 25 16 :17 ./ drwxr-xr-x 23 root root 4096 Jan 25 16 :17 ../ drwxr-xr-x 4 ftpadmin ftpadmin 4096 Jan 25 17 :50 ftp/ # \u4e3b\u914d\u7f6e\u6587\u4ef6 ubuntu@node1:/$ grep -Ev \"(^#|^ $ )\" /etc/vsftpd.conf listen = YES anonymous_enable = NO local_enable = YES dirmessage_enable = YES use_localtime = YES xferlog_enable = YES connect_from_port_20 = YES xferlog_file = /var/log/vsftpd.log chroot_local_user = YES secure_chroot_dir = /var/run/vsftpd/empty pam_service_name = vsftpd rsa_cert_file = /etc/ssl/certs/ssl-cert-snakeoil.pem rsa_private_key_file = /etc/ssl/private/ssl-cert-snakeoil.key guest_enable = YES guest_username = ftpadmin virtual_use_local_privs = YES allow_writeable_chroot = YES user_config_dir = /etc/vsftpd_user_conf 3.2.3 \u7ed9\u6bcf\u4e2a\u865a\u62df\u7528\u6237\u521b\u5efa\u4e00\u4e2a\u72ec\u7acb\u7684\u6743\u9650\u914d\u7f6e\u6587\u4ef6-\u7248\u672c2 \u00b6 \u6743\u9650 upload download admin \u4e0b\u8f7d - + + \u4e0a\u4f20 + - + \u521b\u5efa\u76ee\u5f55 + - + \u5220\u9664 - - + 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 root@node1:~# ls -ld /data/ftp/* drwxr-xr-x 2 ftpadmin ftpadmin 4096 Jan 28 18 :50 /data/ftp/download drwxr-xr-x 3 ftpadmin ftpadmin 4096 Jan 28 18 :54 /data/ftp/upload vsftpd\u670d\u52a1\u7684\u4e3b\u914d\u7f6e\u6587\u4ef6 ubuntu@node1:~$ grep -Ev \"(^#|^ $ )\" /etc/vsftpd.conf listen = YES anonymous_enable = NO local_enable = YES dirmessage_enable = YES use_localtime = YES xferlog_enable = YES connect_from_port_20 = YES xferlog_file = /var/log/vsftpd.log chroot_local_user = YES secure_chroot_dir = /var/run/vsftpd/empty pam_service_name = vsftpd rsa_cert_file = /etc/ssl/certs/ssl-cert-snakeoil.pem rsa_private_key_file = /etc/ssl/private/ssl-cert-snakeoil.key guest_enable = YES guest_username = ftpadmin allow_writeable_chroot = YES user_config_dir = /etc/vsftpd_user_conf \u521b\u5efa\u4e0d\u540c\u7528\u6237\u5404\u81ea\u7684\u7684\u914d\u7f6e\u6587\u4ef6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 root@node1:~# ls /etc/vsftpd_user_conf/ admin download upload ubuntu@node1:~$ cat /etc/vsftpd_user_conf/download write_enable = NO anon_upload_enable = NO anon_world_readable_only = NO anon_mkdir_write_enable = NO anon_other_write_enable = NO local_root = /data/ftp/download ubuntu@node1:~$ cat /etc/vsftpd_user_conf/upload write_enable = YES anon_upload_enable = YES anon_world_readable_only = YES anon_mkdir_write_enable = YES anon_other_write_enable = NO local_root = /data/ftp/upload ubuntu@node1:~$ cat /etc/vsftpd_user_conf/admin write_enable = YES anon_upload_enable = YES anon_world_readable_only = NO anon_mkdir_write_enable = YES anon_other_write_enable = YES \u751f\u6210\u7528\u6237\u6570\u636e\u5e93\u6587\u4ef6 1 2 3 4 5 6 7 ubuntu@node1:~$ cat /etc/vsftpd/ftpusers.txt upload 123456 download 123456 admin admin ubuntu@node1:~$ sudo db_load -T -t hash -f /etc/vsftpd/ftpusers.txt /etc/vsftpd/ftpusers.db \u91cd\u542f\u670d\u52a1 \u4e8c\u3001SSH \u00b6 1. \u6267\u884c\u547d\u4ee4 \u00b6 1. \u6267\u884c\u5355\u6761\u547d\u4ee4 \u00b6 1 2 3 ubuntu@node1:~$ ssh ubuntu@172.16.10.102 hostname ubuntu@172.16.10.102 ' s password: node2 2. \u6267\u884c\u5e26\u53c2\u6570\u7684\u547d\u4ee4 \u00b6 1 2 3 ssh ubuntu@172.16.10.102 grep root /etc/passwd ubuntu@172.16.10.102 ' s password: root:x:0:0:root:/root:/bin/bash 3. \u6267\u884c\u591a\u6761\u547d\u4ee4 \u00b6 \u6267\u884c\u591a\u6761\u547d\u4ee4\u65f6\uff0c\u53ea\u8981\u7528\u5206\u53f7\u628a\u547d\u4ee4\u5206\u5272\u5f00\u5c31\u53ef\u4ee5\u4e86\uff0c\u4f46\u662f\u8981\u628a\u591a\u6761\u547d\u4ee4\u7528\u5f15\u53f7\u5f15\u8d77\u6765\uff0c\u5426\u5219\u5206\u53f7\u540e\u9762\u7684\u547d\u4ee4\u5c31\u662f\u5728\u672c\u5730\u6267\u884c\u7684\u3002 1 2 3 4 # \u4e0d\u52a0\u5206\u53f7 ubuntu@node1:~$ ssh ubuntu@172.16.10.102 cat /etc/hostname ; hostname -I node2 172 .16.10.101 1 2 3 4 # \u52a0\u5206\u53f7 ubuntu@node1:~$ ssh ubuntu@172.16.10.102 \"cat /etc/hostname;hostname -I\" node2 172 .16.10.102 4. \u6267\u884c\u591a\u884c\u547d\u4ee4 \u00b6 \u7528\u5355\u5f15\u53f7\u6216\u53cc\u5f15\u53f7\u5f00\u5934\uff0c\u7136\u540e\u5199\u4e0a\u51e0\u884c\u547d\u4ee4\uff0c\u6700\u540e\u518d\u7528\u76f8\u540c\u7684\u5f15\u53f7\u6765\u7ed3\u675f\u3002 1 2 3 4 5 6 7 8 9 ubuntu@node1:~$ ssh ubuntu@172.16.10.102 \" > hostname -I > uname -r > uptime > \" ubuntu@172.16.10.102 ' s password: 172 .16.10.102 4 .4.0-31-generic 15 :39:13 up 6 :28, 2 users, load average: 0 .00, 0 .00, 0 .00 5. \u6267\u884c\u4ea4\u4e92\u547d\u4ee4 \u00b6 1 2 3 ubuntu@node1:~$ ssh ubuntu@172.16.10.102 \"sudo apt install nginx\" ubuntu@172.16.10.102 ' s password: sudo: no tty present and no askpass program specified \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5f53\u4f60\u6267\u884c\u4e0d\u5e26\u547d\u4ee4\u7684 ssh \u8fde\u63a5\u65f6\uff0c\u4f1a\u4e3a\u4f60\u5206\u914d\u4e00\u4e2a TTY\u3002\u56e0\u4e3a\u6b64\u65f6\u4f60\u5e94\u8be5\u662f\u60f3\u8981\u8fd0\u884c\u4e00\u4e2a shell \u4f1a\u8bdd\u3002 \u4f46\u662f\u5f53\u4f60\u901a\u8fc7 ssh \u5728\u8fdc\u7a0b\u4e3b\u673a\u4e0a\u6267\u884c\u547d\u4ee4\u65f6\uff0c\u5e76\u4e0d\u4f1a\u4e3a\u8fd9\u4e2a\u8fdc\u7a0b\u4f1a\u8bdd\u5206\u914d TTY\u3002\u6b64\u65f6 ssh \u4f1a\u7acb\u5373\u9000\u51fa\u8fdc\u7a0b\u4e3b\u673a\uff0c\u6240\u4ee5\u9700\u8981\u4ea4\u4e92\u7684\u547d\u4ee4\u4e5f\u968f\u4e4b\u7ed3\u675f\u3002 \u8fd9\u65f6\u9700\u8981\u7528 -t \u53c2\u6570\u663e\u5f0f\u7684\u544a\u8bc9 ssh\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2a TTY \u8fdc\u7a0b shell \u8fdb\u884c\u4ea4\u4e92\uff0c\u6dfb\u52a0 -t \u53c2\u6570\u540e\uff0cssh \u4f1a\u4fdd\u6301\u767b\u5f55\u72b6\u6001\uff0c\u76f4\u5230\u4f60\u9000\u51fa\u9700\u8981\u4ea4\u4e92\u7684\u547d\u4ee4\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 ubuntu@node1:~$ ssh -t ubuntu@172.16.10.102 \"sudo apt install nginx\" ubuntu@172.16.10.102 ' s password: [ sudo ] password for ubuntu: Reading package lists... Done Building dependency tree Reading state information... Done The following extra packages will be installed: fontconfig-config fonts-dejavu-core libfontconfig1 libgd3 libjbig0 libjpeg-turbo8 libjpeg8 libtiff5 libvpx1 libxpm4 libxslt1.1 nginx-common nginx-core Suggested packages: libgd-tools fcgiwrap nginx-doc The following NEW packages will be installed: fontconfig-config fonts-dejavu-core libfontconfig1 libgd3 libjbig0 libjpeg-turbo8 libjpeg8 libtiff5 libvpx1 libxpm4 libxslt1.1 nginx nginx-common nginx-core 0 upgraded, 14 newly installed, 0 to remove and 8 not upgraded. Need to get 2 ,681 kB of archives. After this operation, 9 ,073 kB of additional disk space will be used. Do you want to continue ? [ Y/n ] n Abort. Connection to 172 .16.10.102 closed. 6. \u4f7f\u7528\u672c\u5730\u53d8\u91cf \u00b6 1 2 3 4 ubuntu@node1:~$ name = \"nginx\" ubuntu@node1:~$ ssh ubuntu@172.16.10.102 \"echo \" Install $name \"\" ubuntu@172.16.10.102 ' s password: Install nginx 2. ssh\u6267\u884c\u811a\u672c \u00b6 1. \u6267\u884c\u8fdc\u7a0b\u4e0d\u5e26\u53c2\u6570\u7684\u811a\u672c \u00b6 1 2 3 4 #\u8fdc\u7a0b\u811a\u672c\u6587\u4ef6\u5185\u5bb9 ubuntu@node2:~$ cat hello.sh #!/bin/bash echo \"hello world\" 1 2 3 ubuntu@node1:~$ ssh ubuntu@172.16.10.102 \" $HOME /hello.sh\" ubuntu@172.16.10.102 ' s password: hello world 2. \u6267\u884c\u8fdc\u7a0b\u9700\u8981\u53c2\u6570\u7684\u811a\u672c \u00b6 1 2 3 4 5 6 # \u8fdc\u7a0b\u811a\u672c\u6587\u4ef6\u5185\u5bb9 ubuntu@node2:~$ cat script.sh #!/bin/bash name = $1 echo \"install $name \" echo \"installed succeed!\" 1 2 3 4 5 ubuntu@node1:~$ name = nginx ubuntu@node1:~$ ssh ubuntu@172.16.10.102 \" $HOME /script.sh $name \" ubuntu@172.16.10.102 ' s password: install nginx installed succeed! 3. \u6267\u884c\u672c\u5730\u4e0d\u5e26\u53c2\u6570\u7684\u811a\u672c \u00b6 1 2 3 4 5 6 7 8 9 10 11 ubuntu@node1:~$ cat hello.sh #!/bin/bash hostname touch hello.txt ls ubuntu@node1:~$ ssh ubuntu@172.16.10.102 < hello.sh Pseudo-terminal will not be allocated because stdin is not a terminal. ubuntu@172.16.10.102 ' s password: node2 hello.txt 4. \u6267\u884c\u672c\u5730\u9700\u8981\u53c2\u6570\u7684\u811a\u672c\u6587\u4ef6 \u00b6 1 2 3 4 5 6 7 8 9 10 11 # \u811a\u672c\u5185\u5bb9\uff0c\u9700\u8981\u4f20\u5165\u4e00\u4e2a\u53c2\u6570 ubuntu@node1:~$ cat script.sh #!/bin/bash name = $1 echo \"install $name \" echo \"installed succeed!\" # \u9700\u8981\u52a0\u4e0abash -s ubuntu@node1:~$ ssh ubuntu@172.16.10.102 \"bash -s\" < script.sh nginx ubuntu@172.16.10.102 ' s password: install nginx installed succeed!","title":"Linux\u4e2d\u5e38\u7528\u7684\u670d\u52a1"},{"location":"linux/service/#linux","text":"","title":"Linux\u4e2d\u5e38\u7528\u7684\u670d\u52a1"},{"location":"linux/service/#ftp","text":"","title":"\u4e00\u3001FTP"},{"location":"linux/service/#1","text":"FTP \u662f File Transfer Protocol \uff08\u6587\u4ef6\u4f20\u8f93\u534f\u8bae\uff09\u7684\u7f29\u5199 \uff0c\u5728 Unix/Linux \u7cfb\u7edf\u4e2d\u5e38\u7528\u7684\u514d\u8d39 FTP \u670d\u52a1\u5668\u8f6f\u4ef6\u4e3b\u8981\u662f VSFTP\uff0cvsftp\u7684\u5b98\u65b9\u5730\u5740\uff1ahttp://vsftpd.beasts.org","title":"1. \u4ecb\u7ecd"},{"location":"linux/service/#1-ftp","text":"FTP\u5de5\u4f5c\u65f6\u4f1a\u5f00\u4e24\u4e2a\u7aef\u53e3\uff0c\u4e00\u4e2a\u547d\u4ee4\u7aef\u53e3\uff08TCP:21\uff09\uff0c\u4e00\u4e2a\u6570\u636e\u7aef\u53e3(TCP:20) 1.1 \u4e3b\u52a8\u6a21\u5f0f \uff08Active FTP\uff09 \u670d\u52a1\u5668\u4e3b\u52a8\u8fde\u63a5\u5ba2\u6237\u7aef FTP \u5ba2\u6237\u7aef\u968f\u673a\u5f00\u542f\u4e00\u4e2a\u5927\u4e8e1024 \u7684\u7aef\u53e3 N \u5411\u670d\u52a1\u5668\u7684 21 \u53f7\u7aef\u53e3\u53d1\u8d77\u8fde\u63a5\uff0c\u7136\u540e\u5f00\u653e N+1 \u53f7\u7aef\u53e3\u8fdb\u884c\u76d1\u542c\uff0c\u5e76\u5411\u670d\u52a1\u5668\u53d1\u51faPORT N+1 \u547d\u4ee4\u3002\u670d\u52a1\u5668\u63a5\u6536\u5230\u547d\u4ee4\u540e\uff0c\u4f1a\u7528\u5176\u672c\u5730\u7684 FTP \u6570\u636e\u7aef\u53e3\uff08\u901a\u5e38\u662f 20 \uff09\u6765\u8fde\u63a5\u5ba2\u6237\u7aef\u6307\u5b9a\u7684\u7aef\u53e3 N+1 \uff0c\u8fdb\u884c\u6570\u636e\u4f20\u8f93 1 2 3 4 5 client server \u547d\u4ee4\u63a7\u5236 1088 ------> 21 \u6570\u636e\u4f20\u8f93 1089 <------ \u3000\u3000\u3000\u3000 20 1.2 \u88ab\u52a8\u6a21\u5f0f\uff08Passive FTP\uff09 \u5ba2\u6237\u7aef\u4e3b\u52a8\u94fe\u63a5\u670d\u52a1\u5668\u7aef FTP \u5ba2\u6237\u7aef\u968f\u673a\u5f00\u542f\u4e00\u4e2a\u5927\u4e8e1024 \u7684\u7aef\u53e3 N \u5411\u670d\u52a1\u5668\u7684 21 \u53f7\u7aef\u53e3\u53d1\u8d77\u8fde\u63a5\uff0c\u540c\u65f6\u4f1a\u5f00\u542f N+1 \u53f7\u7aef\u53e3\u3002\u7136\u540e\u5411\u670d\u52a1\u5668\u53d1\u9001PASV \u547d\u4ee4\uff0c\u901a\u77e5\u670d\u52a1\u5668\u81ea\u5df1\u5904\u4e8e\u88ab\u52a8\u6a21\u5f0f\u3002\u670d\u52a1\u5668\u6536\u5230\u547d\u4ee4\u540e\uff0c\u4f1a\u5f00\u653e\u4e00\u4e2a\u5927\u4e8e 1024 \u7684\u7aef\u53e3 P \u8fdb\u884c\u76d1\u542c\uff0c\u7136\u540e\u7528 PORT P \u547d\u4ee4\u901a\u77e5\u5ba2\u6237\u7aef\uff0c\u81ea\u5df1\u7684\u6570\u636e\u7aef\u53e3\u662f P \u3002\u5ba2\u6237\u7aef\u6536\u5230\u547d\u4ee4\u540e\uff0c\u4f1a\u901a\u8fc7 N+1\u53f7\u7aef\u540e\u8fde\u63a5\u670d\u52a1\u5668\u7684\u7aef\u53e3 P \uff0c\u7136\u540e\u5728\u4e24\u4e2a\u7aef\u53e3\u4e4b\u95f4\u8fdb\u884c\u6570\u636e\u4f20\u8f93 1 2 3 client server \u547d\u4ee4\u63a7\u5236 1088 ----------> 21 \u6570\u636e\u4f20\u8f93 1089 -- PASV --> 1099 \u5173\u4e8e\u4e24\u8005\u7684\u533a\u522b\u53c2\u8003\uff1ahttp://slacksite.com/other/ftp.html","title":"1. FTP \u7684\u5de5\u4f5c\u6a21\u5f0f"},{"location":"linux/service/#2","text":"","title":"2.\u7528\u6237\u8ba4\u8bc1\u65b9\u5f0f"},{"location":"linux/service/#1ftp","text":"","title":"1.\u533f\u540d\u7528\u6237\uff1aftp"},{"location":"linux/service/#2linux","text":"","title":"2.\u7cfb\u7edf\u7528\u6237\uff1aLinux\u7cfb\u7edf\u7528\u6237"},{"location":"linux/service/#3","text":"","title":"3.\u865a\u62df\u7528\u6237\uff1a\u591a\u4e2a\u865a\u62df\u7528\u6237\u6620\u5c04\u5230\u4e00\u4e2a\u7cfb\u7edf\u7528\u6237"},{"location":"linux/service/#2_1","text":"ubuntu14.04 1 2 3 $ sudo dpkg -i vsftpd_3.0.2-1ubuntu2.14.04.1_amd64.deb $ netstat -lant | grep 21 tcp 0 0 0 .0.0.0:21 0 .0.0.0:* LISTEN","title":"2.\u5b89\u88c5"},{"location":"linux/service/#3_1","text":"\u7528\u6237\u8ba4\u8bc1\u914d\u7f6e\u6587\u4ef6:/etc/pam.d/vsftpd \u4e3b\u914d\u7f6e\u6587\u4ef6:/etc/vsftpd.conf \u533f\u540d\u7528\u6237\uff08\u6620\u5c04\u4e3a\u7cfb\u7edf\u7528\u6237ftp \uff09\u5171\u4eab\u6587\u4ef6\u4f4d\u7f6e\uff1a/srv/ftp 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 anonymous_enable = NO # \u662f\u5426\u5141\u8bb8\u533f\u540d\u7528\u6237\u767b\u9646\uff0c\u6a21\u5f0f\u4e0d\u5141\u8bb8 local_enable = YES # \u5141\u8bb8\u7cfb\u7edf\u7528\u6237\u767b\u9646 #write_enable=YES # \u5141\u8bb8\u767b\u9646\u7528\u6237\u8fdb\u884c\u5199\u64cd\u4f5c\uff0c\u9ed8\u8ba4\u4e0d\u5141\u8bb8 #local_umask=022 #\u3000\u7528\u6237\u767b\u9646\u540e\u521b\u5efa\u6587\u4ef6\u7684umask\u503c #anon_upload_enable=YES #\u3000\u5141\u8bb8\u533f\u540d\u7528\u6237\u4e0a\u4f20\u6587\u4ef6 #anon_mkdir_write_enable=YES #\u3000\u5141\u8bb8\u533f\u540d\u7528\u6237\u521b\u5efa\u76ee\u5f55 dirmessage_enable = YES #\u3000\u662f\u5426\u663e\u793a\u76ee\u5f55\u8bf4\u660e\u6587\u4ef6, \u9700\u8981\u6536\u5de5\u521b\u5efa.message\u6587\u4ef6 use_localtime = YES #\u3000\u4f7f\u7528\u672c\u5730\u65f6\u95f4 xferlog_enable = YES #\u3000\u5f00\u542f\u4e0a\u4f20\u4e0b\u8f7d\u65e5\u5fd7 connect_from_port_20 = YES #\u3000\u6570\u636e\u4f20\u8f93\u7aef\u53e3 #chown_uploads=YES # \u662f\u5426\u6539\u53d8\u4e0a\u4f20\u6587\u4ef6\u7684\u5c5e\u4e3b #chown_username=whoever \u00b7 # \u5982\u679c\u662f\u9700\u8981\u8f93\u5165\u4e00\u4e2a\u7cfb\u7edf\u7528\u6237\u540d #xferlog_file=/var/log/vsftpd.log \uff03\u3000\u65e5\u5fd7\u6587\u4ef6\u7684\u8def\u5f84 #xferlog_std_format=YES # \u662f\u5426\u4f7f\u7528\u6807\u51c6\u7684ftp xferlog\u6a21\u5f0f #idle_session_timeout=600 # session\u8d85\u65f6\u65f6\u95f4 #data_connection_timeout=120\u3000\u3000 # \u8bbe\u7f6e\u6570\u636e\u4f20\u8f93\u8d85\u65f6\u65f6\u95f4 #nopriv_user=ftpsecure # \u8fd0\u884cvsftpd\u9700\u8981\u7684\u975e\u7279\u6743\u7cfb\u7edf\u7528\u6237\u9ed8\u8ba4\u662fnobody #async_abor_enable=YES # \u662f\u5426\u5141\u8bb8\u8fd0\u884c\u7279\u6b8a\u7684ftp\u547d\u4ee4async ABOR #ascii_upload_enable=YES # \u662f\u5426\u4f7f\u7528ascii\u7801\u65b9\u5f0f\u4e0a\u4f20\u6587\u4ef6 #ascii_download_enable=YES # \u662f\u5426\u4f7f\u7528ascii\u7801\u65b9\u5f0f\u4e0b\u8f7d\u6587\u4ef6 #ftpd_banner=Welcome to blah FTP service. # \u5b9a\u5236\u6b22\u8fce\u4fe1\u606f #deny_email_enable=YES # \u662f\u5426\u5141\u8bb8\u7981\u6b62\u533f\u540d\u7528\u6237\u4f7f\u7528\u67d0\u4e9b\u90ae\u4ef6\u5730\u5740 #banned_email_file=/etc/vsftpd.banned_emails # \u7981\u6b62\u90ae\u4ef6\u5730\u5740\u7684\u6587\u4ef6\u8def\u5f84 #chroot_local_user=YES # \u672c\u5730\u7528\u6237\u7981\u9522\u5728\u5bbf\u4e3b\u76ee\u5f55\u4e2d #chroot_list_enable=YES # \u662f\u5426\u5c06\u7cfb\u7edf\u7528\u6237\u9650\u6b62\u5728\u81ea\u5df1\u7684home\u76ee\u5f55\u4e0b #chroot_list_file=/etc/vsftpd.chroot_list # \u5217\u51fa\u7684\u662f\u4e0dchroot\u7684\u7528\u6237\u7684\u5217\u8868 #ls_recurse_enable=YES # \u662f\u5426\u5141\u8bb8\u4f7f\u7528ls -R\u7b49\u547d\u4ee4 secure_chroot_dir = /var/run/vsftpd/empty pam_service_name = vsftpd # pam\u7684\u914d\u7f6e\u6587\u4ef6\u540d\u79f0 /etc/pam.d/vsftpd rsa_cert_file = /etc/ssl/certs/ssl-cert-snakeoil.pem rsa_private_key_file = /etc/ssl/private/ssl-cert-snakeoil.key","title":"3. \u914d\u7f6e\u6587\u4ef6"},{"location":"linux/service/#4","text":"","title":"4. \u7528\u6237\u7ba1\u7406"},{"location":"linux/service/#1_1","text":"","title":"\uff11. \u533f\u540d\u7528\u6237"},{"location":"linux/service/#11","text":"\u4fee\u6539\u914d\u7f6e\u6587\u4ef6 1 2 3 $ sudo vim /etc/vsftpd.conf nonymous_enable = YES $ sudo service vsftpd restart \u6d4b\u8bd5\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 shuowei@gaopeng:~$ ftp 172 .16.10.101 Connected to 172 .16.10.101. 220 ( vsFTPd 3 .0.2 ) Name ( 172 .16.10.101:shuowei ) : ftp # \u767b\u9646\u7528\u6237\u4e3aftp 331 Please specify the password. Password: # \u5bc6\u7801\u968f\u610f\uff0c\u53ef\u4ee5\u4e3a\u7a7a 230 Login successful. Remote system type is UNIX. Using binary mode to transfer files. ftp> ls 200 PORT command successful. Consider using PASV. 150 Here comes the directory listing. -rw-r--r-- 1 0 0 0 Jan 25 11 :12 test.txt 226 Directory send OK. ftp> get test.txt # \u6709\u4e0b\u8f7d\u7684\u6743\u9650 local: test.txt remote: test.txt 200 PORT command successful. Consider using PASV. 150 Opening BINARY mode data connection for test.txt ( 0 bytes ) . 226 Transfer complete. ftp> delete test.txt # \u6ca1\u6709\u5199\u7684\u6743\u9650 550 Permission denied. ftp>","title":"1.1 \u5141\u8bb8\u533f\u540d\u7528\u6237\u767b\u9646"},{"location":"linux/service/#12","text":"\u4fee\u6539\u914d\u7f6e\u6587\u4ef6 1 2 3 4 5 6 $ sudo vim /etc/vsftpd.conf nonymous_enable = YES write_enable = YES anon_upload_enable = YES anon_mkdir_write_enable = YES $ sudo service vsftpd restart 1 2 3 $ sudo mkdir /srv/ftp/pub $ sudo chown ftp. /srv/ftp/pub/ $ sudo chmod 777 /srv/ftp/pub/ 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 shuowei@gaopeng:~$ ftp 172 .16.10.101 Connected to 172 .16.10.101. 220 ( vsFTPd 3 .0.2 ) Name ( 172 .16.10.101:shuowei ) : ftp 331 Please specify the password. Password: 230 Login successful. Remote system type is UNIX. Using binary mode to transfer files. ftp> ls 200 PORT command successful. Consider using PASV. 150 Here comes the directory listing. drwxrwxrwx 2 105 112 4096 Jan 25 11 :33 pub -rw-r--r-- 1 0 0 0 Jan 25 11 :12 test.txt 226 Directory send OK. ftp> cd pub # \u8fdb\u5165pub\u76ee\u5f55 250 Directory successfully changed. ftp> ls 200 PORT command successful. Consider using PASV. 150 Here comes the directory listing. 226 Directory send OK. ftp> mkdir testdir # \u6587\u4ef6\u521b\u5efa\u6210\u529f 257 \"/pub/testdir\" created ftp> put zabbix-3.0.tar.gz # \u53ef\u4ee5\u4e0a\u4f20\u6587\u4ef6 local: zabbix-3.0.tar.gz remote: zabbix-3.0.tar.gz 200 PORT command successful. Consider using PASV. 150 Ok to send data. 226 Transfer complete. 15653160 bytes sent in 0 .10 secs ( 143 .7224 MB/s ) ftp> ls 200 PORT command successful. Consider using PASV. 150 Here comes the directory listing. drwx------ 2 105 112 4096 Jan 25 11 :36 testdir -rw------- 1 105 112 15653160 Jan 25 11 :42 zabbix-3.0.tar.gz 226 Directory send OK.","title":"1.2 \u5141\u8bb8\u533f\u540d\u7528\u6237\u4e0a\u4f20\u548c\u5efa\u7acb\u76ee\u5f55"},{"location":"linux/service/#2_2","text":"","title":"2. \u7cfb\u7edf\u7528\u6237"},{"location":"linux/service/#1_2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 shuowei@gaopeng:~$ ftp 172 .16.10.101 Connected to 172 .16.10.101. 220 ( vsFTPd 3 .0.2 ) Name ( 172 .16.10.101:shuowei ) : ubuntu # \u7cfb\u7edf\u7528\u6237\u540d 331 Please specify the password. Password: # \u7cfb\u7edf\u7528\u6237\u7684\u5bc6\u7801 230 Login successful. Remote system type is UNIX. Using binary mode to transfer files. ftp> ls 200 PORT command successful. Consider using PASV. 150 Here comes the directory listing. -rw-r--r-- 1 1000 1000 111462 Jan 25 10 :30 vsftpd_3.0.2-1ubuntu2.14.04.1_amd64.deb 226 Directory send OK. ftp> pwd 257 \"/home/ubuntu\" # \u767b\u9646\u540e\u5728\u81ea\u5df1\u7684\u5bb6\u76ee\u5f55 ftp> get vsftpd_3.0.2-1ubuntu2.14.04.1_amd64.deb# \u6709\u4e0b\u8f7d\u7684\u6743\u9650 local: vsftpd_3.0.2-1ubuntu2.14.04.1_amd64.deb remote: vsftpd_3.0.2-1ubuntu2.14.04.1_amd64.deb 200 PORT command successful. Consider using PASV. 150 Opening BINARY mode data connection for vsftpd_3.0.2-1ubuntu2.14.04.1_amd64.deb ( 111462 bytes ) . 226 Transfer complete. 111462 bytes received in 0 .00 secs ( 52 .1582 MB/s ) ftp> delete vsftpd_3.0.2-1ubuntu2.14.04.1_amd64.deb # \u6ca1\u6709\u5199\u7684\u6743\u9650\u3000\u9700\u8981\u5f00\u542fwrite_enable=YES 550 Permission denied.","title":"1. \u7cfb\u7edf\u7528\u6237\u767b\u9646"},{"location":"linux/service/#3_2","text":"VSFTP \u4e00\u4e2a\u79f0\u4e3a\u5b89\u5168\u7684\u4fdd\u8bc1\u662f\u91c7\u7528\u4e86\u865a\u62df\u7528\u6237\u7684\u8ba4\u8bc1\u65b9\u5f0f\uff0c\u5b83\u9760\u5bf9 /etc/pam.d/ \u76ee\u5f55\u4e0b\u6307\u5b9a\u7684\u4e00\u4e2a\u8ba4\u8bc1\u6587\u4ef6\u5bf9\u7528\u6237\u8fdb\u884c\u8ba4\u8bc1\uff0c\u8ba4\u8bc1\u6210\u529f\u540e\u518d\u628a\u865a\u62df\u7528\u6237\u6620\u5c04\u4e3a\u672c\u5730\u7528\u6237\uff0c\u8be5\u672c\u5730\u7528\u6237\u7531\u670d\u52a1\u5668\u914d\u7f6e\u6587\u4ef6\u91cc\u7684\u8bed\u53e5 ftp_username \u7684\u503c\u6307\u5b9a\u3002\u4f7f\u7528\u865a\u62df\u7528\u6237\u8ba4\u8bc1\uff0c\u5219\u539f\u6709\u7cfb\u7edf\u8d26\u6237\u5c06\u4e0d\u518d\u53ef\u7528\u3002 \u6240\u6709\u865a\u62df\u7528\u6237\u4f1a\u7edf\u4e00\u6620\u5c04\u4e3a\u4e00\u4e2a\u6307\u5b9a\u7684\u7cfb\u7edf\u666e\u901a\u8d26\u53f7\uff1a\u8bbf\u95ee\u5171\u4eab\u4f4d\u7f6e\uff0c\u5373\u4e3a\u6b64\u7cfb\u7edf\u666e\u901a\u7528\u6237\u7684\u5bb6\u76ee\u5f55\uff0c\u5f53\u7136\u6bcf\u4e2a\u865a\u62df\u7528\u6237\u4e5f\u53ef\u88ab\u8d4b\u4e88\u4e0d\u540c\u7684\u8bbf\u95ee\u6743\u9650\uff0c\u901a\u8fc7\u533f\u540d\u7528\u6237\u7684\u6743\u9650\u63a7\u5236\u53c2\u6570\u8fdb\u884c\u6307\u5b9a \u4e3a\u4e86\u5b9e\u73b0\u865a\u62df\u7528\u6237\u6211\u4eec\u9700\u8981\u51c6\u5907\u7684\u73af\u5883 \u4e00\u4e2a\u4e0d\u53ef\u767b\u9646\u7684\u7cfb\u7edf\u8d26\u6237\uff0c\u5e76\u4e3a\u8fd9\u4e2a\u7cfb\u7edf\u521b\u5efa\u4e00\u4e2a\u5bb6\u76ee\u5f55\u3002\u865a\u62df\u8d26\u6237\u5c31\u5728\u8fd9\u4e2a\u5bb6\u76ee\u5f55\u91cc\u6d3b\u52a8\u3002 \u521b\u5efa\u865a\u62df\u8d26\u6237\u540d\u5355\uff0c\u5e76\u4e3a\u8fd9\u4e9b\u7528\u6237\u521b\u5efa\u4e00\u4e2a\u8ba4\u8bc1\u6570\u636e\u5e93","title":"3.\u865a\u62df\u7528\u6237"},{"location":"linux/service/#31","text":"","title":"3.1 \u521b\u5efa\u865a\u62df\u7528\u6237"},{"location":"linux/service/#311","text":"1 2 3 $ sudo mkdir /data $ sudo useradd -m -d /data/ftp -s /bin/false ftpadmin $ sudo chwon -R ftpadmin /data/ftp","title":"3.1.\uff11. \u521b\u5efa\u672c\u5730\u7cfb\u7edf\u7528\u6237"},{"location":"linux/service/#312","text":"1 2 3 4 5 6 ubuntu@node1:~$ sudo mkdir /etc/vsftpd/ ubuntu@node1:~$ sudo vim /etc/vsftpd/ftpusers.txt jdyyy 123456 yuanzhi 123456","title":"3.1.2. \u5efa\u7acb\u865a\u62df\u8d26\u6237\u540d\u5355"},{"location":"linux/service/#313","text":"\u521b\u5efa\u6570\u636e\u5e93\u6587\u4ef6\u9700\u8981\u5b89\u88c5db-util 1 $ sudo dpkg -i db5.3-util_5.3.28-3ubuntu3.1_amd64.deb db-util_1%3a5.3.21~exp1ubuntu1_all.deb \u751f\u6210\u8ba4\u8bc1\u6570\u636e\u5e93\u6587\u4ef6 1 2 3 4 5 ubuntu@node1:~$ sudo db_load -T -t hash -f /etc/vsftpd/ftpusers.txt /etc/vsftpd/ftpusers.db # -T: \u5141\u8bb8\u4f7f\u7528\u6587\u672c\u6587\u4ef6\u4fe1\u606f\u52a0\u8f7d\u5230\u6570\u636e\u5e93\u4e2d # -t : \u6307\u5b9a\u52a0\u5bc6\u7b97\u6cd5 # -f : \u6307\u5b9a\u6587\u4ef6 ubuntu@node1:~$ sudo chmod 600 /etc/vsftpd/ftpusers.db \u521b\u5efa\u6570\u636e\u5e93\u7684pam\u6587\u4ef6 1 2 3 4 5 6 7 8 9 10 # \u5907\u4efd\u539f\u6765\u7684pam\u6587\u4ef6 $ sudo cp /etc/pam.d/vsftpd /etc/pam.d/vsftpd.bak # \u62f7\u8d1dpam\u6a21\u677f\u6587\u4ef6\u5230/etc/pam.d/ $ sudo cp /usr/share/doc/vsftpd/examples/VIRTUAL_USERS/vsftpd.pam /etc/pam.d/vsftpd # \u7f16\u8bd1\u65b0\u7684pam\u6587\u4ef6 # \u6ce8\u610fpam_userdb.so\u7684\u4f4d\u7f6e\uff0c\u6a21\u677f\u4e2d/lib/security/pam_userdb.so\u662f\u627e\u4e0d\u5230\u7684 # \u6839\u636e\u7cfb\u7edf\u7684\u60c5\u51b5\u6539\uff0cdb=/etc/vsftpd/ftpusers ftpuser\u662f\u8ba4\u8bc1\u6570\u636e\u5e93\u6587\u4ef6\u7684\u6587\u4ef6\u540d\uff0c\u8fd9\u91cc\u4e0d\u9700\u8981\u52a0\u540e\u7f00 $ sudo vim /etc/pam.d/vsftpd auth required /lib/x86_64-linux-gnu/security/pam_userdb.so db = /etc/vsftpd/ftpusers account required /lib/x86_64-linux-gnu/security/pam_userdb.so db = /etc/vsftpd/ftpusers","title":"3.1.\uff13.\u751f\u6210\u865a\u62df\u8d26\u6237\u7684\u6570\u636e\u5e93"},{"location":"linux/service/#314","text":"1 2 3 4 5 6 # \u6fc0\u6d3b\u865a\u62df\u7528\u6237 guest_enable = YES # \u865a\u62df\u7528\u6237\u6620\u5c04\u5230\u7cfb\u7edf\u7528\u6237\u7684\u7528\u6237\u540d\u79f0(\u7cfb\u7edf\u7528\u6237\u7684\u540d\u79f0) guest_username = ftpadmin # \u865a\u62df\u7528\u6237\u62e5\u6709\u4e0e\u7cfb\u7edf\u7528\u6237\u76f8\u540c\u7684\u6743\u9650 virtual_use_local_privs = YES","title":"3.1.4.\u4fee\u6539\u914d\u7f6e\u6587\u4ef6"},{"location":"linux/service/#315","text":"\u5f02\u5e38\u5904\u7406 \u5982\u679c\u914d\u7f6e\u6587\u4ef6\u4e2d\u6ca1\u6709\u52a0\uff1avirtual_use_local_privs=YES \u767b\u9646\u62a5\u9519\uff1a500 OOPS: vsftpd: refusing to run with writable root inside chroot() 1 2 3 4 5 6 7 8 9 shuowei@gaopeng:~$ ftp 172 .16.10.101 Connected to 172 .16.10.101. 220 ( vsFTPd 3 .0.2 ) Name ( 172 .16.10.101:shuowei ) : jdyyy 331 Please specify the password. Password: 500 OOPS: vsftpd: refusing to run with writable root inside chroot () Login failed. ftp> \u53bb\u9664\u7cfb\u7edf\u7528\u6237\u5bb6\u76ee\u5f55\u5199\u6743\u9650 1 $ sudo chmod a-w /data/ftp/ \u4f46\u662f\u53c8\u6ca1\u6709\u5199\u7684\u6743\u9650\u4e86\u3002","title":"3.1.5.\u91cd\u542f\u670d\u52a1"},{"location":"linux/service/#316","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 listen = YES anonymous_enable = NO local_enable = YES write_enable = YES dirmessage_enable = YES use_localtime = YES xferlog_enable = YES connect_from_port_20 = YES xferlog_file = /var/log/vsftpd.log secure_chroot_dir = /var/run/vsftpd/empty pam_service_name = vsftpd rsa_cert_file = /etc/ssl/certs/ssl-cert-snakeoil.pem rsa_private_key_file = /etc/ssl/private/ssl-cert-snakeoil.key guest_enable = YES guest_username = ftpadmin virtual_use_local_privs = YES \u8fd9\u6837\u865a\u62df\u7528\u6237\u8bfb\u5199\u5220\u6743\u9650\u90fd\u6709","title":"3.1.6. \u6700\u7ec8\u914d\u7f6e"},{"location":"linux/service/#32","text":"","title":"3.2. \u5b9e\u73b0\u865a\u62df\u7528\u6237\u4e0d\u540c\u6743\u9650"},{"location":"linux/service/#321-ftp","text":"1 2 $ sudo vim /etc/vsftpd.conf user_config_dir = /etc/vsftpd_user_conf","title":"3.2.1 \u4fee\u6539FTP\u4e3b\u914d\u7f6e\u6587\u4ef6"},{"location":"linux/service/#322-1","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 $ sudo mkdir /data/ftp/jdyyy $ sudo mkdir /etc/vsftpd_user_conf $ sudo vim /etc/vsftpd_user_conf/jdyyy # \u53ea\u6709\u4e0a\u4f20\u6743\u9650\uff0c\u6ca1\u6709\u4e0b\u8f7d\u6743\u9650 write_enable = YES virtual_use_local_privs = NO anon_upload_enable = YES anon_world_readable_only = YES anon_mkdir_write_enable = YES anon_other_write_enable = NO $ sudo vim /etc/vsftpd_user_conf/yuanzhi # \u53ea\u6709\u4e0b\u8f7d\u6743\u9650 write_enable = NO virtual_use_local_privs = NO anon_upload_enable = NO anon_world_readable_only = NO anon_mkdir_write_enable = NO anon_other_write_enable = NO # \u6ce8\u610fftp\u6587\u4ef6\u5939\u7684\u6743\u9650 ubuntu@node1:/$ ll /data/ total 12 drwxr-xr-x 3 root root 4096 Jan 25 16 :17 ./ drwxr-xr-x 23 root root 4096 Jan 25 16 :17 ../ drwxr-xr-x 4 ftpadmin ftpadmin 4096 Jan 25 17 :50 ftp/ # \u4e3b\u914d\u7f6e\u6587\u4ef6 ubuntu@node1:/$ grep -Ev \"(^#|^ $ )\" /etc/vsftpd.conf listen = YES anonymous_enable = NO local_enable = YES dirmessage_enable = YES use_localtime = YES xferlog_enable = YES connect_from_port_20 = YES xferlog_file = /var/log/vsftpd.log chroot_local_user = YES secure_chroot_dir = /var/run/vsftpd/empty pam_service_name = vsftpd rsa_cert_file = /etc/ssl/certs/ssl-cert-snakeoil.pem rsa_private_key_file = /etc/ssl/private/ssl-cert-snakeoil.key guest_enable = YES guest_username = ftpadmin virtual_use_local_privs = YES allow_writeable_chroot = YES user_config_dir = /etc/vsftpd_user_conf","title":"3.2.2 \u7ed9\u6bcf\u4e2a\u865a\u62df\u7528\u6237\u521b\u5efa\u4e00\u4e2a\u72ec\u7acb\u7684\u6743\u9650\u914d\u7f6e\u6587\u4ef6-\u7248\u672c1"},{"location":"linux/service/#323-2","text":"\u6743\u9650 upload download admin \u4e0b\u8f7d - + + \u4e0a\u4f20 + - + \u521b\u5efa\u76ee\u5f55 + - + \u5220\u9664 - - + 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 root@node1:~# ls -ld /data/ftp/* drwxr-xr-x 2 ftpadmin ftpadmin 4096 Jan 28 18 :50 /data/ftp/download drwxr-xr-x 3 ftpadmin ftpadmin 4096 Jan 28 18 :54 /data/ftp/upload vsftpd\u670d\u52a1\u7684\u4e3b\u914d\u7f6e\u6587\u4ef6 ubuntu@node1:~$ grep -Ev \"(^#|^ $ )\" /etc/vsftpd.conf listen = YES anonymous_enable = NO local_enable = YES dirmessage_enable = YES use_localtime = YES xferlog_enable = YES connect_from_port_20 = YES xferlog_file = /var/log/vsftpd.log chroot_local_user = YES secure_chroot_dir = /var/run/vsftpd/empty pam_service_name = vsftpd rsa_cert_file = /etc/ssl/certs/ssl-cert-snakeoil.pem rsa_private_key_file = /etc/ssl/private/ssl-cert-snakeoil.key guest_enable = YES guest_username = ftpadmin allow_writeable_chroot = YES user_config_dir = /etc/vsftpd_user_conf \u521b\u5efa\u4e0d\u540c\u7528\u6237\u5404\u81ea\u7684\u7684\u914d\u7f6e\u6587\u4ef6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 root@node1:~# ls /etc/vsftpd_user_conf/ admin download upload ubuntu@node1:~$ cat /etc/vsftpd_user_conf/download write_enable = NO anon_upload_enable = NO anon_world_readable_only = NO anon_mkdir_write_enable = NO anon_other_write_enable = NO local_root = /data/ftp/download ubuntu@node1:~$ cat /etc/vsftpd_user_conf/upload write_enable = YES anon_upload_enable = YES anon_world_readable_only = YES anon_mkdir_write_enable = YES anon_other_write_enable = NO local_root = /data/ftp/upload ubuntu@node1:~$ cat /etc/vsftpd_user_conf/admin write_enable = YES anon_upload_enable = YES anon_world_readable_only = NO anon_mkdir_write_enable = YES anon_other_write_enable = YES \u751f\u6210\u7528\u6237\u6570\u636e\u5e93\u6587\u4ef6 1 2 3 4 5 6 7 ubuntu@node1:~$ cat /etc/vsftpd/ftpusers.txt upload 123456 download 123456 admin admin ubuntu@node1:~$ sudo db_load -T -t hash -f /etc/vsftpd/ftpusers.txt /etc/vsftpd/ftpusers.db \u91cd\u542f\u670d\u52a1","title":"3.2.3 \u7ed9\u6bcf\u4e2a\u865a\u62df\u7528\u6237\u521b\u5efa\u4e00\u4e2a\u72ec\u7acb\u7684\u6743\u9650\u914d\u7f6e\u6587\u4ef6-\u7248\u672c2"},{"location":"linux/service/#ssh","text":"","title":"\u4e8c\u3001SSH"},{"location":"linux/service/#1_3","text":"","title":"1. \u6267\u884c\u547d\u4ee4"},{"location":"linux/service/#1_4","text":"1 2 3 ubuntu@node1:~$ ssh ubuntu@172.16.10.102 hostname ubuntu@172.16.10.102 ' s password: node2","title":"1. \u6267\u884c\u5355\u6761\u547d\u4ee4"},{"location":"linux/service/#2_3","text":"1 2 3 ssh ubuntu@172.16.10.102 grep root /etc/passwd ubuntu@172.16.10.102 ' s password: root:x:0:0:root:/root:/bin/bash","title":"2. \u6267\u884c\u5e26\u53c2\u6570\u7684\u547d\u4ee4"},{"location":"linux/service/#3_3","text":"\u6267\u884c\u591a\u6761\u547d\u4ee4\u65f6\uff0c\u53ea\u8981\u7528\u5206\u53f7\u628a\u547d\u4ee4\u5206\u5272\u5f00\u5c31\u53ef\u4ee5\u4e86\uff0c\u4f46\u662f\u8981\u628a\u591a\u6761\u547d\u4ee4\u7528\u5f15\u53f7\u5f15\u8d77\u6765\uff0c\u5426\u5219\u5206\u53f7\u540e\u9762\u7684\u547d\u4ee4\u5c31\u662f\u5728\u672c\u5730\u6267\u884c\u7684\u3002 1 2 3 4 # \u4e0d\u52a0\u5206\u53f7 ubuntu@node1:~$ ssh ubuntu@172.16.10.102 cat /etc/hostname ; hostname -I node2 172 .16.10.101 1 2 3 4 # \u52a0\u5206\u53f7 ubuntu@node1:~$ ssh ubuntu@172.16.10.102 \"cat /etc/hostname;hostname -I\" node2 172 .16.10.102","title":"3. \u6267\u884c\u591a\u6761\u547d\u4ee4"},{"location":"linux/service/#4_1","text":"\u7528\u5355\u5f15\u53f7\u6216\u53cc\u5f15\u53f7\u5f00\u5934\uff0c\u7136\u540e\u5199\u4e0a\u51e0\u884c\u547d\u4ee4\uff0c\u6700\u540e\u518d\u7528\u76f8\u540c\u7684\u5f15\u53f7\u6765\u7ed3\u675f\u3002 1 2 3 4 5 6 7 8 9 ubuntu@node1:~$ ssh ubuntu@172.16.10.102 \" > hostname -I > uname -r > uptime > \" ubuntu@172.16.10.102 ' s password: 172 .16.10.102 4 .4.0-31-generic 15 :39:13 up 6 :28, 2 users, load average: 0 .00, 0 .00, 0 .00","title":"4. \u6267\u884c\u591a\u884c\u547d\u4ee4"},{"location":"linux/service/#5","text":"1 2 3 ubuntu@node1:~$ ssh ubuntu@172.16.10.102 \"sudo apt install nginx\" ubuntu@172.16.10.102 ' s password: sudo: no tty present and no askpass program specified \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5f53\u4f60\u6267\u884c\u4e0d\u5e26\u547d\u4ee4\u7684 ssh \u8fde\u63a5\u65f6\uff0c\u4f1a\u4e3a\u4f60\u5206\u914d\u4e00\u4e2a TTY\u3002\u56e0\u4e3a\u6b64\u65f6\u4f60\u5e94\u8be5\u662f\u60f3\u8981\u8fd0\u884c\u4e00\u4e2a shell \u4f1a\u8bdd\u3002 \u4f46\u662f\u5f53\u4f60\u901a\u8fc7 ssh \u5728\u8fdc\u7a0b\u4e3b\u673a\u4e0a\u6267\u884c\u547d\u4ee4\u65f6\uff0c\u5e76\u4e0d\u4f1a\u4e3a\u8fd9\u4e2a\u8fdc\u7a0b\u4f1a\u8bdd\u5206\u914d TTY\u3002\u6b64\u65f6 ssh \u4f1a\u7acb\u5373\u9000\u51fa\u8fdc\u7a0b\u4e3b\u673a\uff0c\u6240\u4ee5\u9700\u8981\u4ea4\u4e92\u7684\u547d\u4ee4\u4e5f\u968f\u4e4b\u7ed3\u675f\u3002 \u8fd9\u65f6\u9700\u8981\u7528 -t \u53c2\u6570\u663e\u5f0f\u7684\u544a\u8bc9 ssh\uff0c\u6211\u4eec\u9700\u8981\u4e00\u4e2a TTY \u8fdc\u7a0b shell \u8fdb\u884c\u4ea4\u4e92\uff0c\u6dfb\u52a0 -t \u53c2\u6570\u540e\uff0cssh \u4f1a\u4fdd\u6301\u767b\u5f55\u72b6\u6001\uff0c\u76f4\u5230\u4f60\u9000\u51fa\u9700\u8981\u4ea4\u4e92\u7684\u547d\u4ee4\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 ubuntu@node1:~$ ssh -t ubuntu@172.16.10.102 \"sudo apt install nginx\" ubuntu@172.16.10.102 ' s password: [ sudo ] password for ubuntu: Reading package lists... Done Building dependency tree Reading state information... Done The following extra packages will be installed: fontconfig-config fonts-dejavu-core libfontconfig1 libgd3 libjbig0 libjpeg-turbo8 libjpeg8 libtiff5 libvpx1 libxpm4 libxslt1.1 nginx-common nginx-core Suggested packages: libgd-tools fcgiwrap nginx-doc The following NEW packages will be installed: fontconfig-config fonts-dejavu-core libfontconfig1 libgd3 libjbig0 libjpeg-turbo8 libjpeg8 libtiff5 libvpx1 libxpm4 libxslt1.1 nginx nginx-common nginx-core 0 upgraded, 14 newly installed, 0 to remove and 8 not upgraded. Need to get 2 ,681 kB of archives. After this operation, 9 ,073 kB of additional disk space will be used. Do you want to continue ? [ Y/n ] n Abort. Connection to 172 .16.10.102 closed.","title":"5. \u6267\u884c\u4ea4\u4e92\u547d\u4ee4"},{"location":"linux/service/#6","text":"1 2 3 4 ubuntu@node1:~$ name = \"nginx\" ubuntu@node1:~$ ssh ubuntu@172.16.10.102 \"echo \" Install $name \"\" ubuntu@172.16.10.102 ' s password: Install nginx","title":"6. \u4f7f\u7528\u672c\u5730\u53d8\u91cf"},{"location":"linux/service/#2-ssh","text":"","title":"2. ssh\u6267\u884c\u811a\u672c"},{"location":"linux/service/#1_5","text":"1 2 3 4 #\u8fdc\u7a0b\u811a\u672c\u6587\u4ef6\u5185\u5bb9 ubuntu@node2:~$ cat hello.sh #!/bin/bash echo \"hello world\" 1 2 3 ubuntu@node1:~$ ssh ubuntu@172.16.10.102 \" $HOME /hello.sh\" ubuntu@172.16.10.102 ' s password: hello world","title":"1. \u6267\u884c\u8fdc\u7a0b\u4e0d\u5e26\u53c2\u6570\u7684\u811a\u672c"},{"location":"linux/service/#2_4","text":"1 2 3 4 5 6 # \u8fdc\u7a0b\u811a\u672c\u6587\u4ef6\u5185\u5bb9 ubuntu@node2:~$ cat script.sh #!/bin/bash name = $1 echo \"install $name \" echo \"installed succeed!\" 1 2 3 4 5 ubuntu@node1:~$ name = nginx ubuntu@node1:~$ ssh ubuntu@172.16.10.102 \" $HOME /script.sh $name \" ubuntu@172.16.10.102 ' s password: install nginx installed succeed!","title":"2. \u6267\u884c\u8fdc\u7a0b\u9700\u8981\u53c2\u6570\u7684\u811a\u672c"},{"location":"linux/service/#3_4","text":"1 2 3 4 5 6 7 8 9 10 11 ubuntu@node1:~$ cat hello.sh #!/bin/bash hostname touch hello.txt ls ubuntu@node1:~$ ssh ubuntu@172.16.10.102 < hello.sh Pseudo-terminal will not be allocated because stdin is not a terminal. ubuntu@172.16.10.102 ' s password: node2 hello.txt","title":"3. \u6267\u884c\u672c\u5730\u4e0d\u5e26\u53c2\u6570\u7684\u811a\u672c"},{"location":"linux/service/#4_2","text":"1 2 3 4 5 6 7 8 9 10 11 # \u811a\u672c\u5185\u5bb9\uff0c\u9700\u8981\u4f20\u5165\u4e00\u4e2a\u53c2\u6570 ubuntu@node1:~$ cat script.sh #!/bin/bash name = $1 echo \"install $name \" echo \"installed succeed!\" # \u9700\u8981\u52a0\u4e0abash -s ubuntu@node1:~$ ssh ubuntu@172.16.10.102 \"bash -s\" < script.sh nginx ubuntu@172.16.10.102 ' s password: install nginx installed succeed!","title":"4. \u6267\u884c\u672c\u5730\u9700\u8981\u53c2\u6570\u7684\u811a\u672c\u6587\u4ef6"},{"location":"linux/vim/","text":"VIM \u00b6 Vim\u662f\u4ece vi \u53d1\u5c55\u51fa\u6765\u7684\u4e00\u4e2a\u6587\u672c\u7f16\u8f91\u5668 \u4e00\u3001VIM\u6a21\u5f0f \u00b6 6\u79cd\u57fa\u672c\u6a21\u5f0f \u666e\u901a\u6a21\u5f0f\uff08Normal\uff09 \u63d2\u5165\u6a21\u5f0f\uff08INSERT\uff09 \u53ef\u89c6\u6a21\u5f0f\uff08VISUAL\uff09 \u9009\u62e9\u6a21\u5f0f\uff08SELECT\uff09 \u547d\u4ee4\u884c\u6a21\u5f0f\uff08Command line\uff09 Ex\u6a21\u5f0f \u4e8c\u3001\u6a21\u5f0f\u5207\u6362 \u00b6 1. \u666e\u901a\u6a21\u5f0f\u5207\u6362\u5230\u63d2\u5165\u6a21\u5f0f \u00b6 \u6309\u952e \u8bf4\u660e \u52a9\u8bb0 i \u5728\u5f53\u524d\u5149\u6807\u5904\u8fdb\u884c\u7f16\u8f91 insert I \u5728\u884c\u9996\u63d2\u5165 Insert a \u5728\u5149\u6807\u540e\u63d2\u5165\u7f16\u8f91 append A \u5728\u884c\u672b\u63d2\u5165 Append o \u5728\u5f53\u524d\u884c\u540e\u63d2\u5165\u4e00\u4e2a\u65b0\u884c open O \u5728\u5f53\u524d\u884c\u524d\u63d2\u5165\u4e00\u4e2a\u65b0\u884c Open 2.\u666e\u901a\u6a21\u5f0f\u5207\u6362\u5230\u547d\u4ee4\u884c\u6a21\u5f0f \u00b6 \u666e\u901a\u6a21\u5f0f\u4e0b\u6309\u4e0b : 3.\u666e\u901a\u6a21\u5f0f\u5207\u6362\u5230\u53ef\u89c6\u6a21\u5f0f \u00b6 \u666e\u901a\u6a21\u5f0f\u4e0b\u8f93\u5165 \u547d\u4ee4 \u8bf4\u660e v \u8fdb\u5165\u5b57\u7b26\u9009\u62e9\u6a21\u5f0f\uff0c\u518d\u6b21\u6309\u4e0b\u540e\u53d6\u6d88\u9009\u53d6 V \u8fdb\u5165\u884c\u9009\u62e9\u6a21\u5f0f\uff0c\u518d\u6b21\u6309\u4e0b\u540e\u53d6\u6d88\u9009\u53d6 Ctrl + v \u8fdb\u5165\u533a\u57df\u9009\u62e9\u6a21\u5f0f\uff0c\u518d\u6b21\u6309\u4e0b\u540e\u53d6\u6d88\u9009\u53d6 4.\u5207\u6362\u5230\u666e\u901a\u6a21\u5f0f \u00b6 \u547d\u4ee4 \u8bf4\u660e [ESC] \u5207\u6362\u5230\u666e\u901a\u6a21\u5f0f Ctrl + c \u5207\u6362\u5230\u666e\u901a\u6a21\u5f0f Ctrl + [ \u5207\u6362\u5230\u666e\u901a\u6a21\u5f0f \u4e09\u3001\u9000\u51fa \u00b6 1. \u4f7f\u7528\u547d\u4ee4\u884c\u6a21\u5f0f\u9000\u51fa \u00b6 \u547d\u4ee4 \u8bf4\u660e :q \u9000\u51fa :q! \u5f3a\u5236\u9000\u51fa :wq \u4fdd\u5b58\u9000\u51fa :wq! \u5f3a\u5236\u4fdd\u5b58\u9000\u51fa :x \u4fdd\u5b58\u5e76\u9000\u51fa :w <\u6587\u4ef6\u8def\u5f84> \u53e6\u5b58\u4e3a :saveas <\u6587\u4ef6\u8def\u5f84> \u53e6\u5b58\u4e3a 2. \u666e\u901a\u6a21\u5f0f\u4e0b\u9000\u51fa \u00b6 \u547d\u4ee4 \u8bf4\u660e ZZ \u4fdd\u5b58\u5e76\u9000\u51fa ZQ \u4e0d\u4fdd\u5b58\u9000\u51fa \u4e09\u3001\u6e38\u6807\u79fb\u52a8 \u00b6 1. \u5728\u666e\u901a\u6a21\u5f0f\u4e0b\u79fb\u52a8 \u00b6 1. \u666e\u901a\u79fb\u52a8 \u00b6 \u6309\u952e \u8bf4\u660e h \u5149\u6807\u5de6\u79fb j \u5149\u6807\u4e0b\u79fb k \u5149\u6807\u4e0a\u79fb l \u5149\u6807\u53f3\u79fb {n}h \u5149\u6807\u5de6\u79fbn \u4e2a\u4f4d\u7f6e\uff0cn(umber) \u6307\u6570\u5b57 {n}j \u5149\u6807\u4e0b\u79fbn \u4e2a\u4f4d\u7f6e\uff0cn(umber) \u6307\u6570\u5b57 {n}k \u5149\u6807\u4e0a\u79fbn \u4e2a\u4f4d\u7f6e\uff0cn(umber) \u6307\u6570\u5b57 {n}l \u5149\u6807\u53f3\u79fbn \u4e2a\u4f4d\u7f6e\uff0cn(umber) \u6307\u6570\u5b57 2. \u5149\u6807\u8df3\u8f6c \u00b6 1. \u884c\u95f4\u8df3\u8f6c \u00b6 \u547d\u4ee4 \u8bf4\u660e {n}G \u79fb\u52a8\u5230\u7b2cn\u884c gg \u79fb\u52a8\u5230\u7b2c\u4e00\u884c G \u79fb\u52a8\u5230\u6700\u540e\u4e00\u884c Ctrl + o: \u5feb\u901f\u56de\u5230\u4e0a\u4e00\u6b21(\u8df3\u8f6c\u524d)\u5149\u6807\u6240\u5728\u4f4d\u7f6e 2. \u884c\u5185\u8df3\u8f6c \u00b6 \u547d\u4ee4 \u8bf4\u660e \u52a9\u8bb0 w \u5230\u4e0b\u4e00\u4e2a\u5355\u8bcd\u7684\u5f00\u5934 word e \u5230\u5f53\u524d\u5355\u8bcd\u7684\u7ed3\u5c3e end b \u5230\u524d\u4e00\u4e2a\u5355\u8bcd\u7684\u5f00\u5934 back-word ge \u5230\u524d\u4e00\u4e2a\u5355\u8bcd\u7684\u7ed3\u5c3e 0 \u5230\u884c\u9996 ^ \u8df3\u5230\u884c\u9996\u5f00\u59cb\u7684\u7b2c\u4e00\u4e2a\u975e\u7a7a\u767d\u5b57\u7b26 $ \u5230\u884c\u5c3e f<\u5b57\u6bcd> \u5411\u540e\u641c\u7d22<\u5b57\u6bcd>\u5e76\u8df3\u8f6c\u5230\u7b2c\u4e00\u4e2a\u5339\u914d\u7684\u4f4d\u7f6e(\u975e\u5e38\u5b9e\u7528) F<\u5b57\u6bcd> \u5411\u524d\u641c\u7d22<\u5b57\u6bcd>\u5e76\u8df3\u8f6c\u5230\u7b2c\u4e00\u4e2a\u5339\u914d\u7684\u4f4d\u7f6e t<\u5b57\u6bcd \u5411\u540e\u641c\u7d22<\u5b57\u6bcd>\u5e76\u8df3\u8f6c\u5230\u7b2c\u4e00\u4e2a\u5339\u914d\u4f4d\u7f6e\u4e4b\u524d\u7684\u4e00\u4e2a\u5b57\u6bcd(\u4e0d\u5e38\u7528) T<\u5b57\u6bcd> \u5411\u524d\u641c\u7d22<\u5b57\u6bcd>\u5e76\u8df3\u8f6c\u5230\u7b2c\u4e00\u4e2a\u5339\u914d\u4f4d\u7f6e\u4e4b\u540e\u7684\u4e00\u4e2a\u5b57\u6bcd(\u4e0d\u5e38\u7528) 3.\u6309\u53e5\u5b50\u6216\u6bb5\u843d\u79fb\u52a8 \u00b6 \u547d\u4ee4 \u8bf4\u660e ) \u5411\u524d\u79fb\u52a8\u4e00\u6761\u53e5\u5b50 } \u5411\u524d\u79fb\u52a8\u4e00\u4e2a\u6bb5\u843d 3. \u5728\u5c4f\u5e55\u95f4\u79fb\u52a8 \u00b6 \u547d\u4ee4 \u8bf4\u660e H \u5411\u4e0a\u79fb\u52a8\u4e00\u5c4f M \u79fb\u52a8\u5230\u5c4f\u5e55\u4e2d\u95f4 L \u79fb\u52a8\u5230\u5c4f\u5e55\u5e95\u7aef Ctrl + u \u5411\u4e0a\u79fb\u52a8\u534a\u5c4f Ctrl + d \u5411\u4e0b\u79fb\u52a8\u534a\u5c4f Ctrl + f \u4e0b\u4e00\u9875 Ctrl + b \u4e0a\u4e00\u9875 Ctrl + e \u5411\u4e0b\u6eda\u52a8\u4e00\u884c Ctrl + y \u5411\u4e0a\u6eda\u52a8\u4e00\u884c 2.\u5728\u63d2\u5165\u6a21\u5f0f\u4e0b\u79fb\u52a8 \u00b6 Alt + hjkl \u8fdb\u5165\u666e\u901a\u6a21\u5f0f\u79fb\u52a8 \u4f7f\u7528\u952e\u76d8\u4e0a\u7684\u65b9\u5411\u952e\u79fb\u52a8\uff08\u6548\u7387\u4f4e\uff0c\u4e0d\u63a8\u8350\uff09 \u56db\u3001\u5220\u9664\u6587\u672c \u00b6 1. \u5728\u666e\u901a\u6a21\u5f0f\u4e0b\u5220\u9664 \u00b6 \u6309\u952e \u8bf4\u660e x \u5220\u9664\u6e38\u6807\u6240\u5728\u7684\u5b57\u7b26 X \u5220\u9664\u6e38\u6807\u6240\u5728\u524d\u4e00\u4e2a\u5b57\u7b26 dd \u5220\u9664\u6574\u884c delete {n}dd \u5220\u9664n\u884c d{n}w \u5220\u9664n\u4e2a\u5355\u8bcd d$ \u6216 D \u5220\u9664\u81f3\u884c\u5c3e d^ \u5220\u9664\u81f3\u884c\u9996 dG \u5220\u9664\u5230\u6587\u6863\u7ed3\u5c3e\u5904 d1G \u5220\u81f3\u6587\u6863\u9996\u90e8 2.\u5728\u63d2\u5165\u6a21\u5f0f\u4e0b\u5220\u9664 \u00b6 \u6309\u952e \u8bf4\u660e Backspace \u5220\u9664\u5149\u6807\u524d\u4e00\u4e2a\u5b57\u7b26 Delete \u5220\u9664\u5149\u6807\u540e\u4e00\u4e2a\u5b57\u7b26 \u4e94\u3001\u590d\u5236(yank\uff09 \u00b6 \u547d\u4ee4 \u8bf4\u660e y \u590d\u5236\u5f53\u524d\u9009\u62e9\u533a\u57df yy \u6216 Y \u590d\u5236\u6e38\u6807\u6240\u5728\u7684\u6574\u884c y^ \u6216 y0 \u590d\u5236\u81f3\u884c\u9996\uff0c\u4e0d\u542b\u5149\u6807\u6240\u5728\u5904 y$ \u590d\u5236\u81f3\u884c\u5c3e\uff0c\u542b\u5149\u6807\u6240\u5728\u5904\u5b57\u7b26\u3002 yw \u590d\u5236\u4e00\u4e2a\u5355\u8bcd y2w \u590d\u5236\u4e24\u4e2a\u5355\u8bcd yG \u590d\u5236\u81f3\u6587\u672c\u672b y1G \u590d\u5236\u81f3\u6587\u672c\u5f00\u5934\u3002 \u516d\u3001\u7c98\u8d34 \u00b6 \u547d\u4ee4 \u8bf4\u660e \u52a9\u8bb0 p \u7c98\u8d34\u81f3\u5149\u6807\u540e\uff08\u4e0b\uff09 paste P \u7c98\u8d34\u81f3\u5149\u6807\u524d\uff08\u4e0a\uff09 paste \u4e03\u3001\u66ff\u6362 \u00b6 \u5728\u666e\u901a\u6a21\u5f0f\u4e0b\u4f7f\u8f93\u5165 \u547d\u4ee4 \u8bf4\u660e \u52a9\u8bb0 r<\u5f85\u66ff\u6362\u5b57\u6bcd> \u5c06\u6e38\u6807\u6240\u5728\u5b57\u6bcd\u66ff\u6362\u4e3a\u6307\u5b9a\u5b57\u6bcd R \u8fde\u7eed\u66ff\u6362\uff0c\u76f4\u5230\u6309\u4e0b Esc cc \u66ff\u6362\u6574\u884c\uff0c\u5373\u5220\u9664\u6e38\u6807\u6240\u5728\u884c\uff0c\u5e76\u8fdb\u5165\u63d2\u5165\u6a21\u5f0f change cw \u66ff\u6362\u4e00\u4e2a\u5355\u8bcd\uff0c\u5373\u5220\u9664\u4e00\u4e2a\u5355\u8bcd\uff0c\u5e76\u8fdb\u5165\u63d2\u5165\u6a21\u5f0f C \u66ff\u6362\u6e38\u6807\u4ee5\u540e\u81f3\u884c\u672b ~ \u53cd\u8f6c\u6e38\u6807\u6240\u5728\u5b57\u6bcd\u5927\u5c0f\u5199 \u516b\u3001\u64a4\u9500 \u00b6 \u547d\u4ee4 \u8bf4\u660e u{n} \u64a4\u9500\u4e00\u6b21\u6216n\u6b21\u64cd\u4f5c U \u64a4\u9500\u5f53\u524d\u884c\u7684\u6240\u6709\u4fee\u6539 Ctrl + r redo\uff0c\u5373\u64a4\u9500undo\u7684\u64cd\u4f5c \u4e5d\u3001\u8c03\u6574\u6587\u672c\u4f4d\u7f6e \u00b6 \u547d\u4ee4\u884c\u6a21\u5f0f\u4e0b\u8f93\u5165 \u547d\u4ee4 \u8bf4\u660e :ce (center)\u4f7f\u672c\u884c\u5185\u5bb9\u5c45\u4e2d :ri (right)\u547d\u4ee4\u4f7f\u672c\u884c\u6587\u672c\u9760\u53f3 :le (left)\u547d\u4ee4\u4f7f\u672c\u884c\u5185\u5bb9\u9760\u5de6 \u5341\u3001\u67e5\u627e \u00b6 1. \u5feb\u901f\u67e5\u627e \u00b6 \u666e\u901a\u6a21\u5f0f\u4e0b\u8f93\u5165 \u547d\u4ee4 \u8bf4\u660e ?<\u67e5\u627e\u7684\u5b57\u7b26\u4e32> \u5411\u4e0a\u67e5\u627e /<\u67e5\u627e\u7684\u5b57\u7b26\u4e32> \u5411\u4e0b\u67e5\u627e 2. \u9ad8\u7ea7\u67e5\u627e \u00b6 \u666e\u901a\u6a21\u5f0f\u4e0b\u8f93\u5165 \u547d\u4ee4 \u8bf4\u660e * \u5411\u540e\uff08\u4e0b\uff09\u5bfb\u627e\u6e38\u6807\u6240\u5728\u5904\u7684\u5355\u8bcd # \u5411\u524d\uff08\u4e0a\uff09\u5bfb\u627e\u6e38\u6807\u6240\u5728\u5904\u7684\u5355\u8bcd g* \u540c* \uff0c\u4f46\u90e8\u5206\u7b26\u5408\u8be5\u5355\u8bcd\u5373\u53ef g# \u540c#\uff0c\u4f46\u90e8\u5206\u7b26\u5408\u8be5\u5355\u8bcd\u5373\u53ef n: \u5411\u4e0b\u7ee7\u7eed\u67e5\u627e N:\u5411\u4e0a\u7ee7\u7eed\u67e5\u627e \u5341\u4e00\u3001\u591a\u6587\u4ef6\u7f16\u8f91 \u00b6 1. \u4f7f\u7528vim\u7f16\u8f91\u591a\u4e2a\u6587\u4ef6 \u00b6 1 2 # \u4f7f\u7528vim\u7f16\u8f91\u591a\u4e2a\u6587\u4ef6 $ vim a.txt b.txt \u547d\u4ee4\u884c\u6a21\u5f0f \u4e0b\u8f93\u5165 \u547d\u4ee4 \u8bf4\u660e :n \u5207\u6362\u5230\u4e0b\u4e00\u4e2a\u6587\u4ef6\uff0c\u53ef\u4ee5\u52a0 ! \u5f3a\u5236\u5207\u6362\uff08\u653e\u5f03\u5f53\u524d\u4fee\u6539\uff09 :N \u5207\u6362\u5230\u4e0a\u4e00\u4e2a\u6587\u4ef6\uff0c\u53ef\u4ee5\u52a0 ! \u5f3a\u5236\u5207\u6362\uff08\u653e\u5f03\u5f53\u524d\u4fee\u6539\uff09 2. \u8fdb\u5165vim\u540e\u6253\u5f00\u65b0\u6587\u4ef6 \u00b6 \u547d\u4ee4\u884c\u6a21\u5f0f\u4e0b\u8f93\u5165 \u547d\u4ee4 \u8bf4\u660e :e <\u6587\u4ef6\u540d> \u6253\u5f00\u65b0\u6587\u4ef6 :e# \u56de\u5230\u524d\u4e00\u4e2a\u6587\u4ef6 :ls \u5217\u51fa\u4ee5\u524d\u7f16\u8f91\u8fc7\u7684\u6587\u6863 :b <\u6587\u4ef6\u540d>\uff08\u6216\u8005\u7f16\u53f7\uff09 \u76f4\u63a5\u8fdb\u5165\u6587\u4ef6\u7f16\u8f91 :bd <\u6587\u4ef6\u540d>\uff08\u6216\u8005\u7f16\u53f7\uff09` \u5220\u9664\u4ee5\u524d\u7f16\u8f91\u8fc7\u7684\u5217\u8868\u4e2d\u7684\u6587\u4ef6\u9879\u76ee e! <\u6587\u4ef6\u540d> \u65b0\u6253\u5f00\u6587\u4ef6\uff0c\u653e\u5f03\u6b63\u5728\u7f16\u8f91\u7684\u6587\u4ef6 :f \u663e\u793a\u6b63\u5728\u7f16\u8f91\u7684\u6587\u4ef6\u540d :f new.txt \u6539\u53d8\u6b63\u5728\u7f16\u8f91\u7684\u6587\u4ef6\u540d\u5b57\u4e3anew.txt \u5341\u4e09\u3001\u89c6\u56fe\u64cd\u4f5c \u00b6 vim \u53ef\u4ee5\u5728\u4e00\u4e2a\u754c\u9762\u91cc\u6253\u5f00\u591a\u4e2a\u7a97\u53e3\u8fdb\u884c\u7f16\u8f91\uff0c\u8fd9\u4e9b\u7f16\u8f91\u7a97\u53e3\u79f0\u4e3a vim \u7684\u89c6\u7a97\u3002 1. \u547d\u4ee4\u884c\u6a21\u5f0f\u4e0b\u6253\u5f00\u89c6\u7a97 \u00b6 \u547d\u4ee4 \u8bf4\u660e :new \u6253\u5f00\u4e00\u4e2a\u65b0\u7684 vim \u89c6\u7a97\uff0c\u5e76\u8fdb\u5165\u89c6\u7a97\u7f16\u8f91\u4e00\u4e2a\u65b0\u6587\u4ef6 :sp <\u6587\u4ef6\u540d> \u6253\u5f00\u65b0\u7684\u6c34\u5e73\u5206\u5c4f\u89c6\u7a97\u6765\u7f16\u8f91\u6587\u4ef6 :vsp <\u6587\u4ef6\u540d> \u6253\u5f00\u65b0\u7684\u5782\u76f4\u5206\u5c4f\u89c6\u7a97\u6765\u7f16\u8f91\u6587\u4ef6 2. \u666e\u901a\u6a21\u5f0f\u4e0b\u6253\u5f00\u89c6\u7a97 \u00b6 \u547d\u4ee4 \u8bf4\u660e Ctrl+w s \u5c06\u5f53\u524d\u7a97\u53e3\u5206\u5272\u6210\u4e24\u4e2a\u6c34\u5e73\u7684\u7a97\u53e3 Ctrl+w v \u5c06\u5f53\u524d\u7a97\u53e3\u5206\u5272\u6210\u4e24\u4e2a\u5782\u76f4\u7684\u7a97\u53e3 Ctrl+w q \u5373 :q \u7ed3\u675f\u5206\u5272\u51fa\u6765\u7684\u89c6\u7a97 Ctrl+w o \u6253\u5f00\u4e00\u4e2a\u89c6\u7a97\u5e76\u4e14\u9690\u85cf\u4e4b\u524d\u7684\u6240\u6709\u89c6\u7a97 Ctrl+w j \u79fb\u81f3\u4e0b\u9762\u89c6\u7a97 Ctrl+w k \u79fb\u81f3\u4e0a\u9762\u89c6\u7a97 Ctrl+w h \u79fb\u81f3\u5de6\u8fb9\u89c6\u7a97 Ctrl+w l \u79fb\u81f3\u53f3\u8fb9\u89c6\u7a97 Ctrl+w J \u5c06\u5f53\u524d\u89c6\u7a97\u79fb\u81f3\u4e0b\u9762 Ctrl+w K \u5c06\u5f53\u524d\u89c6\u7a97\u79fb\u81f3\u4e0a\u9762 Ctrl+w H \u5c06\u5f53\u524d\u89c6\u7a97\u79fb\u81f3\u5de6\u8fb9 Ctrl+w L \u5c06\u5f53\u524d\u89c6\u7a97\u79fb\u81f3\u53f3\u8fb9 Ctrl+w - \u51cf\u5c0f\u89c6\u7a97\u7684\u9ad8\u5ea6 Ctrl+w + \u589e\u52a0\u89c6\u7a97\u7684\u9ad8\u5ea6 \u5341\u56db\u3001\u5206\u9875(tab) \u00b6 \u547d\u4ee4\u884c\u4e0b\u8f93\u5165 \u547d\u4ee4 \u8bf4\u660e :tabnew filename \u6253\u5f00\u65b0\u5206\u9875\u5e76\u7f16\u8f91\u65b0\u6587\u4ef6 :tabclose \u5173\u95ed\u5f53\u524d\u5206\u9875 :tabonly \u5173\u95ed\u5176\u4ed6\u6240\u6709\u7684\u5206\u9875\u3002 :tabn \u79fb\u52a8\u5230\u4e0a\u4e00\u4e2a\u6807\u7b7e\u9875\uff0c\u6216\u5728\u666e\u901a\u6a21\u5f0f\u4e0b\u8f93\u5165 gt :tabp \u79fb\u52a8\u5230\u4e0b\u4e00\u4e2a\u6807\u7b7e\u9875\uff0c\u6216\u5728\u666e\u901a\u6a21\u5f0f\u4e0b\u8f93\u5165 gT \u5341\u4e94\u3001\u914d\u7f6e \u00b6 1. \u81ea\u52a8\u6dfb\u52a0\u6587\u4ef6\u5934\u90e8\u6ce8\u91ca\u4fe1\u606f \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 func SetComment_c () call setline ( 1 , \"/*================================================================\" ) call append ( line ( \".\" ), \"* Copyright \u00a9 \" .strftime ( \"%Y\" ) . \" Yuanzhi Gao. All rights reserved.\" ) call append ( line ( \".\" )+ 1 , \"* \" ) call append ( line ( \".\" )+ 2 , \"* FileName \uff1a\" .expand ( \"%:t\" )) call append ( line ( \".\" )+ 3 , \"* Author \uff1aYuanzhi Gao\" ) call append ( line ( \".\" )+ 4 , \"* Mail \uff1agaopeng0214@126.com\" ) call append ( line ( \".\" )+ 5 , \"* Date \uff1a\" .strftime ( \"%Y\u5e74%m\u6708%d\u65e5\" )) call append ( line ( \".\" )+ 6 , \"*\" ) call append ( line ( \".\" )+ 7 , \"================================================================*/\" ) call append ( line ( \".\" )+ 8 , \"\" ) call append ( line ( \".\" )+ 9 , \"\" ) endfunc \" \u52a0\u5165shell,Makefile\u6ce8\u91ca func SetComment () call setline ( 3 , \"#================================================================\" ) call setline ( 4 , \"# Copyright \u00a9 \" .strftime ( \"%Y\" ) . \" Yuanzhi Gao. All rights reserved.\" ) call setline ( 5 , \"# \" ) call setline ( 6 , \"# FileName \uff1a\" .expand ( \"%:t\" )) call setline ( 7 , \"# Author \uff1aYuanzhi Gao\" ) call setline ( 8 , \"# Mail \uff1agaopeng0214@126.com\" ) call setline ( 9 , \"# Date \uff1a\" .strftime ( \"%Y\u5e74%m\u6708%d\u65e5\" )) call setline ( 10 , \"#\" ) call setline ( 11 , \"#================================================================\" ) call setline ( 12 , \"\" ) call setline ( 13 , \"\" ) endfunc \" \u5b9a\u4e49\u51fd\u6570SetTitle\uff0c\u81ea\u52a8\u63d2\u5165\u6587\u4ef6\u5934 func SetTitle () if & filetype == 'sh' call setline ( 1 , \"#!/usr/bin/env bash\" ) call setline ( 2 , \"\" ) call SetComment () elseif & filetype == 'python' call setline ( 1 , \"#!/usr/bin/env python3\" ) call setline ( 2 , \"#\" ) call SetComment () elseif & filetype == 'c' call SetComment_c () call append ( line ( \".\" )+ 10 , \"#include <stdio.h>\" ) call append ( line ( \".\" )+ 11 , \"\" ) endif endfunc \" \u81ea\u52a8\u8df3\u5230\u6587\u4ef6\u672b\u5c3e autocmd BufNewFile * normal G \u6548\u679c\uff1a 1 2 3 4 5 6 7 8 9 10 11 #!/usr/bin/env python3 # #================================================================ # Copyright \u00a9 2019 Yuanzhi Gao. All rights reserved. # # FileName \uff1atesss.py # Author \uff1aYuanzhi Gao # Mail \uff1agaopeng0214@126.com # Date \uff1a2019\u5e7403\u670816\u65e5 # #================================================================ 2. \u7f29\u8fdb\u914d\u7f6e \u00b6 1 2 3 4 5 6 \" \u7f29\u8fdb\u8bbe\u7f6e set autoindent \" \u81ea\u52a8\u7f29\u8fdb set cindent \" c\u8bed\u8a00\u7f29\u8fdb\u98ce\u683c set tabstop = 4 \" tab\u952e\u5bbd\u5ea6 \" \u8bbe\u7f6e\u4f7f\u7528<< \u6216 >> \u65f6\u5de6\u53f3\u79fb\u52a8\u7684\u8ddd\u79bb\uff0c\u8bbe\u7f6e\u4e3a4\u4e2a\u7a7a\u683c set shiftwidth = 4 3. \u8865\u9f50\u62ec\u53f7\u548c\u5f15\u53f7 \u00b6 1 2 3 4 5 6 7 \" \u8865\u5168\u62ec\u53f7\uff0c\u5f15\u53f7 inoremap ( ()< ESC > i inoremap [ [] < ESC > i inoremap { {} < ESC > i inoremap < <>< ESC > i inoremap ' ' ' < ESC > i inoremap \" \" \" < ESC > i 4. \u5728\u6bcf\u884c\u7b2c80\u4e2a\u5b57\u7b26\u5904\u663e\u793a\u7ad6\u7ebf, \u989c\u8272\u662f\u6de1\u84dd\u8272 \u00b6 1 2 set colorcolumn = 80 hi ColorColumn ctermbg = lightgreen 5. \u5176\u4ed6 \u00b6 1 2 3 4 \" \u8bbe\u7f6e\u6807\u5c3a\uff08\u5149\u6807\u6240\u5728\u884c\u6709\u4e0b\u5212\u7ebf\u63d0\u793a\uff09 set cursorline \" \u53ef\u7528\u9f20\u6807 set mouse = a \u5341\u516d\u3001tmux \u00b6 1. \u4f1a\u8bdd\u7ba1\u7406 \u00b6 1. \u65b0\u5efa\u4f1a\u8bdd \u00b6 1 2 3 $ tmux new -s session-one -d # -s:\u6307\u5b9a\u56de\u8bdd\u540d\u79f0 # -d:\u4f1a\u8bdd\u5728\u540e\u53f0\u8fd0\u884c 2. \u67e5\u770b\u6240\u6709\u4f1a\u8bdd \u00b6 1 2 $ tmux ls session-one: 1 windows ( created Mon Mar 25 21 :11:28 2019 ) [ 80x23 ] 3. \u767b\u9646\u4f1a\u8bdd \u00b6 1 2 #\u767b\u9646\u4f1a\u8bdd $ tmux attach -t session-one 4. \u9000\u51fa\u4f1a\u8bdd \u00b6 Ctrl-b + d 5. \u9000\u51fa\u5e76\u5220\u9664\u4f1a\u8bdd \u00b6 Ctrl - d 6. \u5220\u9664\u4f1a\u8bdd \u00b6 1 2 # \u5220\u9664\u4f1a\u8bdd $ tmux kill-session -t session-one 7. \u91cd\u547d\u540d\u4f1a\u8bdd \u00b6 1 2 3 $ tmux rename -t session-one session-test $ tmux ls session-test: 1 windows ( created Mon Mar 25 21 :16:56 2019 ) [ 80x23 ] tmux\u7684\u5feb\u6377\u952e\u4f7f\u7528\u65b9\u5f0f\uff1a \u5148\u6309prefix\u7ec4\u5408\u952e(\u9ed8\u8ba4\u662fCtrl-b\uff0c\u53ef\u4ee5\u81ea\u5b9a\u4e49)\uff0c\u7136\u540e\u518d\u6309\u5feb\u6377\u952e 2. \u7cfb\u7edf\u64cd\u4f5c \u00b6 \u5feb\u6377\u952e \u8bf4\u660e ? \u5217\u51fa\u6240\u6709\u5feb\u6377\u952e\uff0c\u6309q\u8fd4\u56de d \u8131\u79bb\u5f53\u524d\u4f1a\u8bdd\uff0c\u6682\u65f6\u8fd4\u56deshell\u754c\u9762 D \u540c\u65f6\u5f00\u542f\u591a\u4e2a\u4f1a\u8bdd\u65f6\u9009\u62e9\u8981\u8131\u79bb\u7684\u4f1a\u8bdd s \u540c\u65f6\u5f00\u542f\u591a\u4e2a\u4f1a\u8bdd\u65f6\u5207\u6362\u4f1a\u8bdd : \u8fdb\u5165\u547d\u4ee4\u884c\u6a21\u5f0f\uff08\u6267\u884ctmux\u7684\u547d\u4ee4\uff0c\u4e0d\u662f\u7cfb\u7edf\u547d\u4ee4\uff09 [ \u8fdb\u5165\u590d\u5236\u6a21\u5f0f 3. \u7a97\u53e3\u64cd\u4f5c \u00b6 \u5feb\u6377\u952e \u8bf4\u660e c \u521b\u5efa\u65b0\u7a97\u53e3 & \u5173\u95ed\u5f53\u524d\u7a97\u53e3 0-9 \u8df3\u8f6c\u5230\u6307\u5b9a\u7a97\u53e3 p \u5207\u6362\u5230\u4e0a\u4e00\u4e2a\u7a97\u53e3 n \u5207\u6362\u5230\u4e0b\u4e00\u4e2a\u7a97\u53e3 l \u524d\u540e\u4e24\u4e2a\u7a97\u53e3\u76f4\u63a5\u5207\u6362 w \u901a\u8fc7\u7a97\u53e3\u5217\u8868\u5207\u6362\u7a97\u53e3 , \u91cd\u547d\u540d\u5f53\u524d\u7a97\u53e3 . \u4fee\u6539\u5f53\u524d\u7a97\u53e3\u7f16\u53f7 f \u5728\u6240\u6709\u7a97\u53e3\u4e2d\u67e5\u627e\u6307\u5b9a\u6587\u672c 4. \u9762\u677f\u64cd\u4f5c \u00b6 \u5feb\u6377\u952e \u8bf4\u660e \" \u4e0a\u4e0b\u5207\u5206\u9762\u677f % \u5de6\u53f3\u5207\u5206\u9762\u677f x \u5173\u95ed\u5f53\u524d\u9762\u677f ! \u5728\u65b0\u7a97\u53e3\u4e2d\u6253\u5f00\u5f53\u524d\u9762\u677f space \u5faa\u73af\u5207\u6362\u9762\u677f\u5e03\u5c40 q \u663e\u793a\u9762\u677f\u7f16\u53f7 o \u5207\u6362\u5230\u4e0b\u4e00\u4e2a\u9762\u677f { \u5411\u524d\u7f6e\u6362\u5f53\u524d\u9762\u677f } \u5411\u540e\u7f6e\u6362\u5f53\u524d\u9762\u677f ctrl+o \u987a\u65f6\u9488\u65cb\u8f6c\u5f53\u524d\u9762\u677f alt+o \u9006\u65f6\u9488\u65cb\u8f6c\u5f53\u524d\u9762\u677f alt+\u65b9\u5411\u952e \u4ee55\u4e2a\u5355\u4f4d\u79fb\u52a8\u8fb9\u7f18\u4ee5\u8c03\u6574\u9762\u677f\u5927\u5c0f ctrl+\u65b9\u5411\u952e \u4ee51\u4e2a\u5355\u4f4d\u79fb\u52a8\u8fb9\u7f18\u4ee5\u8c03\u6574\u9762\u677f\u5927\u5c0f \u65b9\u5411\u952e \u79fb\u52a8\u5149\u6807\u4ee5\u9009\u62e9\u9762\u677f z \u6700\u5927\u5316/\u6062\u590d\u5f53\u524d\u9762\u677f 5. \u4fee\u6539\u914d\u7f6e\u6587\u4ef6 \u00b6 \u914d\u7f6e\u6587\u4ef6\u9ed8\u8ba4\u7684\u67e5\u627e\u987a\u5e8f\u4e3a/etc/tmux.conf,~/.tmux.conf\u3002\u8fd9\u4e24\u4e2a\u6587\u4ef6\u6ca1\u6709\u7684\u8bdd\u9700\u8981\u81ea\u5df1\u521b\u5efa 1 2 3 4 5 6 7 8 9 10 11 12 13 14 # \u8bbe\u7f6e\u64cd\u4f5c\u6a21\u5f0f\u4e3avi set-window-option -g mode-keys vi # \u8bbe\u7f6e\u5b57\u7b26\u96c6 set-window-option -g utf8 on # \u91cd\u65b0\u7ed1\u5b9a\u5feb\u6377\u952e\u8bbe\u7f6e\u4e3aCtrl-a set-option -g prefix C-a unbind-key C-b bind-key C-a send-prefix # \u7a97\u53e3\u5e8f\u53f7\u4ece1\u5f00\u59cb\u8ba1\u6570 set -g base-index 1 # \u4fee\u6539\u53f3\u4e0b\u89d2\u65f6\u95f4\u663e\u793a\u683c\u5f0f set -g status-right '[%Y-%m-%d %H:%M]' # \u8bbe\u7f6e\u91cd\u65b0\u52a0\u8f7d\u914d\u7f6e\u6587\u4ef6\u7684\u5feb\u6377\u952e\u4e3aprefix + r bind r source-file ~/.tmux.conf \\; display-message \"Config reloaded..\" 6. \u5728tmux\u4e2d\u7c98\u8d34\u590d\u5236 \u00b6 \u4fee\u6539\u914d\u7f6e\u6587\u4ef6.tmux.conf 1 2 set-window-option -g mode-keys vi set-window-option -g utf8 on \u91cd\u65b0\u767b\u9646shell(\u91cd\u8981) Ctrl-b + [ \u8fdb\u5165\u590d\u5236\u6a21\u5f0f space \u9009\u62e9 Enter\u7ed3\u675f\u9009\u62e9 Ctrl-b + ] \u7c98\u8d34 \u9644\uff1a \u00b6","title":"VIM"},{"location":"linux/vim/#vim","text":"Vim\u662f\u4ece vi \u53d1\u5c55\u51fa\u6765\u7684\u4e00\u4e2a\u6587\u672c\u7f16\u8f91\u5668","title":"VIM"},{"location":"linux/vim/#vim_1","text":"6\u79cd\u57fa\u672c\u6a21\u5f0f \u666e\u901a\u6a21\u5f0f\uff08Normal\uff09 \u63d2\u5165\u6a21\u5f0f\uff08INSERT\uff09 \u53ef\u89c6\u6a21\u5f0f\uff08VISUAL\uff09 \u9009\u62e9\u6a21\u5f0f\uff08SELECT\uff09 \u547d\u4ee4\u884c\u6a21\u5f0f\uff08Command line\uff09 Ex\u6a21\u5f0f","title":"\u4e00\u3001VIM\u6a21\u5f0f"},{"location":"linux/vim/#_1","text":"","title":"\u4e8c\u3001\u6a21\u5f0f\u5207\u6362"},{"location":"linux/vim/#1","text":"\u6309\u952e \u8bf4\u660e \u52a9\u8bb0 i \u5728\u5f53\u524d\u5149\u6807\u5904\u8fdb\u884c\u7f16\u8f91 insert I \u5728\u884c\u9996\u63d2\u5165 Insert a \u5728\u5149\u6807\u540e\u63d2\u5165\u7f16\u8f91 append A \u5728\u884c\u672b\u63d2\u5165 Append o \u5728\u5f53\u524d\u884c\u540e\u63d2\u5165\u4e00\u4e2a\u65b0\u884c open O \u5728\u5f53\u524d\u884c\u524d\u63d2\u5165\u4e00\u4e2a\u65b0\u884c Open","title":"1. \u666e\u901a\u6a21\u5f0f\u5207\u6362\u5230\u63d2\u5165\u6a21\u5f0f"},{"location":"linux/vim/#2","text":"\u666e\u901a\u6a21\u5f0f\u4e0b\u6309\u4e0b :","title":"2.\u666e\u901a\u6a21\u5f0f\u5207\u6362\u5230\u547d\u4ee4\u884c\u6a21\u5f0f"},{"location":"linux/vim/#3","text":"\u666e\u901a\u6a21\u5f0f\u4e0b\u8f93\u5165 \u547d\u4ee4 \u8bf4\u660e v \u8fdb\u5165\u5b57\u7b26\u9009\u62e9\u6a21\u5f0f\uff0c\u518d\u6b21\u6309\u4e0b\u540e\u53d6\u6d88\u9009\u53d6 V \u8fdb\u5165\u884c\u9009\u62e9\u6a21\u5f0f\uff0c\u518d\u6b21\u6309\u4e0b\u540e\u53d6\u6d88\u9009\u53d6 Ctrl + v \u8fdb\u5165\u533a\u57df\u9009\u62e9\u6a21\u5f0f\uff0c\u518d\u6b21\u6309\u4e0b\u540e\u53d6\u6d88\u9009\u53d6","title":"3.\u666e\u901a\u6a21\u5f0f\u5207\u6362\u5230\u53ef\u89c6\u6a21\u5f0f"},{"location":"linux/vim/#4","text":"\u547d\u4ee4 \u8bf4\u660e [ESC] \u5207\u6362\u5230\u666e\u901a\u6a21\u5f0f Ctrl + c \u5207\u6362\u5230\u666e\u901a\u6a21\u5f0f Ctrl + [ \u5207\u6362\u5230\u666e\u901a\u6a21\u5f0f","title":"4.\u5207\u6362\u5230\u666e\u901a\u6a21\u5f0f"},{"location":"linux/vim/#_2","text":"","title":"\u4e09\u3001\u9000\u51fa"},{"location":"linux/vim/#1_1","text":"\u547d\u4ee4 \u8bf4\u660e :q \u9000\u51fa :q! \u5f3a\u5236\u9000\u51fa :wq \u4fdd\u5b58\u9000\u51fa :wq! \u5f3a\u5236\u4fdd\u5b58\u9000\u51fa :x \u4fdd\u5b58\u5e76\u9000\u51fa :w <\u6587\u4ef6\u8def\u5f84> \u53e6\u5b58\u4e3a :saveas <\u6587\u4ef6\u8def\u5f84> \u53e6\u5b58\u4e3a","title":"1. \u4f7f\u7528\u547d\u4ee4\u884c\u6a21\u5f0f\u9000\u51fa"},{"location":"linux/vim/#2_1","text":"\u547d\u4ee4 \u8bf4\u660e ZZ \u4fdd\u5b58\u5e76\u9000\u51fa ZQ \u4e0d\u4fdd\u5b58\u9000\u51fa","title":"2. \u666e\u901a\u6a21\u5f0f\u4e0b\u9000\u51fa"},{"location":"linux/vim/#_3","text":"","title":"\u4e09\u3001\u6e38\u6807\u79fb\u52a8"},{"location":"linux/vim/#1_2","text":"","title":"1. \u5728\u666e\u901a\u6a21\u5f0f\u4e0b\u79fb\u52a8"},{"location":"linux/vim/#1_3","text":"\u6309\u952e \u8bf4\u660e h \u5149\u6807\u5de6\u79fb j \u5149\u6807\u4e0b\u79fb k \u5149\u6807\u4e0a\u79fb l \u5149\u6807\u53f3\u79fb {n}h \u5149\u6807\u5de6\u79fbn \u4e2a\u4f4d\u7f6e\uff0cn(umber) \u6307\u6570\u5b57 {n}j \u5149\u6807\u4e0b\u79fbn \u4e2a\u4f4d\u7f6e\uff0cn(umber) \u6307\u6570\u5b57 {n}k \u5149\u6807\u4e0a\u79fbn \u4e2a\u4f4d\u7f6e\uff0cn(umber) \u6307\u6570\u5b57 {n}l \u5149\u6807\u53f3\u79fbn \u4e2a\u4f4d\u7f6e\uff0cn(umber) \u6307\u6570\u5b57","title":"1. \u666e\u901a\u79fb\u52a8"},{"location":"linux/vim/#2_2","text":"","title":"2. \u5149\u6807\u8df3\u8f6c"},{"location":"linux/vim/#1_4","text":"\u547d\u4ee4 \u8bf4\u660e {n}G \u79fb\u52a8\u5230\u7b2cn\u884c gg \u79fb\u52a8\u5230\u7b2c\u4e00\u884c G \u79fb\u52a8\u5230\u6700\u540e\u4e00\u884c Ctrl + o: \u5feb\u901f\u56de\u5230\u4e0a\u4e00\u6b21(\u8df3\u8f6c\u524d)\u5149\u6807\u6240\u5728\u4f4d\u7f6e","title":"1. \u884c\u95f4\u8df3\u8f6c"},{"location":"linux/vim/#2_3","text":"\u547d\u4ee4 \u8bf4\u660e \u52a9\u8bb0 w \u5230\u4e0b\u4e00\u4e2a\u5355\u8bcd\u7684\u5f00\u5934 word e \u5230\u5f53\u524d\u5355\u8bcd\u7684\u7ed3\u5c3e end b \u5230\u524d\u4e00\u4e2a\u5355\u8bcd\u7684\u5f00\u5934 back-word ge \u5230\u524d\u4e00\u4e2a\u5355\u8bcd\u7684\u7ed3\u5c3e 0 \u5230\u884c\u9996 ^ \u8df3\u5230\u884c\u9996\u5f00\u59cb\u7684\u7b2c\u4e00\u4e2a\u975e\u7a7a\u767d\u5b57\u7b26 $ \u5230\u884c\u5c3e f<\u5b57\u6bcd> \u5411\u540e\u641c\u7d22<\u5b57\u6bcd>\u5e76\u8df3\u8f6c\u5230\u7b2c\u4e00\u4e2a\u5339\u914d\u7684\u4f4d\u7f6e(\u975e\u5e38\u5b9e\u7528) F<\u5b57\u6bcd> \u5411\u524d\u641c\u7d22<\u5b57\u6bcd>\u5e76\u8df3\u8f6c\u5230\u7b2c\u4e00\u4e2a\u5339\u914d\u7684\u4f4d\u7f6e t<\u5b57\u6bcd \u5411\u540e\u641c\u7d22<\u5b57\u6bcd>\u5e76\u8df3\u8f6c\u5230\u7b2c\u4e00\u4e2a\u5339\u914d\u4f4d\u7f6e\u4e4b\u524d\u7684\u4e00\u4e2a\u5b57\u6bcd(\u4e0d\u5e38\u7528) T<\u5b57\u6bcd> \u5411\u524d\u641c\u7d22<\u5b57\u6bcd>\u5e76\u8df3\u8f6c\u5230\u7b2c\u4e00\u4e2a\u5339\u914d\u4f4d\u7f6e\u4e4b\u540e\u7684\u4e00\u4e2a\u5b57\u6bcd(\u4e0d\u5e38\u7528)","title":"2. \u884c\u5185\u8df3\u8f6c"},{"location":"linux/vim/#3_1","text":"\u547d\u4ee4 \u8bf4\u660e ) \u5411\u524d\u79fb\u52a8\u4e00\u6761\u53e5\u5b50 } \u5411\u524d\u79fb\u52a8\u4e00\u4e2a\u6bb5\u843d","title":"3.\u6309\u53e5\u5b50\u6216\u6bb5\u843d\u79fb\u52a8"},{"location":"linux/vim/#3_2","text":"\u547d\u4ee4 \u8bf4\u660e H \u5411\u4e0a\u79fb\u52a8\u4e00\u5c4f M \u79fb\u52a8\u5230\u5c4f\u5e55\u4e2d\u95f4 L \u79fb\u52a8\u5230\u5c4f\u5e55\u5e95\u7aef Ctrl + u \u5411\u4e0a\u79fb\u52a8\u534a\u5c4f Ctrl + d \u5411\u4e0b\u79fb\u52a8\u534a\u5c4f Ctrl + f \u4e0b\u4e00\u9875 Ctrl + b \u4e0a\u4e00\u9875 Ctrl + e \u5411\u4e0b\u6eda\u52a8\u4e00\u884c Ctrl + y \u5411\u4e0a\u6eda\u52a8\u4e00\u884c","title":"3. \u5728\u5c4f\u5e55\u95f4\u79fb\u52a8"},{"location":"linux/vim/#2_4","text":"Alt + hjkl \u8fdb\u5165\u666e\u901a\u6a21\u5f0f\u79fb\u52a8 \u4f7f\u7528\u952e\u76d8\u4e0a\u7684\u65b9\u5411\u952e\u79fb\u52a8\uff08\u6548\u7387\u4f4e\uff0c\u4e0d\u63a8\u8350\uff09","title":"2.\u5728\u63d2\u5165\u6a21\u5f0f\u4e0b\u79fb\u52a8"},{"location":"linux/vim/#_4","text":"","title":"\u56db\u3001\u5220\u9664\u6587\u672c"},{"location":"linux/vim/#1_5","text":"\u6309\u952e \u8bf4\u660e x \u5220\u9664\u6e38\u6807\u6240\u5728\u7684\u5b57\u7b26 X \u5220\u9664\u6e38\u6807\u6240\u5728\u524d\u4e00\u4e2a\u5b57\u7b26 dd \u5220\u9664\u6574\u884c delete {n}dd \u5220\u9664n\u884c d{n}w \u5220\u9664n\u4e2a\u5355\u8bcd d$ \u6216 D \u5220\u9664\u81f3\u884c\u5c3e d^ \u5220\u9664\u81f3\u884c\u9996 dG \u5220\u9664\u5230\u6587\u6863\u7ed3\u5c3e\u5904 d1G \u5220\u81f3\u6587\u6863\u9996\u90e8","title":"1. \u5728\u666e\u901a\u6a21\u5f0f\u4e0b\u5220\u9664"},{"location":"linux/vim/#2_5","text":"\u6309\u952e \u8bf4\u660e Backspace \u5220\u9664\u5149\u6807\u524d\u4e00\u4e2a\u5b57\u7b26 Delete \u5220\u9664\u5149\u6807\u540e\u4e00\u4e2a\u5b57\u7b26","title":"2.\u5728\u63d2\u5165\u6a21\u5f0f\u4e0b\u5220\u9664"},{"location":"linux/vim/#yank","text":"\u547d\u4ee4 \u8bf4\u660e y \u590d\u5236\u5f53\u524d\u9009\u62e9\u533a\u57df yy \u6216 Y \u590d\u5236\u6e38\u6807\u6240\u5728\u7684\u6574\u884c y^ \u6216 y0 \u590d\u5236\u81f3\u884c\u9996\uff0c\u4e0d\u542b\u5149\u6807\u6240\u5728\u5904 y$ \u590d\u5236\u81f3\u884c\u5c3e\uff0c\u542b\u5149\u6807\u6240\u5728\u5904\u5b57\u7b26\u3002 yw \u590d\u5236\u4e00\u4e2a\u5355\u8bcd y2w \u590d\u5236\u4e24\u4e2a\u5355\u8bcd yG \u590d\u5236\u81f3\u6587\u672c\u672b y1G \u590d\u5236\u81f3\u6587\u672c\u5f00\u5934\u3002","title":"\u4e94\u3001\u590d\u5236(yank\uff09"},{"location":"linux/vim/#_5","text":"\u547d\u4ee4 \u8bf4\u660e \u52a9\u8bb0 p \u7c98\u8d34\u81f3\u5149\u6807\u540e\uff08\u4e0b\uff09 paste P \u7c98\u8d34\u81f3\u5149\u6807\u524d\uff08\u4e0a\uff09 paste","title":"\u516d\u3001\u7c98\u8d34"},{"location":"linux/vim/#_6","text":"\u5728\u666e\u901a\u6a21\u5f0f\u4e0b\u4f7f\u8f93\u5165 \u547d\u4ee4 \u8bf4\u660e \u52a9\u8bb0 r<\u5f85\u66ff\u6362\u5b57\u6bcd> \u5c06\u6e38\u6807\u6240\u5728\u5b57\u6bcd\u66ff\u6362\u4e3a\u6307\u5b9a\u5b57\u6bcd R \u8fde\u7eed\u66ff\u6362\uff0c\u76f4\u5230\u6309\u4e0b Esc cc \u66ff\u6362\u6574\u884c\uff0c\u5373\u5220\u9664\u6e38\u6807\u6240\u5728\u884c\uff0c\u5e76\u8fdb\u5165\u63d2\u5165\u6a21\u5f0f change cw \u66ff\u6362\u4e00\u4e2a\u5355\u8bcd\uff0c\u5373\u5220\u9664\u4e00\u4e2a\u5355\u8bcd\uff0c\u5e76\u8fdb\u5165\u63d2\u5165\u6a21\u5f0f C \u66ff\u6362\u6e38\u6807\u4ee5\u540e\u81f3\u884c\u672b ~ \u53cd\u8f6c\u6e38\u6807\u6240\u5728\u5b57\u6bcd\u5927\u5c0f\u5199","title":"\u4e03\u3001\u66ff\u6362"},{"location":"linux/vim/#_7","text":"\u547d\u4ee4 \u8bf4\u660e u{n} \u64a4\u9500\u4e00\u6b21\u6216n\u6b21\u64cd\u4f5c U \u64a4\u9500\u5f53\u524d\u884c\u7684\u6240\u6709\u4fee\u6539 Ctrl + r redo\uff0c\u5373\u64a4\u9500undo\u7684\u64cd\u4f5c","title":"\u516b\u3001\u64a4\u9500"},{"location":"linux/vim/#_8","text":"\u547d\u4ee4\u884c\u6a21\u5f0f\u4e0b\u8f93\u5165 \u547d\u4ee4 \u8bf4\u660e :ce (center)\u4f7f\u672c\u884c\u5185\u5bb9\u5c45\u4e2d :ri (right)\u547d\u4ee4\u4f7f\u672c\u884c\u6587\u672c\u9760\u53f3 :le (left)\u547d\u4ee4\u4f7f\u672c\u884c\u5185\u5bb9\u9760\u5de6","title":"\u4e5d\u3001\u8c03\u6574\u6587\u672c\u4f4d\u7f6e"},{"location":"linux/vim/#_9","text":"","title":"\u5341\u3001\u67e5\u627e"},{"location":"linux/vim/#1_6","text":"\u666e\u901a\u6a21\u5f0f\u4e0b\u8f93\u5165 \u547d\u4ee4 \u8bf4\u660e ?<\u67e5\u627e\u7684\u5b57\u7b26\u4e32> \u5411\u4e0a\u67e5\u627e /<\u67e5\u627e\u7684\u5b57\u7b26\u4e32> \u5411\u4e0b\u67e5\u627e","title":"1. \u5feb\u901f\u67e5\u627e"},{"location":"linux/vim/#2_6","text":"\u666e\u901a\u6a21\u5f0f\u4e0b\u8f93\u5165 \u547d\u4ee4 \u8bf4\u660e * \u5411\u540e\uff08\u4e0b\uff09\u5bfb\u627e\u6e38\u6807\u6240\u5728\u5904\u7684\u5355\u8bcd # \u5411\u524d\uff08\u4e0a\uff09\u5bfb\u627e\u6e38\u6807\u6240\u5728\u5904\u7684\u5355\u8bcd g* \u540c* \uff0c\u4f46\u90e8\u5206\u7b26\u5408\u8be5\u5355\u8bcd\u5373\u53ef g# \u540c#\uff0c\u4f46\u90e8\u5206\u7b26\u5408\u8be5\u5355\u8bcd\u5373\u53ef n: \u5411\u4e0b\u7ee7\u7eed\u67e5\u627e N:\u5411\u4e0a\u7ee7\u7eed\u67e5\u627e","title":"2. \u9ad8\u7ea7\u67e5\u627e"},{"location":"linux/vim/#_10","text":"","title":"\u5341\u4e00\u3001\u591a\u6587\u4ef6\u7f16\u8f91"},{"location":"linux/vim/#1-vim","text":"1 2 # \u4f7f\u7528vim\u7f16\u8f91\u591a\u4e2a\u6587\u4ef6 $ vim a.txt b.txt \u547d\u4ee4\u884c\u6a21\u5f0f \u4e0b\u8f93\u5165 \u547d\u4ee4 \u8bf4\u660e :n \u5207\u6362\u5230\u4e0b\u4e00\u4e2a\u6587\u4ef6\uff0c\u53ef\u4ee5\u52a0 ! \u5f3a\u5236\u5207\u6362\uff08\u653e\u5f03\u5f53\u524d\u4fee\u6539\uff09 :N \u5207\u6362\u5230\u4e0a\u4e00\u4e2a\u6587\u4ef6\uff0c\u53ef\u4ee5\u52a0 ! \u5f3a\u5236\u5207\u6362\uff08\u653e\u5f03\u5f53\u524d\u4fee\u6539\uff09","title":"1. \u4f7f\u7528vim\u7f16\u8f91\u591a\u4e2a\u6587\u4ef6"},{"location":"linux/vim/#2-vim","text":"\u547d\u4ee4\u884c\u6a21\u5f0f\u4e0b\u8f93\u5165 \u547d\u4ee4 \u8bf4\u660e :e <\u6587\u4ef6\u540d> \u6253\u5f00\u65b0\u6587\u4ef6 :e# \u56de\u5230\u524d\u4e00\u4e2a\u6587\u4ef6 :ls \u5217\u51fa\u4ee5\u524d\u7f16\u8f91\u8fc7\u7684\u6587\u6863 :b <\u6587\u4ef6\u540d>\uff08\u6216\u8005\u7f16\u53f7\uff09 \u76f4\u63a5\u8fdb\u5165\u6587\u4ef6\u7f16\u8f91 :bd <\u6587\u4ef6\u540d>\uff08\u6216\u8005\u7f16\u53f7\uff09` \u5220\u9664\u4ee5\u524d\u7f16\u8f91\u8fc7\u7684\u5217\u8868\u4e2d\u7684\u6587\u4ef6\u9879\u76ee e! <\u6587\u4ef6\u540d> \u65b0\u6253\u5f00\u6587\u4ef6\uff0c\u653e\u5f03\u6b63\u5728\u7f16\u8f91\u7684\u6587\u4ef6 :f \u663e\u793a\u6b63\u5728\u7f16\u8f91\u7684\u6587\u4ef6\u540d :f new.txt \u6539\u53d8\u6b63\u5728\u7f16\u8f91\u7684\u6587\u4ef6\u540d\u5b57\u4e3anew.txt","title":"2. \u8fdb\u5165vim\u540e\u6253\u5f00\u65b0\u6587\u4ef6"},{"location":"linux/vim/#_11","text":"vim \u53ef\u4ee5\u5728\u4e00\u4e2a\u754c\u9762\u91cc\u6253\u5f00\u591a\u4e2a\u7a97\u53e3\u8fdb\u884c\u7f16\u8f91\uff0c\u8fd9\u4e9b\u7f16\u8f91\u7a97\u53e3\u79f0\u4e3a vim \u7684\u89c6\u7a97\u3002","title":"\u5341\u4e09\u3001\u89c6\u56fe\u64cd\u4f5c"},{"location":"linux/vim/#1_7","text":"\u547d\u4ee4 \u8bf4\u660e :new \u6253\u5f00\u4e00\u4e2a\u65b0\u7684 vim \u89c6\u7a97\uff0c\u5e76\u8fdb\u5165\u89c6\u7a97\u7f16\u8f91\u4e00\u4e2a\u65b0\u6587\u4ef6 :sp <\u6587\u4ef6\u540d> \u6253\u5f00\u65b0\u7684\u6c34\u5e73\u5206\u5c4f\u89c6\u7a97\u6765\u7f16\u8f91\u6587\u4ef6 :vsp <\u6587\u4ef6\u540d> \u6253\u5f00\u65b0\u7684\u5782\u76f4\u5206\u5c4f\u89c6\u7a97\u6765\u7f16\u8f91\u6587\u4ef6","title":"1. \u547d\u4ee4\u884c\u6a21\u5f0f\u4e0b\u6253\u5f00\u89c6\u7a97"},{"location":"linux/vim/#2_7","text":"\u547d\u4ee4 \u8bf4\u660e Ctrl+w s \u5c06\u5f53\u524d\u7a97\u53e3\u5206\u5272\u6210\u4e24\u4e2a\u6c34\u5e73\u7684\u7a97\u53e3 Ctrl+w v \u5c06\u5f53\u524d\u7a97\u53e3\u5206\u5272\u6210\u4e24\u4e2a\u5782\u76f4\u7684\u7a97\u53e3 Ctrl+w q \u5373 :q \u7ed3\u675f\u5206\u5272\u51fa\u6765\u7684\u89c6\u7a97 Ctrl+w o \u6253\u5f00\u4e00\u4e2a\u89c6\u7a97\u5e76\u4e14\u9690\u85cf\u4e4b\u524d\u7684\u6240\u6709\u89c6\u7a97 Ctrl+w j \u79fb\u81f3\u4e0b\u9762\u89c6\u7a97 Ctrl+w k \u79fb\u81f3\u4e0a\u9762\u89c6\u7a97 Ctrl+w h \u79fb\u81f3\u5de6\u8fb9\u89c6\u7a97 Ctrl+w l \u79fb\u81f3\u53f3\u8fb9\u89c6\u7a97 Ctrl+w J \u5c06\u5f53\u524d\u89c6\u7a97\u79fb\u81f3\u4e0b\u9762 Ctrl+w K \u5c06\u5f53\u524d\u89c6\u7a97\u79fb\u81f3\u4e0a\u9762 Ctrl+w H \u5c06\u5f53\u524d\u89c6\u7a97\u79fb\u81f3\u5de6\u8fb9 Ctrl+w L \u5c06\u5f53\u524d\u89c6\u7a97\u79fb\u81f3\u53f3\u8fb9 Ctrl+w - \u51cf\u5c0f\u89c6\u7a97\u7684\u9ad8\u5ea6 Ctrl+w + \u589e\u52a0\u89c6\u7a97\u7684\u9ad8\u5ea6","title":"2. \u666e\u901a\u6a21\u5f0f\u4e0b\u6253\u5f00\u89c6\u7a97"},{"location":"linux/vim/#tab","text":"\u547d\u4ee4\u884c\u4e0b\u8f93\u5165 \u547d\u4ee4 \u8bf4\u660e :tabnew filename \u6253\u5f00\u65b0\u5206\u9875\u5e76\u7f16\u8f91\u65b0\u6587\u4ef6 :tabclose \u5173\u95ed\u5f53\u524d\u5206\u9875 :tabonly \u5173\u95ed\u5176\u4ed6\u6240\u6709\u7684\u5206\u9875\u3002 :tabn \u79fb\u52a8\u5230\u4e0a\u4e00\u4e2a\u6807\u7b7e\u9875\uff0c\u6216\u5728\u666e\u901a\u6a21\u5f0f\u4e0b\u8f93\u5165 gt :tabp \u79fb\u52a8\u5230\u4e0b\u4e00\u4e2a\u6807\u7b7e\u9875\uff0c\u6216\u5728\u666e\u901a\u6a21\u5f0f\u4e0b\u8f93\u5165 gT","title":"\u5341\u56db\u3001\u5206\u9875(tab)"},{"location":"linux/vim/#_12","text":"","title":"\u5341\u4e94\u3001\u914d\u7f6e"},{"location":"linux/vim/#1_8","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 func SetComment_c () call setline ( 1 , \"/*================================================================\" ) call append ( line ( \".\" ), \"* Copyright \u00a9 \" .strftime ( \"%Y\" ) . \" Yuanzhi Gao. All rights reserved.\" ) call append ( line ( \".\" )+ 1 , \"* \" ) call append ( line ( \".\" )+ 2 , \"* FileName \uff1a\" .expand ( \"%:t\" )) call append ( line ( \".\" )+ 3 , \"* Author \uff1aYuanzhi Gao\" ) call append ( line ( \".\" )+ 4 , \"* Mail \uff1agaopeng0214@126.com\" ) call append ( line ( \".\" )+ 5 , \"* Date \uff1a\" .strftime ( \"%Y\u5e74%m\u6708%d\u65e5\" )) call append ( line ( \".\" )+ 6 , \"*\" ) call append ( line ( \".\" )+ 7 , \"================================================================*/\" ) call append ( line ( \".\" )+ 8 , \"\" ) call append ( line ( \".\" )+ 9 , \"\" ) endfunc \" \u52a0\u5165shell,Makefile\u6ce8\u91ca func SetComment () call setline ( 3 , \"#================================================================\" ) call setline ( 4 , \"# Copyright \u00a9 \" .strftime ( \"%Y\" ) . \" Yuanzhi Gao. All rights reserved.\" ) call setline ( 5 , \"# \" ) call setline ( 6 , \"# FileName \uff1a\" .expand ( \"%:t\" )) call setline ( 7 , \"# Author \uff1aYuanzhi Gao\" ) call setline ( 8 , \"# Mail \uff1agaopeng0214@126.com\" ) call setline ( 9 , \"# Date \uff1a\" .strftime ( \"%Y\u5e74%m\u6708%d\u65e5\" )) call setline ( 10 , \"#\" ) call setline ( 11 , \"#================================================================\" ) call setline ( 12 , \"\" ) call setline ( 13 , \"\" ) endfunc \" \u5b9a\u4e49\u51fd\u6570SetTitle\uff0c\u81ea\u52a8\u63d2\u5165\u6587\u4ef6\u5934 func SetTitle () if & filetype == 'sh' call setline ( 1 , \"#!/usr/bin/env bash\" ) call setline ( 2 , \"\" ) call SetComment () elseif & filetype == 'python' call setline ( 1 , \"#!/usr/bin/env python3\" ) call setline ( 2 , \"#\" ) call SetComment () elseif & filetype == 'c' call SetComment_c () call append ( line ( \".\" )+ 10 , \"#include <stdio.h>\" ) call append ( line ( \".\" )+ 11 , \"\" ) endif endfunc \" \u81ea\u52a8\u8df3\u5230\u6587\u4ef6\u672b\u5c3e autocmd BufNewFile * normal G \u6548\u679c\uff1a 1 2 3 4 5 6 7 8 9 10 11 #!/usr/bin/env python3 # #================================================================ # Copyright \u00a9 2019 Yuanzhi Gao. All rights reserved. # # FileName \uff1atesss.py # Author \uff1aYuanzhi Gao # Mail \uff1agaopeng0214@126.com # Date \uff1a2019\u5e7403\u670816\u65e5 # #================================================================","title":"1. \u81ea\u52a8\u6dfb\u52a0\u6587\u4ef6\u5934\u90e8\u6ce8\u91ca\u4fe1\u606f"},{"location":"linux/vim/#2_8","text":"1 2 3 4 5 6 \" \u7f29\u8fdb\u8bbe\u7f6e set autoindent \" \u81ea\u52a8\u7f29\u8fdb set cindent \" c\u8bed\u8a00\u7f29\u8fdb\u98ce\u683c set tabstop = 4 \" tab\u952e\u5bbd\u5ea6 \" \u8bbe\u7f6e\u4f7f\u7528<< \u6216 >> \u65f6\u5de6\u53f3\u79fb\u52a8\u7684\u8ddd\u79bb\uff0c\u8bbe\u7f6e\u4e3a4\u4e2a\u7a7a\u683c set shiftwidth = 4","title":"2. \u7f29\u8fdb\u914d\u7f6e"},{"location":"linux/vim/#3_3","text":"1 2 3 4 5 6 7 \" \u8865\u5168\u62ec\u53f7\uff0c\u5f15\u53f7 inoremap ( ()< ESC > i inoremap [ [] < ESC > i inoremap { {} < ESC > i inoremap < <>< ESC > i inoremap ' ' ' < ESC > i inoremap \" \" \" < ESC > i","title":"3. \u8865\u9f50\u62ec\u53f7\u548c\u5f15\u53f7"},{"location":"linux/vim/#4-80","text":"1 2 set colorcolumn = 80 hi ColorColumn ctermbg = lightgreen","title":"4. \u5728\u6bcf\u884c\u7b2c80\u4e2a\u5b57\u7b26\u5904\u663e\u793a\u7ad6\u7ebf, \u989c\u8272\u662f\u6de1\u84dd\u8272"},{"location":"linux/vim/#5","text":"1 2 3 4 \" \u8bbe\u7f6e\u6807\u5c3a\uff08\u5149\u6807\u6240\u5728\u884c\u6709\u4e0b\u5212\u7ebf\u63d0\u793a\uff09 set cursorline \" \u53ef\u7528\u9f20\u6807 set mouse = a","title":"5. \u5176\u4ed6"},{"location":"linux/vim/#tmux","text":"","title":"\u5341\u516d\u3001tmux"},{"location":"linux/vim/#1_9","text":"","title":"1. \u4f1a\u8bdd\u7ba1\u7406"},{"location":"linux/vim/#1_10","text":"1 2 3 $ tmux new -s session-one -d # -s:\u6307\u5b9a\u56de\u8bdd\u540d\u79f0 # -d:\u4f1a\u8bdd\u5728\u540e\u53f0\u8fd0\u884c","title":"1. \u65b0\u5efa\u4f1a\u8bdd"},{"location":"linux/vim/#2_9","text":"1 2 $ tmux ls session-one: 1 windows ( created Mon Mar 25 21 :11:28 2019 ) [ 80x23 ]","title":"2. \u67e5\u770b\u6240\u6709\u4f1a\u8bdd"},{"location":"linux/vim/#3_4","text":"1 2 #\u767b\u9646\u4f1a\u8bdd $ tmux attach -t session-one","title":"3. \u767b\u9646\u4f1a\u8bdd"},{"location":"linux/vim/#4_1","text":"Ctrl-b + d","title":"4. \u9000\u51fa\u4f1a\u8bdd"},{"location":"linux/vim/#5_1","text":"Ctrl - d","title":"5. \u9000\u51fa\u5e76\u5220\u9664\u4f1a\u8bdd"},{"location":"linux/vim/#6","text":"1 2 # \u5220\u9664\u4f1a\u8bdd $ tmux kill-session -t session-one","title":"6. \u5220\u9664\u4f1a\u8bdd"},{"location":"linux/vim/#7","text":"1 2 3 $ tmux rename -t session-one session-test $ tmux ls session-test: 1 windows ( created Mon Mar 25 21 :16:56 2019 ) [ 80x23 ] tmux\u7684\u5feb\u6377\u952e\u4f7f\u7528\u65b9\u5f0f\uff1a \u5148\u6309prefix\u7ec4\u5408\u952e(\u9ed8\u8ba4\u662fCtrl-b\uff0c\u53ef\u4ee5\u81ea\u5b9a\u4e49)\uff0c\u7136\u540e\u518d\u6309\u5feb\u6377\u952e","title":"7. \u91cd\u547d\u540d\u4f1a\u8bdd"},{"location":"linux/vim/#2_10","text":"\u5feb\u6377\u952e \u8bf4\u660e ? \u5217\u51fa\u6240\u6709\u5feb\u6377\u952e\uff0c\u6309q\u8fd4\u56de d \u8131\u79bb\u5f53\u524d\u4f1a\u8bdd\uff0c\u6682\u65f6\u8fd4\u56deshell\u754c\u9762 D \u540c\u65f6\u5f00\u542f\u591a\u4e2a\u4f1a\u8bdd\u65f6\u9009\u62e9\u8981\u8131\u79bb\u7684\u4f1a\u8bdd s \u540c\u65f6\u5f00\u542f\u591a\u4e2a\u4f1a\u8bdd\u65f6\u5207\u6362\u4f1a\u8bdd : \u8fdb\u5165\u547d\u4ee4\u884c\u6a21\u5f0f\uff08\u6267\u884ctmux\u7684\u547d\u4ee4\uff0c\u4e0d\u662f\u7cfb\u7edf\u547d\u4ee4\uff09 [ \u8fdb\u5165\u590d\u5236\u6a21\u5f0f","title":"2. \u7cfb\u7edf\u64cd\u4f5c"},{"location":"linux/vim/#3_5","text":"\u5feb\u6377\u952e \u8bf4\u660e c \u521b\u5efa\u65b0\u7a97\u53e3 & \u5173\u95ed\u5f53\u524d\u7a97\u53e3 0-9 \u8df3\u8f6c\u5230\u6307\u5b9a\u7a97\u53e3 p \u5207\u6362\u5230\u4e0a\u4e00\u4e2a\u7a97\u53e3 n \u5207\u6362\u5230\u4e0b\u4e00\u4e2a\u7a97\u53e3 l \u524d\u540e\u4e24\u4e2a\u7a97\u53e3\u76f4\u63a5\u5207\u6362 w \u901a\u8fc7\u7a97\u53e3\u5217\u8868\u5207\u6362\u7a97\u53e3 , \u91cd\u547d\u540d\u5f53\u524d\u7a97\u53e3 . \u4fee\u6539\u5f53\u524d\u7a97\u53e3\u7f16\u53f7 f \u5728\u6240\u6709\u7a97\u53e3\u4e2d\u67e5\u627e\u6307\u5b9a\u6587\u672c","title":"3. \u7a97\u53e3\u64cd\u4f5c"},{"location":"linux/vim/#4_2","text":"\u5feb\u6377\u952e \u8bf4\u660e \" \u4e0a\u4e0b\u5207\u5206\u9762\u677f % \u5de6\u53f3\u5207\u5206\u9762\u677f x \u5173\u95ed\u5f53\u524d\u9762\u677f ! \u5728\u65b0\u7a97\u53e3\u4e2d\u6253\u5f00\u5f53\u524d\u9762\u677f space \u5faa\u73af\u5207\u6362\u9762\u677f\u5e03\u5c40 q \u663e\u793a\u9762\u677f\u7f16\u53f7 o \u5207\u6362\u5230\u4e0b\u4e00\u4e2a\u9762\u677f { \u5411\u524d\u7f6e\u6362\u5f53\u524d\u9762\u677f } \u5411\u540e\u7f6e\u6362\u5f53\u524d\u9762\u677f ctrl+o \u987a\u65f6\u9488\u65cb\u8f6c\u5f53\u524d\u9762\u677f alt+o \u9006\u65f6\u9488\u65cb\u8f6c\u5f53\u524d\u9762\u677f alt+\u65b9\u5411\u952e \u4ee55\u4e2a\u5355\u4f4d\u79fb\u52a8\u8fb9\u7f18\u4ee5\u8c03\u6574\u9762\u677f\u5927\u5c0f ctrl+\u65b9\u5411\u952e \u4ee51\u4e2a\u5355\u4f4d\u79fb\u52a8\u8fb9\u7f18\u4ee5\u8c03\u6574\u9762\u677f\u5927\u5c0f \u65b9\u5411\u952e \u79fb\u52a8\u5149\u6807\u4ee5\u9009\u62e9\u9762\u677f z \u6700\u5927\u5316/\u6062\u590d\u5f53\u524d\u9762\u677f","title":"4. \u9762\u677f\u64cd\u4f5c"},{"location":"linux/vim/#5_2","text":"\u914d\u7f6e\u6587\u4ef6\u9ed8\u8ba4\u7684\u67e5\u627e\u987a\u5e8f\u4e3a/etc/tmux.conf,~/.tmux.conf\u3002\u8fd9\u4e24\u4e2a\u6587\u4ef6\u6ca1\u6709\u7684\u8bdd\u9700\u8981\u81ea\u5df1\u521b\u5efa 1 2 3 4 5 6 7 8 9 10 11 12 13 14 # \u8bbe\u7f6e\u64cd\u4f5c\u6a21\u5f0f\u4e3avi set-window-option -g mode-keys vi # \u8bbe\u7f6e\u5b57\u7b26\u96c6 set-window-option -g utf8 on # \u91cd\u65b0\u7ed1\u5b9a\u5feb\u6377\u952e\u8bbe\u7f6e\u4e3aCtrl-a set-option -g prefix C-a unbind-key C-b bind-key C-a send-prefix # \u7a97\u53e3\u5e8f\u53f7\u4ece1\u5f00\u59cb\u8ba1\u6570 set -g base-index 1 # \u4fee\u6539\u53f3\u4e0b\u89d2\u65f6\u95f4\u663e\u793a\u683c\u5f0f set -g status-right '[%Y-%m-%d %H:%M]' # \u8bbe\u7f6e\u91cd\u65b0\u52a0\u8f7d\u914d\u7f6e\u6587\u4ef6\u7684\u5feb\u6377\u952e\u4e3aprefix + r bind r source-file ~/.tmux.conf \\; display-message \"Config reloaded..\"","title":"5. \u4fee\u6539\u914d\u7f6e\u6587\u4ef6"},{"location":"linux/vim/#6-tmux","text":"\u4fee\u6539\u914d\u7f6e\u6587\u4ef6.tmux.conf 1 2 set-window-option -g mode-keys vi set-window-option -g utf8 on \u91cd\u65b0\u767b\u9646shell(\u91cd\u8981) Ctrl-b + [ \u8fdb\u5165\u590d\u5236\u6a21\u5f0f space \u9009\u62e9 Enter\u7ed3\u675f\u9009\u62e9 Ctrl-b + ] \u7c98\u8d34","title":"6. \u5728tmux\u4e2d\u7c98\u8d34\u590d\u5236"},{"location":"linux/vim/#_13","text":"","title":"\u9644\uff1a"},{"location":"linux/network/TCP/","text":"TCP\u57fa\u7840\u77e5\u8bc6\u4e0eLinux\u5185\u6838\u53c2\u6570\u8c03\u4f18 \u4e00\u3001\u6982\u5ff5 \u00b6 \u5904\u7406\u901a\u4fe1\u5dee\u9519\u7684\u65b9\u6cd5\uff1a \u4f7f\u7528\u5dee\u9519\u6821\u6b63\u7801 \u91cd\u8bd5\u91cd\u65b0\u53d1\u9001\uff0c\u5373\u81ea\u52a8\u91cd\u590d\u8bf7\u6c42\uff08AutoARQ\uff09 ACK(acknowledgment\uff0c\u786e\u8ba4\u53f7)\uff1a\u8be5\u786e\u8ba4\u53f7\u7684\u53d1\u9001\u65b9\u671f\u5f85\u63a5\u6536\u7684\u4e0b\u4e00\u4e2a\u5e8f\u5217\u53f7\uff0c\u5373\u6700\u540e\u88ab\u6210\u529f\u63a5\u6536\u7684\u6570\u636e\u5b57\u8282\u7684\u5e8f\u5217\u53f7+1 seq(sequence number\uff0c\u5e8f\u5217\u53f7)\uff1a\u6807\u8bc6\u4e86TCP\u53d1\u9001\u7aef\u5230TCP\u63a5\u6536\u7aef\u7684\u6570\u636e\u6d41\u7684\u4e00\u4e2a\u5b57\u8282\uff0c\u8be5\u5b57\u8282\u4ee3\u8868\u8005\u8be5\u5e8f\u5217\u53f7\u62a5\u6587\u6bb5\u7684\u6570\u636e\u4e2d\u7684\u7b2c\u4e00\u4e2a\u5b57\u8282 TCP\uff1a\u9762\u5411\u8fde\u63a5\u7684\uff08\u4f7f\u7528TCP\u7684\u4e24\u4e2a\u5e94\u7528\u5fc5\u987b\u5728\u4ed6\u4eec\u4ea4\u6362\u6570\u636e\u4e4b\u524d\uff0c\u901a\u8fc7\u76f8\u4e92\u8054\u7cfb\u6765\u5efa\u7acb\u4e00\u4e2aTCP\u8fde\u63a5\uff09\u3001\u53ef\u9760\u7684\u5b57\u8282\u6d41\u670d\u52a1\u3002 TCP\u8fde\u63a5\u662f\u53cc\u5411\u548c\u5bf9\u79f0\u7684\uff0c\u6570\u636e\u53ef\u4ee5\u5728\u4e24\u4e2a\u65b9\u5411\u4e0a\u5e73\u7b49\u7684\u6d41\u52a8 socket\uff08\u5957\u63a5\u5b57\uff09\uff1a\u4e00\u4e2aIP\u5730\u5740\u548c\u4e00\u4e2a\u7aef\u53e3\u7684\u7ec4\u5408 \u8fde\u63a5\u6807\u8bc6\uff1a4\u5143\u7ec4(\u5ba2\u6237\u7aefIP\u3001\u5ba2\u6237\u7aef\u7aef\u53e3\u3001\u670d\u52a1\u7aefIP\u3001\u670d\u52a1\u7aef\u7aef\u53e3) \u4e8c\u3001TCP\u8fde\u63a5\u7684\u5efa\u7acb\u4e0e\u7ec8\u6b62 \u00b6 TCP\u8fde\u63a5\u7684\u6784\u6210\uff1a\u5ba2\u6237\u7aefIP\u3001\u5ba2\u6237\u7aef\u7aef\u53e3\u3001\u670d\u52a1\u7aefIP\u3001\u670d\u52a1\u7aef\u7aef\u53e3 TCP\u8fde\u63a5\u76843\u4e2a\u9636\u6bb5\uff1a\u542f\u52a8\u3001\u6570\u636e\u4f20\u8f93\u3001\u9000\u51fa(\u5173\u95ed) ISN(Initail Sequence Number\uff0c\u521d\u59cb\u5e8f\u5217\u53f7)\uff1a\u5728\u53d1\u9001\u7528\u4e8e\u5efa\u7acb\u8fde\u63a5\u7684SYN\u4e4b\u524d\uff0c\u901a\u4fe1\u53cc\u65b9\u4f1a\u9009\u62e9\u4e00\u4e2a\u521d\u59cb\u5e8f\u5217\u53f7\uff0c\u5e8f\u5217\u53f7\u4f1a\u968f\u7740\u65f6\u95f4\u800c\u6539\u53d8\uff0c\u56e0\u6b64\u6bcf\u4e00\u4e2a\u8fde\u63a5\u62e5\u6709\u4e0d\u540c\u7684\u521d\u59cb\u5e8f\u5217\u53f7\uff0c[RFC0793]\u6307\u51fa\u521d\u59cb\u5e8f\u5217\u53f7\u662f\u4e00\u4e2a32\u4f4d\u7684\u8ba1\u6570\u5668\uff0c\u8be5\u8ba1\u6570\u5668\u7684\u503c\u6bcf4\u6beb\u79d2+1\u3002Linux\u662f\u91c7\u7528\u57fa\u4e8e\u65f6\u949f\u7684\u65b9\u6848\uff0c\u5e76\u4e14\u9488\u5bf9\u6bcf\u4e00\u4e2a\u8fde\u63a5\u4e3a\u65f6\u949f\u8bbe\u7f6e\u968f\u673a\u7684\u504f\u79fb\u91cf\uff0c\u968f\u673a\u504f\u79fb\u91cf\u662f\u5728\u8fde\u63a5\u6807\u8bc6\u7684\u57fa\u7840\u4e0a\u5229\u7528\u52a0\u5bc6\u6563\u5217\u51fd\u6570\u5f97\u5230\u7684\uff0c\u6563\u5217\u51fd\u6570\u7684\u8f93\u5165\u6bcf\u96945\u5206\u949f\u5c31\u4f1a\u66f4\u6539\u4e00\u6b21\u3002\u751f\u4ea7\u7684\u5e8f\u5217\u53f7\u968f\u7740\u65f6\u95f4\u7684\u589e\u52a0\u800c\u589e\u52a0\u3002 1. \u4e09\u6b21\u63e1\u624b \u00b6 \u5ba2\u6237\u7aef\u53d1\u9001\u4e00\u4e2aSYN\u62a5\u6587\u6bb5\uff0c\u5e76\u6307\u660e\u81ea\u5df1\u60f3\u8981\u8fde\u63a5\u7684\u7aef\u53e3\u53f7\u548c\u5ba2\u6237\u7aef\u521d\u59cb\u5e8f\u5217\u53f7(ISN(c)) \u670d\u52a1\u5668\u4e5f\u53d1\u9001\u81ea\u5df1\u7684SYN\u62a5\u6587\u6bb5\u4f5c\u4e3a\u54cd\u5e94\uff0c\u5e76\u5305\u542b\u4e86\u5b83\u7684\u521d\u59cb\u5e8f\u5217\u53f7(ISN(s))\uff0c\u6b64\u5916\uff0c\u4e3a\u4e86\u786e\u8ba4\u5ba2\u6237\u7aef\u7684SYN\uff0c\u670d\u52a1\u7aef\u5c06\u5176\u5305\u542b\u7684ISN(c)\u6570\u503c+1\u540e\u4f5c\u4e3a\u8fd4\u56de\u7684ACK\u6570\u503c \u4e3a\u4e86\u786e\u8ba4\u670d\u52a1\u5668\u7684SYN\uff0c\u5ba2\u6237\u7aef\u5c06ISN(s)\u7684\u6570\u503c+1\u540e\u4f5c\u4e3a\u8fd4\u56de\u7684ACK\u6570\u503c 2. \u6570\u636e\u4f20\u8f93 \u00b6 \u4ea4\u4e92\u6570\u636e\u6d41-\u4ee5ssh\u4e3a\u4f8b 3.\u56db\u6b21\u6325\u624b \u00b6 \u8fde\u63a5\u7684\u4e3b\u52a8\u5173\u95ed\u8005\u53d1\u9001\u4e00\u4e2aFIN\u6bb5\u6307\u660e\u63a5\u6536\u8005\u5e0c\u671b\u770b\u5230\u7684\u81ea\u5df1\u5f53\u524d\u7684\u5e8f\u5217\u53f7(K)\uff0cFIN\u8fd8\u5305\u542b\u4e86\u4e00\u4e2aACK\u6bb5\u7528\u4e8e\u786e\u8ba4\u5bf9\u65b9\u6700\u540e\u4e00\u6b21\u53d1\u6765\u7684\u6570\u636e(L) \u8fde\u63a5\u7684\u88ab\u52a8\u5173\u95ed\u8005\u5c06K\u7684\u6570\u503c+1,\u6700\u4e3a\u54cd\u5e94\u7684ACK\uff0c\u4ee5\u8868\u9762\u5b83\u5df2\u7ecf\u6210\u529f\u63a5\u6536\u5230\u4e3b\u52a8\u5173\u95ed\u8005\u53d1\u9001\u7684FIN\u3002\u6b64\u65f6\u4e0a\u5c42\u5e94\u7528\u7a0b\u5e8f\u4f1a\u88ab\u544a\u77e5\u8fde\u63a5\u7684\u53e6\u4e00\u7aef\u5df2\u7ecf\u63d0\u51fa\u4e86\u5173\u95ed\u8fde\u63a5\u989d\u8bf7\u6c42\uff0c\u7136\u540e\u5e94\u7528\u7a0b\u5e8f\u53d1\u8d77\u81ea\u5df1\u7684\u5173\u95ed\u64cd\u4f5c\u3002\u63a5\u7740\u88ab\u52a8\u5173\u95ed\u8005\u5c06\u8eab\u4efd\u8f6c\u53d8\u4e3a\u4e3b\u52a8\u5173\u95ed\u8fd9\uff0c\u5e76\u53d1\u9001\u81ea\u5df1\u7684FIN\uff0c\u8be5\u62a5\u6587\u6bb5\u7684\u5e8f\u5217\u53f7\u4e3aL \u4e3a\u4e86\u5b8c\u6210\u8fde\u63a5\u7684\u5173\u95ed\uff0c\u6700\u540e\u53d1\u9001\u7684\u62a5\u6587\u8fd8\u5e94\u5305\u542b\u4e00\u4e2aACK\u7528\u4e8e\u786e\u8ba4\u4e0a\u4e00\u4e2aFIN\u3002\u5982\u679cFIN\u4e22\u5931\u7684\uff0c\u90a3\u4e48\u53d1\u9001\u65b9\u6781\u7231\u90a3\u4e2a\u91cd\u65b0\u4f20\u8f93\u76f4\u5230\u63a5\u6536\u4e00\u4e2aACK\u786e\u8ba4\u4e3a\u6b62\u3002 \u6ce8\u610f\uff1a\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u8d1f\u8d23\u53d1\u8d77\u5173\u95ed\u8fde\u63a5\u7684\u901a\u5e38\u662f\u5ba2\u6237\u7aef\uff0c\u4f46\u662f\u5728\u4e00\u4e9b\u670d\u52a1\u5668(Web\u670d\u52a1\u5668)\u5728\u5bf9\u8bf7\u6c42\u505a\u51fa\u54cd\u5e94\u4e4b\u540e\u4e5f\u4f1a\u53d1\u8d77\u4e00\u4e2a\u5173\u95ed\u64cd\u4f5c\u3002 \u5b9e\u4f8b\uff1a 1 2 $ curl http://192.168.1.60 hello tcp\u6293\u5305\u5206\u6790 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 [ root@localhost ~ ] # tcpdump -i enp0s3 tcp port 80 -S tcpdump: verbose output suppressed, use -v or -vv for full protocol decode listening on enp0s3, link-type EN10MB ( Ethernet ) , capture size 262144 bytes # \u4e09\u6b21\u63e1\u624b\u7b2c\u4e00\u6b65\uff1a\u5ba2\u6237\u7aef\u53d1\u8d77\u8bf7\u6c42\uff0c\u5e8f\u5217\u53f7\u4e3a129238614 11 :33:44.910398 IP 192 .168.1.41.54890 > 192 .168.1.60.http: Flags [ S ] , seq 129238614 , win 29200 , options [ mss 1460 ,sackOK,TS val 2499218799 ecr 0 ,nop,wscale 7 ] , length 0 # \u4e09\u6b21\u63e1\u624b\u7b2c\u4e8c\u6b65\uff1a\u670d\u52a1\u7aef\u786e\u8ba4\uff0c\u786e\u8ba4\u53f7\u4e3a129238615\uff0c\u540c\u65f6\u53d1\u9001\u7684\u5e8f\u5217\u53f7\u4e3a2856829331 11 :33:44.910433 IP 192 .168.1.60.http > 192 .168.1.41.54890: Flags [ S. ] , seq 2856829331 , ack 129238615 , win 28960 , options [ mss 1460 ,sackOK,TS val 4721674 ecr 2499218799 ,nop,wscale 7 ] , length 0 #\u3000\u4e09\u6b21\u63e1\u624b\u7b2c\u4e09\u6b65\uff1a\u5ba2\u6237\u7aef\u786e\u8ba4\uff0c\u786e\u8ba4\u53f7\u4e3a2856829332 11 :33:44.910530 IP 192 .168.1.41.54890 > 192 .168.1.60.http: Flags [ . ] , ack 2856829332 , win 229 , options [ nop,nop,TS val 2499218799 ecr 4721674 ] , length 0 --------------------------------------\u6570\u636e\u4f20\u8f93---------------------------------------- # \u5ba2\u6237\u7aef\u53d1\u8d77\u8bf7\u6c42\uff0c\u8bf7\u6c42\u7684\u5e8f\u53f7\u4e3a129238615:129238691\uff0c\u517176\u5b57\u8282\uff0c\u4f7f\u7528\u7684\u662fHTTP\u7684GET\u65b9\u6cd5 11 :33:44.910542 IP 192 .168.1.41.54890 > 192 .168.1.60.http: Flags [ P. ] , seq 129238615 :129238691, ack 2856829332 , win 229 , options [ nop,nop,TS val 2499218799 ecr 4721674 ] , length 76 : HTTP: GET / HTTP/1.1 # \u670d\u52a1\u5668\u6536\u5230\u8bf7\u6c42\u540e\u53d1\u9001\u4e00\u4e2a\u786e\u8ba4\u5e27 11 :33:44.910559 IP 192 .168.1.60.http > 192 .168.1.41.54890: Flags [ . ] , ack 129238691 , win 227 , options [ nop,nop,TS val 4721674 ecr 2499218799 ] , length 0 # \u670d\u52a1\u5668\u5411\u5ba2\u6237\u7aef\u4f20\u8f93\u6570\u636e 11 :33:44.910695 IP 192 .168.1.60.http > 192 .168.1.41.54890: Flags [ P. ] , seq 2856829332 :2856829572, ack 129238691 , win 227 , options [ nop,nop,TS val 4721674 ecr 2499218799 ] , length 240 : HTTP: HTTP/1.1 200 OK # \u5ba2\u6237\u7aef\u6536\u5230\u6570\u636e\u540e\u5411\u670d\u52a1\u7aef\u786e\u8ba4 11 :33:44.910766 IP 192 .168.1.41.54890 > 192 .168.1.60.http: Flags [ . ] , ack 2856829572 , win 237 , options [ nop,nop,TS val 2499218799 ecr 4721674 ] , length 0 --------------------------------------\u6570\u636e\u4f20\u8f93---------------------------------------- # \u5ba2\u6237\u7aef\u53d1\u8d77\u65ad\u5f00\u8fde\u63a5\u7684\u8bf7\u6c42\uff0c\u53d1\u9001FIN\uff0c\u5e8f\u5217\u53f7\u4e3a129238691\uff0c\u786e\u8ba4\u53f7\u4e3a2856829572\uff0c\u4e3a\u6700\u540e\u4e00\u6b21\u53d1\u6765\u7684\u6570\u636e 11 :33:44.910814 IP 192 .168.1.41.54890 > 192 .168.1.60.http: Flags [ F. ] , seq 129238691 , ack 2856829572 , win 237 , options [ nop,nop,TS val 2499218799 ecr 4721674 ] , length 0 # \u670d\u52a1\u7aef\u786e\u8ba4(ACK)\u4e86\u5ba2\u6237\u7aef\u7684\u5e8f\u5217\u53f7129238691+1=129238692\uff0c\u540c\u65f6\u53d1\u9001FIN\uff0c\u540c\u65f6\u53d1\u9001\u5e8f\u5217\u53f72856829572 11 :33:44.918483 IP 192 .168.1.60.http > 192 .168.1.41.54890: Flags [ F. ] , seq 2856829572 , ack 129238692 , win 227 , options [ nop,nop,TS val 4721676 ecr 2499218799 ] , length 0 # \u5ba2\u6237\u7aef\u56de\u590d\u786e\u8ba4\uff0c\u786e\u8ba4\u53f7\u4e3a\u670d\u52a1\u7aef\u7684\u5e8f\u5217\u53f72856829572+1=2856829573 11 :33:44.918565 IP 192 .168.1.41.54890 > 192 .168.1.60.http: Flags [ . ] , ack 2856829573 , win 237 , options [ nop,nop,TS val 2499218801 ecr 4721676 ] , length 0 \u95ee\u9898\uff1a \u4e3a\u4ec0\u4e48tcpdump\u5728\u56db\u6b21\u6325\u624b\u4e2d\u53ea\u6293\u5230\u4e09\u4e2a\u6b65\u9aa4\uff1f \u8fd9\u91cc\u6d89\u53ca\u5230TCP\u7684\u5ef6\u65f6\u786e\u8ba4\uff0c\u5728\u8bb8\u591a\u60c5\u51b5\u4e0b\uff0cTCP\u5e76\u4e0d\u5bf9\u6bcf\u4e2a\u5230\u6765\u7684\u6570\u636e\u5305\u90fd\u8fd4\u56deACK\uff0c\u5229\u7528TCP\u7684\u7d2f\u8ba1ACK\u5b57\u6bb5\u5c31\u80fd\u5b9e\u73b0\u8be5\u529f\u80fd\uff0c\u7d2f\u79ef\u786e\u8ba4\u5141\u8bb8TCP\u5ef6\u65f6\u4e00\u6bb5\u65f6\u95f4\u53d1\u9001ACK\uff0c\u4ee5\u4fbf\u5c06ACK\u548c\u76f8\u540c\u65b9\u5411\u65b9\u5411\u4e0a\u9700\u8981\u4f20\u7684\u6570\u636e\u7ed3\u5408\u53d1\u9001\u3002 \u5728\u5b9e\u9a8c\u4e2d\u4f7f\u7528curl\u547d\u4ee4\u65f6\u56db\u6b21\u6325\u624b\u8fc7\u7a0b\u53ea\u80fd\u6293\u5230\u4e09\u4e2a\uff0c\u4f7f\u7528\u6d4f\u89c8\u5668\u7684\u60c5\u51b5\u4e0b\uff0c\u65ad\u5f00\u8fde\u63a5\u7531\u670d\u52a1\u5668\u7aef\u53d1\u8d77\uff0c\u6293\u5230\u56db\u6b21\u6325\u624b\u7684\u5168\u8fc7\u7a0b\uff0c\u5982\u4e0b\u6240\u793a\uff1a 1 2 3 4 5 6 7 8 # 1. \u670d\u52a1\u7aef\u53d1\u8d77\u65ad\u5f00\u8fde\u63a5\u7684\u8bf7\u6c42 12 :04:58.068808 IP 192 .168.1.60.http > 192 .168.1.41.56736: Flags [ F. ] , seq 79265592 , ack 2919233145 , win 235 , options [ nop,nop,TS val 6594833 ecr 2499670825 ] , length 0 # 2. \u5ba2\u6237\u7aef\u786e\u8ba4\u6536\u5230\u65ad\u5f00\u8fde\u63a5\u7684\u8bf7\u6c42 12 :04:58.115367 IP 192 .168.1.41.56736 > 192 .168.1.60.http: Flags [ . ] , ack 79265593 , win 237 , options [ nop,nop,TS val 2499687101 ecr 6594833 ] , length 0 # 3. \u5ba2\u6237\u7aef\u53d1\u8d77\u65ad\u5f00\u8fde\u63a5\u7684\u8bf7\u6c42 12 :04:58.123188 IP 192 .168.1.41.56736 > 192 .168.1.60.http: Flags [ F. ] , seq 2919233145 , ack 79265593 , win 237 , options [ nop,nop,TS val 2499687102 ecr 6594833 ] , length 0 # 4. \u670d\u52a1\u7aef\u786e\u8ba4\u6536\u5230\u65ad\u5f00\u8fde\u63a5\u7684\u8bf7\u6c42\uff0cTCP\u8fde\u63a5\u65ad\u5f00 12 :04:58.123239 IP 192 .168.1.60.http > 192 .168.1.41.56736: Flags [ . ] , ack 2919233146 , win 235 , options [ nop,nop,TS val 6594887 ecr 2499687102 ] , length 0 flags\u542b\u4e49\uff1a \u6807\u8bc6|\u7f29\u5199|\u63cf\u8ff0 :-:|:-:|:-- S|SYN|\u540c\u6b65\u5e8f\u53f7 F|FIN|\u53d1\u9001\u65b9\u5b8c\u6210\u6570\u636e\u4f20\u9001 R|RST|\u590d\u4f4d\u8fde\u63a5 P|PSH|\u5c3d\u53ef\u80fd\u5feb\u7684\u5c06\u6570\u636e\u53d1\u9001\u5f80\u63a5\u6536\u8fdb\u7a0b .||\u4ee5\u4e0a\u56db\u4e2a\u6807\u8bc6\u6bd4\u7279\u5747\u7f6e0 Linux\u5bf9\u4e8e\u8fde\u63a5\u7684\u5904\u7406\uff1a \u00b6 \u5f53\u4e00\u4e2a\u8bf7\u6c42\u5230\u8fbe(\u5373SYN\u62a5\u6587\u6bb5)\uff0c\u5c06\u4f1a\u68c0\u67e5\u7cfb\u7edf\u53c2\u6570net.ipv4.tcp_max_syn_backlog = 512\uff0c\u5982\u679c\u5904\u4e8eSYN_RCVD\u72b6\u6001\u7684\u8fde\u63a5\u6570\u76ee\u8d85\u8fc7\u8fd9\u4e00\u9600\u503c\uff0c\u8fdb\u5165\u7684\u8fde\u63a5\u5c06\u4f1a\u88ab\u62d2\u7edd\u3002 \u5904\u4e8e\u76d1\u542c\u72b6\u6001\u4e0b\u7684\u8282\u70b9\u90fd\u6709\u4e00\u4e2a\u56fa\u5b9a\u957f\u5ea6\u7684\u8fde\u63a5\u5217\u961f\u3002\u5982\u679c\u8fde\u63a5\u5df2\u7ecf\u88abTCP\u63a5\u53d7(\u5b8c\u6210\u4e09\u6b21\u63e1\u624b)\uff0c\u4f46\u672a\u88ab\u7a0b\u5e8f\u63a5\u53d7\uff0c\u5e94\u7528\u7a0b\u5e8f\u4f1a\u5bf9\u8fd9\u4e00\u5217\u961f\u505a\u51fa\u9650\u5236\uff0c\u901a\u5e38\u79f0\u4e3a\u672a\u5b8c\u6210\u8fde\u63a5(backlog)\u3002Linux\u9ed8\u8ba4\u503c\u4e3a\uff1anet.core.somaxconn = 128 \u51e0\u79cd\u8fde\u63a5\u72b6\u6001(man netstat)\uff1a \u72b6\u6001 \u542b\u4e49 ESTABLISHED The socket has an established connection. SYN_SENT The socket is actively attempting to establish a connection. SYN_RECV A connection request has been received from the network. FIN_WAIT1 The socket is closed, and the connection is shutting down. FIN_WAIT2 Connection is closed, and the socket is waiting for a shutdown from the remote end. TIME_WAIT The socket is waiting after close to handle packets still in the network. CLOSE The socket is not being used. CLOSE_WAIT The remote end has shut down, waiting for the socket to close. LAST_ACK The remote end has shut down, and the socket is closed. Waiting for acknowledgement. LISTEN The socket is listening for incoming connections. Such sockets are not included in the output unless you specify the --listening (-l) or --all (-a) option. CLOSING Both sockets are shut down but we still don't have all our data sent. \u66f4\u591a\u89e3\u91ca IBM \u77e5\u8bc6\u5e93tcp\u72b6\u6001 \u7ef4\u57fa\u767e\u79d1 rfc793 TIME_WAIT(2MSL,Maximum Segment Lifetime)\uff1a\u7b49\u5f85\u4e24\u500d\u4e0e\u6700\u5927\u6bb5\u5b58\u8d27\u5176\u7684\u65f6\u95f4\uff0c\u53c8\u79f0\u52a0\u500d\u7b49\u5f85\u3002\u5728Linux\u7cfb\u7edf\u4e2dnet.ipv4.tcp_fin_timeout\u7684\u6570\u503c\u8bb0\u5f55\u4e862MSL\u72b6\u6001\u9700\u8981\u7b49\u5f85\u7684\u8d85\u65f6\u65f6\u95f4\uff08net.ipv4.tcp_fin_timeout = 60\uff09\u3002\u5728\u53d1\u9001\u6700\u540e\u4e00\u4e2aACK\u4e4b\u524d\u5fc5\u987b\u7b49\u5f8560\u79d2\uff0c\u5728\u6b64\u671f\u95f4Server\u7aef\u4f1a\u91cd\u4f20\u5b83\u7684FIN(\u6d88\u8017\u4e00\u4e2a\u5e8f\u5217\u53f7)\u4e4b\u540e\u6536\u5230\u6700\u7ec8\u7684ACK\u3002 TCP\uff1a\u653b\u51fb \u00b6 SYN\u6cdb\u6d2a\uff1aTCP\u62d2\u7edd\u670d\u52a1\u653b\u51fb\u3002\u653b\u51fb\u8005\u7528\u4e00\u4e2a\u6216\u591a\u4e2a\u5ba2\u6237\u7aef\u4f2a\u9020\u968f\u673a\u6e90IP\u5730\u5740\uff0c\u4ea7\u751f\u4e00\u7cfb\u5217TCP\u8fde\u63a5\u5c1d\u8bd5(SYN\u62a5\u6587\u6bb5)\u5e76\u53d1\u9001\u7ed9\u670d\u52a1\u5668\uff0c\u670d\u52a1\u5668\u4e3a\u6bcf\u4e00\u6761\u8fde\u63a5\u5206\u914d\u4e00\u5b9a\u6570\u91cf\u7684\u8fde\u63a5\u8d44\u6e90\uff0c\u7531\u4e8e\u8fde\u63a5\u5c1a\u672a\u5b8c\u5168\u5efa\u7acb\uff0c\u670d\u52a1\u5668\u4e3a\u4e86\u7ef4\u62a4\u5927\u91cf\u7684\u534a\u6253\u5f00\u8fde\u63a5\u4f1a\u5728\u8017\u5c3d\u81ea\u8eab\u5185\u5b58\u540e\u62d2\u7edd\u4e3a\u540e\u7eed\u5408\u6cd5\u7684\u8fde\u63a5\u8bf7\u6c42\u670d\u52a1\u3002 Linux\u670d\u52a1\u5668\u5728\u63a5\u6536\u5230SYN\u540e\u624d\u91c7\u7528\u4e0b\u9762\u7684\u65b9\u6cd5\u8bbe\u7f6e\u6811\u6c60\u5b66\u5217\u597d \u4e09\u3001Linux\u5185\u6838\u53c2\u6570\u4f18\u5316 \u00b6 \u53c2\u6570 \u63cf\u8ff0 \u9ed8\u8ba4\u503c \u4f18\u5316\u503c net.ipv4.tcp_max_syn_backlog TCP\u4e09\u6b21\u63e1\u624b\u65f6\uff0c\u670d\u52a1\u5668\u6ca1\u6709\u6536\u5230\u5ba2\u6237\u7aef\u786e\u8ba4\u8bf7\u6c42\u7684\u8fde\u63a5\u6570\u91cf(\u5373SYN_RCVD\u72b6\u6001\u7684\u8fde\u63a5\u6570\u91cf)\uff0c\u5bf9\u4e8e\u5185un\u8f83\u5c0f\u7684\u673a\u5668\u6700\u5c0f\u503c\u662f128\uff0c\u5982\u679c\u673a\u5668\u8d1f\u8f7d\u8fc7\u9ad8\u53ef\u4ee5\u8c03\u9ad8 512 \u4f18\u5316\u503c net.ipv4.tcp_synack_retries \u4e3a\u4e86\u6253\u5f00\u5bf9\u7aef\u7684\u8fde\u63a5\uff0c\u5185\u6838\u9700\u8981\u53d1\u9001\u4e00\u4e2aSYN \u5e76\u9644\u5e26\u4e00\u4e2a\u56de\u5e94\u524d\u9762\u4e00\u4e2aSYN\u7684ACK\u3002\u4e5f\u5c31\u662f\u6240\u8c13\u4e09\u6b21\u63e1\u624b\u4e2d\u7684\u7b2c\u4e8c\u6b21\u63e1\u624b\u3002\u8fd9\u4e2a\u8bbe\u7f6e\u51b3\u5b9a\u4e86\u5185\u6838\u653e\u5f03\u8fde\u63a5\u4e4b\u524d\u53d1\u9001SYN+ACK\u5305\u7684\u6570\u91cf\u3002 5 3 net.ipv4.tcp_syncookies \u9632\u6b62SYN Flood\u653b\u51fb 1 1 net.ipv4.tcp_keepalive_intvl \u63a2\u6d4b\u6d88\u606f\u672a\u83b7\u5f97\u54cd\u5e94\u65f6\uff0c\u91cd\u53d1\u8be5\u6d88\u606f\u7684\u95f4\u9694\u65f6\u95f4\uff08\u79d2\uff09 75 30 net.ipv4.tcp_keepalive_probes \u5728\u8ba4\u5b9aTCP\u8fde\u63a5\u5931\u6548\u4e4b\u524d\uff0c\u6700\u591a\u53d1\u9001\u591a\u5c11\u4e2akeepalive\u63a2\u6d4b\u6d88\u606f 9 3 net.ipv4.tcp_keepalive_time TCP\u53d1\u9001keepalive\u63a2\u6d4b\u6d88\u606f\u7684\u95f4\u9694\u65f6\u95f4\uff08\u79d2\uff09\uff0c\u7528\u4e8e\u786e\u8ba4TCP\u8fde\u63a5\u662f\u5426\u6709\u6548\u3002 7200 1800 net.ipv4.tcp_tw_reuse \u8868\u793a\u662f\u5426\u5141\u8bb8\u5c06\u5904\u4e8eTIME-WAIT\u72b6\u6001\u7684socket\uff08TIME-WAIT\u7684\u7aef\u53e3\uff09\u7528\u4e8e\u65b0\u7684TCP\u8fde\u63a5 \u3002 0 1 net.ipv4.tcp_tw_recycle \u66f4\u5feb\u5730\u56de\u6536TIME-WAIT\u5957\u63a5\u5b57\uff0c\u4e0d\u5efa\u8bae\u6539\uff0ckernel4.12\u4ee5\u540e\u88ab\u53bb\u9664 0 0 net.ipv4.tcp_max_tw_buckets \u7cfb\u7edf\u540c\u65f6\u4fdd\u7559\u7684\u6700\u5927\u65f6\u95f4\u7b49\u5f85\u5957\u63a5\u5b57\u6570\u3002 \u5982\u679c\u8d85\u8fc7\u6b64\u6570\u91cf\uff0c\u5219\u4f1a\u7acb\u5373\u9500\u6bc1\u7b49\u5f85\u5957\u63a5\u5b57\u5e76\u6253\u5370\u8b66\u544a\u3002\u8fd9\u4e2a\u503c\u4e0d\u5efa\u8bae\u8c03\u4f4e\uff0c\u5982\u679c\u51fa\u73b0\u5f02\u5e38\u9700\u8981\u589e\u5927\u8fd9\u4e2a\u503c\u3002\u5e76\u6269\u5927\u5185\u5b58\u3002 65536 65536 net.core.somaxconn \u5904\u4e8e\u76d1\u542c\u72b6\u6001\u4e0b\u7684\u8282\u70b9\u90fd\u6709\u4e00\u4e2a\u56fa\u5b9a\u957f\u5ea6\u7684\u8fde\u63a5\u5217\u961f\u3002\u5982\u679c\u8fde\u63a5\u5df2\u7ecf\u88abTCP\u63a5\u53d7(\u5b8c\u6210\u4e09\u6b21\u63e1\u624b)\uff0c\u4f46\u672a\u88ab\u7a0b\u5e8f\u63a5\u53d7\uff0c\u5e94\u7528\u7a0b\u5e8f\u4f1a\u5bf9\u8fd9\u4e00\u5217\u961f\u505a\u51fa\u9650\u5236\uff0c\u901a\u5e38\u79f0\u4e3a\u672a\u5b8c\u6210\u8fde\u63a5\u3002 128 1024 \u6ce8\u610f \uff1a\u8c03\u6574\u5185\u6838\u53c2\u6570\u540e\u5185\u6838\u5904\u4e8e\u4e0d\u7a33\u5b9a\u72b6\u6001\uff0c\u8bf7\u52a1\u5fc5\u91cd\u542f\u5b9e\u4f8b\u3002 \u66f4\u591a\u5185\u5bb9\u540e\u671f\u8865\u5145...","title":"TCP/IP"},{"location":"linux/network/TCP/#_1","text":"\u5904\u7406\u901a\u4fe1\u5dee\u9519\u7684\u65b9\u6cd5\uff1a \u4f7f\u7528\u5dee\u9519\u6821\u6b63\u7801 \u91cd\u8bd5\u91cd\u65b0\u53d1\u9001\uff0c\u5373\u81ea\u52a8\u91cd\u590d\u8bf7\u6c42\uff08AutoARQ\uff09 ACK(acknowledgment\uff0c\u786e\u8ba4\u53f7)\uff1a\u8be5\u786e\u8ba4\u53f7\u7684\u53d1\u9001\u65b9\u671f\u5f85\u63a5\u6536\u7684\u4e0b\u4e00\u4e2a\u5e8f\u5217\u53f7\uff0c\u5373\u6700\u540e\u88ab\u6210\u529f\u63a5\u6536\u7684\u6570\u636e\u5b57\u8282\u7684\u5e8f\u5217\u53f7+1 seq(sequence number\uff0c\u5e8f\u5217\u53f7)\uff1a\u6807\u8bc6\u4e86TCP\u53d1\u9001\u7aef\u5230TCP\u63a5\u6536\u7aef\u7684\u6570\u636e\u6d41\u7684\u4e00\u4e2a\u5b57\u8282\uff0c\u8be5\u5b57\u8282\u4ee3\u8868\u8005\u8be5\u5e8f\u5217\u53f7\u62a5\u6587\u6bb5\u7684\u6570\u636e\u4e2d\u7684\u7b2c\u4e00\u4e2a\u5b57\u8282 TCP\uff1a\u9762\u5411\u8fde\u63a5\u7684\uff08\u4f7f\u7528TCP\u7684\u4e24\u4e2a\u5e94\u7528\u5fc5\u987b\u5728\u4ed6\u4eec\u4ea4\u6362\u6570\u636e\u4e4b\u524d\uff0c\u901a\u8fc7\u76f8\u4e92\u8054\u7cfb\u6765\u5efa\u7acb\u4e00\u4e2aTCP\u8fde\u63a5\uff09\u3001\u53ef\u9760\u7684\u5b57\u8282\u6d41\u670d\u52a1\u3002 TCP\u8fde\u63a5\u662f\u53cc\u5411\u548c\u5bf9\u79f0\u7684\uff0c\u6570\u636e\u53ef\u4ee5\u5728\u4e24\u4e2a\u65b9\u5411\u4e0a\u5e73\u7b49\u7684\u6d41\u52a8 socket\uff08\u5957\u63a5\u5b57\uff09\uff1a\u4e00\u4e2aIP\u5730\u5740\u548c\u4e00\u4e2a\u7aef\u53e3\u7684\u7ec4\u5408 \u8fde\u63a5\u6807\u8bc6\uff1a4\u5143\u7ec4(\u5ba2\u6237\u7aefIP\u3001\u5ba2\u6237\u7aef\u7aef\u53e3\u3001\u670d\u52a1\u7aefIP\u3001\u670d\u52a1\u7aef\u7aef\u53e3)","title":"\u4e00\u3001\u6982\u5ff5"},{"location":"linux/network/TCP/#tcp","text":"TCP\u8fde\u63a5\u7684\u6784\u6210\uff1a\u5ba2\u6237\u7aefIP\u3001\u5ba2\u6237\u7aef\u7aef\u53e3\u3001\u670d\u52a1\u7aefIP\u3001\u670d\u52a1\u7aef\u7aef\u53e3 TCP\u8fde\u63a5\u76843\u4e2a\u9636\u6bb5\uff1a\u542f\u52a8\u3001\u6570\u636e\u4f20\u8f93\u3001\u9000\u51fa(\u5173\u95ed) ISN(Initail Sequence Number\uff0c\u521d\u59cb\u5e8f\u5217\u53f7)\uff1a\u5728\u53d1\u9001\u7528\u4e8e\u5efa\u7acb\u8fde\u63a5\u7684SYN\u4e4b\u524d\uff0c\u901a\u4fe1\u53cc\u65b9\u4f1a\u9009\u62e9\u4e00\u4e2a\u521d\u59cb\u5e8f\u5217\u53f7\uff0c\u5e8f\u5217\u53f7\u4f1a\u968f\u7740\u65f6\u95f4\u800c\u6539\u53d8\uff0c\u56e0\u6b64\u6bcf\u4e00\u4e2a\u8fde\u63a5\u62e5\u6709\u4e0d\u540c\u7684\u521d\u59cb\u5e8f\u5217\u53f7\uff0c[RFC0793]\u6307\u51fa\u521d\u59cb\u5e8f\u5217\u53f7\u662f\u4e00\u4e2a32\u4f4d\u7684\u8ba1\u6570\u5668\uff0c\u8be5\u8ba1\u6570\u5668\u7684\u503c\u6bcf4\u6beb\u79d2+1\u3002Linux\u662f\u91c7\u7528\u57fa\u4e8e\u65f6\u949f\u7684\u65b9\u6848\uff0c\u5e76\u4e14\u9488\u5bf9\u6bcf\u4e00\u4e2a\u8fde\u63a5\u4e3a\u65f6\u949f\u8bbe\u7f6e\u968f\u673a\u7684\u504f\u79fb\u91cf\uff0c\u968f\u673a\u504f\u79fb\u91cf\u662f\u5728\u8fde\u63a5\u6807\u8bc6\u7684\u57fa\u7840\u4e0a\u5229\u7528\u52a0\u5bc6\u6563\u5217\u51fd\u6570\u5f97\u5230\u7684\uff0c\u6563\u5217\u51fd\u6570\u7684\u8f93\u5165\u6bcf\u96945\u5206\u949f\u5c31\u4f1a\u66f4\u6539\u4e00\u6b21\u3002\u751f\u4ea7\u7684\u5e8f\u5217\u53f7\u968f\u7740\u65f6\u95f4\u7684\u589e\u52a0\u800c\u589e\u52a0\u3002","title":"\u4e8c\u3001TCP\u8fde\u63a5\u7684\u5efa\u7acb\u4e0e\u7ec8\u6b62"},{"location":"linux/network/TCP/#1","text":"\u5ba2\u6237\u7aef\u53d1\u9001\u4e00\u4e2aSYN\u62a5\u6587\u6bb5\uff0c\u5e76\u6307\u660e\u81ea\u5df1\u60f3\u8981\u8fde\u63a5\u7684\u7aef\u53e3\u53f7\u548c\u5ba2\u6237\u7aef\u521d\u59cb\u5e8f\u5217\u53f7(ISN(c)) \u670d\u52a1\u5668\u4e5f\u53d1\u9001\u81ea\u5df1\u7684SYN\u62a5\u6587\u6bb5\u4f5c\u4e3a\u54cd\u5e94\uff0c\u5e76\u5305\u542b\u4e86\u5b83\u7684\u521d\u59cb\u5e8f\u5217\u53f7(ISN(s))\uff0c\u6b64\u5916\uff0c\u4e3a\u4e86\u786e\u8ba4\u5ba2\u6237\u7aef\u7684SYN\uff0c\u670d\u52a1\u7aef\u5c06\u5176\u5305\u542b\u7684ISN(c)\u6570\u503c+1\u540e\u4f5c\u4e3a\u8fd4\u56de\u7684ACK\u6570\u503c \u4e3a\u4e86\u786e\u8ba4\u670d\u52a1\u5668\u7684SYN\uff0c\u5ba2\u6237\u7aef\u5c06ISN(s)\u7684\u6570\u503c+1\u540e\u4f5c\u4e3a\u8fd4\u56de\u7684ACK\u6570\u503c","title":"1. \u4e09\u6b21\u63e1\u624b"},{"location":"linux/network/TCP/#2","text":"\u4ea4\u4e92\u6570\u636e\u6d41-\u4ee5ssh\u4e3a\u4f8b","title":"2. \u6570\u636e\u4f20\u8f93"},{"location":"linux/network/TCP/#3","text":"\u8fde\u63a5\u7684\u4e3b\u52a8\u5173\u95ed\u8005\u53d1\u9001\u4e00\u4e2aFIN\u6bb5\u6307\u660e\u63a5\u6536\u8005\u5e0c\u671b\u770b\u5230\u7684\u81ea\u5df1\u5f53\u524d\u7684\u5e8f\u5217\u53f7(K)\uff0cFIN\u8fd8\u5305\u542b\u4e86\u4e00\u4e2aACK\u6bb5\u7528\u4e8e\u786e\u8ba4\u5bf9\u65b9\u6700\u540e\u4e00\u6b21\u53d1\u6765\u7684\u6570\u636e(L) \u8fde\u63a5\u7684\u88ab\u52a8\u5173\u95ed\u8005\u5c06K\u7684\u6570\u503c+1,\u6700\u4e3a\u54cd\u5e94\u7684ACK\uff0c\u4ee5\u8868\u9762\u5b83\u5df2\u7ecf\u6210\u529f\u63a5\u6536\u5230\u4e3b\u52a8\u5173\u95ed\u8005\u53d1\u9001\u7684FIN\u3002\u6b64\u65f6\u4e0a\u5c42\u5e94\u7528\u7a0b\u5e8f\u4f1a\u88ab\u544a\u77e5\u8fde\u63a5\u7684\u53e6\u4e00\u7aef\u5df2\u7ecf\u63d0\u51fa\u4e86\u5173\u95ed\u8fde\u63a5\u989d\u8bf7\u6c42\uff0c\u7136\u540e\u5e94\u7528\u7a0b\u5e8f\u53d1\u8d77\u81ea\u5df1\u7684\u5173\u95ed\u64cd\u4f5c\u3002\u63a5\u7740\u88ab\u52a8\u5173\u95ed\u8005\u5c06\u8eab\u4efd\u8f6c\u53d8\u4e3a\u4e3b\u52a8\u5173\u95ed\u8fd9\uff0c\u5e76\u53d1\u9001\u81ea\u5df1\u7684FIN\uff0c\u8be5\u62a5\u6587\u6bb5\u7684\u5e8f\u5217\u53f7\u4e3aL \u4e3a\u4e86\u5b8c\u6210\u8fde\u63a5\u7684\u5173\u95ed\uff0c\u6700\u540e\u53d1\u9001\u7684\u62a5\u6587\u8fd8\u5e94\u5305\u542b\u4e00\u4e2aACK\u7528\u4e8e\u786e\u8ba4\u4e0a\u4e00\u4e2aFIN\u3002\u5982\u679cFIN\u4e22\u5931\u7684\uff0c\u90a3\u4e48\u53d1\u9001\u65b9\u6781\u7231\u90a3\u4e2a\u91cd\u65b0\u4f20\u8f93\u76f4\u5230\u63a5\u6536\u4e00\u4e2aACK\u786e\u8ba4\u4e3a\u6b62\u3002 \u6ce8\u610f\uff1a\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u8d1f\u8d23\u53d1\u8d77\u5173\u95ed\u8fde\u63a5\u7684\u901a\u5e38\u662f\u5ba2\u6237\u7aef\uff0c\u4f46\u662f\u5728\u4e00\u4e9b\u670d\u52a1\u5668(Web\u670d\u52a1\u5668)\u5728\u5bf9\u8bf7\u6c42\u505a\u51fa\u54cd\u5e94\u4e4b\u540e\u4e5f\u4f1a\u53d1\u8d77\u4e00\u4e2a\u5173\u95ed\u64cd\u4f5c\u3002 \u5b9e\u4f8b\uff1a 1 2 $ curl http://192.168.1.60 hello tcp\u6293\u5305\u5206\u6790 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 [ root@localhost ~ ] # tcpdump -i enp0s3 tcp port 80 -S tcpdump: verbose output suppressed, use -v or -vv for full protocol decode listening on enp0s3, link-type EN10MB ( Ethernet ) , capture size 262144 bytes # \u4e09\u6b21\u63e1\u624b\u7b2c\u4e00\u6b65\uff1a\u5ba2\u6237\u7aef\u53d1\u8d77\u8bf7\u6c42\uff0c\u5e8f\u5217\u53f7\u4e3a129238614 11 :33:44.910398 IP 192 .168.1.41.54890 > 192 .168.1.60.http: Flags [ S ] , seq 129238614 , win 29200 , options [ mss 1460 ,sackOK,TS val 2499218799 ecr 0 ,nop,wscale 7 ] , length 0 # \u4e09\u6b21\u63e1\u624b\u7b2c\u4e8c\u6b65\uff1a\u670d\u52a1\u7aef\u786e\u8ba4\uff0c\u786e\u8ba4\u53f7\u4e3a129238615\uff0c\u540c\u65f6\u53d1\u9001\u7684\u5e8f\u5217\u53f7\u4e3a2856829331 11 :33:44.910433 IP 192 .168.1.60.http > 192 .168.1.41.54890: Flags [ S. ] , seq 2856829331 , ack 129238615 , win 28960 , options [ mss 1460 ,sackOK,TS val 4721674 ecr 2499218799 ,nop,wscale 7 ] , length 0 #\u3000\u4e09\u6b21\u63e1\u624b\u7b2c\u4e09\u6b65\uff1a\u5ba2\u6237\u7aef\u786e\u8ba4\uff0c\u786e\u8ba4\u53f7\u4e3a2856829332 11 :33:44.910530 IP 192 .168.1.41.54890 > 192 .168.1.60.http: Flags [ . ] , ack 2856829332 , win 229 , options [ nop,nop,TS val 2499218799 ecr 4721674 ] , length 0 --------------------------------------\u6570\u636e\u4f20\u8f93---------------------------------------- # \u5ba2\u6237\u7aef\u53d1\u8d77\u8bf7\u6c42\uff0c\u8bf7\u6c42\u7684\u5e8f\u53f7\u4e3a129238615:129238691\uff0c\u517176\u5b57\u8282\uff0c\u4f7f\u7528\u7684\u662fHTTP\u7684GET\u65b9\u6cd5 11 :33:44.910542 IP 192 .168.1.41.54890 > 192 .168.1.60.http: Flags [ P. ] , seq 129238615 :129238691, ack 2856829332 , win 229 , options [ nop,nop,TS val 2499218799 ecr 4721674 ] , length 76 : HTTP: GET / HTTP/1.1 # \u670d\u52a1\u5668\u6536\u5230\u8bf7\u6c42\u540e\u53d1\u9001\u4e00\u4e2a\u786e\u8ba4\u5e27 11 :33:44.910559 IP 192 .168.1.60.http > 192 .168.1.41.54890: Flags [ . ] , ack 129238691 , win 227 , options [ nop,nop,TS val 4721674 ecr 2499218799 ] , length 0 # \u670d\u52a1\u5668\u5411\u5ba2\u6237\u7aef\u4f20\u8f93\u6570\u636e 11 :33:44.910695 IP 192 .168.1.60.http > 192 .168.1.41.54890: Flags [ P. ] , seq 2856829332 :2856829572, ack 129238691 , win 227 , options [ nop,nop,TS val 4721674 ecr 2499218799 ] , length 240 : HTTP: HTTP/1.1 200 OK # \u5ba2\u6237\u7aef\u6536\u5230\u6570\u636e\u540e\u5411\u670d\u52a1\u7aef\u786e\u8ba4 11 :33:44.910766 IP 192 .168.1.41.54890 > 192 .168.1.60.http: Flags [ . ] , ack 2856829572 , win 237 , options [ nop,nop,TS val 2499218799 ecr 4721674 ] , length 0 --------------------------------------\u6570\u636e\u4f20\u8f93---------------------------------------- # \u5ba2\u6237\u7aef\u53d1\u8d77\u65ad\u5f00\u8fde\u63a5\u7684\u8bf7\u6c42\uff0c\u53d1\u9001FIN\uff0c\u5e8f\u5217\u53f7\u4e3a129238691\uff0c\u786e\u8ba4\u53f7\u4e3a2856829572\uff0c\u4e3a\u6700\u540e\u4e00\u6b21\u53d1\u6765\u7684\u6570\u636e 11 :33:44.910814 IP 192 .168.1.41.54890 > 192 .168.1.60.http: Flags [ F. ] , seq 129238691 , ack 2856829572 , win 237 , options [ nop,nop,TS val 2499218799 ecr 4721674 ] , length 0 # \u670d\u52a1\u7aef\u786e\u8ba4(ACK)\u4e86\u5ba2\u6237\u7aef\u7684\u5e8f\u5217\u53f7129238691+1=129238692\uff0c\u540c\u65f6\u53d1\u9001FIN\uff0c\u540c\u65f6\u53d1\u9001\u5e8f\u5217\u53f72856829572 11 :33:44.918483 IP 192 .168.1.60.http > 192 .168.1.41.54890: Flags [ F. ] , seq 2856829572 , ack 129238692 , win 227 , options [ nop,nop,TS val 4721676 ecr 2499218799 ] , length 0 # \u5ba2\u6237\u7aef\u56de\u590d\u786e\u8ba4\uff0c\u786e\u8ba4\u53f7\u4e3a\u670d\u52a1\u7aef\u7684\u5e8f\u5217\u53f72856829572+1=2856829573 11 :33:44.918565 IP 192 .168.1.41.54890 > 192 .168.1.60.http: Flags [ . ] , ack 2856829573 , win 237 , options [ nop,nop,TS val 2499218801 ecr 4721676 ] , length 0 \u95ee\u9898\uff1a \u4e3a\u4ec0\u4e48tcpdump\u5728\u56db\u6b21\u6325\u624b\u4e2d\u53ea\u6293\u5230\u4e09\u4e2a\u6b65\u9aa4\uff1f \u8fd9\u91cc\u6d89\u53ca\u5230TCP\u7684\u5ef6\u65f6\u786e\u8ba4\uff0c\u5728\u8bb8\u591a\u60c5\u51b5\u4e0b\uff0cTCP\u5e76\u4e0d\u5bf9\u6bcf\u4e2a\u5230\u6765\u7684\u6570\u636e\u5305\u90fd\u8fd4\u56deACK\uff0c\u5229\u7528TCP\u7684\u7d2f\u8ba1ACK\u5b57\u6bb5\u5c31\u80fd\u5b9e\u73b0\u8be5\u529f\u80fd\uff0c\u7d2f\u79ef\u786e\u8ba4\u5141\u8bb8TCP\u5ef6\u65f6\u4e00\u6bb5\u65f6\u95f4\u53d1\u9001ACK\uff0c\u4ee5\u4fbf\u5c06ACK\u548c\u76f8\u540c\u65b9\u5411\u65b9\u5411\u4e0a\u9700\u8981\u4f20\u7684\u6570\u636e\u7ed3\u5408\u53d1\u9001\u3002 \u5728\u5b9e\u9a8c\u4e2d\u4f7f\u7528curl\u547d\u4ee4\u65f6\u56db\u6b21\u6325\u624b\u8fc7\u7a0b\u53ea\u80fd\u6293\u5230\u4e09\u4e2a\uff0c\u4f7f\u7528\u6d4f\u89c8\u5668\u7684\u60c5\u51b5\u4e0b\uff0c\u65ad\u5f00\u8fde\u63a5\u7531\u670d\u52a1\u5668\u7aef\u53d1\u8d77\uff0c\u6293\u5230\u56db\u6b21\u6325\u624b\u7684\u5168\u8fc7\u7a0b\uff0c\u5982\u4e0b\u6240\u793a\uff1a 1 2 3 4 5 6 7 8 # 1. \u670d\u52a1\u7aef\u53d1\u8d77\u65ad\u5f00\u8fde\u63a5\u7684\u8bf7\u6c42 12 :04:58.068808 IP 192 .168.1.60.http > 192 .168.1.41.56736: Flags [ F. ] , seq 79265592 , ack 2919233145 , win 235 , options [ nop,nop,TS val 6594833 ecr 2499670825 ] , length 0 # 2. \u5ba2\u6237\u7aef\u786e\u8ba4\u6536\u5230\u65ad\u5f00\u8fde\u63a5\u7684\u8bf7\u6c42 12 :04:58.115367 IP 192 .168.1.41.56736 > 192 .168.1.60.http: Flags [ . ] , ack 79265593 , win 237 , options [ nop,nop,TS val 2499687101 ecr 6594833 ] , length 0 # 3. \u5ba2\u6237\u7aef\u53d1\u8d77\u65ad\u5f00\u8fde\u63a5\u7684\u8bf7\u6c42 12 :04:58.123188 IP 192 .168.1.41.56736 > 192 .168.1.60.http: Flags [ F. ] , seq 2919233145 , ack 79265593 , win 237 , options [ nop,nop,TS val 2499687102 ecr 6594833 ] , length 0 # 4. \u670d\u52a1\u7aef\u786e\u8ba4\u6536\u5230\u65ad\u5f00\u8fde\u63a5\u7684\u8bf7\u6c42\uff0cTCP\u8fde\u63a5\u65ad\u5f00 12 :04:58.123239 IP 192 .168.1.60.http > 192 .168.1.41.56736: Flags [ . ] , ack 2919233146 , win 235 , options [ nop,nop,TS val 6594887 ecr 2499687102 ] , length 0 flags\u542b\u4e49\uff1a \u6807\u8bc6|\u7f29\u5199|\u63cf\u8ff0 :-:|:-:|:-- S|SYN|\u540c\u6b65\u5e8f\u53f7 F|FIN|\u53d1\u9001\u65b9\u5b8c\u6210\u6570\u636e\u4f20\u9001 R|RST|\u590d\u4f4d\u8fde\u63a5 P|PSH|\u5c3d\u53ef\u80fd\u5feb\u7684\u5c06\u6570\u636e\u53d1\u9001\u5f80\u63a5\u6536\u8fdb\u7a0b .||\u4ee5\u4e0a\u56db\u4e2a\u6807\u8bc6\u6bd4\u7279\u5747\u7f6e0","title":"3.\u56db\u6b21\u6325\u624b"},{"location":"linux/network/TCP/#linux","text":"\u5f53\u4e00\u4e2a\u8bf7\u6c42\u5230\u8fbe(\u5373SYN\u62a5\u6587\u6bb5)\uff0c\u5c06\u4f1a\u68c0\u67e5\u7cfb\u7edf\u53c2\u6570net.ipv4.tcp_max_syn_backlog = 512\uff0c\u5982\u679c\u5904\u4e8eSYN_RCVD\u72b6\u6001\u7684\u8fde\u63a5\u6570\u76ee\u8d85\u8fc7\u8fd9\u4e00\u9600\u503c\uff0c\u8fdb\u5165\u7684\u8fde\u63a5\u5c06\u4f1a\u88ab\u62d2\u7edd\u3002 \u5904\u4e8e\u76d1\u542c\u72b6\u6001\u4e0b\u7684\u8282\u70b9\u90fd\u6709\u4e00\u4e2a\u56fa\u5b9a\u957f\u5ea6\u7684\u8fde\u63a5\u5217\u961f\u3002\u5982\u679c\u8fde\u63a5\u5df2\u7ecf\u88abTCP\u63a5\u53d7(\u5b8c\u6210\u4e09\u6b21\u63e1\u624b)\uff0c\u4f46\u672a\u88ab\u7a0b\u5e8f\u63a5\u53d7\uff0c\u5e94\u7528\u7a0b\u5e8f\u4f1a\u5bf9\u8fd9\u4e00\u5217\u961f\u505a\u51fa\u9650\u5236\uff0c\u901a\u5e38\u79f0\u4e3a\u672a\u5b8c\u6210\u8fde\u63a5(backlog)\u3002Linux\u9ed8\u8ba4\u503c\u4e3a\uff1anet.core.somaxconn = 128 \u51e0\u79cd\u8fde\u63a5\u72b6\u6001(man netstat)\uff1a \u72b6\u6001 \u542b\u4e49 ESTABLISHED The socket has an established connection. SYN_SENT The socket is actively attempting to establish a connection. SYN_RECV A connection request has been received from the network. FIN_WAIT1 The socket is closed, and the connection is shutting down. FIN_WAIT2 Connection is closed, and the socket is waiting for a shutdown from the remote end. TIME_WAIT The socket is waiting after close to handle packets still in the network. CLOSE The socket is not being used. CLOSE_WAIT The remote end has shut down, waiting for the socket to close. LAST_ACK The remote end has shut down, and the socket is closed. Waiting for acknowledgement. LISTEN The socket is listening for incoming connections. Such sockets are not included in the output unless you specify the --listening (-l) or --all (-a) option. CLOSING Both sockets are shut down but we still don't have all our data sent. \u66f4\u591a\u89e3\u91ca IBM \u77e5\u8bc6\u5e93tcp\u72b6\u6001 \u7ef4\u57fa\u767e\u79d1 rfc793 TIME_WAIT(2MSL,Maximum Segment Lifetime)\uff1a\u7b49\u5f85\u4e24\u500d\u4e0e\u6700\u5927\u6bb5\u5b58\u8d27\u5176\u7684\u65f6\u95f4\uff0c\u53c8\u79f0\u52a0\u500d\u7b49\u5f85\u3002\u5728Linux\u7cfb\u7edf\u4e2dnet.ipv4.tcp_fin_timeout\u7684\u6570\u503c\u8bb0\u5f55\u4e862MSL\u72b6\u6001\u9700\u8981\u7b49\u5f85\u7684\u8d85\u65f6\u65f6\u95f4\uff08net.ipv4.tcp_fin_timeout = 60\uff09\u3002\u5728\u53d1\u9001\u6700\u540e\u4e00\u4e2aACK\u4e4b\u524d\u5fc5\u987b\u7b49\u5f8560\u79d2\uff0c\u5728\u6b64\u671f\u95f4Server\u7aef\u4f1a\u91cd\u4f20\u5b83\u7684FIN(\u6d88\u8017\u4e00\u4e2a\u5e8f\u5217\u53f7)\u4e4b\u540e\u6536\u5230\u6700\u7ec8\u7684ACK\u3002","title":"Linux\u5bf9\u4e8e\u8fde\u63a5\u7684\u5904\u7406\uff1a"},{"location":"linux/network/TCP/#tcp_1","text":"SYN\u6cdb\u6d2a\uff1aTCP\u62d2\u7edd\u670d\u52a1\u653b\u51fb\u3002\u653b\u51fb\u8005\u7528\u4e00\u4e2a\u6216\u591a\u4e2a\u5ba2\u6237\u7aef\u4f2a\u9020\u968f\u673a\u6e90IP\u5730\u5740\uff0c\u4ea7\u751f\u4e00\u7cfb\u5217TCP\u8fde\u63a5\u5c1d\u8bd5(SYN\u62a5\u6587\u6bb5)\u5e76\u53d1\u9001\u7ed9\u670d\u52a1\u5668\uff0c\u670d\u52a1\u5668\u4e3a\u6bcf\u4e00\u6761\u8fde\u63a5\u5206\u914d\u4e00\u5b9a\u6570\u91cf\u7684\u8fde\u63a5\u8d44\u6e90\uff0c\u7531\u4e8e\u8fde\u63a5\u5c1a\u672a\u5b8c\u5168\u5efa\u7acb\uff0c\u670d\u52a1\u5668\u4e3a\u4e86\u7ef4\u62a4\u5927\u91cf\u7684\u534a\u6253\u5f00\u8fde\u63a5\u4f1a\u5728\u8017\u5c3d\u81ea\u8eab\u5185\u5b58\u540e\u62d2\u7edd\u4e3a\u540e\u7eed\u5408\u6cd5\u7684\u8fde\u63a5\u8bf7\u6c42\u670d\u52a1\u3002 Linux\u670d\u52a1\u5668\u5728\u63a5\u6536\u5230SYN\u540e\u624d\u91c7\u7528\u4e0b\u9762\u7684\u65b9\u6cd5\u8bbe\u7f6e\u6811\u6c60\u5b66\u5217\u597d","title":"TCP\uff1a\u653b\u51fb"},{"location":"linux/network/TCP/#linux_1","text":"\u53c2\u6570 \u63cf\u8ff0 \u9ed8\u8ba4\u503c \u4f18\u5316\u503c net.ipv4.tcp_max_syn_backlog TCP\u4e09\u6b21\u63e1\u624b\u65f6\uff0c\u670d\u52a1\u5668\u6ca1\u6709\u6536\u5230\u5ba2\u6237\u7aef\u786e\u8ba4\u8bf7\u6c42\u7684\u8fde\u63a5\u6570\u91cf(\u5373SYN_RCVD\u72b6\u6001\u7684\u8fde\u63a5\u6570\u91cf)\uff0c\u5bf9\u4e8e\u5185un\u8f83\u5c0f\u7684\u673a\u5668\u6700\u5c0f\u503c\u662f128\uff0c\u5982\u679c\u673a\u5668\u8d1f\u8f7d\u8fc7\u9ad8\u53ef\u4ee5\u8c03\u9ad8 512 \u4f18\u5316\u503c net.ipv4.tcp_synack_retries \u4e3a\u4e86\u6253\u5f00\u5bf9\u7aef\u7684\u8fde\u63a5\uff0c\u5185\u6838\u9700\u8981\u53d1\u9001\u4e00\u4e2aSYN \u5e76\u9644\u5e26\u4e00\u4e2a\u56de\u5e94\u524d\u9762\u4e00\u4e2aSYN\u7684ACK\u3002\u4e5f\u5c31\u662f\u6240\u8c13\u4e09\u6b21\u63e1\u624b\u4e2d\u7684\u7b2c\u4e8c\u6b21\u63e1\u624b\u3002\u8fd9\u4e2a\u8bbe\u7f6e\u51b3\u5b9a\u4e86\u5185\u6838\u653e\u5f03\u8fde\u63a5\u4e4b\u524d\u53d1\u9001SYN+ACK\u5305\u7684\u6570\u91cf\u3002 5 3 net.ipv4.tcp_syncookies \u9632\u6b62SYN Flood\u653b\u51fb 1 1 net.ipv4.tcp_keepalive_intvl \u63a2\u6d4b\u6d88\u606f\u672a\u83b7\u5f97\u54cd\u5e94\u65f6\uff0c\u91cd\u53d1\u8be5\u6d88\u606f\u7684\u95f4\u9694\u65f6\u95f4\uff08\u79d2\uff09 75 30 net.ipv4.tcp_keepalive_probes \u5728\u8ba4\u5b9aTCP\u8fde\u63a5\u5931\u6548\u4e4b\u524d\uff0c\u6700\u591a\u53d1\u9001\u591a\u5c11\u4e2akeepalive\u63a2\u6d4b\u6d88\u606f 9 3 net.ipv4.tcp_keepalive_time TCP\u53d1\u9001keepalive\u63a2\u6d4b\u6d88\u606f\u7684\u95f4\u9694\u65f6\u95f4\uff08\u79d2\uff09\uff0c\u7528\u4e8e\u786e\u8ba4TCP\u8fde\u63a5\u662f\u5426\u6709\u6548\u3002 7200 1800 net.ipv4.tcp_tw_reuse \u8868\u793a\u662f\u5426\u5141\u8bb8\u5c06\u5904\u4e8eTIME-WAIT\u72b6\u6001\u7684socket\uff08TIME-WAIT\u7684\u7aef\u53e3\uff09\u7528\u4e8e\u65b0\u7684TCP\u8fde\u63a5 \u3002 0 1 net.ipv4.tcp_tw_recycle \u66f4\u5feb\u5730\u56de\u6536TIME-WAIT\u5957\u63a5\u5b57\uff0c\u4e0d\u5efa\u8bae\u6539\uff0ckernel4.12\u4ee5\u540e\u88ab\u53bb\u9664 0 0 net.ipv4.tcp_max_tw_buckets \u7cfb\u7edf\u540c\u65f6\u4fdd\u7559\u7684\u6700\u5927\u65f6\u95f4\u7b49\u5f85\u5957\u63a5\u5b57\u6570\u3002 \u5982\u679c\u8d85\u8fc7\u6b64\u6570\u91cf\uff0c\u5219\u4f1a\u7acb\u5373\u9500\u6bc1\u7b49\u5f85\u5957\u63a5\u5b57\u5e76\u6253\u5370\u8b66\u544a\u3002\u8fd9\u4e2a\u503c\u4e0d\u5efa\u8bae\u8c03\u4f4e\uff0c\u5982\u679c\u51fa\u73b0\u5f02\u5e38\u9700\u8981\u589e\u5927\u8fd9\u4e2a\u503c\u3002\u5e76\u6269\u5927\u5185\u5b58\u3002 65536 65536 net.core.somaxconn \u5904\u4e8e\u76d1\u542c\u72b6\u6001\u4e0b\u7684\u8282\u70b9\u90fd\u6709\u4e00\u4e2a\u56fa\u5b9a\u957f\u5ea6\u7684\u8fde\u63a5\u5217\u961f\u3002\u5982\u679c\u8fde\u63a5\u5df2\u7ecf\u88abTCP\u63a5\u53d7(\u5b8c\u6210\u4e09\u6b21\u63e1\u624b)\uff0c\u4f46\u672a\u88ab\u7a0b\u5e8f\u63a5\u53d7\uff0c\u5e94\u7528\u7a0b\u5e8f\u4f1a\u5bf9\u8fd9\u4e00\u5217\u961f\u505a\u51fa\u9650\u5236\uff0c\u901a\u5e38\u79f0\u4e3a\u672a\u5b8c\u6210\u8fde\u63a5\u3002 128 1024 \u6ce8\u610f \uff1a\u8c03\u6574\u5185\u6838\u53c2\u6570\u540e\u5185\u6838\u5904\u4e8e\u4e0d\u7a33\u5b9a\u72b6\u6001\uff0c\u8bf7\u52a1\u5fc5\u91cd\u542f\u5b9e\u4f8b\u3002 \u66f4\u591a\u5185\u5bb9\u540e\u671f\u8865\u5145...","title":"\u4e09\u3001Linux\u5185\u6838\u53c2\u6570\u4f18\u5316"},{"location":"linux/network/iptables/","text":"iptables \u00b6 \u4e00\u3001iptables\u6982\u8ff0 \u00b6 1.Netfilter/iptables \u00b6 Netfilter\u662f\u5185\u6838\u7684\u4e00\u90e8\u5206\uff0c\u7531\u4e00\u4e9b\u4fe1\u606f\u5305\u8fc7\u6ee4\u8868\u7ec4\u6210\uff0c\u8fd9\u4e9b\u8868\u5305\u542b\u5185\u6838\u7528\u6765\u63a7\u5236\u4fe1\u606f\u5305\u8fc7\u6ee4\u5904\u7406\u7684\u89c4\u5219\u96c6\u3002 iptables\u662f\u7528\u6237\u7ba1\u7406Netfilter\u9632\u706b\u5899\u7684\u7528\u6237\u7a0b\u5e8f\u3002 2.iptables\u7684\u7ec4\u6210 \u00b6 1. \u8868 \u00b6 raw \u4ec5\u7528\u4e8e\u914d\u7f6e\u6570\u636e\u5305\uff0c\u5904\u7406\u5f02\u5e38 filter \u662f\u9ed8\u8ba4\u8868\uff0c\u8d1f\u8d23\u8fc7\u6ee4\u6570\u636e\u5305\uff0c\u51b3\u5b9a\u662f\u5426\u5141\u8bb8\u6570\u636e\u5305\u5230\u8fbe\u76ee\u7684\u5730 nat\u7528\u4e8e\u7f51\u7edc\u5730\u5740\u8f6c\u6362\uff08\u4f8b\u5982\u7aef\u53e3\u8f6c\u53d1\uff09 mangle \u7528\u4e8e\u4fee\u6539\u6570\u636e\u5305\u5185\u5bb9\uff0c\u7528\u6765\u505a\u6d41\u91cf\u6574\u5f62\uff08\u7ed9\u6570\u636e\u5305\u6253\u6807\u8bc6\u7b49\uff09 security\u7528\u4e8e\u5f3a\u5236\u8bbf\u95ee\u63a7\u5236\u7f51\u7edc\u89c4\u5219\uff08\u4f8b\u5982SELinux\uff09 \u8868\u95f4\u7684\u4f18\u5148\u987a\u5e8f\uff1araw>mangle>nat>filter 2. \u94fe \u00b6 \u8868\u662f\u7531\u51e0\u4e2a\u9ed8\u8ba4\u94fe\u7ec4\u6210\u7684\u3002 PREROUTING\uff1a\u7528\u6765\u4fee\u6539\u76ee\u7684\u5730\u5740\uff0c\u7528\u6765\u7528DNAT\u3002\u5b58\u5728\u4e8eraw,mangle,nat INPUT\uff1a\u5339\u914d\u76ee\u6807IP\u662f\u672c\u673a\u7684\u6570\u636e\u5305\u3002\u5b58\u5728\u4e8emangle,filter,nat OUTPUT\uff1a\u51fa\u53e3\u6570\u636e\u5305\uff0c\u4e00\u822c\u4e0d\u5728\u6b64\u94fe\u4e0a\u505a\u914d\u7f6e\u3002\u5b58\u5728\u4e8emangle,filter FORWARD:\uff1a\u5339\u914d\u6d41\u7ecf\u672c\u673a\u7684\u6570\u636e\u5305\u3002\u5b58\u5728\u4e8eraw,mangle,nat,filter POSTROUTING \uff1a\u7528\u6765\u4fee\u6539\u6e90\u5730\u5740\uff0c\u7528\u6765\u505aSNAT\u3002\u5b58\u5728\u4e8emangle\uff0cnat \u81ea\u5b9a\u4e49\u94fe 3. \u89c4\u5219 \u00b6 \u5305\u7684\u8fc7\u6ee4\u662f\u57fa\u4e8e\u89c4\u5219\u7684\u3002\u89c4\u5219\u7531\u6761\u4ef6\u548ctarget\u7ec4\u6210\u3002\u5f88\u636e\u5339\u914d\u6761\u4ef6\u6765\u5339\u914d\u6bcf\u4e00\u4e2a\u6d41\u7ecf\u6b64\u5904\u7684\u62a5\u6587\uff0c\u4e00\u65e6\u5339\u914d\u6210\u529f\u5219\u4ea4\u7ed9\u540e\u9762\u7684target\u8fdb\u884c\u5904\u7406\u3002 1. \u6761\u4ef6 \u00b6 \u5305\u7684\u6765\u6e90\u3001\u7c7b\u578b(ICMP\u3001TCP\u3001UDP)\u3001\u76ee\u6807\u7aef\u53e3 2. \u52a8\u4f5c \u00b6 1. \u5185\u5efatarget \u00b6 ACCEPT \u5141\u8bb8\u6570\u636e\u5305\u901a\u8fc7 DROP \u76f4\u63a5\u4e22\u5f03\u6570\u636e\u5305\uff0c\u4e0d\u7ed9\u4efb\u4f55\u56de\u5e94\u4fe1\u606f QUEUE RETURN 2. \u6269\u5c55target \u00b6 REJECT \u62d2\u7edd\u6570\u636e\u5305\u901a\u8fc7\uff0c\u5fc5\u8981\u65f6\u4f1a\u7ed9\u6570\u636e\u53d1\u9001\u7aef\u4e00\u4e2a\u54cd\u5e94\u7684\u4fe1\u606f\uff0c\u5ba2\u6237\u7aef\u521a\u8bf7\u6c42\u5c31\u4f1a\u6536\u5230\u62d2\u7edd\u7684\u4fe1\u606f LOG \u5728/var/log/messages\u6587\u4ef6\u4e2d\u8bb0\u5f55\u65e5\u5fd7\u4fe1\u606f\uff0c\u7136\u540e\u5c06\u6570\u636e\u5305\u4f20\u9012\u7ed9\u4e0b\u4e00\u6761\u89c4\u5219\uff0c\u4e5f\u5c31\u662f\u8bf4\u9664\u4e86\u8bb0\u5f55\u4ee5\u5916\u4e0d\u5bf9\u6570\u636e\u5305\u505a\u4efb\u4f55\u5176\u4ed6\u64cd\u4f5c\uff0c\u4ecd\u7136\u8ba9\u4e0b\u4e00\u6761\u89c4\u5219\u53bb\u5339\u914d\u3002 MASQUERADE \u662fSNAT\u7684\u4e00\u79cd\u7279\u6b8a\u5f62\u5f0f\uff0c\u9002\u7528\u4e8e\u52a8\u6001\u7684\u3001\u4e34\u65f6\u4f1a\u53d8\u7684ip\u4e0a\u3002 4. \u6570\u636e\u7ecf\u8fc7iptables\u7684\u6d41\u7a0b \u00b6 \u4e8c\u3001iptables\u64cd\u4f5c \u00b6 \u8bed\u6cd5\u683c\u5f0f 1 2 3 iptables [ -t \u8868\u540d ] \u7ba1\u7406\u9009\u9879 [ \u94fe\u540d ] [ \u5339\u914d\u6761\u4ef6 ] [ -j \u76ee\u6807\u52a8\u4f5c\u6216\u8df3\u8f6c ] \u4e0d\u6307\u5b9a\u8868\u540d\u65f6\uff0c\u9ed8\u8ba4\u8868\u793afilter\u8868 \u4e0d\u6267\u884c\u94fe\u540d\u65f6\uff0c\u6a21\u5f0f\u8868\u793a\u8be5\u8868\u5185\u6240\u6709\u7684\u94fe 1. \u67e5 \u00b6 1.1 \u67e5\u770b\u8868\u7684\u89c4\u5219 \u00b6 \u8bed\u6cd5\uff1a iptables -t \u8868\u540d -L 1 2 3 4 5 6 7 8 9 # iptables -t filter -L Chain INPUT ( policy ACCEPT ) target prot opt source destination Chain FORWARD ( policy ACCEPT ) target prot opt source destination Chain OUTPUT ( policy ACCEPT ) target prot opt source destination 1.2 \u67e5\u770b\u8868\u4e2d\u6307\u5b9a\u94fe\u7684\u89c4\u5219 \u00b6 \u8bed\u6cd5\uff1a iptables -t \u8868\u540d -L \u94fe\u540d 1 2 3 # iptables -t filter -L INPUT Chain INPUT ( policy ACCEPT ) target prot opt source destination 1.3 \u67e5\u770b\u66f4\u8be6\u7ec6\u7684\u4fe1\u606f \u00b6 1.3.1 -v \u663e\u793a\u8be6\u7ec6\u4fe1\u606f \u00b6 1 2 3 4 # iptables -t filter -vL INPUT Chain INPUT ( policy ACCEPT 379 packets, 26956 bytes ) pkts bytes target prot opt in out source destination 0 0 ACCEPT udp -- virbr0 any anywhere anywhere udp dpt:domain \u5404\u5b57\u6bb5\u7684\u542b\u4e49\uff1a 1 2 3 4 5 6 7 8 9 pkts\uff1a\u5bf9\u5e94\u89c4\u5219\u5339\u914d\u5230\u7684\u62a5\u6587\u6570 bytes\uff1a\u5bf9\u5e94\u89c4\u5219\u5339\u914d\u5230\u7684\u62a5\u6587\u5305\u5927\u5c0f\u603b\u548c target\uff1a\u89c4\u5219\u5bf9\u5e94\u7684target prot\uff1a\u89c4\u5219\u5bf9\u5e94\u7684\u534f\u8bae opt\uff1a\u89c4\u5219\u5bf9\u5e94\u7684\u9009\u9879 in\uff1a\u6570\u636e\u5305\u4ece\u54ea\u4e2a\u63a5\u53e3\u6d41\u5165 out\uff1a\u6570\u636e\u5305\u4ece\u54ea\u4e2a\u63a5\u53e3\u6d41\u51fa source\uff1a\u6e90\u5730\u5740\uff0c\u53ef\u4ee5\u662f\u4e00\u4e2aIP\uff0c\u4e5f\u53ef\u4ee5\u662f\u4e00\u4e2a\u7f51\u6bb5 destination\uff1a\u76ee\u6807\u5730\u5740\uff0c\u53ef\u4ee5\u662f\u4e00\u4e2aIP\uff0c\u4e5f\u53ef\u4ee5\u662f\u4e00\u4e2a\u7f51\u6bb5 1.3.2 -n \u4e0d\u5bf9IP\u5730\u5740\u53cd\u89e3 \u00b6 1 2 3 4 # iptables -t filter -vnL INPUT Chain INPUT ( policy ACCEPT 24M packets, 12G bytes ) pkts bytes target prot opt in out source destination 0 0 ACCEPT udp -- virbr0 * 0 .0.0.0/0 0 .0.0.0/0 udp dpt:53 1.3.3 -x \u663e\u793a\u7cbe\u786e\u6570\u503c \u00b6 1 2 3 4 # iptables -t filter -vnL INPUT --line-number -x Chain INPUT ( policy ACCEPT 24568391 packets, 11707358586 bytes ) num pkts bytes target prot opt in out source destination 1 0 0 ACCEPT udp -- virbr0 * 0 .0.0.0/0 0 .0.0.0/0 udp dpt:53 1.3.4 --line-number \u663e\u793a\u89c4\u5219\u7f16\u53f7 \u00b6 1 2 3 4 5 6 7 # iptables -t filter -vnL INPUT --line-number Chain INPUT ( policy ACCEPT 24M packets, 12G bytes ) num pkts bytes target prot opt in out source destination 1 0 0 ACCEPT udp -- virbr0 * 0 .0.0.0/0 0 .0.0.0/0 udp dpt:53 2 0 0 ACCEPT tcp -- virbr0 * 0 .0.0.0/0 0 .0.0.0/0 tcp dpt:53 3 0 0 ACCEPT udp -- virbr0 * 0 .0.0.0/0 0 .0.0.0/0 udp dpt:67 4 0 0 ACCEPT tcp -- virbr0 * 0 .0.0.0/0 0 .0.0.0/0 tcp dpt:67 2. \u589e \u00b6 2.1 \u63d2\u5165\u4e00\u6761\u89c4\u5219 \u00b6 -I \u94fe\u540d Insert\uff0c\u9ed8\u8ba4\u63d2\u5165\u5230\u7b2c\u4e00\u884c \u8bed\u6cd5\uff1a iptables -t \u8868\u540d -I \u94fe\u540d \u5339\u914d\u6761\u4ef6 -j \u52a8\u4f5c 1 2 3 # iptables -t filter -I INPUT -s 172.16.10.102 -j DROP # \u6307\u5b9a\u63d2\u5165\u5230\u7b2c3\u884c # iptables -t filter -A INPUT 3 -s 172.16.10.103 -j ACCEPT \u53c2\u6570\uff1a 1 2 3 4 -t\uff1a\u64cd\u4f5c\u7684\u8868 -I\uff1a\u63d2\u5165\u6307\u5b9a\u7684\u94fe -s\uff1a\u6e90\u5730\u5740 -j\uff1a\u5339\u914d\u6761\u4ef6\u6ee1\u8db3\u540e\u6267\u884c\u7684target(\u52a8\u4f5c) 2.2 \u8ffd\u52a0\u4e00\u6761\u89c4\u5219 \u00b6 -A \u94fe\u540d APPEND\uff0c\u8ffd\u52a0\u5230\u6700\u540e\u4e00\u884c \u8bed\u6cd5\uff1a iptables -t \u8868\u540d -A \u94fe\u540d \u5339\u914d\u6761\u4ef6 -j \u52a8\u4f5c 1 # iptables -t filter -A INPUT -s 172.16.10.102 -j ACCEPT \u6b64\u65f6filter\u8868\u7684\u72b6\u6001 1 2 3 4 5 # iptables -nvL INPUT Chain INPUT ( policy ACCEPT 27 packets, 2764 bytes ) pkts bytes target prot opt in out source destination 203 17052 DROP all -- * * 172 .16.10.102 0 .0.0.0/0 0 0 ACCEPT all -- * * 172 .16.10.102 0 .0.0.0/0 \u89c4\u5219\u5339\u914d\u987a\u5e8f \uff1a\u4ece\u4e0a\u5230\u4e0b\u5339\u914d\uff0c\u5982\u679c\u524d\u9762\u7684\u89c4\u5219\u5339\u914d\u6210\u529f\u5c31\u4e0d\u4f1a\u6267\u884c\u540e\u9762\u7684\u89c4\u5219\u4e86\u3002 3. \u5220 \u00b6 \u8bed\u6cd5\uff1a iptables -t \u8868\u540d -D \u94fe\u540d \u5339\u914d\u6761\u4ef6 -j \u52a8\u4f5c 3.1 \u6839\u636e\u89c4\u5219\u7684\u7f16\u53f7\u5220\u9664 \u00b6 \u8bed\u6cd5\uff1a iptables -t filter -D INPUT \u7f16\u53f7 1 2 # \u5220\u9664\u7b2c3\u6761\u89c4\u5219 # iptables -t filter -D INPUT 3 3.2 \u6839\u636e\u5177\u4f53\u7684\u5339\u914d\u6761\u4ef6\u4e0etarget\u5220\u9664 \u00b6 1 # iptables -t filter -D INPUT -s 172.16.10.102 -j DROP 3.3 \u5220\u9664\u6307\u5b9a\u8868\u4e2d\u67d0\u6761\u94fe\u7684\u6240\u6709\u89c4\u5219 \u00b6 -F \u94fe\u540d \uff1aFLUSH \u51b2\u5237\uff08\u5220\u9664\uff09\u6307\u5b9a\u94fe\u4e2d\u7684\u6240\u6709\u89c4\u5219 1 2 3 4 # \u6e05\u9664INPUT\u94fe\u4e0a\u7684\u89c4\u5219 # iptables -t filter -F INPUT # \u6e05\u9664filter\u8868\u603b\u6240\u6709\u94fe\u4e0a\u7684\u89c4\u5219 # iptables -t filter -F \u6ce8\u610f\uff1a \u82e5\u89c4\u5219\u8868\u4e2d\u6709\u591a\u6761\u76f8\u540c\u89c4\u5219\u65f6\uff0c\u6309\u5185\u5bb9\u5339\u914d\u53ea\u5220\u9664\u5e8f\u53f7\u6700\u5c0f\u7684\u4e00\u6761 \u6309\u53f7\u7801\u5339\u914d\u5220\u9664\u65f6\uff0c\u786e\u4fdd\u89c4\u5219\u53f7\u5c0f\u4e8e\u7b49\u4e8e\u5df2\u6709\u89c4\u5219\u6570\uff0c\u5426\u5219\u62a5\u9519 \u6309\u5185\u5bb9\u5339\u914d\u5220\u9664\u65f6\uff0c\u786e\u4fdd\u89c4\u5219\u5b58\u5728\uff0c\u5426\u5219\u62a5\u9519 4. \u6539 \u00b6 4.1 \u4fee\u6539\u94fe\u7684\u9ed8\u8ba4\u89c4\u5219 \u00b6 \u8bed\u6cd5\uff1a iptables -P \u94fe\u540d \u52a8\u4f5c 1 # iptables -t filter -P FORWARD DROP 4.2 \u4fee\u6539\u89c4\u5219 \u00b6 \u8bed\u6cd5\uff1a iptables -t \u8868\u540d -R \u94fe\u540d \u89c4\u5219\u5e8f\u53f7 \u89c4\u5219\u539f\u6765\u7684\u5339\u914d\u6761\u4ef6 -j \u52a8\u4f5c 1 # iptables -t filter -R INPUT 1 -s 172.16.10.100 -j ACCEPT \u6ce8\u610f\uff1a\u5fc5\u987b\u8981\u6307\u5b9a\u6e90\u5730\u5740 ubuntu\u7cfb\u7edf\u53c2\u8003\uff1ahttps://help.ubuntu.com/community/IptablesHowTo \u4e09\u3001\u5339\u914d\u6761\u4ef6 \u00b6 1. \u57fa\u672c\u5339\u914d \u00b6 1.1. \u6e90\u5730\u5740 \u00b6 \u8bed\u6cd5\uff1a -s \u6765\u6e90\u5730\u5740 \u53ef\u4ee5\u662fIP\u3001\u7f51\u6bb5\u3001\u57df\u540d\uff0c\u4e5f\u53ef\u4ee5\u662f\u7a7a 1.1.1 \u6307\u5b9aIP \u00b6 1 # iptables -t filter -I INPUT -s 172.16.10.100,172.16.10.102 -j DROP 1.1.2 \u6307\u5b9a\u7f51\u6bb5 \u00b6 1 # iptables -t filter -I INPUT -s 172.16.10.0/24 -j DROP 1.1.3 \u53d6\u53cd \u00b6 1 # iptables -t filter -I INPUT ! -s 172.16.10.102 -j DROP 1.2. \u76ee\u6807\u5730\u5740 \u00b6 \u8bed\u6cd5\uff1a -d \u76ee\u7684\u5730\u5740 \u53ef\u4ee5\u662fIP\u3001\u7f51\u6bb5\u3001\u57df\u540d\uff0c\u4e5f\u53ef\u4ee5\u662f\u7a7a\uff08\u540c-s\uff09 1 # iptables -t filter -I INPUT -d 172.16.10.101 -j DROP 1.3. \u534f\u8bae\u7c7b\u578b \u00b6 \u8bed\u6cd5\uff1a -p [tcp|udp|icmp|udplite|icmpv6|ah|sctp] 1 # iptables -t filter -I INPUT -s 172.16.10.102 -d 172.16.10.101 -p tcp -j REJECT 1.4. \u7f51\u5361\u63a5\u53e3 -i/-o \u00b6 -i \u5339\u914d\u6570\u636e\u8fdb\u5165\u7684\u7f51\u7edc\u63a5\u53e3 \uff1a\u6b64\u53c2\u6570\u4e3b\u8981\u7528\u4e8enat\u8868\uff0c\u4f8b\u5982\u76ee\u6807\u5730\u5740\u8f6c\u6362 -o \u5339\u914d\u6570\u636e\u6d41\u51fa\u7684\u7f51\u7edc\u63a5\u53e3 1 # iptables -t filter -I INPUT -i eth0 -p icmp -j REJECT -i: \u53ea\u80fd\u7528\u4e8ePREROUING\u3001INPUT\u3001FORWARD -o: \u53ea\u80fd\u7528\u4e8eFORWARD\u3001OUTPUT\u3001POSTROUTING 2. \u6269\u5c55\u5339\u914d \u00b6 \u6269\u5c55\u5339\u914d\u6761\u4ef6\u4f7f\u7528\u65f6\u9700\u8981\u4f9d\u8d56\u4e00\u4e9b\u6269\u5c55\u6a21\u5757 2.1 tcp\u6a21\u5757 \u00b6 2.1.1 \u76ee\u6807\u7aef\u53e3 \u00b6 \u8bed\u6cd5\uff1a -m \u6269\u5c55\u6a21\u5757\u540d -p \u534f\u8bae\u540d\u79f0 --dport \u7aef\u53e3 1 # iptables -t filter -I INPUT -s 172.16.10.102 -d 10.0.0.132 -p tcp --dport 80 -j REJECT \u7aef\u53e3\u7684\u683c\u5f0f\uff1a 80 \u6216 1000: \u6216 :3000 \u6216 6000:8000 2.1.2 \u6e90\u7aef\u53e3 \u00b6 \u8bed\u6cd5\uff1a -m \u6269\u5c55\u6a21\u5757\u540d -p \u534f\u8bae\u540d\u79f0 --sport \u7aef\u53e3 1 # iptables -t filter -I INPUT -s 172.16.10.102 -m tcp -p tcp --sport 22 -j ACCEPT 2.1.3 --tcp-flags \u00b6 \u8bed\u6cd5\uff1a --tcp-flags SYN,ACK,FIN,RST URG,PSH SYN 1 2 3 # iptables -t filter -I INPUT -s 172.16.10.102 -m tcp -p tcp --dport 22 --tcp-flags SYN,ACK,FIN,RST,URG,PSH SYN -j REJECT \u6216 # iptables -t filter -I INPUT -s 172.16.10.102 -m tcp -p tcp --dport 22 --tcp-flags ALL SYN -j REJECT --tcp-flags \u9700\u8981\u5339\u914dTCP\u5934\u4e2d\u7684\u54ea\u4e9b\u6807\u5fd7\u4f4d \u5728\u7b2c\u4e00\u90e8\u5206\u7684\u6807\u5fd7\u4f4d\u5217\u8868\u4e2d\uff0c\u54ea\u4e9b\u6807\u5fd7\u4f4d\u5fc5\u987b\u4e3a1 2.2 udp\u6269\u5c55 \u00b6 1 2 # iptables -t filter -I INPUT -m udp -p udp --dport 137 -j ACCEPT # iptables -t filter -I INPUT -m udp -p udp --sport 138 -j ACCEPT 2.3 multiport\u6a21\u5757(\u591a\u4e2a\u4e0d\u8fde\u7eed\u7684\u7aef\u53e3) \u00b6 1 # iptables -t filter -I INPUT -s 172.16.10.102 -m multiport -p tcp --dport 22,80,8080 -j ACCEPT 2.4 icmp\u6269\u5c55 \u00b6 1 2 # \u522b\u7684\u4e3b\u673aping\u4e0d\u8fdb\u6765\uff0c\u81ea\u5df1\u5411\u5916\u8bf7\u6c42\u56de\u590d\u7684\u62a5\u6587\u4e5f\u65e0\u6cd5\u8fdb\u5165\u9632\u706b\u5899 # iptables -t filter -I INPUT -p icmp -j REJECT \u53ea\u7981\u6b62\u88ab\u4ebaping 1 2 3 # iptables -t filter -I INPUT -m icmp -p icmp --icmp-type 8/0 -j REJECT # \u6216 # iptables -t filter -I INPUT -m icmp -p icmp --icmp-type \"echo-request\" -j REJECT 2.5 state \u6269\u5c55 \u00b6 state\u6a21\u5757\u53ef\u4ee5\u5b9e\u73b0\u8fde\u63a5\u8ffd\u8e2a\u673a\u5236\uff0c\u6309\u5305\u72b6\u6001\u5339\u914d \u8fde\u63a5\u72b6\u6001\uff1aNEW\u3001ESTABLISHED\u3001RELATED\u3001INVALID\u3001UNTRACKED NEW\uff1a\u8fde\u63a5\u4e2d\u7684\u7b2c\u4e00\u4e2a\u5305\uff0c\u72b6\u6001\u5c31\u662fNEW ESTABLISHED\uff1a\u8fde\u63a5\u6001\uff0cNEW\u72b6\u6001\u540e\u9762\u7684\u5305\u7684\u72b6\u6001 RELATED\uff1a\u884d\u751f\u6001\uff08\u4e00\u4e2a\u670d\u52a1\u5efa\u7acb\u4e86\u4e24\u4e2a\u8fde\u63a5\uff0c\u4e24\u4e2a\u8fde\u63a5\u4e2d\u7684\u67d0\u4e9b\u62a5\u6587\u76f4\u63a5\u6709\u5173\u7cfb\uff0c\u5982FTP\uff09 INVALID\uff1a\u5305\u65e0\u6cd5\u88ab\u8bc6\u522b\uff08\u4e0d\u80fd\u88ab\u8bc6\u522b\u5c5e\u4e8e\u54ea\u4e2a\u8fde\u63a5\u6216\u6ca1\u6709\u4efb\u4f55\u72b6\u6001\uff09 UNTRACKED\uff1a\u62a5\u6587\u672a\u88ab\u8ffd\u8e2a \u5b9e\u73b0\u53ea\u5141\u8bb8\u56de\u5e94\u7684\u62a5\u6587\u901a\u8fc7\u9632\u706b\u5899(\u53ea\u80fd\u8bbf\u95ee\u522b\u4eba\uff0c\u522b\u4eba\u4e0d\u80fd\u8bbf\u95ee\u81ea\u5df1) 1 2 # iptables -t filter -I INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT # iptables -t filter -A INPUT -j REJECT 2.6 mac\u6269\u5c55 \u00b6 \u963b\u65ad\u6765\u81ea\u67d0MAC\u5730\u5740\u7684\u6570\u636e\u5305\u901a\u8fc7\u672c\u673a\uff0c\u4e0d\u5e38\u7528 1 # iptables -A INPUT -m mac --mac-source 00:0c:29:53:ca:49 -j DROP \u62a5\u6587\u7ecf\u8fc7\u8def\u7531\u540e\uff0c\u6570\u636e\u5305\u4e2d\u539f\u6709\u7684mac\u4fe1\u606f\u4f1a\u88ab\u66ff\u6362\uff0c\u6240\u4ee5\u5728\u8def\u7531\u540e\u7684iptables\u4e2d\u4f7f\u7528msc\u6a21\u5757\u65f6\u6ca1\u6709\u610f\u4e49\u7684\u3002 2.7 limit\u6269\u5c55 \u00b6 \u7528\u4e00\u5b9a\u901f\u7387\u5339\u914d\u6570\u636e\u5305 1 2 3 4 5 6 7 8 9 10 11 # iptables -A INPUT -d 10.0.0.132 -m limit --limit 50/s -j DROP # iptables -L Chain INPUT ( policy ACCEPT ) target prot opt source destination DROP all -- anywhere 10 .0.0.132 limit: avg 50 /sec burst 5 Chain FORWARD ( policy ACCEPT ) target prot opt source destination Chain OUTPUT ( policy ACCEPT ) target prot opt source destination \u56db\u3001\u9ed1\u767d\u540d\u5355 \u00b6 \u767d\u540d\u5355\uff1a\u653e\u884c\u5339\u914d\u89c4\u5219\u7684\u5305 \u9ed1\u540d\u5355\uff1a\u62d2\u7edd\u5339\u914d\u89c4\u5219\u7684\u5305 \u767d\u540d\u5355\u7684\u5b9e\u73b0\uff1a 1 2 3 4 # \u653e\u884c22\u7aef\u53e3 # iptables -I INPUT -p tcp --dport 22 -j ACCEPT # INPUT\u94fe\u7684\u9ed8\u8ba4\u7b56\u7565\u6539\u4e3aDROP # iptables -P INPUT DROP \u4e0d\u5efa\u8bae\u628a\u9ed8\u8ba4\u7b56\u7565\u8bbe\u7f6e\u4e3aDROP\uff0c\u4e00\u65e6\u6267\u884ciptables -F\uff0c\u4efb\u4f55\u5305\u90fd\u8fdb\u4e0d\u53bb\uff0cssh\u5c31\u4f1a\u65ad\u5f00 \u4f18\u5316\u65b9\u6cd5 1 2 3 4 # \u653e\u884c22\u7aef\u53e3 # iptables -I INPUT -p tcp --dport 22 -j ACCEPT # \u5176\u4ed6\u90fd\u62d2\u7edd # iptables -A INPUT -j REJECT \u4e94\u3001\u81ea\u5b9a\u4e49\u94fe \u00b6 \u81ea\u5b9a\u4e49\u94fe\u7684\u610f\u4e49\uff1a \u4fbf\u4e8e\u5206\u7c7b\u7ba1\u7406 \u81ea\u5b9a\u4e49\u94fe\u4e0d\u80fd\u76f4\u63a5\u4f7f\u7528\uff0c\u9700\u8981\u88ab\u9ed8\u8ba4\u94fe\u5f15\u7528\u624d\u53ef\u4ee5\u4f7f\u7528 1. \u521b\u5efa\u81ea\u5b9a\u4e49\u94fe \u00b6 \u8bed\u6cd5\uff1a -N \u81ea\u5b9a\u4e49\u94fe\u7684\u540d\u79f0 1 2 3 4 5 6 7 8 9 10 11 12 13 # iptables -t filter -N IN_WEB # iptables -L Chain INPUT ( policy ACCEPT ) target prot opt source destination Chain FORWARD ( policy DROP ) target prot opt source destination Chain OUTPUT ( policy ACCEPT ) target prot opt source destination Chain IN_WEB ( 0 references ) # \u5f15\u7528\u8ba1\u6570\u4e3a0 target prot opt source destination 2. \u7ed9\u81ea\u5b9a\u4e49\u94fe\u6dfb\u52a0\u89c4\u5219 \u00b6 1 2 3 4 5 root@node1:~# iptables -I IN_WEB -s 172 .16.10.100 -j REJECT root@node1:~# iptables -t filter -nvL IN_WEB Chain IN_WEB ( 0 references ) pkts bytes target prot opt in out source destination 0 0 REJECT all -- * * 172 .16.10.100 0 .0.0.0/0 reject-with icmp-port-unreachable 3. \u5f15\u7528\u81ea\u5b9a\u4e49\u94fe \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 # iptables -I INPUT -p tcp --dport 80 -j IN_WEB # iptables -L Chain INPUT ( policy ACCEPT ) target prot opt source destination IN_WEB tcp -- anywhere anywhere tcp dpt:http Chain FORWARD ( policy DROP ) target prot opt source destination Chain OUTPUT ( policy ACCEPT ) target prot opt source destination Chain IN_WEB ( 1 references ) target prot opt source destination REJECT all -- 172 .16.10.100 anywhere reject-with icmp-port-unreachable 4. \u91cd\u547d\u540d\u81ea\u5b9a\u4e49\u94fe \u00b6 1 # iptables -E IN_WEB WEB 5. \u5220\u9664\u81ea\u5b9a\u4e49\u94fe \u00b6 \u5220\u9664\u6761\u4ef6 \u81ea\u5b9a\u4e49\u94fe\u6ca1\u6709\u88ab\u4efb\u4f55\u9ed8\u8ba4\u94fe\u5f15\u7528\uff0c\u5373\u81ea\u5b9a\u4e49\u94fe\u7684\u5f15\u7528\u8ba1\u6570\u4e3a0 \u81ea\u5b9a\u4e49\u94fe\u4e2d\u6ca1\u6709\u4efb\u4f55\u89c4\u5219 1 2 3 # iptables -D INPUT 1 # iptables -t filter -F WEB # iptables -X WEB \u516d\u3001\u52a8\u4f5c(target) \u00b6 1. \u57fa\u7840\u52a8\u4f5c \u00b6 1. ACCEPT \u00b6 \u901a\u8fc7\uff0c\u5141\u8bb8\u6570\u636e\u5305\u901a\u8fc7\u672c\u94fe\u800c\u4e0d\u62e6\u622a\u5b83 2. DROP \u00b6 \u4e22\u5f03\uff0c\u963b\u6b62\u6570\u636e\u5305\u901a\u8fc7\u672c\u94fe\u800c\u4e22\u5f03\u5b83 2. \u6269\u5c55\u52a8\u4f5c \u00b6 2.1. REJECT \u00b6 \u8bed\u6cd5\uff1a --reject-with\u3000\u5bf9\u65b9\u88ab\u62d2\u7edd\u65f6\u7684\u63d0\u793a\u4fe1\u606f \u5bf9\u65b9\u88ab\u62d2\u7edd\u65f6\u7684\u63d0\u793a\u4fe1\u606f\uff1a 1 2 3 4 5 6 icmp-port-unreachable \u9ed8\u8ba4 icmp-net-unreachable icmp-host-unreachabe icmp-proto-unreachabe icmp-net-prohibited icmp-admin-prohibited 2.2. LOG \u00b6 \u5c06\u7b26\u5408\u6761\u4ef6\u7684\u62a5\u6587\u7684\u76f8\u5173\u4fe1\u606f\u8bb0\u5f55\u5230\u65e5\u5fd7\u4e2d \u9009\u9879\uff1a --log-level [emerg|alert|crit|error|warning|notice|info|debug] --log-prefix \u4fe1\u606f\u524d\u7f00 \u4fe1\u606f\u524d\u7f0029\u4e2a\u5b57\u7b26\u4ee5\u5185 1 2 # \u628a\u60f3\u8981\u4e3b\u52a8\u8fde\u63a522\u7aef\u53e3\u7684\u62a5\u6587\u53ca\u76f8\u5173\u4fe1\u606f\u8bb0\u5f55\u5230\u65e5\u5fd7\u4e2d # iptables -I INPUT -p tcp --dport 22 -m state --state NEW -j LOG --log-prefix \"want-in-from-port-22\" 2.3 SNAT \u00b6 \u6e90\u5730\u5740\u8f6c\u6362 1 2 3 4 # 1. \u8f6c\u6362\u4e3a\u5355IP # iptables -t nat -A POSTROUTING -s 10.1.0.0/16 -j SNAT --to-source 172.16.0.101 # 2. \u8f6c\u6362\u5230IP\u5730\u5740\u6c60 #iptables -t nat -A POSTROUTING -s 10.1.0.0/16 -j SNAT --to-source 172.16.0.101-172.16.0.200 \u53c2\u6570\uff1a 1 2 3 4 5 -t: \u64cd\u4f5cnat\u8868 -A: \u5c06\u89c4\u5219\u6dfb\u52a0\u5230POSTROUTING\u94fe\u672b\u5c3e -s: \u6e90\u5730\u5740 -j: \u4f7f\u7528 SNAT \u52a8\u4f5c --to-source: \u628a\u5339\u914d\u5230\u7684\u62a5\u6587\u4fee\u6539\u4e3a\u6307\u5b9a\u5730\u5740 2.4 DNAT \u00b6 \u76ee\u6807\u5730\u5740\u8f6c\u6362\uff0c\u8bed\u6cd5\u540cSNAT\u3002 1 # iptables -t nat -I PREROUTING -d 172.16.10.101 -p tcp --dport 3389 -j DNAT --to-destination 10.1.1.6:3389 2.5 MASQUERADE \u00b6 \u4e0eSNAT\u7c7b\u4f3c\uff0c\u4f46\u662f\u53ef\u4ee5\u52a8\u6001\u7684\u5c06\u6e90\u5730\u5740\u8f6c\u6362\u4e3a\u53ef\u7528\u7684IP\u5730\u5740 1 # iptables -t nat -A POSTROUTING -s 10.1.0.0/16 -o eth0 -j MASQUERADE 2.6 REDIRECT \u00b6 \u5728\u672c\u673a\u8fdb\u7a0b\u7aef\u53e3\u6620\u5c04 1 # iptables -t nat -A PREROUTING -p tcp --dport 80 -j REDIRECT --to-ports 8080 \u4f7f\u7528NAT\u9700\u8981\u5f00\u542f\u8f6c\u53d1\uff1a 1 # echo 1 > /proc/sys/net/ipv4/ip_forward \u62d2\u7edd\u4e0e\u7981\u6b62\u4e00\u4e2a\u6570\u636e\u5305\u7684\u533a\u522b \u62d2\u7edd\uff1a\u4e22\u5f03\u6570\u636e\u5305\u7684\u540c\u65f6\u7ed9\u53d1\u9001\u8005\u8fd4\u56de\u4e00\u4f1aICMP\u9519\u8bef\u6d88\u606f \u4e22\u5f03\uff1a\u6570\u636e\u5305\u76f4\u63a5\u4e22\u5f03\u4e0d\u8fd4\u56de\u4efb\u4f55\u901a\u77e5 \u4e3a\u4e86\u5b89\u5168\uff0c\u901a\u5e38\u76f4\u63a5\u4e22\u5f03\uff0c\u539f\u56e0\u67093\uff1a \u53d1\u9001\u9519\u8bef\u6d88\u606f\u4f1a\u4f7f\u901a\u4fe1\u91cf\u52a0\u500d \u54cd\u5e94\u7684\u6570\u636e\u5305\u53ef\u80fd\u662f\u62d2\u7edd\u670d\u52a1\u5de5\u5177 \u5373\u4f7f\u4e00\u4e2a\u9519\u8bef\u7684\u6d88\u606f\u90fd\u4f1a\u7ed9\u653b\u51fb\u8005\u63d0\u4f9b\u6f5c\u5728\u7684\u6709\u7528\u4fe1\u606f \u4e03\u3001\u4fdd\u5b58 \u00b6 1 2 3 4 # \u4fdd\u5b58 # iptables-save # \u6062\u590d # iptables-restore \u53c2\u8003\uff1a https://wiki.archlinux.org/index.php/iptables http://www.zsythink.net/archives/1199","title":"Iptables"},{"location":"linux/network/iptables/#iptables","text":"","title":"iptables"},{"location":"linux/network/iptables/#iptables_1","text":"","title":"\u4e00\u3001iptables\u6982\u8ff0"},{"location":"linux/network/iptables/#1netfilteriptables","text":"Netfilter\u662f\u5185\u6838\u7684\u4e00\u90e8\u5206\uff0c\u7531\u4e00\u4e9b\u4fe1\u606f\u5305\u8fc7\u6ee4\u8868\u7ec4\u6210\uff0c\u8fd9\u4e9b\u8868\u5305\u542b\u5185\u6838\u7528\u6765\u63a7\u5236\u4fe1\u606f\u5305\u8fc7\u6ee4\u5904\u7406\u7684\u89c4\u5219\u96c6\u3002 iptables\u662f\u7528\u6237\u7ba1\u7406Netfilter\u9632\u706b\u5899\u7684\u7528\u6237\u7a0b\u5e8f\u3002","title":"1.Netfilter/iptables"},{"location":"linux/network/iptables/#2iptables","text":"","title":"2.iptables\u7684\u7ec4\u6210"},{"location":"linux/network/iptables/#1","text":"raw \u4ec5\u7528\u4e8e\u914d\u7f6e\u6570\u636e\u5305\uff0c\u5904\u7406\u5f02\u5e38 filter \u662f\u9ed8\u8ba4\u8868\uff0c\u8d1f\u8d23\u8fc7\u6ee4\u6570\u636e\u5305\uff0c\u51b3\u5b9a\u662f\u5426\u5141\u8bb8\u6570\u636e\u5305\u5230\u8fbe\u76ee\u7684\u5730 nat\u7528\u4e8e\u7f51\u7edc\u5730\u5740\u8f6c\u6362\uff08\u4f8b\u5982\u7aef\u53e3\u8f6c\u53d1\uff09 mangle \u7528\u4e8e\u4fee\u6539\u6570\u636e\u5305\u5185\u5bb9\uff0c\u7528\u6765\u505a\u6d41\u91cf\u6574\u5f62\uff08\u7ed9\u6570\u636e\u5305\u6253\u6807\u8bc6\u7b49\uff09 security\u7528\u4e8e\u5f3a\u5236\u8bbf\u95ee\u63a7\u5236\u7f51\u7edc\u89c4\u5219\uff08\u4f8b\u5982SELinux\uff09 \u8868\u95f4\u7684\u4f18\u5148\u987a\u5e8f\uff1araw>mangle>nat>filter","title":"1. \u8868"},{"location":"linux/network/iptables/#2","text":"\u8868\u662f\u7531\u51e0\u4e2a\u9ed8\u8ba4\u94fe\u7ec4\u6210\u7684\u3002 PREROUTING\uff1a\u7528\u6765\u4fee\u6539\u76ee\u7684\u5730\u5740\uff0c\u7528\u6765\u7528DNAT\u3002\u5b58\u5728\u4e8eraw,mangle,nat INPUT\uff1a\u5339\u914d\u76ee\u6807IP\u662f\u672c\u673a\u7684\u6570\u636e\u5305\u3002\u5b58\u5728\u4e8emangle,filter,nat OUTPUT\uff1a\u51fa\u53e3\u6570\u636e\u5305\uff0c\u4e00\u822c\u4e0d\u5728\u6b64\u94fe\u4e0a\u505a\u914d\u7f6e\u3002\u5b58\u5728\u4e8emangle,filter FORWARD:\uff1a\u5339\u914d\u6d41\u7ecf\u672c\u673a\u7684\u6570\u636e\u5305\u3002\u5b58\u5728\u4e8eraw,mangle,nat,filter POSTROUTING \uff1a\u7528\u6765\u4fee\u6539\u6e90\u5730\u5740\uff0c\u7528\u6765\u505aSNAT\u3002\u5b58\u5728\u4e8emangle\uff0cnat \u81ea\u5b9a\u4e49\u94fe","title":"2. \u94fe"},{"location":"linux/network/iptables/#3","text":"\u5305\u7684\u8fc7\u6ee4\u662f\u57fa\u4e8e\u89c4\u5219\u7684\u3002\u89c4\u5219\u7531\u6761\u4ef6\u548ctarget\u7ec4\u6210\u3002\u5f88\u636e\u5339\u914d\u6761\u4ef6\u6765\u5339\u914d\u6bcf\u4e00\u4e2a\u6d41\u7ecf\u6b64\u5904\u7684\u62a5\u6587\uff0c\u4e00\u65e6\u5339\u914d\u6210\u529f\u5219\u4ea4\u7ed9\u540e\u9762\u7684target\u8fdb\u884c\u5904\u7406\u3002","title":"3. \u89c4\u5219"},{"location":"linux/network/iptables/#1_1","text":"\u5305\u7684\u6765\u6e90\u3001\u7c7b\u578b(ICMP\u3001TCP\u3001UDP)\u3001\u76ee\u6807\u7aef\u53e3","title":"1. \u6761\u4ef6"},{"location":"linux/network/iptables/#2_1","text":"","title":"2. \u52a8\u4f5c"},{"location":"linux/network/iptables/#1-target","text":"ACCEPT \u5141\u8bb8\u6570\u636e\u5305\u901a\u8fc7 DROP \u76f4\u63a5\u4e22\u5f03\u6570\u636e\u5305\uff0c\u4e0d\u7ed9\u4efb\u4f55\u56de\u5e94\u4fe1\u606f QUEUE RETURN","title":"1. \u5185\u5efatarget"},{"location":"linux/network/iptables/#2-target","text":"REJECT \u62d2\u7edd\u6570\u636e\u5305\u901a\u8fc7\uff0c\u5fc5\u8981\u65f6\u4f1a\u7ed9\u6570\u636e\u53d1\u9001\u7aef\u4e00\u4e2a\u54cd\u5e94\u7684\u4fe1\u606f\uff0c\u5ba2\u6237\u7aef\u521a\u8bf7\u6c42\u5c31\u4f1a\u6536\u5230\u62d2\u7edd\u7684\u4fe1\u606f LOG \u5728/var/log/messages\u6587\u4ef6\u4e2d\u8bb0\u5f55\u65e5\u5fd7\u4fe1\u606f\uff0c\u7136\u540e\u5c06\u6570\u636e\u5305\u4f20\u9012\u7ed9\u4e0b\u4e00\u6761\u89c4\u5219\uff0c\u4e5f\u5c31\u662f\u8bf4\u9664\u4e86\u8bb0\u5f55\u4ee5\u5916\u4e0d\u5bf9\u6570\u636e\u5305\u505a\u4efb\u4f55\u5176\u4ed6\u64cd\u4f5c\uff0c\u4ecd\u7136\u8ba9\u4e0b\u4e00\u6761\u89c4\u5219\u53bb\u5339\u914d\u3002 MASQUERADE \u662fSNAT\u7684\u4e00\u79cd\u7279\u6b8a\u5f62\u5f0f\uff0c\u9002\u7528\u4e8e\u52a8\u6001\u7684\u3001\u4e34\u65f6\u4f1a\u53d8\u7684ip\u4e0a\u3002","title":"2. \u6269\u5c55target"},{"location":"linux/network/iptables/#4-iptables","text":"","title":"4. \u6570\u636e\u7ecf\u8fc7iptables\u7684\u6d41\u7a0b"},{"location":"linux/network/iptables/#iptables_2","text":"\u8bed\u6cd5\u683c\u5f0f 1 2 3 iptables [ -t \u8868\u540d ] \u7ba1\u7406\u9009\u9879 [ \u94fe\u540d ] [ \u5339\u914d\u6761\u4ef6 ] [ -j \u76ee\u6807\u52a8\u4f5c\u6216\u8df3\u8f6c ] \u4e0d\u6307\u5b9a\u8868\u540d\u65f6\uff0c\u9ed8\u8ba4\u8868\u793afilter\u8868 \u4e0d\u6267\u884c\u94fe\u540d\u65f6\uff0c\u6a21\u5f0f\u8868\u793a\u8be5\u8868\u5185\u6240\u6709\u7684\u94fe","title":"\u4e8c\u3001iptables\u64cd\u4f5c"},{"location":"linux/network/iptables/#1_2","text":"","title":"1. \u67e5"},{"location":"linux/network/iptables/#11","text":"\u8bed\u6cd5\uff1a iptables -t \u8868\u540d -L 1 2 3 4 5 6 7 8 9 # iptables -t filter -L Chain INPUT ( policy ACCEPT ) target prot opt source destination Chain FORWARD ( policy ACCEPT ) target prot opt source destination Chain OUTPUT ( policy ACCEPT ) target prot opt source destination","title":"1.1 \u67e5\u770b\u8868\u7684\u89c4\u5219"},{"location":"linux/network/iptables/#12","text":"\u8bed\u6cd5\uff1a iptables -t \u8868\u540d -L \u94fe\u540d 1 2 3 # iptables -t filter -L INPUT Chain INPUT ( policy ACCEPT ) target prot opt source destination","title":"1.2 \u67e5\u770b\u8868\u4e2d\u6307\u5b9a\u94fe\u7684\u89c4\u5219"},{"location":"linux/network/iptables/#13","text":"","title":"1.3 \u67e5\u770b\u66f4\u8be6\u7ec6\u7684\u4fe1\u606f"},{"location":"linux/network/iptables/#131-v","text":"1 2 3 4 # iptables -t filter -vL INPUT Chain INPUT ( policy ACCEPT 379 packets, 26956 bytes ) pkts bytes target prot opt in out source destination 0 0 ACCEPT udp -- virbr0 any anywhere anywhere udp dpt:domain \u5404\u5b57\u6bb5\u7684\u542b\u4e49\uff1a 1 2 3 4 5 6 7 8 9 pkts\uff1a\u5bf9\u5e94\u89c4\u5219\u5339\u914d\u5230\u7684\u62a5\u6587\u6570 bytes\uff1a\u5bf9\u5e94\u89c4\u5219\u5339\u914d\u5230\u7684\u62a5\u6587\u5305\u5927\u5c0f\u603b\u548c target\uff1a\u89c4\u5219\u5bf9\u5e94\u7684target prot\uff1a\u89c4\u5219\u5bf9\u5e94\u7684\u534f\u8bae opt\uff1a\u89c4\u5219\u5bf9\u5e94\u7684\u9009\u9879 in\uff1a\u6570\u636e\u5305\u4ece\u54ea\u4e2a\u63a5\u53e3\u6d41\u5165 out\uff1a\u6570\u636e\u5305\u4ece\u54ea\u4e2a\u63a5\u53e3\u6d41\u51fa source\uff1a\u6e90\u5730\u5740\uff0c\u53ef\u4ee5\u662f\u4e00\u4e2aIP\uff0c\u4e5f\u53ef\u4ee5\u662f\u4e00\u4e2a\u7f51\u6bb5 destination\uff1a\u76ee\u6807\u5730\u5740\uff0c\u53ef\u4ee5\u662f\u4e00\u4e2aIP\uff0c\u4e5f\u53ef\u4ee5\u662f\u4e00\u4e2a\u7f51\u6bb5","title":"1.3.1 -v \u663e\u793a\u8be6\u7ec6\u4fe1\u606f"},{"location":"linux/network/iptables/#132-nip","text":"1 2 3 4 # iptables -t filter -vnL INPUT Chain INPUT ( policy ACCEPT 24M packets, 12G bytes ) pkts bytes target prot opt in out source destination 0 0 ACCEPT udp -- virbr0 * 0 .0.0.0/0 0 .0.0.0/0 udp dpt:53","title":"1.3.2 -n\u4e0d\u5bf9IP\u5730\u5740\u53cd\u89e3"},{"location":"linux/network/iptables/#133-x","text":"1 2 3 4 # iptables -t filter -vnL INPUT --line-number -x Chain INPUT ( policy ACCEPT 24568391 packets, 11707358586 bytes ) num pkts bytes target prot opt in out source destination 1 0 0 ACCEPT udp -- virbr0 * 0 .0.0.0/0 0 .0.0.0/0 udp dpt:53","title":"1.3.3 -x \u663e\u793a\u7cbe\u786e\u6570\u503c"},{"location":"linux/network/iptables/#134-line-number","text":"1 2 3 4 5 6 7 # iptables -t filter -vnL INPUT --line-number Chain INPUT ( policy ACCEPT 24M packets, 12G bytes ) num pkts bytes target prot opt in out source destination 1 0 0 ACCEPT udp -- virbr0 * 0 .0.0.0/0 0 .0.0.0/0 udp dpt:53 2 0 0 ACCEPT tcp -- virbr0 * 0 .0.0.0/0 0 .0.0.0/0 tcp dpt:53 3 0 0 ACCEPT udp -- virbr0 * 0 .0.0.0/0 0 .0.0.0/0 udp dpt:67 4 0 0 ACCEPT tcp -- virbr0 * 0 .0.0.0/0 0 .0.0.0/0 tcp dpt:67","title":"1.3.4 --line-number \u663e\u793a\u89c4\u5219\u7f16\u53f7"},{"location":"linux/network/iptables/#2_2","text":"","title":"2. \u589e"},{"location":"linux/network/iptables/#21","text":"-I \u94fe\u540d Insert\uff0c\u9ed8\u8ba4\u63d2\u5165\u5230\u7b2c\u4e00\u884c \u8bed\u6cd5\uff1a iptables -t \u8868\u540d -I \u94fe\u540d \u5339\u914d\u6761\u4ef6 -j \u52a8\u4f5c 1 2 3 # iptables -t filter -I INPUT -s 172.16.10.102 -j DROP # \u6307\u5b9a\u63d2\u5165\u5230\u7b2c3\u884c # iptables -t filter -A INPUT 3 -s 172.16.10.103 -j ACCEPT \u53c2\u6570\uff1a 1 2 3 4 -t\uff1a\u64cd\u4f5c\u7684\u8868 -I\uff1a\u63d2\u5165\u6307\u5b9a\u7684\u94fe -s\uff1a\u6e90\u5730\u5740 -j\uff1a\u5339\u914d\u6761\u4ef6\u6ee1\u8db3\u540e\u6267\u884c\u7684target(\u52a8\u4f5c)","title":"2.1 \u63d2\u5165\u4e00\u6761\u89c4\u5219"},{"location":"linux/network/iptables/#22","text":"-A \u94fe\u540d APPEND\uff0c\u8ffd\u52a0\u5230\u6700\u540e\u4e00\u884c \u8bed\u6cd5\uff1a iptables -t \u8868\u540d -A \u94fe\u540d \u5339\u914d\u6761\u4ef6 -j \u52a8\u4f5c 1 # iptables -t filter -A INPUT -s 172.16.10.102 -j ACCEPT \u6b64\u65f6filter\u8868\u7684\u72b6\u6001 1 2 3 4 5 # iptables -nvL INPUT Chain INPUT ( policy ACCEPT 27 packets, 2764 bytes ) pkts bytes target prot opt in out source destination 203 17052 DROP all -- * * 172 .16.10.102 0 .0.0.0/0 0 0 ACCEPT all -- * * 172 .16.10.102 0 .0.0.0/0 \u89c4\u5219\u5339\u914d\u987a\u5e8f \uff1a\u4ece\u4e0a\u5230\u4e0b\u5339\u914d\uff0c\u5982\u679c\u524d\u9762\u7684\u89c4\u5219\u5339\u914d\u6210\u529f\u5c31\u4e0d\u4f1a\u6267\u884c\u540e\u9762\u7684\u89c4\u5219\u4e86\u3002","title":"2.2 \u8ffd\u52a0\u4e00\u6761\u89c4\u5219"},{"location":"linux/network/iptables/#3_1","text":"\u8bed\u6cd5\uff1a iptables -t \u8868\u540d -D \u94fe\u540d \u5339\u914d\u6761\u4ef6 -j \u52a8\u4f5c","title":"3. \u5220"},{"location":"linux/network/iptables/#31","text":"\u8bed\u6cd5\uff1a iptables -t filter -D INPUT \u7f16\u53f7 1 2 # \u5220\u9664\u7b2c3\u6761\u89c4\u5219 # iptables -t filter -D INPUT 3","title":"3.1 \u6839\u636e\u89c4\u5219\u7684\u7f16\u53f7\u5220\u9664"},{"location":"linux/network/iptables/#32-target","text":"1 # iptables -t filter -D INPUT -s 172.16.10.102 -j DROP","title":"3.2 \u6839\u636e\u5177\u4f53\u7684\u5339\u914d\u6761\u4ef6\u4e0etarget\u5220\u9664"},{"location":"linux/network/iptables/#33","text":"-F \u94fe\u540d \uff1aFLUSH \u51b2\u5237\uff08\u5220\u9664\uff09\u6307\u5b9a\u94fe\u4e2d\u7684\u6240\u6709\u89c4\u5219 1 2 3 4 # \u6e05\u9664INPUT\u94fe\u4e0a\u7684\u89c4\u5219 # iptables -t filter -F INPUT # \u6e05\u9664filter\u8868\u603b\u6240\u6709\u94fe\u4e0a\u7684\u89c4\u5219 # iptables -t filter -F \u6ce8\u610f\uff1a \u82e5\u89c4\u5219\u8868\u4e2d\u6709\u591a\u6761\u76f8\u540c\u89c4\u5219\u65f6\uff0c\u6309\u5185\u5bb9\u5339\u914d\u53ea\u5220\u9664\u5e8f\u53f7\u6700\u5c0f\u7684\u4e00\u6761 \u6309\u53f7\u7801\u5339\u914d\u5220\u9664\u65f6\uff0c\u786e\u4fdd\u89c4\u5219\u53f7\u5c0f\u4e8e\u7b49\u4e8e\u5df2\u6709\u89c4\u5219\u6570\uff0c\u5426\u5219\u62a5\u9519 \u6309\u5185\u5bb9\u5339\u914d\u5220\u9664\u65f6\uff0c\u786e\u4fdd\u89c4\u5219\u5b58\u5728\uff0c\u5426\u5219\u62a5\u9519","title":"3.3 \u5220\u9664\u6307\u5b9a\u8868\u4e2d\u67d0\u6761\u94fe\u7684\u6240\u6709\u89c4\u5219"},{"location":"linux/network/iptables/#4","text":"","title":"4. \u6539"},{"location":"linux/network/iptables/#41","text":"\u8bed\u6cd5\uff1a iptables -P \u94fe\u540d \u52a8\u4f5c 1 # iptables -t filter -P FORWARD DROP","title":"4.1 \u4fee\u6539\u94fe\u7684\u9ed8\u8ba4\u89c4\u5219"},{"location":"linux/network/iptables/#42","text":"\u8bed\u6cd5\uff1a iptables -t \u8868\u540d -R \u94fe\u540d \u89c4\u5219\u5e8f\u53f7 \u89c4\u5219\u539f\u6765\u7684\u5339\u914d\u6761\u4ef6 -j \u52a8\u4f5c 1 # iptables -t filter -R INPUT 1 -s 172.16.10.100 -j ACCEPT \u6ce8\u610f\uff1a\u5fc5\u987b\u8981\u6307\u5b9a\u6e90\u5730\u5740 ubuntu\u7cfb\u7edf\u53c2\u8003\uff1ahttps://help.ubuntu.com/community/IptablesHowTo","title":"4.2 \u4fee\u6539\u89c4\u5219"},{"location":"linux/network/iptables/#_1","text":"","title":"\u4e09\u3001\u5339\u914d\u6761\u4ef6"},{"location":"linux/network/iptables/#1_3","text":"","title":"1. \u57fa\u672c\u5339\u914d"},{"location":"linux/network/iptables/#11_1","text":"\u8bed\u6cd5\uff1a -s \u6765\u6e90\u5730\u5740 \u53ef\u4ee5\u662fIP\u3001\u7f51\u6bb5\u3001\u57df\u540d\uff0c\u4e5f\u53ef\u4ee5\u662f\u7a7a","title":"1.1. \u6e90\u5730\u5740"},{"location":"linux/network/iptables/#111-ip","text":"1 # iptables -t filter -I INPUT -s 172.16.10.100,172.16.10.102 -j DROP","title":"1.1.1 \u6307\u5b9aIP"},{"location":"linux/network/iptables/#112","text":"1 # iptables -t filter -I INPUT -s 172.16.10.0/24 -j DROP","title":"1.1.2 \u6307\u5b9a\u7f51\u6bb5"},{"location":"linux/network/iptables/#113","text":"1 # iptables -t filter -I INPUT ! -s 172.16.10.102 -j DROP","title":"1.1.3 \u53d6\u53cd"},{"location":"linux/network/iptables/#12_1","text":"\u8bed\u6cd5\uff1a -d \u76ee\u7684\u5730\u5740 \u53ef\u4ee5\u662fIP\u3001\u7f51\u6bb5\u3001\u57df\u540d\uff0c\u4e5f\u53ef\u4ee5\u662f\u7a7a\uff08\u540c-s\uff09 1 # iptables -t filter -I INPUT -d 172.16.10.101 -j DROP","title":"1.2. \u76ee\u6807\u5730\u5740"},{"location":"linux/network/iptables/#13_1","text":"\u8bed\u6cd5\uff1a -p [tcp|udp|icmp|udplite|icmpv6|ah|sctp] 1 # iptables -t filter -I INPUT -s 172.16.10.102 -d 172.16.10.101 -p tcp -j REJECT","title":"1.3. \u534f\u8bae\u7c7b\u578b"},{"location":"linux/network/iptables/#14-i-o","text":"-i \u5339\u914d\u6570\u636e\u8fdb\u5165\u7684\u7f51\u7edc\u63a5\u53e3 \uff1a\u6b64\u53c2\u6570\u4e3b\u8981\u7528\u4e8enat\u8868\uff0c\u4f8b\u5982\u76ee\u6807\u5730\u5740\u8f6c\u6362 -o \u5339\u914d\u6570\u636e\u6d41\u51fa\u7684\u7f51\u7edc\u63a5\u53e3 1 # iptables -t filter -I INPUT -i eth0 -p icmp -j REJECT -i: \u53ea\u80fd\u7528\u4e8ePREROUING\u3001INPUT\u3001FORWARD -o: \u53ea\u80fd\u7528\u4e8eFORWARD\u3001OUTPUT\u3001POSTROUTING","title":"1.4. \u7f51\u5361\u63a5\u53e3 -i/-o"},{"location":"linux/network/iptables/#2_3","text":"\u6269\u5c55\u5339\u914d\u6761\u4ef6\u4f7f\u7528\u65f6\u9700\u8981\u4f9d\u8d56\u4e00\u4e9b\u6269\u5c55\u6a21\u5757","title":"2. \u6269\u5c55\u5339\u914d"},{"location":"linux/network/iptables/#21-tcp","text":"","title":"2.1 tcp\u6a21\u5757"},{"location":"linux/network/iptables/#211","text":"\u8bed\u6cd5\uff1a -m \u6269\u5c55\u6a21\u5757\u540d -p \u534f\u8bae\u540d\u79f0 --dport \u7aef\u53e3 1 # iptables -t filter -I INPUT -s 172.16.10.102 -d 10.0.0.132 -p tcp --dport 80 -j REJECT \u7aef\u53e3\u7684\u683c\u5f0f\uff1a 80 \u6216 1000: \u6216 :3000 \u6216 6000:8000","title":"2.1.1 \u76ee\u6807\u7aef\u53e3"},{"location":"linux/network/iptables/#212","text":"\u8bed\u6cd5\uff1a -m \u6269\u5c55\u6a21\u5757\u540d -p \u534f\u8bae\u540d\u79f0 --sport \u7aef\u53e3 1 # iptables -t filter -I INPUT -s 172.16.10.102 -m tcp -p tcp --sport 22 -j ACCEPT","title":"2.1.2 \u6e90\u7aef\u53e3"},{"location":"linux/network/iptables/#213-tcp-flags","text":"\u8bed\u6cd5\uff1a --tcp-flags SYN,ACK,FIN,RST URG,PSH SYN 1 2 3 # iptables -t filter -I INPUT -s 172.16.10.102 -m tcp -p tcp --dport 22 --tcp-flags SYN,ACK,FIN,RST,URG,PSH SYN -j REJECT \u6216 # iptables -t filter -I INPUT -s 172.16.10.102 -m tcp -p tcp --dport 22 --tcp-flags ALL SYN -j REJECT --tcp-flags \u9700\u8981\u5339\u914dTCP\u5934\u4e2d\u7684\u54ea\u4e9b\u6807\u5fd7\u4f4d \u5728\u7b2c\u4e00\u90e8\u5206\u7684\u6807\u5fd7\u4f4d\u5217\u8868\u4e2d\uff0c\u54ea\u4e9b\u6807\u5fd7\u4f4d\u5fc5\u987b\u4e3a1","title":"2.1.3 --tcp-flags"},{"location":"linux/network/iptables/#22-udp","text":"1 2 # iptables -t filter -I INPUT -m udp -p udp --dport 137 -j ACCEPT # iptables -t filter -I INPUT -m udp -p udp --sport 138 -j ACCEPT","title":"2.2 udp\u6269\u5c55"},{"location":"linux/network/iptables/#23-multiport","text":"1 # iptables -t filter -I INPUT -s 172.16.10.102 -m multiport -p tcp --dport 22,80,8080 -j ACCEPT","title":"2.3 multiport\u6a21\u5757(\u591a\u4e2a\u4e0d\u8fde\u7eed\u7684\u7aef\u53e3)"},{"location":"linux/network/iptables/#24-icmp","text":"1 2 # \u522b\u7684\u4e3b\u673aping\u4e0d\u8fdb\u6765\uff0c\u81ea\u5df1\u5411\u5916\u8bf7\u6c42\u56de\u590d\u7684\u62a5\u6587\u4e5f\u65e0\u6cd5\u8fdb\u5165\u9632\u706b\u5899 # iptables -t filter -I INPUT -p icmp -j REJECT \u53ea\u7981\u6b62\u88ab\u4ebaping 1 2 3 # iptables -t filter -I INPUT -m icmp -p icmp --icmp-type 8/0 -j REJECT # \u6216 # iptables -t filter -I INPUT -m icmp -p icmp --icmp-type \"echo-request\" -j REJECT","title":"2.4 icmp\u6269\u5c55"},{"location":"linux/network/iptables/#25-state","text":"state\u6a21\u5757\u53ef\u4ee5\u5b9e\u73b0\u8fde\u63a5\u8ffd\u8e2a\u673a\u5236\uff0c\u6309\u5305\u72b6\u6001\u5339\u914d \u8fde\u63a5\u72b6\u6001\uff1aNEW\u3001ESTABLISHED\u3001RELATED\u3001INVALID\u3001UNTRACKED NEW\uff1a\u8fde\u63a5\u4e2d\u7684\u7b2c\u4e00\u4e2a\u5305\uff0c\u72b6\u6001\u5c31\u662fNEW ESTABLISHED\uff1a\u8fde\u63a5\u6001\uff0cNEW\u72b6\u6001\u540e\u9762\u7684\u5305\u7684\u72b6\u6001 RELATED\uff1a\u884d\u751f\u6001\uff08\u4e00\u4e2a\u670d\u52a1\u5efa\u7acb\u4e86\u4e24\u4e2a\u8fde\u63a5\uff0c\u4e24\u4e2a\u8fde\u63a5\u4e2d\u7684\u67d0\u4e9b\u62a5\u6587\u76f4\u63a5\u6709\u5173\u7cfb\uff0c\u5982FTP\uff09 INVALID\uff1a\u5305\u65e0\u6cd5\u88ab\u8bc6\u522b\uff08\u4e0d\u80fd\u88ab\u8bc6\u522b\u5c5e\u4e8e\u54ea\u4e2a\u8fde\u63a5\u6216\u6ca1\u6709\u4efb\u4f55\u72b6\u6001\uff09 UNTRACKED\uff1a\u62a5\u6587\u672a\u88ab\u8ffd\u8e2a \u5b9e\u73b0\u53ea\u5141\u8bb8\u56de\u5e94\u7684\u62a5\u6587\u901a\u8fc7\u9632\u706b\u5899(\u53ea\u80fd\u8bbf\u95ee\u522b\u4eba\uff0c\u522b\u4eba\u4e0d\u80fd\u8bbf\u95ee\u81ea\u5df1) 1 2 # iptables -t filter -I INPUT -m state --state RELATED,ESTABLISHED -j ACCEPT # iptables -t filter -A INPUT -j REJECT","title":"2.5 state \u6269\u5c55"},{"location":"linux/network/iptables/#26-mac","text":"\u963b\u65ad\u6765\u81ea\u67d0MAC\u5730\u5740\u7684\u6570\u636e\u5305\u901a\u8fc7\u672c\u673a\uff0c\u4e0d\u5e38\u7528 1 # iptables -A INPUT -m mac --mac-source 00:0c:29:53:ca:49 -j DROP \u62a5\u6587\u7ecf\u8fc7\u8def\u7531\u540e\uff0c\u6570\u636e\u5305\u4e2d\u539f\u6709\u7684mac\u4fe1\u606f\u4f1a\u88ab\u66ff\u6362\uff0c\u6240\u4ee5\u5728\u8def\u7531\u540e\u7684iptables\u4e2d\u4f7f\u7528msc\u6a21\u5757\u65f6\u6ca1\u6709\u610f\u4e49\u7684\u3002","title":"2.6 mac\u6269\u5c55"},{"location":"linux/network/iptables/#27-limit","text":"\u7528\u4e00\u5b9a\u901f\u7387\u5339\u914d\u6570\u636e\u5305 1 2 3 4 5 6 7 8 9 10 11 # iptables -A INPUT -d 10.0.0.132 -m limit --limit 50/s -j DROP # iptables -L Chain INPUT ( policy ACCEPT ) target prot opt source destination DROP all -- anywhere 10 .0.0.132 limit: avg 50 /sec burst 5 Chain FORWARD ( policy ACCEPT ) target prot opt source destination Chain OUTPUT ( policy ACCEPT ) target prot opt source destination","title":"2.7 limit\u6269\u5c55"},{"location":"linux/network/iptables/#_2","text":"\u767d\u540d\u5355\uff1a\u653e\u884c\u5339\u914d\u89c4\u5219\u7684\u5305 \u9ed1\u540d\u5355\uff1a\u62d2\u7edd\u5339\u914d\u89c4\u5219\u7684\u5305 \u767d\u540d\u5355\u7684\u5b9e\u73b0\uff1a 1 2 3 4 # \u653e\u884c22\u7aef\u53e3 # iptables -I INPUT -p tcp --dport 22 -j ACCEPT # INPUT\u94fe\u7684\u9ed8\u8ba4\u7b56\u7565\u6539\u4e3aDROP # iptables -P INPUT DROP \u4e0d\u5efa\u8bae\u628a\u9ed8\u8ba4\u7b56\u7565\u8bbe\u7f6e\u4e3aDROP\uff0c\u4e00\u65e6\u6267\u884ciptables -F\uff0c\u4efb\u4f55\u5305\u90fd\u8fdb\u4e0d\u53bb\uff0cssh\u5c31\u4f1a\u65ad\u5f00 \u4f18\u5316\u65b9\u6cd5 1 2 3 4 # \u653e\u884c22\u7aef\u53e3 # iptables -I INPUT -p tcp --dport 22 -j ACCEPT # \u5176\u4ed6\u90fd\u62d2\u7edd # iptables -A INPUT -j REJECT","title":"\u56db\u3001\u9ed1\u767d\u540d\u5355"},{"location":"linux/network/iptables/#_3","text":"\u81ea\u5b9a\u4e49\u94fe\u7684\u610f\u4e49\uff1a \u4fbf\u4e8e\u5206\u7c7b\u7ba1\u7406 \u81ea\u5b9a\u4e49\u94fe\u4e0d\u80fd\u76f4\u63a5\u4f7f\u7528\uff0c\u9700\u8981\u88ab\u9ed8\u8ba4\u94fe\u5f15\u7528\u624d\u53ef\u4ee5\u4f7f\u7528","title":"\u4e94\u3001\u81ea\u5b9a\u4e49\u94fe"},{"location":"linux/network/iptables/#1_4","text":"\u8bed\u6cd5\uff1a -N \u81ea\u5b9a\u4e49\u94fe\u7684\u540d\u79f0 1 2 3 4 5 6 7 8 9 10 11 12 13 # iptables -t filter -N IN_WEB # iptables -L Chain INPUT ( policy ACCEPT ) target prot opt source destination Chain FORWARD ( policy DROP ) target prot opt source destination Chain OUTPUT ( policy ACCEPT ) target prot opt source destination Chain IN_WEB ( 0 references ) # \u5f15\u7528\u8ba1\u6570\u4e3a0 target prot opt source destination","title":"1. \u521b\u5efa\u81ea\u5b9a\u4e49\u94fe"},{"location":"linux/network/iptables/#2_4","text":"1 2 3 4 5 root@node1:~# iptables -I IN_WEB -s 172 .16.10.100 -j REJECT root@node1:~# iptables -t filter -nvL IN_WEB Chain IN_WEB ( 0 references ) pkts bytes target prot opt in out source destination 0 0 REJECT all -- * * 172 .16.10.100 0 .0.0.0/0 reject-with icmp-port-unreachable","title":"2. \u7ed9\u81ea\u5b9a\u4e49\u94fe\u6dfb\u52a0\u89c4\u5219"},{"location":"linux/network/iptables/#3_2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 # iptables -I INPUT -p tcp --dport 80 -j IN_WEB # iptables -L Chain INPUT ( policy ACCEPT ) target prot opt source destination IN_WEB tcp -- anywhere anywhere tcp dpt:http Chain FORWARD ( policy DROP ) target prot opt source destination Chain OUTPUT ( policy ACCEPT ) target prot opt source destination Chain IN_WEB ( 1 references ) target prot opt source destination REJECT all -- 172 .16.10.100 anywhere reject-with icmp-port-unreachable","title":"3. \u5f15\u7528\u81ea\u5b9a\u4e49\u94fe"},{"location":"linux/network/iptables/#4_1","text":"1 # iptables -E IN_WEB WEB","title":"4. \u91cd\u547d\u540d\u81ea\u5b9a\u4e49\u94fe"},{"location":"linux/network/iptables/#5","text":"\u5220\u9664\u6761\u4ef6 \u81ea\u5b9a\u4e49\u94fe\u6ca1\u6709\u88ab\u4efb\u4f55\u9ed8\u8ba4\u94fe\u5f15\u7528\uff0c\u5373\u81ea\u5b9a\u4e49\u94fe\u7684\u5f15\u7528\u8ba1\u6570\u4e3a0 \u81ea\u5b9a\u4e49\u94fe\u4e2d\u6ca1\u6709\u4efb\u4f55\u89c4\u5219 1 2 3 # iptables -D INPUT 1 # iptables -t filter -F WEB # iptables -X WEB","title":"5. \u5220\u9664\u81ea\u5b9a\u4e49\u94fe"},{"location":"linux/network/iptables/#target","text":"","title":"\u516d\u3001\u52a8\u4f5c(target)"},{"location":"linux/network/iptables/#1_5","text":"","title":"1. \u57fa\u7840\u52a8\u4f5c"},{"location":"linux/network/iptables/#1-accept","text":"\u901a\u8fc7\uff0c\u5141\u8bb8\u6570\u636e\u5305\u901a\u8fc7\u672c\u94fe\u800c\u4e0d\u62e6\u622a\u5b83","title":"1. ACCEPT"},{"location":"linux/network/iptables/#2-drop","text":"\u4e22\u5f03\uff0c\u963b\u6b62\u6570\u636e\u5305\u901a\u8fc7\u672c\u94fe\u800c\u4e22\u5f03\u5b83","title":"2. DROP"},{"location":"linux/network/iptables/#2_5","text":"","title":"2. \u6269\u5c55\u52a8\u4f5c"},{"location":"linux/network/iptables/#21-reject","text":"\u8bed\u6cd5\uff1a --reject-with\u3000\u5bf9\u65b9\u88ab\u62d2\u7edd\u65f6\u7684\u63d0\u793a\u4fe1\u606f \u5bf9\u65b9\u88ab\u62d2\u7edd\u65f6\u7684\u63d0\u793a\u4fe1\u606f\uff1a 1 2 3 4 5 6 icmp-port-unreachable \u9ed8\u8ba4 icmp-net-unreachable icmp-host-unreachabe icmp-proto-unreachabe icmp-net-prohibited icmp-admin-prohibited","title":"2.1. REJECT"},{"location":"linux/network/iptables/#22-log","text":"\u5c06\u7b26\u5408\u6761\u4ef6\u7684\u62a5\u6587\u7684\u76f8\u5173\u4fe1\u606f\u8bb0\u5f55\u5230\u65e5\u5fd7\u4e2d \u9009\u9879\uff1a --log-level [emerg|alert|crit|error|warning|notice|info|debug] --log-prefix \u4fe1\u606f\u524d\u7f00 \u4fe1\u606f\u524d\u7f0029\u4e2a\u5b57\u7b26\u4ee5\u5185 1 2 # \u628a\u60f3\u8981\u4e3b\u52a8\u8fde\u63a522\u7aef\u53e3\u7684\u62a5\u6587\u53ca\u76f8\u5173\u4fe1\u606f\u8bb0\u5f55\u5230\u65e5\u5fd7\u4e2d # iptables -I INPUT -p tcp --dport 22 -m state --state NEW -j LOG --log-prefix \"want-in-from-port-22\"","title":"2.2. LOG"},{"location":"linux/network/iptables/#23-snat","text":"\u6e90\u5730\u5740\u8f6c\u6362 1 2 3 4 # 1. \u8f6c\u6362\u4e3a\u5355IP # iptables -t nat -A POSTROUTING -s 10.1.0.0/16 -j SNAT --to-source 172.16.0.101 # 2. \u8f6c\u6362\u5230IP\u5730\u5740\u6c60 #iptables -t nat -A POSTROUTING -s 10.1.0.0/16 -j SNAT --to-source 172.16.0.101-172.16.0.200 \u53c2\u6570\uff1a 1 2 3 4 5 -t: \u64cd\u4f5cnat\u8868 -A: \u5c06\u89c4\u5219\u6dfb\u52a0\u5230POSTROUTING\u94fe\u672b\u5c3e -s: \u6e90\u5730\u5740 -j: \u4f7f\u7528 SNAT \u52a8\u4f5c --to-source: \u628a\u5339\u914d\u5230\u7684\u62a5\u6587\u4fee\u6539\u4e3a\u6307\u5b9a\u5730\u5740","title":"2.3 SNAT"},{"location":"linux/network/iptables/#24-dnat","text":"\u76ee\u6807\u5730\u5740\u8f6c\u6362\uff0c\u8bed\u6cd5\u540cSNAT\u3002 1 # iptables -t nat -I PREROUTING -d 172.16.10.101 -p tcp --dport 3389 -j DNAT --to-destination 10.1.1.6:3389","title":"2.4 DNAT"},{"location":"linux/network/iptables/#25-masquerade","text":"\u4e0eSNAT\u7c7b\u4f3c\uff0c\u4f46\u662f\u53ef\u4ee5\u52a8\u6001\u7684\u5c06\u6e90\u5730\u5740\u8f6c\u6362\u4e3a\u53ef\u7528\u7684IP\u5730\u5740 1 # iptables -t nat -A POSTROUTING -s 10.1.0.0/16 -o eth0 -j MASQUERADE","title":"2.5 MASQUERADE"},{"location":"linux/network/iptables/#26-redirect","text":"\u5728\u672c\u673a\u8fdb\u7a0b\u7aef\u53e3\u6620\u5c04 1 # iptables -t nat -A PREROUTING -p tcp --dport 80 -j REDIRECT --to-ports 8080 \u4f7f\u7528NAT\u9700\u8981\u5f00\u542f\u8f6c\u53d1\uff1a 1 # echo 1 > /proc/sys/net/ipv4/ip_forward \u62d2\u7edd\u4e0e\u7981\u6b62\u4e00\u4e2a\u6570\u636e\u5305\u7684\u533a\u522b \u62d2\u7edd\uff1a\u4e22\u5f03\u6570\u636e\u5305\u7684\u540c\u65f6\u7ed9\u53d1\u9001\u8005\u8fd4\u56de\u4e00\u4f1aICMP\u9519\u8bef\u6d88\u606f \u4e22\u5f03\uff1a\u6570\u636e\u5305\u76f4\u63a5\u4e22\u5f03\u4e0d\u8fd4\u56de\u4efb\u4f55\u901a\u77e5 \u4e3a\u4e86\u5b89\u5168\uff0c\u901a\u5e38\u76f4\u63a5\u4e22\u5f03\uff0c\u539f\u56e0\u67093\uff1a \u53d1\u9001\u9519\u8bef\u6d88\u606f\u4f1a\u4f7f\u901a\u4fe1\u91cf\u52a0\u500d \u54cd\u5e94\u7684\u6570\u636e\u5305\u53ef\u80fd\u662f\u62d2\u7edd\u670d\u52a1\u5de5\u5177 \u5373\u4f7f\u4e00\u4e2a\u9519\u8bef\u7684\u6d88\u606f\u90fd\u4f1a\u7ed9\u653b\u51fb\u8005\u63d0\u4f9b\u6f5c\u5728\u7684\u6709\u7528\u4fe1\u606f","title":"2.6 REDIRECT"},{"location":"linux/network/iptables/#_4","text":"1 2 3 4 # \u4fdd\u5b58 # iptables-save # \u6062\u590d # iptables-restore \u53c2\u8003\uff1a https://wiki.archlinux.org/index.php/iptables http://www.zsythink.net/archives/1199","title":"\u4e03\u3001\u4fdd\u5b58"},{"location":"music/erhu/","text":"/* \u5b9a\u5236\u516c\u544a\u680f\u97f3\u4e50\u63d2\u4ef6\u7684\u6837\u5f0f */ .aplayer { font-family: Arial,Helvetica,sans-serif; /*\u97f3\u4e50\u63d2\u4ef6\u5b57\u4f53*/ margin: 0px; /*\u97f3\u4e50\u63d2\u4ef6\u4e0e\u516c\u544a\u680f\u5de6\u8fb9\u7684\u8fb9\u8ddd\uff0c0px\u5c31\u662f\u76f4\u63a5\u62b5\u5230\u516c\u544a\u680f\u5de6\u8fb9\u7684\u8fb9\u4e0a*/ box-shadow: 0 2px 2px 0 rgba(0,0,0,.14), 0 3px 1px -2px rgba(0,0,0,.2), 0 1px 5px 0 rgba(0,0,0,.12); border-radius: 2px; overflow: hidden; -webkit-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; line-height: normal; } var ap = new APlayer({ element: document.getElementById('player'), narrow: false, autoplay: false, <!-- \u662f\u5426\u81ea\u52a8\u64ad\u653e --> showlrc: false, theme: '#cdd9e1', <!-- \u63d2\u4ef6\u80cc\u666f\u989c\u8272\uff0c\u5efa\u8bae\u548c\u4f60\u7684\u516c\u544a\u680f\u80cc\u666f\u8272\u4e00\u6837\uff0c\u8fd9\u6837\u878d\u4e3a\u4e00\u4f53\u7684\u611f\u89c9 --> music: [ { title: '\u96e8\u788e\u6c5f\u5357', author: '\u6cb3\u56fe', url: '../erhu/\u6cb3\u56fe - \u96e8\u788e\u6c5f\u5357.mp3', pic: '' }, ] }); ap.init();","title":"\u4e8c\u80e1"},{"location":"music/guqin/","text":"/* \u5b9a\u5236\u516c\u544a\u680f\u97f3\u4e50\u63d2\u4ef6\u7684\u6837\u5f0f */ .aplayer { font-family: Arial,Helvetica,sans-serif; /*\u97f3\u4e50\u63d2\u4ef6\u5b57\u4f53*/ margin: 0px; /*\u97f3\u4e50\u63d2\u4ef6\u4e0e\u516c\u544a\u680f\u5de6\u8fb9\u7684\u8fb9\u8ddd\uff0c0px\u5c31\u662f\u76f4\u63a5\u62b5\u5230\u516c\u544a\u680f\u5de6\u8fb9\u7684\u8fb9\u4e0a*/ box-shadow: 0 2px 2px 0 rgba(0,0,0,.14), 0 3px 1px -2px rgba(0,0,0,.2), 0 1px 5px 0 rgba(0,0,0,.12); border-radius: 2px; overflow: hidden; -webkit-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; line-height: normal; } var ap = new APlayer({ element: document.getElementById('player'), narrow: false, autoplay: false, <!-- \u662f\u5426\u81ea\u52a8\u64ad\u653e --> showlrc: false, theme: '#cdd9e1', <!-- \u63d2\u4ef6\u80cc\u666f\u989c\u8272\uff0c\u5efa\u8bae\u548c\u4f60\u7684\u516c\u544a\u680f\u80cc\u666f\u8272\u4e00\u6837\uff0c\u8fd9\u6837\u878d\u4e3a\u4e00\u4f53\u7684\u611f\u89c9 --> music: [{ title: '\u9152\u72c2', author: '\u9f9a\u4e00', url: '../guqin/\u9f9a\u4e00 - \u9152\u72c2.mp3', pic: '' }, { title: '\u5e7f\u9675\u6563', author: '\u7ba1\u5e73\u6e56', url: '../guqin/\u7ba1\u5e73\u6e56 - \u5e7f\u9675\u6563.mp3', pic: '' }, { title: '\u9633\u5173\u4e09\u53e0', author: '\u7ba1\u5e73\u6e56', url: '../guqin/\u7ba1\u5e73\u6e56 - \u9633\u5173\u4e09\u53e0.mp3', pic: '' }, ] }); ap.init();","title":"\u53e4\u7434"},{"location":"music/pipa/","text":"/* \u5b9a\u5236\u516c\u544a\u680f\u97f3\u4e50\u63d2\u4ef6\u7684\u6837\u5f0f */ .aplayer { font-family: Arial,Helvetica,sans-serif; /*\u97f3\u4e50\u63d2\u4ef6\u5b57\u4f53*/ margin: 0px; /*\u97f3\u4e50\u63d2\u4ef6\u4e0e\u516c\u544a\u680f\u5de6\u8fb9\u7684\u8fb9\u8ddd\uff0c0px\u5c31\u662f\u76f4\u63a5\u62b5\u5230\u516c\u544a\u680f\u5de6\u8fb9\u7684\u8fb9\u4e0a*/ box-shadow: 0 2px 2px 0 rgba(0,0,0,.14), 0 3px 1px -2px rgba(0,0,0,.2), 0 1px 5px 0 rgba(0,0,0,.12); border-radius: 2px; overflow: hidden; -webkit-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; line-height: normal; } var ap = new APlayer({ element: document.getElementById('player'), narrow: false, autoplay: false, <!-- \u662f\u5426\u81ea\u52a8\u64ad\u653e --> showlrc: false, theme: '#cdd9e1', <!-- \u63d2\u4ef6\u80cc\u666f\u989c\u8272\uff0c\u5efa\u8bae\u548c\u4f60\u7684\u516c\u544a\u680f\u80cc\u666f\u8272\u4e00\u6837\uff0c\u8fd9\u6837\u878d\u4e3a\u4e00\u4f53\u7684\u611f\u89c9 --> music: [ { title: '\u7435\u7436\u8bed', author: '\u6797\u6d77', url: '../pipa/\u7435\u7436\u8bed.mp3', pic: '' }, { title: '\u6625\u6c5f\u82b1\u6708\u591c', author: '\u8d75\u806a', url: '../pipa/\u8d75\u806a - \u6625\u6c5f\u82b1\u6708\u591c.flac', pic: '' }, ] }); ap.init();","title":"\u7435\u7436"},{"location":"music/xiao/","text":"/* \u5b9a\u5236\u516c\u544a\u680f\u97f3\u4e50\u63d2\u4ef6\u7684\u6837\u5f0f */ .aplayer { font-family: Arial,Helvetica,sans-serif; /*\u97f3\u4e50\u63d2\u4ef6\u5b57\u4f53*/ margin: 0px; /*\u97f3\u4e50\u63d2\u4ef6\u4e0e\u516c\u544a\u680f\u5de6\u8fb9\u7684\u8fb9\u8ddd\uff0c0px\u5c31\u662f\u76f4\u63a5\u62b5\u5230\u516c\u544a\u680f\u5de6\u8fb9\u7684\u8fb9\u4e0a*/ box-shadow: 0 2px 2px 0 rgba(0,0,0,.14), 0 3px 1px -2px rgba(0,0,0,.2), 0 1px 5px 0 rgba(0,0,0,.12); border-radius: 2px; overflow: hidden; -webkit-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; line-height: normal; } var ap = new APlayer({ element: document.getElementById('player'), narrow: false, autoplay: false, <!-- \u662f\u5426\u81ea\u52a8\u64ad\u653e --> showlrc: false, theme: '#cdd9e1', <!-- \u63d2\u4ef6\u80cc\u666f\u989c\u8272\uff0c\u5efa\u8bae\u548c\u4f60\u7684\u516c\u544a\u680f\u80cc\u666f\u8272\u4e00\u6837\uff0c\u8fd9\u6837\u878d\u4e3a\u4e00\u4f53\u7684\u611f\u89c9 --> music: [ { title: '\u5e73\u6e56\u79cb\u6708', author: '\u7f57\u5b88\u8bda', url: '../xiao/\u7f57\u5b88\u8bda - \u5e73\u6e56\u79cb\u6708(\u7bab).mp3', pic: '' }, { title: '\u6674\u96ef\u66f2', author: '\u8c2d\u708e\u5065', url: '../xiao/\u8c2d\u708e\u5065 - \u6674\u96ef\u66f2.mp3', pic: '' }, ] }); ap.init();","title":"\u7bab"},{"location":"music/zhudi/","text":"/* \u5b9a\u5236\u516c\u544a\u680f\u97f3\u4e50\u63d2\u4ef6\u7684\u6837\u5f0f */ .aplayer { font-family: Arial,Helvetica,sans-serif; /*\u97f3\u4e50\u63d2\u4ef6\u5b57\u4f53*/ margin: 0px; /*\u97f3\u4e50\u63d2\u4ef6\u4e0e\u516c\u544a\u680f\u5de6\u8fb9\u7684\u8fb9\u8ddd\uff0c0px\u5c31\u662f\u76f4\u63a5\u62b5\u5230\u516c\u544a\u680f\u5de6\u8fb9\u7684\u8fb9\u4e0a*/ box-shadow: 0 2px 2px 0 rgba(0,0,0,.14), 0 3px 1px -2px rgba(0,0,0,.2), 0 1px 5px 0 rgba(0,0,0,.12); border-radius: 2px; overflow: hidden; -webkit-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none; line-height: normal; } var ap = new APlayer({ element: document.getElementById('player'), narrow: false, autoplay: false, <!-- \u662f\u5426\u81ea\u52a8\u64ad\u653e --> showlrc: false, theme: '#cdd9e1', <!-- \u63d2\u4ef6\u80cc\u666f\u989c\u8272\uff0c\u5efa\u8bae\u548c\u4f60\u7684\u516c\u544a\u680f\u80cc\u666f\u8272\u4e00\u6837\uff0c\u8fd9\u6837\u878d\u4e3a\u4e00\u4f53\u7684\u611f\u89c9 --> music: [ { title: '\u59d1\u82cf\u884c', author: '\u4fde\u900a\u53d1', url: '../zhudi/\u4fde\u900a\u53d1 - \u59d1\u82cf\u884c.mp3', pic: '' }, ] }); ap.init();","title":"\u7b1b"},{"location":"programming/python/Jinja2/","text":"Jinja2 \u00b6 Jinja2\u662f\u57fa\u4e8epython\u7684\u6a21\u677f\u5f15\u64ce\u3002\u4ed6\u7684\u8bbe\u8ba1\u601d\u60f3\u6765\u6e90\u4e8e Django \u7684\u6a21\u677f\u5f15\u64ce\uff0c\u5e76\u6269\u5c55\u4e86\u5176\u8bed\u6cd5\u548c\u4e00\u7cfb\u5217\u5f3a\u5927\u7684\u529f\u80fd\u3002 \u4e00\u3001\u57fa\u672c\u5143\u7d20 \u00b6 1.\u5b57\u9762\u91cf \u00b6 \u7528\u5355\u5f15\u53f7\u6216\u53cc\u5f15\u53f7\u62ec\u8d77\u6765\u7684\u3002\u5982 'hello' \u6216 \"hello\" 2.\u5217\u8868 \u00b6 \u4e00\u5bf9\u4e2d\u62ec\u53f7\u62ec\u8d77\u6765\u7684\u4e1c\u897f\u662f\u4e00\u4e2a\u5217\u8868\u3002\u5217\u8868\u7528\u4e8e\u5b58\u50a8\u548c\u8fed\u4ee3\u5e8f\u5217\u5316\u7684\u6570\u636e\u3002 ['a', 'b', 'c'] 3.\u5143\u7ec4 \u00b6 \u5143\u7ec4\u4e0e\u5217\u8868\u7c7b\u4f3c\uff0c\u53ea\u662f\u5143\u7ec4\u4e0d\u80fd\u4fee\u6539\u3002\u5982\u679c\u5143\u7ec4\u4e2d\u53ea\u6709\u4e00\u4e2a\u9879\uff0c\u9700\u8981\u4ee5\u9017\u53f7\u7ed3\u5c3e\u3002 (\u2018tuple\u2019, \u2018of\u2019, \u2018values\u2019) 4.\u5b57\u5178 \u00b6 \u5b57\u5178\u5728\u6a21\u677f\u4e2d\u5f88\u5c11\u7528 {'dict'\uff1a'of'\uff0c'key'\uff1a'and'\uff0c'value'\uff1a'pairs'} 5. \u8fd0\u7b97\u7b26 \u00b6 5.1. \u7b97\u6570\u8fd0\u7b97\u7b26 \u00b6 \u8fd0\u7b97\u7b26 \u63cf\u8ff0 + {{ 1 + 1 }} -->2 - {{ 3 - 2 }} -->1 / {{ 1 / 2 }} --> 0.5 // {{ 20 // 7 }} --> 2 % {{ 11 % 7 }} -->4 * {{ 2 * 2 }} -->4 ** {{ 2**3 }} -->8 5.2. \u6bd4\u8f83\u8fd0\u7b97\u7b26 \u00b6 \u8fd0\u7b97\u7b26 \u63cf\u8ff0 == \u6bd4\u8f83\u4e24\u4e2a\u5bf9\u8c61\u662f\u5426\u76f8\u7b49 != \u6bd4\u8f83\u4e24\u4e2a\u5bf9\u8c61\u662f\u5426\u4e0d\u7b49 > \u5982\u679c\u5de6\u8fb9\u5927\u4e8e\u53f3\u8fb9\uff0c\u8fd4\u56de true >= \u5982\u679c\u5de6\u8fb9\u5927\u4e8e\u7b49\u4e8e\u53f3\u8fb9\uff0c\u8fd4\u56de true < \u5982\u679c\u5de6\u8fb9\u5c0f\u4e8e\u53f3\u8fb9\uff0c\u8fd4\u56de true \u3002 <= \u5982\u679c\u5de6\u8fb9\u5c0f\u4e8e\u7b49\u4e8e\u53f3\u8fb9\uff0c\u8fd4\u56de true \u3002 5.3. \u903b\u8f91\u8fd0\u7b97\u7b26 \u00b6 \u8fd0\u7b97\u7b26 \u63cf\u8ff0 and \u4e0e or \u6216 not \u975e () \u8868\u8fbe\u5f0f\u7ec4 5.4. \u5176\u4ed6\u8fd0\u7b97\u7b26 \u00b6 \u8fd0\u7b97\u7b26 \u63cf\u8ff0 in {{ 1 in[1,2,3] }} \u8fd4\u56detrue is \u6d4b\u8bd5 ~ \u628a\u6240\u6709\u7684\u64cd\u4f5c\u6570\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\uff0c\u5e76\u4e14\u8fde\u63a5\u5b83\u4eec\uff0c {{ \"Hello \" ~ name ~ \"!\" }} -->Hello John! 6.\u53d8\u91cf \u00b6 6.1. \u53d8\u91cf\u5c5e\u6027\u7684\u8bbf\u95ee\u65b9\u5f0f \u00b6 1 2 {{ foo.bar }} {{ foo['bar']} \u4e24\u8005\u5728Python \u5c42\u4e2d\u7684\u533a\u522b\uff1a foo.bar \u68c0\u67e5 foo \u4e0a\u662f\u5426\u6709\u4e00\u4e2a\u540d\u4e3a bar \u7684\u5c5e\u6027\uff08 getattr(foo, 'bar') \uff09 \u5982\u679c\u6ca1\u6709\uff0c\u68c0\u67e5 foo \u4e2d\u662f\u5426\u6709\u4e00\u4e2a 'bar' \u9879\uff08 foo.__getitem__('bar') \uff09 \u5982\u679c\u6ca1\u6709\uff0c\u8fd4\u56de\u4e00\u4e2a\u672a\u5b9a\u4e49\u5bf9\u8c61 foo['bar'] \u68c0\u67e5\u5728 foo \u4e2d\u662f\u5426\u6709\u4e00\u4e2a 'bar' \u9879\uff08 foo.__getitem__('bar') \uff09 \u5982\u679c\u6ca1\u6709\uff0c\u68c0\u67e5 foo \u4e0a\u662f\u5426\u6709\u4e00\u4e2a\u540d\u4e3a bar \u7684\u5c5e\u6027\uff08 getattr(foo, 'bar') \uff09 \u5982\u679c\u6ca1\u6709\uff0c\u8fd4\u56de\u4e00\u4e2a\u672a\u5b9a\u4e49\u5bf9\u8c61 6.2. \u53d8\u91cf\u8d4b\u503c \u00b6 6.2.1. \u53d8\u91cf\u8d4b\u503c set \u00b6 {% set username='admin' %} 6.2.2. \u53d8\u91cf\u4f5c\u7528\u57df with \u00b6 \u4f7f\u7528with\u53ef\u4ee5\u4fee\u6539\u53d8\u91cf\u4f5c\u7528\u57df\uff0c\u53ea\u6709\u5728with\u5757\u4e2d\u53ef\u4ee5\u4f7f\u7528\u5b9a\u4e49\u7684\u53d8\u91cf 1 2 3 4 5 6 7 8 {% with foo = 42 %} {{ foo }} {% endwith %} {#\u7b49\u4ef7\u4e8e#} {% with %} {% set foo = 42 %} {{ foo }} {% endwith %} 7. \u6a21\u677f\u7ec4\u6210 \u00b6 \u6a21\u677f\u4e2d\u5305\u62ec\u53d8\u91cf\u3001\u8868\u8fbe\u5f0f\u3001\u6807\u7b7e {% ... %} : \u8bed\u53e5\uff08for \u5faa\u73af\u548c\u8d4b\u503c\u7b49\u8bed\u53e5\uff09 {{ ... }} : \u8868\u8fbe\u5f0f 8. \u6ce8\u91ca \u00b6 {# ... #} \u4e8c\u3001\u6a21\u677f\u6e32\u67d3 \u00b6 1. \u5b57\u7b26\u4e32 \u00b6 1 2 3 4 >>> from jinja2 import Template >>> template = Template ( \"hello {{ name }}!\" ) >>> template . render ( name = \"\u5f20\u4e09\" ) 'hello \u5f20\u4e09!' 2. \u6a21\u677f\u52a0\u8f7d\u5668 \u00b6 1 2 3 4 5 6 \u2514\u2500mysite \u2502 test.py \u2502 __init__.py \u2502 \u251c\u2500templates index.html 2.1. \u901a\u8fc7\u6a21\u5757\u52a0\u8f7d \u00b6 1 2 3 4 5 6 7 8 9 # __file__: test.py import os , sys from jinja2 import Environment , PackageLoader BASE_DIR = os . path . dirname ( os . path . dirname ( os . path . abspath ( __file__ ))) sys . path . append ( BASE_DIR ) env = Environment ( loader = PackageLoader ( 'mysite' , 'templates' )) template = env . get_template ( 'index.html' ) print ( template . render ( name = \"\u5f20\u4e09\" )) 2.2. \u901a\u8fc7\u6587\u4ef6\u7cfb\u7edf\u52a0\u8f7d \u00b6 1 2 3 4 5 6 7 8 # __file__: test.py import os from jinja2 import FileSystemLoader , Environment template_path = os . path . join ( os . path . dirname ( __file__ ), 'templates' ) env = Environment ( loader = FileSystemLoader ( template_path )) template = env . get_template ( 'index.html' ) print ( template . render ( name = \"\u5f20\u4e09\" )) \u4e09\u3001\u63a7\u5236\u7ed3\u6784 \u00b6 1. For \u00b6 1.1. \u8fed\u4ee3\u4e00\u4e2a\u5217\u8868 \u00b6 1 2 3 4 5 6 <ul> {% for user in users %} <li>{{ user.username|e }}</li> {# |e \u8868\u793a\u8f6c\u4e49 #} {% endfor %} </ul> 1.2. \u8fed\u4ee3\u4e00\u4e2a\u5b57\u5178 \u00b6 1 2 3 4 {% for key, value in my_dict.items() %} <dt>{{ key|e }}</dt> <dd>{{ value|e }}</dd> {% endfor %} 1.3. \u5982\u679c\u5e8f\u5217\u662f\u7a7a\uff0c\u53ef\u4ee5\u4f7f\u7528 else \u6e32\u67d3\u4e00\u4e2a\u7528\u4e8e\u66ff\u6362\u7684\u5757 \u00b6 1 2 3 4 5 6 \u5982\u679c\u56e0\u5e8f\u5217\u662f\u7a7a\u6216\u8005\u8fc7\u6ee4\u79fb\u9664\u4e86\u5e8f\u5217\u4e2d\u7684\u6240\u6709\u9879\u76ee\u800c\u6ca1\u6709\u6267\u884c\u5faa\u73af\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528 else \u6e32\u67d3\u4e00\u4e2a\u7528\u4e8e\u66ff\u6362\u7684\u5757 {% for user in users %} <li>{{ user.username|e }}</li> {% else %} <li><em>no users found</em></li> {% endfor %} \u5faa\u73af\u5757\u4e2d\u53ef\u4ee5\u8bbf\u95ee\u7684\u7279\u6b8a\u7684\u53d8\u91cf \u53d8\u91cf \u63cf\u8ff0 loop.index \u5f53\u524d\u5faa\u73af\u8fed\u4ee3\u7684\u6b21\u6570\uff08\u4ece 1 \u5f00\u59cb\uff09 loop.index0 \u5f53\u524d\u5faa\u73af\u8fed\u4ee3\u7684\u6b21\u6570\uff08\u4ece 0 \u5f00\u59cb\uff09 loop.revindex \u5230\u5faa\u73af\u7ed3\u675f\u9700\u8981\u8fed\u4ee3\u7684\u6b21\u6570\uff08\u4ece 1 \u5f00\u59cb\uff09 loop.revindex0 \u5230\u5faa\u73af\u7ed3\u675f\u9700\u8981\u8fed\u4ee3\u7684\u6b21\u6570\uff08\u4ece 0 \u5f00\u59cb\uff09 loop.first \u5982\u679c\u662f\u7b2c\u4e00\u6b21\u8fed\u4ee3\uff0c\u4e3a True \u3002 loop.last \u5982\u679c\u662f\u6700\u540e\u4e00\u6b21\u8fed\u4ee3\uff0c\u4e3a True \u3002 loop.length \u5e8f\u5217\u4e2d\u7684\u9879\u76ee\u6570\u3002 \u7279\u6b8a\u53d8\u91cf\u7684\u7528\u6cd5\uff1a 1 2 3 4 5 6 7 8 import os from jinja2 import FileSystemLoader , Environment template_path = os . path . join ( os . path . dirname ( __file__ ), 'templates' ) env = Environment ( loader = FileSystemLoader ( template_path )) template = env . get_template ( 'index.html' ) letters = [ 'A' , 'B' , 'C' ] print ( template . render ( letters = letters )) 1 2 3 {% for letter in letters -%} {{ loop.index }} : {{ letter }} {% endfor %} \u6267\u884c\u7ed3\u679c\uff1a 1 : A 2 : B 3 : C \u6ce8\u610f\uff1a jinja2\u4e2d\u4e0d\u53ef\u4ee5\u4f7f\u7528 continue \u548c break \u8868\u8fbe\u5f0f\u63a7\u5236\u5faa\u73af 2. IF \u00b6 if \u8bed\u53e5\u4e0epython\u4e2d\u7684\u7c7b\u4f3c\uff0c\u53ef\u4ee5\u4f7f\u7528>\u3001>=\u3001<\u3001<=\u3001==\u3001!=\u6765\u8fdb\u884c\u5224\u65ad\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528and\u3001or\u3001not\u3001()\u8fdb\u884c\u903b\u8f91\u5408\u5e76\u64cd\u4f5c\u3002 1 2 3 4 5 6 7 {% if kenny.sick %} Kenny is sick. {% elif kenny.dead %} You killed Kenny! You bastard!!! {% else %} Kenny looks okay --- so far {% endif %} 3. \u5b8f \u00b6 \u5b8f\u7c7b\u4f3c\u5e38\u89c4\u7f16\u7a0b\u8bed\u8a00\u4e2d\u7684\u51fd\u6570\uff0c\u53ef\u4ee5\u4f20\u9012\u53c2\u6570\uff0c\u4f46\u4e0d\u80fd\u6709\u8fd4\u56de\u503c\u3002 3.1. \u5b9a\u4e49\u4e00\u4e2a\u5b8f \u00b6 1 2 3 4 {# \u5b9a\u4e49\u4e00\u4e2a\u5b8f #} {% macro input(name, value='', type='text', size=20) -%} <input type=\"{{ type }}\" name=\"{{ name }}\" value=\"{{ value|e }}\" size=\"{{ size }}\"> {%- endmacro %} 3.2. \u8c03\u7528\u5b8f \u00b6 1 2 3 {# \u8c03\u7528\u5b8f #} <p>{{ input('username') }}</p> <p>{{ input('password', type='password') }}</p> 3.3. \u5bfc\u5165\u5b8f import \u00b6 \u901a\u5e38\u4f1a\u628a\u6240\u6709\u7684\u5b8f\u5b9a\u4e49\u5728\u4e00\u4e2a\u6a21\u677f\u4e2d\uff0c\u5982\u679c\u5176\u4ed6\u6a21\u677f\u9700\u8981\u4f7f\u7528\uff0c\u5c31\u9700\u8981\u5148\u5bfc\u5165\u3002 3.3.1. \u5bfc\u5165\u6574\u4e2a\u6a21\u677f \u00b6 1 2 3 4 5 6 7 8 9 {% import 'forms.html' as forms %} <dl> <dt>Username</dt> {# \u4f7f\u7528\u7684\u65f6\u5019\u8981\u52a0\u522b\u540d\u4f5c\u4e3a\u524d\u7f00 #} <dd>{{ forms.input('username') }}</dd> <dt>Password</dt> <dd>{{ forms.input('password', type='password') }}</dd> </dl> <p>{{ forms.textarea('comment') }}</p> 3.3.2. \u4ece\u6a21\u677f\u4e2d\u5bfc\u5165\u6307\u5b9a\u7684\u5b8f\u540d\u79f0\u5230\u5f53\u524d\u7684\u547d\u540d\u7a7a\u95f4 \u00b6 1 2 3 4 5 6 7 8 9 {% from 'forms.html' import input as input_field, textarea %} <dl> <dt>Username</dt> {# \u4f7f\u7528\u7684\u65f6\u5019\u8981\u4f7f\u7528\u522b\u540d #} <dd>{{ input_field('username') }}</dd> <dt>Password</dt> <dd>{{ input_field('password', type='password') }}</dd> </dl> <p>{{ textarea('comment') }}</p> 3.3.3. with context \u4f20\u9012\u4e0a\u4e0b\u6587\u5230\u6a21\u677f \u00b6 1 2 {# \u5982\u679c\u60f3\u8981\u5728\u5bfc\u5165\u5b8f\u7684\u65f6\u5019\u5c31\u628a\u5f53\u524d\u6a21\u677f\u7684\u4e00\u4e9b\u53c2\u6570\u4f20\u9012\u7ed9\u5b8f\u6240\u5728\u7684\u6a21\u677f\uff0c\u5c31\u5e94\u8be5\u5728\u5bfc\u5165\u7684\u65f6\u5019\u4f7f\u7528 with context #} {% from 'forms.html' import input with context %} 4. \u5305\u542b include \u00b6 include \u8bed\u53e5\u7528\u4e8e\u5305\u542b\u4e00\u4e2a\u6a21\u677f\uff0c\u5e76\u5728\u5f53\u524d\u547d\u540d\u7a7a\u95f4\u4e2d\u8fd4\u56de\u90a3\u4e2a\u6587\u4ef6\u7684\u5185\u5bb9\u6e32\u67d3\u7ed3\u679c\u3002 1 2 3 4 5 6 7 8 9 10 11 <html> <head> <meta charset=\"UTF-8\"> <title>include\u7684\u7528\u6cd5</title> </head> <body> {% include 'header.html' %} {# \u76f8\u5f53\u4e8e\u628aheader.html\u7684\u5185\u5bb9\u62f7\u8d1d\u5230\u8fd9\u91cc #} Body {% include 'footer.html' %} </body> </html> \u6ce8\u610f \uff1a\u6a21\u677f\u8def\u5f84\u76f8\u5bf9\u4e8e templates \u76ee\u5f55 6. \u5b8f\u7279\u6b8a\u53d8\u91cf \u00b6 \u53d8\u91cf \u63cf\u8ff0 varargs \u5982\u679c\u6709\u591a\u4e8e\u5b8f\u63a5\u53d7\u7684\u53c2\u6570\u4e2a\u6570\u7684\u4f4d\u7f6e\u53c2\u6570\u88ab\u4f20\u5165\uff0c\u5b83\u4eec\u4f1a\u4f5c\u4e3a\u5217\u8868\u7684\u503c\u4fdd\u5b58\u5728 varargs\u53d8\u91cf\u4e0a\u3002 kwargs \u540c varargs \uff0c\u4f46\u53ea\u9488\u5bf9\u5173\u952e\u5b57\u53c2\u6570\u3002\u6240\u6709\u672a\u4f7f\u7528\u7684\u5173\u952e\u5b57\u53c2\u6570\u4f1a\u5b58\u50a8\u5728 \u8fd9\u4e2a\u7279\u6b8a\u53d8\u91cf\u4e2d\u3002 caller \u5982\u679c\u5b8f\u901a\u8fc7 call \u6807\u7b7e\u8c03\u7528\uff0c\u8c03\u7528\u8005\u4f1a\u4f5c\u4e3a\u53ef\u8c03\u7528\u7684\u5b8f\u88ab\u5b58\u50a8\u5728\u8fd9\u4e2a \u53d8\u91cf\u4e2d\u3002 7. \u5b8f\u5bf9\u8c61\u5c5e\u6027 \u00b6 \u5c5e\u6027 \u63cf\u8ff0 name \u5b8f\u7684\u540d\u79f0\u3002 {{ input.name }} \u4f1a\u6253\u5370 input \u3002 arguments \u4e00\u4e2a\u5b8f\u63a5\u53d7\u7684\u53c2\u6570\u540d\u7684\u5143\u7ec4\u3002 defaults \u9ed8\u8ba4\u503c\u7684\u5143\u7ec4\u3002 catch_kwargs \u5982\u679c\u5b8f\u63a5\u53d7\u989d\u5916\u7684\u5173\u952e\u5b57\u53c2\u6570\uff08\u4e5f\u5c31\u662f\u8bbf\u95ee\u7279\u6b8a\u7684 kwargs \u53d8\u91cf\uff09\uff0c\u4e3a true \u3002 catch_varargs \u5982\u679c\u5b8f\u63a5\u53d7\u989d\u5916\u7684\u4f4d\u7f6e\u53c2\u6570\uff08\u4e5f\u5c31\u662f\u8bbf\u95ee\u7279\u6b8a\u7684 varargs \u53d8\u91cf\uff09\uff0c\u4e3a true \u3002 caller \u5982\u679c\u5b8f\u8bbf\u95ee\u7279\u6b8a\u7684 caller \u53d8\u91cf\u4e14\u7531 call \u6807\u7b7e\u8c03\u7528\uff0c\u4e3a true \u3002 4. \u8c03\u7528call \u00b6 4.1. \u65e0\u53c2\u6570\u8c03\u7528 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 {% macro render_dialog(title, class='dialog') -%} <div class=\"{{ class }}\"> <h2>{{ title }}</h2> <div class=\"contents\"> {{ caller() }} </div> </div> {%- endmacro %} {# \u5b8f\u8c03\u7528 #} {% call render_dialog('Hello World') %} This is a simple dialog rendered by using a macro and a call block. {% endcall %} \u6e32\u67d3\u7ed3\u679c 1 2 3 4 5 6 7 8 9 < div class = \"dialog\" > < h2 > Hello World </ h2 > < div class = \"contents\" > This is a simple dialog rendered by using a macro and a call block. </ div > </ div > 4.2. \u5e26\u53c2\u6570\u8c03\u7528 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 {% macro dump_users(users) -%} <ul> {%- for user in users %} <li><p>{{ user.username|e }}</p>{{ caller(user) }}</li> {%- endfor %} </ul> {%- endmacro %} {% call(user) dump_users(list_of_user) %} <dl> <dl>Realname</dl> <dd>{{ user.realname|e }}</dd> <dl>Description</dl> <dd>{{ user.description }}</dd> </dl> {% endcall %} \u56db\u3001\u8fc7\u6ee4\u5668 \u00b6 \u8fc7\u6ee4\u5668\u53ef\u4ee5\u7528\u6765\u4fee\u6539\u53d8\u91cf\uff0c\u8fc7\u6ee4\u5668\u7531\u7ad6\u7ebf\u7b26\u53f7\uff08 | \uff09\u4e0e\u53d8\u91cf\u5206\u5f00\uff0c\u53ef\u4ee5\u94fe\u63a5\u591a\u4e2a\u8fc7\u6ee4\u5668\u3002\u4e00\u4e2a\u6ee4\u6ce2\u5668\u7684\u8f93\u51fa\u5c06\u5e94\u7528\u4e8e\u4e0b\u4e00\u4e2a\u3002 {{ num|abs }} 1. \u5185\u7f6e\u8fc7\u6ee4\u5668 \u00b6 \u8fc7\u6ee4\u5668 \u529f\u80fd abs() \u8fd4\u56de\u4e00\u4e2a\u6570\u7684\u7edd\u5bf9\u503c escape() \u5bf9\u67d0\u4e00\u4e2a\u5b57\u7b26\u8f6c\u4e49,\u522b\u540d e safe() \u5173\u95ed\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u81ea\u52a8\u8f6c\u4e49, \u7981\u7528\u8f6c\u4e49 default() {{ value | default('\u9ed8\u8ba4\u503c') first() \u8fd4\u56de\u5e8f\u5217\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20 last() \u8fd4\u56de\u5e8f\u5217\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20 format() \u683c\u5f0f\u5316\u5b57\u7b26\u4e32 {{ \"%s, %s!\" | format(greeting, name) }} length() \u8fd4\u56de\u4e00\u4e2a\u5e8f\u5217\u7c7b\u578b\u7684\u957f\u5ea6 join() \u5c06\u4e00\u4e2a\u5e8f\u5217\uff0c\u7528\u6307\u5b9a\u7684\u53c2\u6570\u62fc\u63a5\u6210\u5b57\u7b26\u4e32, {{ [1, 2, 3]|join('|') -->1|2|3 int() \u5c06\u503c\u8f6c\u6362\u4e3a int \u7c7b\u578b float() \u5c06\u503c\u8f6c\u6362\u4e3a float \u7c7b\u578b string() \u5c06\u53d8\u91cf\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32 lower() \u5c06\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u5c0f\u5199 upper() \u5c06\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u5927\u5199 replace() \u66ff\u6362\u5b57\u7b26\u4e32\uff0c {{ \"Hello World\"|replace(\"Hello\", \"Goodbye\") }} -->Goodbye World truncate() \u622a\u53d6\u6307\u5b9a\u957f\u5ea6\u7684\u5b57\u7b26\u4e32\uff0c {{ \"foo bar baz qux\"|truncate(9) }} striptags() \u5220\u9664\u5b57\u7b26\u4e32\u4e2d\u6240\u6709\u7684HTML\u6807\u7b7e\uff0c\u5982\u679c\u51fa\u73b0\u591a\u4e2a\u7a7a\u683c\uff0c\u5c06\u66ff\u6362\u6210\u4e00\u4e2a\u7a7a\u683c trim() \u53bb\u9664\u5f00\u5934\u548c\u7ed3\u5c3e\u5b57\u7b26 wordcount() \u8ba1\u7b97\u4e00\u4e2a\u957f\u5b57\u7b26\u4e32\u4e2d\u5355\u8bcd\u7684\u4e2a\u6570 2. \u81ea\u5b9a\u4e49\u8fc7\u6ee4\u5668 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 import os from jinja2 import FileSystemLoader , Environment # \u5b9a\u4e49\u4e00\u4e2a\u8fc7\u6ee4\u5668\u51fd\u6570 def say_hello ( name ): return name + ' hello' template_path = os . path . join ( os . path . dirname ( __file__ ), 'templates' ) env = Environment ( loader = FileSystemLoader ( template_path )) # \u5c06\u51fd\u6570\u6dfb\u52a0\u5230\u8fc7\u6ee4\u5668\u5b57\u5178\u4e2d env . filters [ 'say_hello' ] = say_hello template = env . get_template ( 'index.html' ) print ( template . render ( name = \"\u5f20\u4e09\" )) 1 2 3 # __file__ : index.html # \u4f7f\u7528\u81ea\u5b9a\u4e49\u7684\u8fc7\u6ee4\u5668 {{ name|say_hello }} \u4e94\u3001\u6d4b\u8bd5 \u00b6 \u6d4b\u8bd5\u4e00\u4e2a\u53d8\u91cf\u6216\u8868\u8fbe\u5f0f \u4f8b\u5982\uff1a {% if loop.index is divisibleby 3 %} 1. \u5185\u7f6e\u6d4b\u8bd5\u51fd\u6570 \u00b6 \u51fd\u6570 \u529f\u80fd defined() {% if variable is defined %} divisibleby() \u68c0\u67e5\u53d8\u91cf\u662f\u5426\u53ef\u88ab\u6570\u5b57\u6574\u9664\u3002 escaped() \u68c0\u67e5\u8be5\u503c\u662f\u5426\u8f6c\u4e49 even() \u5982\u679c\u53d8\u91cf\u4e3a\u5076\u6570\uff0c\u5219\u8fd4\u56detrue iterable() \u68c0\u67e5\u662f\u5426\u53ef\u4ee5\u8fed\u4ee3\u5bf9\u8c61\u3002 lower() \u5982\u679c\u53d8\u91cf\u662f\u5c0f\u5199\u7684\uff0c\u5219\u8fd4\u56detrue number() \u5982\u679c\u53d8\u91cf\u662f\u6570\u5b57\uff0c\u5219\u8fd4\u56detrue odd() \u5982\u679c\u53d8\u91cf\u4e3a\u5947\u6570\uff0c\u5219\u8fd4\u56detrue sequence() \u5982\u679c\u53d8\u91cf\u662f\u5e8f\u5217\uff0c\u5219\u8fd4\u56detrue string() \u5982\u679c\u5bf9\u8c61\u662f\u5b57\u7b26\u4e32\uff0c\u5219\u8fd4\u56detrue 2. \u81ea\u5b9a\u4e49\u6d4b\u8bd5 \u00b6 1 2 3 4 5 6 # __file__:index.html {% if num is prime %} {{ num }} is a prime number {% else %} {{ num }} is not a prime number {% endif %} 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 import os from jinja2 import FileSystemLoader , Environment import math # \u5b9a\u4e49\u4e00\u4e2a\u6d4b\u8bd5\u51fd\u6570 def is_prime ( n ): if n == 2 : return True for i in range ( 2 , int ( math . ceil ( math . sqrt ( n ))) + 1 ): if n % i == 0 : return False return True template_path = os . path . join ( os . path . dirname ( __file__ ), 'templates' ) env = Environment ( loader = FileSystemLoader ( template_path )) # \u5c06\u51fd\u6570\u6dfb\u52a0\u5230\u6d4b\u8bd5\u5b57\u5178\u4e2d env . tests [ 'prime' ] = is_prime template = env . get_template ( 'index.html' ) print ( template . render ( num = 11 )) # \u8fd0\u884c\u7ed3\u679c 11 is a prime number \u516d\u3001\u6a21\u677f\u7ee7\u627f \u00b6 \u6a21\u677f\u7ee7\u627f\u53ef\u4ee5\u628a\u4e00\u90e8\u5206\u516c\u7528\u7684\u4ee3\u7801\u62bd\u53d6\u51fa\u6765\u653e\u5230\u4e00\u4e2a\u7236\u6a21\u677f\u4e2d\uff0c\u4ee5\u540e\u5b50\u6a21\u677f\u76f4\u63a5\u7ee7\u627f\u5c31\u53ef\u4ee5\u4f7f\u7528\u4e86\u3002 1. \u7236\u6a21\u677f \u00b6 \u628a\u76f8\u540c\u90e8\u5206\u90fd\u653e\u5728\u7236\u6a21\u677f\u4e2d base.html 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 <!DOCTYPE html> < html lang = \"en\" > < head > {% block head %} < link rel = \"stylesheet\" href = \"style.css\" /> < title > {% block title %}{% endblock %} - My Webpage </ title > {% endblock %} </ head > < body > < div id = \"content\" > {% block content %}{% endblock %} </ div > < div id = \"footer\" > {% block footer %} &copy; Copyright 2008 by < a href = \"http://domain.invalid/\" > you </ a > . {% endblock %} </ div > </ body > </ html > 2. \u5b50\u6a21\u677f \u00b6 \u5148\u7528 extends \u7ee7\u627f\u7236\u6a21\u677f\uff0c\u628a\u4e2a\u6027\u90e8\u5206\u653e\u5728 block \u5757\u4e2d 1 2 3 4 5 6 7 8 9 10 11 12 13 14 {% extends \"base.html\" %} {% block title %}Index{% endblock %} {% block head %} {{ super() }} < style type = \"text/css\" > . important { color : #336699 ; } </ style > {% endblock %} {% block content %} < h1 > Index </ h1 > < p class = \"important\" > Welcome to my awesome homepage. </ p > {% endblock %} 3. \u4f7f\u7528\u7236\u6a21\u677f\u4e2d\u7684\u5185\u5bb9 super() \u00b6 \u9ed8\u8ba4\u60c5\u51b5\u5728\u5b50\u6a21\u677f\u5185\u5bb9\u4f1a\u8986\u76d6\u7236\u6a21\u677f\u5757\u4e2d\u7684\u5185\u5bb9\uff0c\u53ef\u4ee5\u901a\u8fc7 {{ super() }} \u4fdd\u7559\u7236\u5757\u7684\u5185\u5bb9\u3002\u4f8b\u5b50\u540c\u4e0a\u3002 4. \u8c03\u7528\u53e6\u4e00\u4e2ablock\u4e2d\u7684\u4ee3\u7801 self.\u5176\u4ed6\u5757\u7684\u540d\u5b57() \u00b6 1 2 3 4 5 6 7 {% block title %} Hello World! {% endblock %} {% block body %} {{ self.title() }} {% endblock %} 5. \u5757\u4e2d\u53d8\u91cf\u7684\u4f5c\u7528\u57df \u00b6 \u9ed8\u8ba4\u7684\u5757\u4e0d\u5141\u8bb8\u8bbf\u95ee\u5757\u5916\u4f5c\u7528\u57df\u4e2d\u7684\u53d8\u91cf\uff0c\u52a0 scoped \u4fee\u6539\u4f5c\u7528\u57df 1 2 3 {% for item in seq %} <li>{% block loop_item scoped %}{{ item }}{% endblock %}</li> {% endfor %} \u4e03\u3001\u7a7a\u767d\u63a7\u5236 \u00b6 \u4f7f\u7528\u4e0b\u9762\u7684\u6a21\u677f\u6e32\u67d3\uff0c 1 2 3 4 5 <div> {% if True %} yay {% endif %} </div> \u751f\u6210\u7684\u7ed3\u679c\u4f1a\u6709\u7a7a\u884c 1 2 3 4 5 < div > yay </ div > 1. \u4f7f\u7528\u51cf\u53f7\uff08 - \uff09\u5220\u9664\u7a7a\u884c \u00b6 1 2 3 4 5 <div> {% if True -%} {{ name }} {%- endif %} </div> \u516b\u3001\u8f6c\u4e49 \u00b6 1. \u90e8\u5206\u8f6c\u4e49 \u00b6 \u4f7f\u7528\u53d8\u91cf\u5206\u9694\u7b26 {{ '{{' }} 2. \u5757\u8f6c\u4e49 raw \u00b6 \u7528 raw \u6807\u8bb0 1 2 3 4 5 6 7 {% raw %} <ul> {% for item in seq %} <li>{{ item }}</li> {% endfor %} </ul> {% endraw %} 3. \u81ea\u52a8\u8f6c\u4e49 autoescape \u00b6 1 2 3 4 5 6 7 {% autoescape true %} \u81ea\u52a8\u8f6c\u4e49\u5728\u8fd9\u5757\u6587\u672c\u4e2d\u662f\u5f00\u542f\u7684\u3002 {% endautoescape %} {% autoescape false %} \u81ea\u52a8\u8f6c\u4e49\u5728\u8fd9\u5757\u6587\u672c\u4e2d\u662f\u5173\u95ed\u7684\u3002 {% endautoescape %}","title":"Jinja2"},{"location":"programming/python/Jinja2/#jinja2","text":"Jinja2\u662f\u57fa\u4e8epython\u7684\u6a21\u677f\u5f15\u64ce\u3002\u4ed6\u7684\u8bbe\u8ba1\u601d\u60f3\u6765\u6e90\u4e8e Django \u7684\u6a21\u677f\u5f15\u64ce\uff0c\u5e76\u6269\u5c55\u4e86\u5176\u8bed\u6cd5\u548c\u4e00\u7cfb\u5217\u5f3a\u5927\u7684\u529f\u80fd\u3002","title":"Jinja2"},{"location":"programming/python/Jinja2/#_1","text":"","title":"\u4e00\u3001\u57fa\u672c\u5143\u7d20"},{"location":"programming/python/Jinja2/#1","text":"\u7528\u5355\u5f15\u53f7\u6216\u53cc\u5f15\u53f7\u62ec\u8d77\u6765\u7684\u3002\u5982 'hello' \u6216 \"hello\"","title":"1.\u5b57\u9762\u91cf"},{"location":"programming/python/Jinja2/#2","text":"\u4e00\u5bf9\u4e2d\u62ec\u53f7\u62ec\u8d77\u6765\u7684\u4e1c\u897f\u662f\u4e00\u4e2a\u5217\u8868\u3002\u5217\u8868\u7528\u4e8e\u5b58\u50a8\u548c\u8fed\u4ee3\u5e8f\u5217\u5316\u7684\u6570\u636e\u3002 ['a', 'b', 'c']","title":"2.\u5217\u8868"},{"location":"programming/python/Jinja2/#3","text":"\u5143\u7ec4\u4e0e\u5217\u8868\u7c7b\u4f3c\uff0c\u53ea\u662f\u5143\u7ec4\u4e0d\u80fd\u4fee\u6539\u3002\u5982\u679c\u5143\u7ec4\u4e2d\u53ea\u6709\u4e00\u4e2a\u9879\uff0c\u9700\u8981\u4ee5\u9017\u53f7\u7ed3\u5c3e\u3002 (\u2018tuple\u2019, \u2018of\u2019, \u2018values\u2019)","title":"3.\u5143\u7ec4"},{"location":"programming/python/Jinja2/#4","text":"\u5b57\u5178\u5728\u6a21\u677f\u4e2d\u5f88\u5c11\u7528 {'dict'\uff1a'of'\uff0c'key'\uff1a'and'\uff0c'value'\uff1a'pairs'}","title":"4.\u5b57\u5178"},{"location":"programming/python/Jinja2/#5","text":"","title":"5. \u8fd0\u7b97\u7b26"},{"location":"programming/python/Jinja2/#51","text":"\u8fd0\u7b97\u7b26 \u63cf\u8ff0 + {{ 1 + 1 }} -->2 - {{ 3 - 2 }} -->1 / {{ 1 / 2 }} --> 0.5 // {{ 20 // 7 }} --> 2 % {{ 11 % 7 }} -->4 * {{ 2 * 2 }} -->4 ** {{ 2**3 }} -->8","title":"5.1. \u7b97\u6570\u8fd0\u7b97\u7b26"},{"location":"programming/python/Jinja2/#52","text":"\u8fd0\u7b97\u7b26 \u63cf\u8ff0 == \u6bd4\u8f83\u4e24\u4e2a\u5bf9\u8c61\u662f\u5426\u76f8\u7b49 != \u6bd4\u8f83\u4e24\u4e2a\u5bf9\u8c61\u662f\u5426\u4e0d\u7b49 > \u5982\u679c\u5de6\u8fb9\u5927\u4e8e\u53f3\u8fb9\uff0c\u8fd4\u56de true >= \u5982\u679c\u5de6\u8fb9\u5927\u4e8e\u7b49\u4e8e\u53f3\u8fb9\uff0c\u8fd4\u56de true < \u5982\u679c\u5de6\u8fb9\u5c0f\u4e8e\u53f3\u8fb9\uff0c\u8fd4\u56de true \u3002 <= \u5982\u679c\u5de6\u8fb9\u5c0f\u4e8e\u7b49\u4e8e\u53f3\u8fb9\uff0c\u8fd4\u56de true \u3002","title":"5.2. \u6bd4\u8f83\u8fd0\u7b97\u7b26"},{"location":"programming/python/Jinja2/#53","text":"\u8fd0\u7b97\u7b26 \u63cf\u8ff0 and \u4e0e or \u6216 not \u975e () \u8868\u8fbe\u5f0f\u7ec4","title":"5.3. \u903b\u8f91\u8fd0\u7b97\u7b26"},{"location":"programming/python/Jinja2/#54","text":"\u8fd0\u7b97\u7b26 \u63cf\u8ff0 in {{ 1 in[1,2,3] }} \u8fd4\u56detrue is \u6d4b\u8bd5 ~ \u628a\u6240\u6709\u7684\u64cd\u4f5c\u6570\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\uff0c\u5e76\u4e14\u8fde\u63a5\u5b83\u4eec\uff0c {{ \"Hello \" ~ name ~ \"!\" }} -->Hello John!","title":"5.4. \u5176\u4ed6\u8fd0\u7b97\u7b26"},{"location":"programming/python/Jinja2/#6","text":"","title":"6.\u53d8\u91cf"},{"location":"programming/python/Jinja2/#61","text":"1 2 {{ foo.bar }} {{ foo['bar']} \u4e24\u8005\u5728Python \u5c42\u4e2d\u7684\u533a\u522b\uff1a foo.bar \u68c0\u67e5 foo \u4e0a\u662f\u5426\u6709\u4e00\u4e2a\u540d\u4e3a bar \u7684\u5c5e\u6027\uff08 getattr(foo, 'bar') \uff09 \u5982\u679c\u6ca1\u6709\uff0c\u68c0\u67e5 foo \u4e2d\u662f\u5426\u6709\u4e00\u4e2a 'bar' \u9879\uff08 foo.__getitem__('bar') \uff09 \u5982\u679c\u6ca1\u6709\uff0c\u8fd4\u56de\u4e00\u4e2a\u672a\u5b9a\u4e49\u5bf9\u8c61 foo['bar'] \u68c0\u67e5\u5728 foo \u4e2d\u662f\u5426\u6709\u4e00\u4e2a 'bar' \u9879\uff08 foo.__getitem__('bar') \uff09 \u5982\u679c\u6ca1\u6709\uff0c\u68c0\u67e5 foo \u4e0a\u662f\u5426\u6709\u4e00\u4e2a\u540d\u4e3a bar \u7684\u5c5e\u6027\uff08 getattr(foo, 'bar') \uff09 \u5982\u679c\u6ca1\u6709\uff0c\u8fd4\u56de\u4e00\u4e2a\u672a\u5b9a\u4e49\u5bf9\u8c61","title":"6.1. \u53d8\u91cf\u5c5e\u6027\u7684\u8bbf\u95ee\u65b9\u5f0f"},{"location":"programming/python/Jinja2/#62","text":"","title":"6.2. \u53d8\u91cf\u8d4b\u503c"},{"location":"programming/python/Jinja2/#621-set","text":"{% set username='admin' %}","title":"6.2.1. \u53d8\u91cf\u8d4b\u503cset"},{"location":"programming/python/Jinja2/#622-with","text":"\u4f7f\u7528with\u53ef\u4ee5\u4fee\u6539\u53d8\u91cf\u4f5c\u7528\u57df\uff0c\u53ea\u6709\u5728with\u5757\u4e2d\u53ef\u4ee5\u4f7f\u7528\u5b9a\u4e49\u7684\u53d8\u91cf 1 2 3 4 5 6 7 8 {% with foo = 42 %} {{ foo }} {% endwith %} {#\u7b49\u4ef7\u4e8e#} {% with %} {% set foo = 42 %} {{ foo }} {% endwith %}","title":"6.2.2. \u53d8\u91cf\u4f5c\u7528\u57dfwith"},{"location":"programming/python/Jinja2/#7","text":"\u6a21\u677f\u4e2d\u5305\u62ec\u53d8\u91cf\u3001\u8868\u8fbe\u5f0f\u3001\u6807\u7b7e {% ... %} : \u8bed\u53e5\uff08for \u5faa\u73af\u548c\u8d4b\u503c\u7b49\u8bed\u53e5\uff09 {{ ... }} : \u8868\u8fbe\u5f0f","title":"7. \u6a21\u677f\u7ec4\u6210"},{"location":"programming/python/Jinja2/#8","text":"{# ... #}","title":"8. \u6ce8\u91ca"},{"location":"programming/python/Jinja2/#_2","text":"","title":"\u4e8c\u3001\u6a21\u677f\u6e32\u67d3"},{"location":"programming/python/Jinja2/#1_1","text":"1 2 3 4 >>> from jinja2 import Template >>> template = Template ( \"hello {{ name }}!\" ) >>> template . render ( name = \"\u5f20\u4e09\" ) 'hello \u5f20\u4e09!'","title":"1. \u5b57\u7b26\u4e32"},{"location":"programming/python/Jinja2/#2_1","text":"1 2 3 4 5 6 \u2514\u2500mysite \u2502 test.py \u2502 __init__.py \u2502 \u251c\u2500templates index.html","title":"2. \u6a21\u677f\u52a0\u8f7d\u5668"},{"location":"programming/python/Jinja2/#21","text":"1 2 3 4 5 6 7 8 9 # __file__: test.py import os , sys from jinja2 import Environment , PackageLoader BASE_DIR = os . path . dirname ( os . path . dirname ( os . path . abspath ( __file__ ))) sys . path . append ( BASE_DIR ) env = Environment ( loader = PackageLoader ( 'mysite' , 'templates' )) template = env . get_template ( 'index.html' ) print ( template . render ( name = \"\u5f20\u4e09\" ))","title":"2.1.  \u901a\u8fc7\u6a21\u5757\u52a0\u8f7d"},{"location":"programming/python/Jinja2/#22","text":"1 2 3 4 5 6 7 8 # __file__: test.py import os from jinja2 import FileSystemLoader , Environment template_path = os . path . join ( os . path . dirname ( __file__ ), 'templates' ) env = Environment ( loader = FileSystemLoader ( template_path )) template = env . get_template ( 'index.html' ) print ( template . render ( name = \"\u5f20\u4e09\" ))","title":"2.2. \u901a\u8fc7\u6587\u4ef6\u7cfb\u7edf\u52a0\u8f7d"},{"location":"programming/python/Jinja2/#_3","text":"","title":"\u4e09\u3001\u63a7\u5236\u7ed3\u6784"},{"location":"programming/python/Jinja2/#1-for","text":"","title":"1. For"},{"location":"programming/python/Jinja2/#11","text":"1 2 3 4 5 6 <ul> {% for user in users %} <li>{{ user.username|e }}</li> {# |e \u8868\u793a\u8f6c\u4e49 #} {% endfor %} </ul>","title":"1.1. \u8fed\u4ee3\u4e00\u4e2a\u5217\u8868"},{"location":"programming/python/Jinja2/#12","text":"1 2 3 4 {% for key, value in my_dict.items() %} <dt>{{ key|e }}</dt> <dd>{{ value|e }}</dd> {% endfor %}","title":"1.2. \u8fed\u4ee3\u4e00\u4e2a\u5b57\u5178"},{"location":"programming/python/Jinja2/#13-else","text":"1 2 3 4 5 6 \u5982\u679c\u56e0\u5e8f\u5217\u662f\u7a7a\u6216\u8005\u8fc7\u6ee4\u79fb\u9664\u4e86\u5e8f\u5217\u4e2d\u7684\u6240\u6709\u9879\u76ee\u800c\u6ca1\u6709\u6267\u884c\u5faa\u73af\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528 else \u6e32\u67d3\u4e00\u4e2a\u7528\u4e8e\u66ff\u6362\u7684\u5757 {% for user in users %} <li>{{ user.username|e }}</li> {% else %} <li><em>no users found</em></li> {% endfor %} \u5faa\u73af\u5757\u4e2d\u53ef\u4ee5\u8bbf\u95ee\u7684\u7279\u6b8a\u7684\u53d8\u91cf \u53d8\u91cf \u63cf\u8ff0 loop.index \u5f53\u524d\u5faa\u73af\u8fed\u4ee3\u7684\u6b21\u6570\uff08\u4ece 1 \u5f00\u59cb\uff09 loop.index0 \u5f53\u524d\u5faa\u73af\u8fed\u4ee3\u7684\u6b21\u6570\uff08\u4ece 0 \u5f00\u59cb\uff09 loop.revindex \u5230\u5faa\u73af\u7ed3\u675f\u9700\u8981\u8fed\u4ee3\u7684\u6b21\u6570\uff08\u4ece 1 \u5f00\u59cb\uff09 loop.revindex0 \u5230\u5faa\u73af\u7ed3\u675f\u9700\u8981\u8fed\u4ee3\u7684\u6b21\u6570\uff08\u4ece 0 \u5f00\u59cb\uff09 loop.first \u5982\u679c\u662f\u7b2c\u4e00\u6b21\u8fed\u4ee3\uff0c\u4e3a True \u3002 loop.last \u5982\u679c\u662f\u6700\u540e\u4e00\u6b21\u8fed\u4ee3\uff0c\u4e3a True \u3002 loop.length \u5e8f\u5217\u4e2d\u7684\u9879\u76ee\u6570\u3002 \u7279\u6b8a\u53d8\u91cf\u7684\u7528\u6cd5\uff1a 1 2 3 4 5 6 7 8 import os from jinja2 import FileSystemLoader , Environment template_path = os . path . join ( os . path . dirname ( __file__ ), 'templates' ) env = Environment ( loader = FileSystemLoader ( template_path )) template = env . get_template ( 'index.html' ) letters = [ 'A' , 'B' , 'C' ] print ( template . render ( letters = letters )) 1 2 3 {% for letter in letters -%} {{ loop.index }} : {{ letter }} {% endfor %} \u6267\u884c\u7ed3\u679c\uff1a 1 : A 2 : B 3 : C \u6ce8\u610f\uff1a jinja2\u4e2d\u4e0d\u53ef\u4ee5\u4f7f\u7528 continue \u548c break \u8868\u8fbe\u5f0f\u63a7\u5236\u5faa\u73af","title":"1.3. \u5982\u679c\u5e8f\u5217\u662f\u7a7a\uff0c\u53ef\u4ee5\u4f7f\u7528 else \u6e32\u67d3\u4e00\u4e2a\u7528\u4e8e\u66ff\u6362\u7684\u5757"},{"location":"programming/python/Jinja2/#2-if","text":"if \u8bed\u53e5\u4e0epython\u4e2d\u7684\u7c7b\u4f3c\uff0c\u53ef\u4ee5\u4f7f\u7528>\u3001>=\u3001<\u3001<=\u3001==\u3001!=\u6765\u8fdb\u884c\u5224\u65ad\uff0c\u4e5f\u53ef\u4ee5\u4f7f\u7528and\u3001or\u3001not\u3001()\u8fdb\u884c\u903b\u8f91\u5408\u5e76\u64cd\u4f5c\u3002 1 2 3 4 5 6 7 {% if kenny.sick %} Kenny is sick. {% elif kenny.dead %} You killed Kenny! You bastard!!! {% else %} Kenny looks okay --- so far {% endif %}","title":"2. IF"},{"location":"programming/python/Jinja2/#3_1","text":"\u5b8f\u7c7b\u4f3c\u5e38\u89c4\u7f16\u7a0b\u8bed\u8a00\u4e2d\u7684\u51fd\u6570\uff0c\u53ef\u4ee5\u4f20\u9012\u53c2\u6570\uff0c\u4f46\u4e0d\u80fd\u6709\u8fd4\u56de\u503c\u3002","title":"3. \u5b8f"},{"location":"programming/python/Jinja2/#31","text":"1 2 3 4 {# \u5b9a\u4e49\u4e00\u4e2a\u5b8f #} {% macro input(name, value='', type='text', size=20) -%} <input type=\"{{ type }}\" name=\"{{ name }}\" value=\"{{ value|e }}\" size=\"{{ size }}\"> {%- endmacro %}","title":"3.1. \u5b9a\u4e49\u4e00\u4e2a\u5b8f"},{"location":"programming/python/Jinja2/#32","text":"1 2 3 {# \u8c03\u7528\u5b8f #} <p>{{ input('username') }}</p> <p>{{ input('password', type='password') }}</p>","title":"3.2. \u8c03\u7528\u5b8f"},{"location":"programming/python/Jinja2/#33-import","text":"\u901a\u5e38\u4f1a\u628a\u6240\u6709\u7684\u5b8f\u5b9a\u4e49\u5728\u4e00\u4e2a\u6a21\u677f\u4e2d\uff0c\u5982\u679c\u5176\u4ed6\u6a21\u677f\u9700\u8981\u4f7f\u7528\uff0c\u5c31\u9700\u8981\u5148\u5bfc\u5165\u3002","title":"3.3. \u5bfc\u5165\u5b8fimport"},{"location":"programming/python/Jinja2/#331","text":"1 2 3 4 5 6 7 8 9 {% import 'forms.html' as forms %} <dl> <dt>Username</dt> {# \u4f7f\u7528\u7684\u65f6\u5019\u8981\u52a0\u522b\u540d\u4f5c\u4e3a\u524d\u7f00 #} <dd>{{ forms.input('username') }}</dd> <dt>Password</dt> <dd>{{ forms.input('password', type='password') }}</dd> </dl> <p>{{ forms.textarea('comment') }}</p>","title":"3.3.1. \u5bfc\u5165\u6574\u4e2a\u6a21\u677f"},{"location":"programming/python/Jinja2/#332","text":"1 2 3 4 5 6 7 8 9 {% from 'forms.html' import input as input_field, textarea %} <dl> <dt>Username</dt> {# \u4f7f\u7528\u7684\u65f6\u5019\u8981\u4f7f\u7528\u522b\u540d #} <dd>{{ input_field('username') }}</dd> <dt>Password</dt> <dd>{{ input_field('password', type='password') }}</dd> </dl> <p>{{ textarea('comment') }}</p>","title":"3.3.2. \u4ece\u6a21\u677f\u4e2d\u5bfc\u5165\u6307\u5b9a\u7684\u5b8f\u540d\u79f0\u5230\u5f53\u524d\u7684\u547d\u540d\u7a7a\u95f4"},{"location":"programming/python/Jinja2/#333-with-context","text":"1 2 {# \u5982\u679c\u60f3\u8981\u5728\u5bfc\u5165\u5b8f\u7684\u65f6\u5019\u5c31\u628a\u5f53\u524d\u6a21\u677f\u7684\u4e00\u4e9b\u53c2\u6570\u4f20\u9012\u7ed9\u5b8f\u6240\u5728\u7684\u6a21\u677f\uff0c\u5c31\u5e94\u8be5\u5728\u5bfc\u5165\u7684\u65f6\u5019\u4f7f\u7528 with context #} {% from 'forms.html' import input with context %}","title":"3.3.3. with context\u4f20\u9012\u4e0a\u4e0b\u6587\u5230\u6a21\u677f"},{"location":"programming/python/Jinja2/#4-include","text":"include \u8bed\u53e5\u7528\u4e8e\u5305\u542b\u4e00\u4e2a\u6a21\u677f\uff0c\u5e76\u5728\u5f53\u524d\u547d\u540d\u7a7a\u95f4\u4e2d\u8fd4\u56de\u90a3\u4e2a\u6587\u4ef6\u7684\u5185\u5bb9\u6e32\u67d3\u7ed3\u679c\u3002 1 2 3 4 5 6 7 8 9 10 11 <html> <head> <meta charset=\"UTF-8\"> <title>include\u7684\u7528\u6cd5</title> </head> <body> {% include 'header.html' %} {# \u76f8\u5f53\u4e8e\u628aheader.html\u7684\u5185\u5bb9\u62f7\u8d1d\u5230\u8fd9\u91cc #} Body {% include 'footer.html' %} </body> </html> \u6ce8\u610f \uff1a\u6a21\u677f\u8def\u5f84\u76f8\u5bf9\u4e8e templates \u76ee\u5f55","title":"4. \u5305\u542binclude"},{"location":"programming/python/Jinja2/#6_1","text":"\u53d8\u91cf \u63cf\u8ff0 varargs \u5982\u679c\u6709\u591a\u4e8e\u5b8f\u63a5\u53d7\u7684\u53c2\u6570\u4e2a\u6570\u7684\u4f4d\u7f6e\u53c2\u6570\u88ab\u4f20\u5165\uff0c\u5b83\u4eec\u4f1a\u4f5c\u4e3a\u5217\u8868\u7684\u503c\u4fdd\u5b58\u5728 varargs\u53d8\u91cf\u4e0a\u3002 kwargs \u540c varargs \uff0c\u4f46\u53ea\u9488\u5bf9\u5173\u952e\u5b57\u53c2\u6570\u3002\u6240\u6709\u672a\u4f7f\u7528\u7684\u5173\u952e\u5b57\u53c2\u6570\u4f1a\u5b58\u50a8\u5728 \u8fd9\u4e2a\u7279\u6b8a\u53d8\u91cf\u4e2d\u3002 caller \u5982\u679c\u5b8f\u901a\u8fc7 call \u6807\u7b7e\u8c03\u7528\uff0c\u8c03\u7528\u8005\u4f1a\u4f5c\u4e3a\u53ef\u8c03\u7528\u7684\u5b8f\u88ab\u5b58\u50a8\u5728\u8fd9\u4e2a \u53d8\u91cf\u4e2d\u3002","title":"6. \u5b8f\u7279\u6b8a\u53d8\u91cf"},{"location":"programming/python/Jinja2/#7_1","text":"\u5c5e\u6027 \u63cf\u8ff0 name \u5b8f\u7684\u540d\u79f0\u3002 {{ input.name }} \u4f1a\u6253\u5370 input \u3002 arguments \u4e00\u4e2a\u5b8f\u63a5\u53d7\u7684\u53c2\u6570\u540d\u7684\u5143\u7ec4\u3002 defaults \u9ed8\u8ba4\u503c\u7684\u5143\u7ec4\u3002 catch_kwargs \u5982\u679c\u5b8f\u63a5\u53d7\u989d\u5916\u7684\u5173\u952e\u5b57\u53c2\u6570\uff08\u4e5f\u5c31\u662f\u8bbf\u95ee\u7279\u6b8a\u7684 kwargs \u53d8\u91cf\uff09\uff0c\u4e3a true \u3002 catch_varargs \u5982\u679c\u5b8f\u63a5\u53d7\u989d\u5916\u7684\u4f4d\u7f6e\u53c2\u6570\uff08\u4e5f\u5c31\u662f\u8bbf\u95ee\u7279\u6b8a\u7684 varargs \u53d8\u91cf\uff09\uff0c\u4e3a true \u3002 caller \u5982\u679c\u5b8f\u8bbf\u95ee\u7279\u6b8a\u7684 caller \u53d8\u91cf\u4e14\u7531 call \u6807\u7b7e\u8c03\u7528\uff0c\u4e3a true \u3002","title":"7. \u5b8f\u5bf9\u8c61\u5c5e\u6027"},{"location":"programming/python/Jinja2/#4-call","text":"","title":"4. \u8c03\u7528call"},{"location":"programming/python/Jinja2/#41","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 {% macro render_dialog(title, class='dialog') -%} <div class=\"{{ class }}\"> <h2>{{ title }}</h2> <div class=\"contents\"> {{ caller() }} </div> </div> {%- endmacro %} {# \u5b8f\u8c03\u7528 #} {% call render_dialog('Hello World') %} This is a simple dialog rendered by using a macro and a call block. {% endcall %} \u6e32\u67d3\u7ed3\u679c 1 2 3 4 5 6 7 8 9 < div class = \"dialog\" > < h2 > Hello World </ h2 > < div class = \"contents\" > This is a simple dialog rendered by using a macro and a call block. </ div > </ div >","title":"4.1. \u65e0\u53c2\u6570\u8c03\u7528"},{"location":"programming/python/Jinja2/#42","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 {% macro dump_users(users) -%} <ul> {%- for user in users %} <li><p>{{ user.username|e }}</p>{{ caller(user) }}</li> {%- endfor %} </ul> {%- endmacro %} {% call(user) dump_users(list_of_user) %} <dl> <dl>Realname</dl> <dd>{{ user.realname|e }}</dd> <dl>Description</dl> <dd>{{ user.description }}</dd> </dl> {% endcall %}","title":"4.2. \u5e26\u53c2\u6570\u8c03\u7528"},{"location":"programming/python/Jinja2/#_4","text":"\u8fc7\u6ee4\u5668\u53ef\u4ee5\u7528\u6765\u4fee\u6539\u53d8\u91cf\uff0c\u8fc7\u6ee4\u5668\u7531\u7ad6\u7ebf\u7b26\u53f7\uff08 | \uff09\u4e0e\u53d8\u91cf\u5206\u5f00\uff0c\u53ef\u4ee5\u94fe\u63a5\u591a\u4e2a\u8fc7\u6ee4\u5668\u3002\u4e00\u4e2a\u6ee4\u6ce2\u5668\u7684\u8f93\u51fa\u5c06\u5e94\u7528\u4e8e\u4e0b\u4e00\u4e2a\u3002 {{ num|abs }}","title":"\u56db\u3001\u8fc7\u6ee4\u5668"},{"location":"programming/python/Jinja2/#1_2","text":"\u8fc7\u6ee4\u5668 \u529f\u80fd abs() \u8fd4\u56de\u4e00\u4e2a\u6570\u7684\u7edd\u5bf9\u503c escape() \u5bf9\u67d0\u4e00\u4e2a\u5b57\u7b26\u8f6c\u4e49,\u522b\u540d e safe() \u5173\u95ed\u4e00\u4e2a\u5b57\u7b26\u4e32\u7684\u81ea\u52a8\u8f6c\u4e49, \u7981\u7528\u8f6c\u4e49 default() {{ value | default('\u9ed8\u8ba4\u503c') first() \u8fd4\u56de\u5e8f\u5217\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20 last() \u8fd4\u56de\u5e8f\u5217\u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20 format() \u683c\u5f0f\u5316\u5b57\u7b26\u4e32 {{ \"%s, %s!\" | format(greeting, name) }} length() \u8fd4\u56de\u4e00\u4e2a\u5e8f\u5217\u7c7b\u578b\u7684\u957f\u5ea6 join() \u5c06\u4e00\u4e2a\u5e8f\u5217\uff0c\u7528\u6307\u5b9a\u7684\u53c2\u6570\u62fc\u63a5\u6210\u5b57\u7b26\u4e32, {{ [1, 2, 3]|join('|') -->1|2|3 int() \u5c06\u503c\u8f6c\u6362\u4e3a int \u7c7b\u578b float() \u5c06\u503c\u8f6c\u6362\u4e3a float \u7c7b\u578b string() \u5c06\u53d8\u91cf\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32 lower() \u5c06\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u5c0f\u5199 upper() \u5c06\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u5927\u5199 replace() \u66ff\u6362\u5b57\u7b26\u4e32\uff0c {{ \"Hello World\"|replace(\"Hello\", \"Goodbye\") }} -->Goodbye World truncate() \u622a\u53d6\u6307\u5b9a\u957f\u5ea6\u7684\u5b57\u7b26\u4e32\uff0c {{ \"foo bar baz qux\"|truncate(9) }} striptags() \u5220\u9664\u5b57\u7b26\u4e32\u4e2d\u6240\u6709\u7684HTML\u6807\u7b7e\uff0c\u5982\u679c\u51fa\u73b0\u591a\u4e2a\u7a7a\u683c\uff0c\u5c06\u66ff\u6362\u6210\u4e00\u4e2a\u7a7a\u683c trim() \u53bb\u9664\u5f00\u5934\u548c\u7ed3\u5c3e\u5b57\u7b26 wordcount() \u8ba1\u7b97\u4e00\u4e2a\u957f\u5b57\u7b26\u4e32\u4e2d\u5355\u8bcd\u7684\u4e2a\u6570","title":"1. \u5185\u7f6e\u8fc7\u6ee4\u5668"},{"location":"programming/python/Jinja2/#2_2","text":"1 2 3 4 5 6 7 8 9 10 11 12 import os from jinja2 import FileSystemLoader , Environment # \u5b9a\u4e49\u4e00\u4e2a\u8fc7\u6ee4\u5668\u51fd\u6570 def say_hello ( name ): return name + ' hello' template_path = os . path . join ( os . path . dirname ( __file__ ), 'templates' ) env = Environment ( loader = FileSystemLoader ( template_path )) # \u5c06\u51fd\u6570\u6dfb\u52a0\u5230\u8fc7\u6ee4\u5668\u5b57\u5178\u4e2d env . filters [ 'say_hello' ] = say_hello template = env . get_template ( 'index.html' ) print ( template . render ( name = \"\u5f20\u4e09\" )) 1 2 3 # __file__ : index.html # \u4f7f\u7528\u81ea\u5b9a\u4e49\u7684\u8fc7\u6ee4\u5668 {{ name|say_hello }}","title":"2. \u81ea\u5b9a\u4e49\u8fc7\u6ee4\u5668"},{"location":"programming/python/Jinja2/#_5","text":"\u6d4b\u8bd5\u4e00\u4e2a\u53d8\u91cf\u6216\u8868\u8fbe\u5f0f \u4f8b\u5982\uff1a {% if loop.index is divisibleby 3 %}","title":"\u4e94\u3001\u6d4b\u8bd5"},{"location":"programming/python/Jinja2/#1_3","text":"\u51fd\u6570 \u529f\u80fd defined() {% if variable is defined %} divisibleby() \u68c0\u67e5\u53d8\u91cf\u662f\u5426\u53ef\u88ab\u6570\u5b57\u6574\u9664\u3002 escaped() \u68c0\u67e5\u8be5\u503c\u662f\u5426\u8f6c\u4e49 even() \u5982\u679c\u53d8\u91cf\u4e3a\u5076\u6570\uff0c\u5219\u8fd4\u56detrue iterable() \u68c0\u67e5\u662f\u5426\u53ef\u4ee5\u8fed\u4ee3\u5bf9\u8c61\u3002 lower() \u5982\u679c\u53d8\u91cf\u662f\u5c0f\u5199\u7684\uff0c\u5219\u8fd4\u56detrue number() \u5982\u679c\u53d8\u91cf\u662f\u6570\u5b57\uff0c\u5219\u8fd4\u56detrue odd() \u5982\u679c\u53d8\u91cf\u4e3a\u5947\u6570\uff0c\u5219\u8fd4\u56detrue sequence() \u5982\u679c\u53d8\u91cf\u662f\u5e8f\u5217\uff0c\u5219\u8fd4\u56detrue string() \u5982\u679c\u5bf9\u8c61\u662f\u5b57\u7b26\u4e32\uff0c\u5219\u8fd4\u56detrue","title":"1. \u5185\u7f6e\u6d4b\u8bd5\u51fd\u6570"},{"location":"programming/python/Jinja2/#2_3","text":"1 2 3 4 5 6 # __file__:index.html {% if num is prime %} {{ num }} is a prime number {% else %} {{ num }} is not a prime number {% endif %} 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 import os from jinja2 import FileSystemLoader , Environment import math # \u5b9a\u4e49\u4e00\u4e2a\u6d4b\u8bd5\u51fd\u6570 def is_prime ( n ): if n == 2 : return True for i in range ( 2 , int ( math . ceil ( math . sqrt ( n ))) + 1 ): if n % i == 0 : return False return True template_path = os . path . join ( os . path . dirname ( __file__ ), 'templates' ) env = Environment ( loader = FileSystemLoader ( template_path )) # \u5c06\u51fd\u6570\u6dfb\u52a0\u5230\u6d4b\u8bd5\u5b57\u5178\u4e2d env . tests [ 'prime' ] = is_prime template = env . get_template ( 'index.html' ) print ( template . render ( num = 11 )) # \u8fd0\u884c\u7ed3\u679c 11 is a prime number","title":"2. \u81ea\u5b9a\u4e49\u6d4b\u8bd5"},{"location":"programming/python/Jinja2/#_6","text":"\u6a21\u677f\u7ee7\u627f\u53ef\u4ee5\u628a\u4e00\u90e8\u5206\u516c\u7528\u7684\u4ee3\u7801\u62bd\u53d6\u51fa\u6765\u653e\u5230\u4e00\u4e2a\u7236\u6a21\u677f\u4e2d\uff0c\u4ee5\u540e\u5b50\u6a21\u677f\u76f4\u63a5\u7ee7\u627f\u5c31\u53ef\u4ee5\u4f7f\u7528\u4e86\u3002","title":"\u516d\u3001\u6a21\u677f\u7ee7\u627f"},{"location":"programming/python/Jinja2/#1_4","text":"\u628a\u76f8\u540c\u90e8\u5206\u90fd\u653e\u5728\u7236\u6a21\u677f\u4e2d base.html 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 <!DOCTYPE html> < html lang = \"en\" > < head > {% block head %} < link rel = \"stylesheet\" href = \"style.css\" /> < title > {% block title %}{% endblock %} - My Webpage </ title > {% endblock %} </ head > < body > < div id = \"content\" > {% block content %}{% endblock %} </ div > < div id = \"footer\" > {% block footer %} &copy; Copyright 2008 by < a href = \"http://domain.invalid/\" > you </ a > . {% endblock %} </ div > </ body > </ html >","title":"1. \u7236\u6a21\u677f"},{"location":"programming/python/Jinja2/#2_4","text":"\u5148\u7528 extends \u7ee7\u627f\u7236\u6a21\u677f\uff0c\u628a\u4e2a\u6027\u90e8\u5206\u653e\u5728 block \u5757\u4e2d 1 2 3 4 5 6 7 8 9 10 11 12 13 14 {% extends \"base.html\" %} {% block title %}Index{% endblock %} {% block head %} {{ super() }} < style type = \"text/css\" > . important { color : #336699 ; } </ style > {% endblock %} {% block content %} < h1 > Index </ h1 > < p class = \"important\" > Welcome to my awesome homepage. </ p > {% endblock %}","title":"2. \u5b50\u6a21\u677f"},{"location":"programming/python/Jinja2/#3-super","text":"\u9ed8\u8ba4\u60c5\u51b5\u5728\u5b50\u6a21\u677f\u5185\u5bb9\u4f1a\u8986\u76d6\u7236\u6a21\u677f\u5757\u4e2d\u7684\u5185\u5bb9\uff0c\u53ef\u4ee5\u901a\u8fc7 {{ super() }} \u4fdd\u7559\u7236\u5757\u7684\u5185\u5bb9\u3002\u4f8b\u5b50\u540c\u4e0a\u3002","title":"3. \u4f7f\u7528\u7236\u6a21\u677f\u4e2d\u7684\u5185\u5bb9super()"},{"location":"programming/python/Jinja2/#4-blockself","text":"1 2 3 4 5 6 7 {% block title %} Hello World! {% endblock %} {% block body %} {{ self.title() }} {% endblock %}","title":"4. \u8c03\u7528\u53e6\u4e00\u4e2ablock\u4e2d\u7684\u4ee3\u7801self.\u5176\u4ed6\u5757\u7684\u540d\u5b57()"},{"location":"programming/python/Jinja2/#5_1","text":"\u9ed8\u8ba4\u7684\u5757\u4e0d\u5141\u8bb8\u8bbf\u95ee\u5757\u5916\u4f5c\u7528\u57df\u4e2d\u7684\u53d8\u91cf\uff0c\u52a0 scoped \u4fee\u6539\u4f5c\u7528\u57df 1 2 3 {% for item in seq %} <li>{% block loop_item scoped %}{{ item }}{% endblock %}</li> {% endfor %}","title":"5. \u5757\u4e2d\u53d8\u91cf\u7684\u4f5c\u7528\u57df"},{"location":"programming/python/Jinja2/#_7","text":"\u4f7f\u7528\u4e0b\u9762\u7684\u6a21\u677f\u6e32\u67d3\uff0c 1 2 3 4 5 <div> {% if True %} yay {% endif %} </div> \u751f\u6210\u7684\u7ed3\u679c\u4f1a\u6709\u7a7a\u884c 1 2 3 4 5 < div > yay </ div >","title":"\u4e03\u3001\u7a7a\u767d\u63a7\u5236"},{"location":"programming/python/Jinja2/#1-","text":"1 2 3 4 5 <div> {% if True -%} {{ name }} {%- endif %} </div>","title":"1. \u4f7f\u7528\u51cf\u53f7\uff08-\uff09\u5220\u9664\u7a7a\u884c"},{"location":"programming/python/Jinja2/#_8","text":"","title":"\u516b\u3001\u8f6c\u4e49"},{"location":"programming/python/Jinja2/#1_5","text":"\u4f7f\u7528\u53d8\u91cf\u5206\u9694\u7b26 {{ '{{' }}","title":"1. \u90e8\u5206\u8f6c\u4e49"},{"location":"programming/python/Jinja2/#2-raw","text":"\u7528 raw \u6807\u8bb0 1 2 3 4 5 6 7 {% raw %} <ul> {% for item in seq %} <li>{{ item }}</li> {% endfor %} </ul> {% endraw %}","title":"2. \u5757\u8f6c\u4e49raw"},{"location":"programming/python/Jinja2/#3-autoescape","text":"1 2 3 4 5 6 7 {% autoescape true %} \u81ea\u52a8\u8f6c\u4e49\u5728\u8fd9\u5757\u6587\u672c\u4e2d\u662f\u5f00\u542f\u7684\u3002 {% endautoescape %} {% autoescape false %} \u81ea\u52a8\u8f6c\u4e49\u5728\u8fd9\u5757\u6587\u672c\u4e2d\u662f\u5173\u95ed\u7684\u3002 {% endautoescape %}","title":"3. \u81ea\u52a8\u8f6c\u4e49autoescape"},{"location":"programming/python/Django/admin/","text":"Admin\u540e\u53f0\u7ba1\u7406 \u00b6 1 2 3 4 5 class User ( models . Model ): ... class Meta : verbose_name_plural = '\u7528\u6237\u8868' # \u4fee\u6539admin\u540e\u53f0\u7ba1\u7406\u9ed8\u8ba4\u7684\u8868\u540d # verbose_name = '\u7528\u6237\u8868' # \u672b\u5c3e\u8fd8\u662f\u4f1a\u81ea\u52a8\u52a0s \u5728admin.py\u4e2d\u6ce8\u518c 1 2 3 4 5 from django.contrib import admin from app import models # Register your models here. admin . site . register ( models . User ) admin\u4f1a\u7ed9\u6bcf\u4e00\u4e2a\u6ce8\u518c\u4e86\u7684\u6a21\u578b\u8868\u81ea\u52a8\u751f\u6210\u589e\u5220\u6539\u67e5\u56db\u6761url 1 2 3 4 http://127.0.0.1:8000/admin/app/user/ \u67e5 http://127.0.0.1:8000/admin/app/user/add/ \u589e http://127.0.0.1:8000/admin/app/user/1/change/ \u6539 http://127.0.0.1:8000/admin/app/user/1/delete/ \u5220 xadmin","title":"Admin\u540e\u53f0\u7ba1\u7406"},{"location":"programming/python/Django/admin/#admin","text":"1 2 3 4 5 class User ( models . Model ): ... class Meta : verbose_name_plural = '\u7528\u6237\u8868' # \u4fee\u6539admin\u540e\u53f0\u7ba1\u7406\u9ed8\u8ba4\u7684\u8868\u540d # verbose_name = '\u7528\u6237\u8868' # \u672b\u5c3e\u8fd8\u662f\u4f1a\u81ea\u52a8\u52a0s \u5728admin.py\u4e2d\u6ce8\u518c 1 2 3 4 5 from django.contrib import admin from app import models # Register your models here. admin . site . register ( models . User ) admin\u4f1a\u7ed9\u6bcf\u4e00\u4e2a\u6ce8\u518c\u4e86\u7684\u6a21\u578b\u8868\u81ea\u52a8\u751f\u6210\u589e\u5220\u6539\u67e5\u56db\u6761url 1 2 3 4 http://127.0.0.1:8000/admin/app/user/ \u67e5 http://127.0.0.1:8000/admin/app/user/add/ \u589e http://127.0.0.1:8000/admin/app/user/1/change/ \u6539 http://127.0.0.1:8000/admin/app/user/1/delete/ \u5220 xadmin","title":"Admin\u540e\u53f0\u7ba1\u7406"},{"location":"programming/python/Django/auth/","text":"auth\u6a21\u5757 \u00b6 \u8ddf\u7528\u6237\u76f8\u5173\u7684\u767b\u9646\u3001\u6ce8\u518c\u3001\u6821\u9a8c\u3001\u4fee\u6539\u5bc6\u7801\u3001\u6ce8\u9500\u3001\u9a8c\u8bc1\u7528\u6237\u662f\u5426\u767b\u9646 \u521b\u5efa\u8d85\u7ea7\u7528\u6237(\u7ba1\u7406\u5458) 1 $ python3 manage.py createsuperuser \u4e00\u3001\u5e38\u7528\u65b9\u6cd5 \u00b6 from django.contrib import auth 1. \u6bd4\u5bf9\u7528\u6237\u540d\u548c\u5bc6\u7801\u662f\u5426\u6b63\u786e \u00b6 1 2 3 4 5 user_obj = auth . authenticate ( request , username = username , password = password ) # \u62ec\u53f7\u5185\u5fc5\u987b\u540c\u65f6\u4f20\u5165\u7528\u6237\u540d\u548c\u5bc6\u7801 print ( user_obj ) # \u7528\u6237\u5bf9\u8c61 admin \u6570\u636e\u4e0d\u7b26\u5408\u5219\u8fd4\u56deNone print ( user_obj . username ) # admin print ( user_obj . password ) # \u5bc6\u6587 2. \u4fdd\u5b58\u7528\u6237\u72b6\u6001 \u00b6 1 2 auth . login ( request , user_obj ) # \u7c7b\u4f3c\u4e8erequest.session[key] = user_obj # \u53ea\u8981\u6267\u884c\u4e86\u8be5\u65b9\u6cd5\uff0c\u5c31\u53ef\u4ee5\u5728\u4efb\u4f55\u5730\u65b9\u901a\u8fc7request.user\u83b7\u53d6\u5230\u5f53\u524d\u767b\u9646\u7684\u7528\u6237\u5bf9\u8c61 3. \u5224\u65ad\u5f53\u524d\u7528\u6237\u662f\u5426\u767b\u9646 \u00b6 1 request . user . is_authenticated () 4. \u83b7\u53d6\u5f53\u524d\u767b\u9646\u7528\u6237 \u00b6 1 request . user 5. \u6821\u9a8c\u7528\u6237\u662f\u5426\u767b\u9646\u88c5\u9970\u5668 \u00b6 5.1 \u5c40\u90e8\u914d\u7f6e \u00b6 1 2 3 4 5 from django.contrib.auth.decorators import login_required # \u5c40\u90e8\u914d\u7f6e:\u7528\u6237\u6ca1\u6709\u767b\u9646\u8df3\u8f6c\u5230login_user\u540e\u9762\u6307\u5b9a\u7684\u7f51\u5740 @login_required ( login_url = '/login/' ) def home ( request ): return HttpResponse ( 'home' ) 5.2 \u5168\u5c40\u914d\u7f6e \u00b6 \u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u914d\u7f6e\u5168\u5c40\u767b\u5f55\u5730\u5740 1 LOGIN_URL = '/login/' 1 2 3 4 5 from django.contrib.auth.decorators import login_required # \u5168\u5c40\u914d\u7f6e @login_required def home ( request ): return HttpResponse ( 'home' ) 6. \u5bf9\u6bd4\u539f\u5bc6\u7801 \u00b6 1 2 # \u6821\u9a8c\u8001\u5bc6\u7801\u5bf9\u4e0d\u5bf9 is_right = request . user . check_password ( old_password ) # \u81ea\u52a8\u52a0\u5bc6\u6bd4\u5bf9\u5bc6\u7801 7. \u4fee\u6539\u5bc6\u7801 \u00b6 1 2 request . user . set_password ( new_password ) # \u4ec5\u4ec5\u662f\u5728\u4fee\u6539\u5bf9\u8c61\u7684\u5c5e\u6027 request . user . save () # \u8fd9\u4e00\u6b65\u624d\u662f\u771f\u6b63\u7684\u64cd\u4f5c\u6570\u636e\u5e93 8. \u6ce8\u9500 \u00b6 1 auth . logout ( request ) 9. \u6ce8\u518c \u00b6 1 2 3 4 # \u64cd\u4f5cauth_user\u8868\u5199\u5165\u6570\u636e User . objects . create ( username = username , password = password ) # \u5199\u5165\u6570\u636e \u4e0d\u80fd\u7528create \u5bc6\u7801\u6ca1\u6709\u52a0\u5bc6\u5904\u7406 # \u521b\u5efa\u666e\u901a\u7528\u6237 User . objects . create_user ( username = username , password = password ) \u4e8c\u3001\u6269\u5c55auth_user\u8868 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 from django.db import models from django.contrib.auth.models import User , AbstractUser # Create your models here. # \u7b2c\u4e00\u79cd:\u4e00\u5bf9\u4e00\u5173\u7cfb \u4e0d\u63a8\u8350 # class UserDetail(models.Model): # phone = models.BigIntegerField() # user = models.OneToOneField(to='User') # \u7b2c\u4e8c\u79cd:\u9762\u5411\u5bf9\u8c61\u7684\u7ee7\u627f class UserInfo ( AbstractUser ): \"\"\" \u5982\u679c\u7ee7\u627f\u4e86AbstractUser \u90a3\u4e48\u5728\u6267\u884c\u6570\u636e\u5e93\u8fc1\u79fb\u547d\u4ee4\u7684\u65f6\u5019auth_user\u8868\u5c31\u4e0d\u4f1a\u518d\u521b\u5efa\u51fa\u6765\u4e86 \u800cUserInfo\u8868\u4e2d\u4f1a\u51fa\u73b0auth_user\u6240\u6709\u7684\u5b57\u6bb5\u5916\u52a0\u81ea\u5df1\u6269\u5c55\u7684\u5b57\u6bb5 \u8fd9\u4e48\u505a\u7684\u597d\u5904\u5728\u4e8e\u4f60\u80fd\u591f\u76f4\u63a5\u70b9\u51fb\u4f60\u81ea\u5df1\u7684\u8868\u66f4\u52a0\u5feb\u901f\u7684\u5b8c\u6210\u64cd\u4f5c\u53ca\u6269\u5c55 \u524d\u63d0: 1.\u5728\u7ee7\u627f\u4e4b\u524d\u6ca1\u6709\u6267\u884c\u8fc7\u6570\u636e\u5e93\u8fc1\u79fb\u547d\u4ee4 auth_user\u6ca1\u6709\u88ab\u521b\u5efa\uff0c\u5982\u679c\u5f53\u524d\u5e93\u5df2\u7ecf\u521b\u5efa\u4e86\u90a3\u4e48\u4f60\u5c31\u91cd\u65b0\u6362\u4e00\u4e2a\u5e93 2.\u7ee7\u627f\u7684\u7c7b\u91cc\u9762\u4e0d\u8981\u8986\u76d6AbstractUser\u91cc\u9762\u7684\u5b57\u6bb5\u540d \u8868\u91cc\u9762\u6709\u7684\u5b57\u6bb5\u90fd\u4e0d\u8981\u52a8\uff0c\u53ea\u6269\u5c55\u989d\u5916\u5b57\u6bb5\u5373\u53ef 3.\u9700\u8981\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u544a\u8bc9django\u4f60\u8981\u7528UserInfo\u66ff\u4ee3auth_user(******) AUTH_USER_MODEL = 'app.UserInfo' '\u5e94\u7528\u540d.\u8868\u540d' \"\"\" phone = models . BigIntegerField () \"\"\" \u4f60\u5982\u679c\u81ea\u5df1\u5199\u8868\u66ff\u4ee3\u4e86auth_user\u90a3\u4e48 auth\u6a21\u5757\u7684\u529f\u80fd\u8fd8\u662f\u7167\u5e38\u4f7f\u7528\uff0c\u53c2\u8003\u7684\u8868\u9875\u7531\u539f\u6765\u7684auth_user\u53d8\u6210\u4e86UserInfo \"\"\"","title":"auth\u6a21\u5757"},{"location":"programming/python/Django/auth/#auth","text":"\u8ddf\u7528\u6237\u76f8\u5173\u7684\u767b\u9646\u3001\u6ce8\u518c\u3001\u6821\u9a8c\u3001\u4fee\u6539\u5bc6\u7801\u3001\u6ce8\u9500\u3001\u9a8c\u8bc1\u7528\u6237\u662f\u5426\u767b\u9646 \u521b\u5efa\u8d85\u7ea7\u7528\u6237(\u7ba1\u7406\u5458) 1 $ python3 manage.py createsuperuser","title":"auth\u6a21\u5757"},{"location":"programming/python/Django/auth/#_1","text":"from django.contrib import auth","title":"\u4e00\u3001\u5e38\u7528\u65b9\u6cd5"},{"location":"programming/python/Django/auth/#1","text":"1 2 3 4 5 user_obj = auth . authenticate ( request , username = username , password = password ) # \u62ec\u53f7\u5185\u5fc5\u987b\u540c\u65f6\u4f20\u5165\u7528\u6237\u540d\u548c\u5bc6\u7801 print ( user_obj ) # \u7528\u6237\u5bf9\u8c61 admin \u6570\u636e\u4e0d\u7b26\u5408\u5219\u8fd4\u56deNone print ( user_obj . username ) # admin print ( user_obj . password ) # \u5bc6\u6587","title":"1. \u6bd4\u5bf9\u7528\u6237\u540d\u548c\u5bc6\u7801\u662f\u5426\u6b63\u786e"},{"location":"programming/python/Django/auth/#2","text":"1 2 auth . login ( request , user_obj ) # \u7c7b\u4f3c\u4e8erequest.session[key] = user_obj # \u53ea\u8981\u6267\u884c\u4e86\u8be5\u65b9\u6cd5\uff0c\u5c31\u53ef\u4ee5\u5728\u4efb\u4f55\u5730\u65b9\u901a\u8fc7request.user\u83b7\u53d6\u5230\u5f53\u524d\u767b\u9646\u7684\u7528\u6237\u5bf9\u8c61","title":"2. \u4fdd\u5b58\u7528\u6237\u72b6\u6001"},{"location":"programming/python/Django/auth/#3","text":"1 request . user . is_authenticated ()","title":"3. \u5224\u65ad\u5f53\u524d\u7528\u6237\u662f\u5426\u767b\u9646"},{"location":"programming/python/Django/auth/#4","text":"1 request . user","title":"4. \u83b7\u53d6\u5f53\u524d\u767b\u9646\u7528\u6237"},{"location":"programming/python/Django/auth/#5","text":"","title":"5. \u6821\u9a8c\u7528\u6237\u662f\u5426\u767b\u9646\u88c5\u9970\u5668"},{"location":"programming/python/Django/auth/#51","text":"1 2 3 4 5 from django.contrib.auth.decorators import login_required # \u5c40\u90e8\u914d\u7f6e:\u7528\u6237\u6ca1\u6709\u767b\u9646\u8df3\u8f6c\u5230login_user\u540e\u9762\u6307\u5b9a\u7684\u7f51\u5740 @login_required ( login_url = '/login/' ) def home ( request ): return HttpResponse ( 'home' )","title":"5.1 \u5c40\u90e8\u914d\u7f6e"},{"location":"programming/python/Django/auth/#52","text":"\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u914d\u7f6e\u5168\u5c40\u767b\u5f55\u5730\u5740 1 LOGIN_URL = '/login/' 1 2 3 4 5 from django.contrib.auth.decorators import login_required # \u5168\u5c40\u914d\u7f6e @login_required def home ( request ): return HttpResponse ( 'home' )","title":"5.2 \u5168\u5c40\u914d\u7f6e"},{"location":"programming/python/Django/auth/#6","text":"1 2 # \u6821\u9a8c\u8001\u5bc6\u7801\u5bf9\u4e0d\u5bf9 is_right = request . user . check_password ( old_password ) # \u81ea\u52a8\u52a0\u5bc6\u6bd4\u5bf9\u5bc6\u7801","title":"6. \u5bf9\u6bd4\u539f\u5bc6\u7801"},{"location":"programming/python/Django/auth/#7","text":"1 2 request . user . set_password ( new_password ) # \u4ec5\u4ec5\u662f\u5728\u4fee\u6539\u5bf9\u8c61\u7684\u5c5e\u6027 request . user . save () # \u8fd9\u4e00\u6b65\u624d\u662f\u771f\u6b63\u7684\u64cd\u4f5c\u6570\u636e\u5e93","title":"7. \u4fee\u6539\u5bc6\u7801"},{"location":"programming/python/Django/auth/#8","text":"1 auth . logout ( request )","title":"8. \u6ce8\u9500"},{"location":"programming/python/Django/auth/#9","text":"1 2 3 4 # \u64cd\u4f5cauth_user\u8868\u5199\u5165\u6570\u636e User . objects . create ( username = username , password = password ) # \u5199\u5165\u6570\u636e \u4e0d\u80fd\u7528create \u5bc6\u7801\u6ca1\u6709\u52a0\u5bc6\u5904\u7406 # \u521b\u5efa\u666e\u901a\u7528\u6237 User . objects . create_user ( username = username , password = password )","title":"9. \u6ce8\u518c"},{"location":"programming/python/Django/auth/#auth_user","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 from django.db import models from django.contrib.auth.models import User , AbstractUser # Create your models here. # \u7b2c\u4e00\u79cd:\u4e00\u5bf9\u4e00\u5173\u7cfb \u4e0d\u63a8\u8350 # class UserDetail(models.Model): # phone = models.BigIntegerField() # user = models.OneToOneField(to='User') # \u7b2c\u4e8c\u79cd:\u9762\u5411\u5bf9\u8c61\u7684\u7ee7\u627f class UserInfo ( AbstractUser ): \"\"\" \u5982\u679c\u7ee7\u627f\u4e86AbstractUser \u90a3\u4e48\u5728\u6267\u884c\u6570\u636e\u5e93\u8fc1\u79fb\u547d\u4ee4\u7684\u65f6\u5019auth_user\u8868\u5c31\u4e0d\u4f1a\u518d\u521b\u5efa\u51fa\u6765\u4e86 \u800cUserInfo\u8868\u4e2d\u4f1a\u51fa\u73b0auth_user\u6240\u6709\u7684\u5b57\u6bb5\u5916\u52a0\u81ea\u5df1\u6269\u5c55\u7684\u5b57\u6bb5 \u8fd9\u4e48\u505a\u7684\u597d\u5904\u5728\u4e8e\u4f60\u80fd\u591f\u76f4\u63a5\u70b9\u51fb\u4f60\u81ea\u5df1\u7684\u8868\u66f4\u52a0\u5feb\u901f\u7684\u5b8c\u6210\u64cd\u4f5c\u53ca\u6269\u5c55 \u524d\u63d0: 1.\u5728\u7ee7\u627f\u4e4b\u524d\u6ca1\u6709\u6267\u884c\u8fc7\u6570\u636e\u5e93\u8fc1\u79fb\u547d\u4ee4 auth_user\u6ca1\u6709\u88ab\u521b\u5efa\uff0c\u5982\u679c\u5f53\u524d\u5e93\u5df2\u7ecf\u521b\u5efa\u4e86\u90a3\u4e48\u4f60\u5c31\u91cd\u65b0\u6362\u4e00\u4e2a\u5e93 2.\u7ee7\u627f\u7684\u7c7b\u91cc\u9762\u4e0d\u8981\u8986\u76d6AbstractUser\u91cc\u9762\u7684\u5b57\u6bb5\u540d \u8868\u91cc\u9762\u6709\u7684\u5b57\u6bb5\u90fd\u4e0d\u8981\u52a8\uff0c\u53ea\u6269\u5c55\u989d\u5916\u5b57\u6bb5\u5373\u53ef 3.\u9700\u8981\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u544a\u8bc9django\u4f60\u8981\u7528UserInfo\u66ff\u4ee3auth_user(******) AUTH_USER_MODEL = 'app.UserInfo' '\u5e94\u7528\u540d.\u8868\u540d' \"\"\" phone = models . BigIntegerField () \"\"\" \u4f60\u5982\u679c\u81ea\u5df1\u5199\u8868\u66ff\u4ee3\u4e86auth_user\u90a3\u4e48 auth\u6a21\u5757\u7684\u529f\u80fd\u8fd8\u662f\u7167\u5e38\u4f7f\u7528\uff0c\u53c2\u8003\u7684\u8868\u9875\u7531\u539f\u6765\u7684auth_user\u53d8\u6210\u4e86UserInfo \"\"\"","title":"\u4e8c\u3001\u6269\u5c55auth_user\u8868"},{"location":"programming/python/Django/cookie%26session/","text":"cookie\u4e0esession \u00b6 \u4e00\u3001cookie \u00b6 1. cookie\u5e38\u7528\u65b9\u6cd5 \u00b6 set_cookie(key,value) max_age\u53c2\u6570\uff1a\u8bbe\u7f6e\u8d85\u65f6\u65f6\u95f4\uff0c\u4ee5\u79d2\u4e3a\u5355\u4f4d expires\u53c2\u6570\uff1a\u8bbe\u7f6e\u8d85\u65f6\u65f6\u95f4\uff0c\u4ee5\u79d2\u4e3a\u5355\u4f4d\uff0c\u9488\u5bf9IE\u6d4f\u89c8\u5668 request.COOKIES.get(key) delete_cookie(key) 2. \u57fa\u4e8ecookie\u7684\u767b\u5f55 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 from django.shortcuts import render , HttpResponse , redirect from django import forms def login_auth ( func ): def inner ( request , * args , ** kwargs ): target_url = request . get_full_path () if request . COOKIES . get ( 'username' ): return func ( request , * args , ** kwargs ) else : return redirect ( '/login/?redirect= %s ' % target_url ) return inner def login ( request ): if request . method == 'POST' : username = request . POST . get ( 'username' ) password = request . POST . get ( 'password' ) if username == 'admin' and password == '123' : # \u83b7\u53d6\u7528\u6237\u4e0a\u4e00\u6b21\u60f3\u8981\u8bbf\u95ee\u7684url target_url = request . GET . get ( 'redirect' ) # \u8fd9\u4e2a\u7ed3\u679c\u53ef\u80fd\u662fNone if target_url : obj = redirect ( target_url ) else : # \u4fdd\u5b58\u7528\u6237\u767b\u9646\u72b6\u6001 obj = redirect ( '/home/' ) # \u8ba9\u6d4f\u89c8\u5668\u8bb0\u5f55cookie\u6570\u636e obj . set_cookie ( 'username' , username ) \"\"\" \u6d4f\u89c8\u5668\u4e0d\u5355\u5355\u4f1a\u5e2e\u4f60\u5b58 \u800c\u4e14\u540e\u9762\u6bcf\u6b21\u8bbf\u95ee\u4f60\u7684\u65f6\u5019\u8fd8\u4f1a\u5e26\u7740\u5b83\u8fc7\u6765 \"\"\" # \u8df3\u8f6c\u5230\u4e00\u4e2a\u9700\u8981\u7528\u6237\u767b\u9646\u4e4b\u540e\u624d\u80fd\u770b\u7684\u9875\u9762 return obj return render ( request , 'login.html' ) @login_auth def home ( request ): return HttpResponse ( \"\u6211\u662fhome\u9875\u9762\" ) @login_auth def logout ( request ): obj = redirect ( '/login/' ) obj . delete_cookie ( 'username' ) return obj \u4e8c\u3001session \u00b6 \u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u64cd\u4f5csession\u7684\u65f6\u5019\u9700\u8981django\u9ed8\u8ba4\u7684\u4e00\u5f20django_session\u8868\u3002 django\u9ed8\u8ba4session\u7684\u8fc7\u671f\u65f6\u95f4\u662f14\u5929 django_session\u8868\u4e2d\u7684\u6570\u636e\u6761\u6570\u662f\u53d6\u51b3\u4e8e\u6d4f\u89c8\u5668\u7684\uff0c\u540c\u4e00\u4e2a\u8ba1\u7b97\u673a\u4e0a(IP\u5730\u5740)\u540c\u4e00\u4e2a\u6d4f\u89c8\u5668\u53ea\u4f1a\u6709\u4e00\u6761\u6570\u636e\u751f\u6548\u3002 1. session\u5e38\u7528\u65b9\u6cd5 \u00b6 request.session['key'] = value request.session.get('key') request.session.set_expiry() 4\u79cd\u7c7b\u578b\u7684\u53c2\u6570 \u6574\u6570\uff1a\u79d2 \u65e5\u671f\u5bf9\u8c61\uff1a\u5230\u6307\u5b9a\u65e5\u671f\u5c31\u5931\u6548 0\uff1a \u4e00\u65e6\u5f53\u524d\u6d4f\u89c8\u5668\u7a97\u53e3\u5173\u95ed\u7acb\u523b\u5931\u6548 \u4e0d\u5199\uff1a\u5931\u6548\u65f6\u95f4\u5c31\u53d6\u51b3\u4e8edjango\u5185\u90e8\u5168\u5c40session\u9ed8\u8ba4\u7684\u5931\u6548\u65f6\u95f4 request.session.delete() \u53ea\u5220\u670d\u52a1\u7aef\u7684\uff0c\u5ba2\u6237\u7aef\u7684\u4e0d\u5220 request.session.flush() \u6d4f\u89c8\u5668\u548c\u670d\u52a1\u7aef\u90fd\u6e05\u7a7a(\u63a8\u8350\u4f7f\u7528) 2. \u5185\u90e8\u539f\u7406 \u00b6 2.1 \u8bbe\u7f6esession\u65f6\u5019 \u00b6 django\u5185\u90e8\u4f1a\u81ea\u52a8\u5e2e\u4f60\u751f\u6210\u4e00\u4e2a\u968f\u673a\u5b57\u7b26\u4e32 django\u5185\u90e8\u81ea\u52a8\u5c06\u968f\u673a\u5b57\u7b26\u4e32\u548c\u5bf9\u5e94\u7684\u6570\u636e\u5b58\u50a8\u5230django_session\u8868\u4e2d \u5148\u5728\u5185\u5b58\u4e2d\u4ea7\u751f\u64cd\u4f5c\u6570\u636e\u7684\u7f13\u5b58 \u5728\u54cd\u5e94\u7ed3\u679cdjango\u4e2d\u95f4\u4ef6\u7684\u65f6\u5019\u624d\u771f\u6b63\u7684\u64cd\u4f5c\u6570\u636e\u5e93 \u5c06\u4ea7\u751f\u7684\u968f\u673a\u5b57\u7b26\u4e32\u8fd4\u56de\u7ed9\u5ba2\u6237\u7aef\u6d4f\u89c8\u5668\u4fdd\u5b58 2.2 \u53d6\u503c\u65f6 \u00b6 \u81ea\u52a8\u4ece\u6d4f\u89c8\u5668\u8bf7\u6c42\u4e2d\u83b7\u53d6sessionid\u5bf9\u5e94\u7684\u968f\u673a\u5b57\u7b26\u4e32 \u62ff\u7740\u8be5\u968f\u673a\u5b57\u7b26\u4e32\u53bbdjango_session\u8868\u4e2d\u67e5\u627e\u5bf9\u5e94\u7684\u6570\u636e \u5982\u679c\u6bd4\u5bf9\u4e0a\u4e86 \u5219\u5c06\u5bf9\u5e94\u7684\u6570\u636e\u53d6\u51fa\u5e76\u4ee5\u5b57\u5178\u7684\u5f62\u5f0f\u5c01\u88c5\u5230request.session\u4e2d \u5982\u679c\u6bd4\u5bf9\u4e0d\u4e0a \u5219request.session.get()\u8fd4\u56de\u7684\u662fNone 3. session\u7684\u4fdd\u5b58 \u00b6","title":"cookie\u4e0esession"},{"location":"programming/python/Django/cookie%26session/#cookiesession","text":"","title":"cookie\u4e0esession"},{"location":"programming/python/Django/cookie%26session/#cookie","text":"","title":"\u4e00\u3001cookie"},{"location":"programming/python/Django/cookie%26session/#1-cookie","text":"set_cookie(key,value) max_age\u53c2\u6570\uff1a\u8bbe\u7f6e\u8d85\u65f6\u65f6\u95f4\uff0c\u4ee5\u79d2\u4e3a\u5355\u4f4d expires\u53c2\u6570\uff1a\u8bbe\u7f6e\u8d85\u65f6\u65f6\u95f4\uff0c\u4ee5\u79d2\u4e3a\u5355\u4f4d\uff0c\u9488\u5bf9IE\u6d4f\u89c8\u5668 request.COOKIES.get(key) delete_cookie(key)","title":"1. cookie\u5e38\u7528\u65b9\u6cd5"},{"location":"programming/python/Django/cookie%26session/#2-cookie","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 from django.shortcuts import render , HttpResponse , redirect from django import forms def login_auth ( func ): def inner ( request , * args , ** kwargs ): target_url = request . get_full_path () if request . COOKIES . get ( 'username' ): return func ( request , * args , ** kwargs ) else : return redirect ( '/login/?redirect= %s ' % target_url ) return inner def login ( request ): if request . method == 'POST' : username = request . POST . get ( 'username' ) password = request . POST . get ( 'password' ) if username == 'admin' and password == '123' : # \u83b7\u53d6\u7528\u6237\u4e0a\u4e00\u6b21\u60f3\u8981\u8bbf\u95ee\u7684url target_url = request . GET . get ( 'redirect' ) # \u8fd9\u4e2a\u7ed3\u679c\u53ef\u80fd\u662fNone if target_url : obj = redirect ( target_url ) else : # \u4fdd\u5b58\u7528\u6237\u767b\u9646\u72b6\u6001 obj = redirect ( '/home/' ) # \u8ba9\u6d4f\u89c8\u5668\u8bb0\u5f55cookie\u6570\u636e obj . set_cookie ( 'username' , username ) \"\"\" \u6d4f\u89c8\u5668\u4e0d\u5355\u5355\u4f1a\u5e2e\u4f60\u5b58 \u800c\u4e14\u540e\u9762\u6bcf\u6b21\u8bbf\u95ee\u4f60\u7684\u65f6\u5019\u8fd8\u4f1a\u5e26\u7740\u5b83\u8fc7\u6765 \"\"\" # \u8df3\u8f6c\u5230\u4e00\u4e2a\u9700\u8981\u7528\u6237\u767b\u9646\u4e4b\u540e\u624d\u80fd\u770b\u7684\u9875\u9762 return obj return render ( request , 'login.html' ) @login_auth def home ( request ): return HttpResponse ( \"\u6211\u662fhome\u9875\u9762\" ) @login_auth def logout ( request ): obj = redirect ( '/login/' ) obj . delete_cookie ( 'username' ) return obj","title":"2. \u57fa\u4e8ecookie\u7684\u767b\u5f55"},{"location":"programming/python/Django/cookie%26session/#session","text":"\u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u64cd\u4f5csession\u7684\u65f6\u5019\u9700\u8981django\u9ed8\u8ba4\u7684\u4e00\u5f20django_session\u8868\u3002 django\u9ed8\u8ba4session\u7684\u8fc7\u671f\u65f6\u95f4\u662f14\u5929 django_session\u8868\u4e2d\u7684\u6570\u636e\u6761\u6570\u662f\u53d6\u51b3\u4e8e\u6d4f\u89c8\u5668\u7684\uff0c\u540c\u4e00\u4e2a\u8ba1\u7b97\u673a\u4e0a(IP\u5730\u5740)\u540c\u4e00\u4e2a\u6d4f\u89c8\u5668\u53ea\u4f1a\u6709\u4e00\u6761\u6570\u636e\u751f\u6548\u3002","title":"\u4e8c\u3001session"},{"location":"programming/python/Django/cookie%26session/#1-session","text":"request.session['key'] = value request.session.get('key') request.session.set_expiry() 4\u79cd\u7c7b\u578b\u7684\u53c2\u6570 \u6574\u6570\uff1a\u79d2 \u65e5\u671f\u5bf9\u8c61\uff1a\u5230\u6307\u5b9a\u65e5\u671f\u5c31\u5931\u6548 0\uff1a \u4e00\u65e6\u5f53\u524d\u6d4f\u89c8\u5668\u7a97\u53e3\u5173\u95ed\u7acb\u523b\u5931\u6548 \u4e0d\u5199\uff1a\u5931\u6548\u65f6\u95f4\u5c31\u53d6\u51b3\u4e8edjango\u5185\u90e8\u5168\u5c40session\u9ed8\u8ba4\u7684\u5931\u6548\u65f6\u95f4 request.session.delete() \u53ea\u5220\u670d\u52a1\u7aef\u7684\uff0c\u5ba2\u6237\u7aef\u7684\u4e0d\u5220 request.session.flush() \u6d4f\u89c8\u5668\u548c\u670d\u52a1\u7aef\u90fd\u6e05\u7a7a(\u63a8\u8350\u4f7f\u7528)","title":"1. session\u5e38\u7528\u65b9\u6cd5"},{"location":"programming/python/Django/cookie%26session/#2","text":"","title":"2. \u5185\u90e8\u539f\u7406"},{"location":"programming/python/Django/cookie%26session/#21-session","text":"django\u5185\u90e8\u4f1a\u81ea\u52a8\u5e2e\u4f60\u751f\u6210\u4e00\u4e2a\u968f\u673a\u5b57\u7b26\u4e32 django\u5185\u90e8\u81ea\u52a8\u5c06\u968f\u673a\u5b57\u7b26\u4e32\u548c\u5bf9\u5e94\u7684\u6570\u636e\u5b58\u50a8\u5230django_session\u8868\u4e2d \u5148\u5728\u5185\u5b58\u4e2d\u4ea7\u751f\u64cd\u4f5c\u6570\u636e\u7684\u7f13\u5b58 \u5728\u54cd\u5e94\u7ed3\u679cdjango\u4e2d\u95f4\u4ef6\u7684\u65f6\u5019\u624d\u771f\u6b63\u7684\u64cd\u4f5c\u6570\u636e\u5e93 \u5c06\u4ea7\u751f\u7684\u968f\u673a\u5b57\u7b26\u4e32\u8fd4\u56de\u7ed9\u5ba2\u6237\u7aef\u6d4f\u89c8\u5668\u4fdd\u5b58","title":"2.1 \u8bbe\u7f6esession\u65f6\u5019"},{"location":"programming/python/Django/cookie%26session/#22","text":"\u81ea\u52a8\u4ece\u6d4f\u89c8\u5668\u8bf7\u6c42\u4e2d\u83b7\u53d6sessionid\u5bf9\u5e94\u7684\u968f\u673a\u5b57\u7b26\u4e32 \u62ff\u7740\u8be5\u968f\u673a\u5b57\u7b26\u4e32\u53bbdjango_session\u8868\u4e2d\u67e5\u627e\u5bf9\u5e94\u7684\u6570\u636e \u5982\u679c\u6bd4\u5bf9\u4e0a\u4e86 \u5219\u5c06\u5bf9\u5e94\u7684\u6570\u636e\u53d6\u51fa\u5e76\u4ee5\u5b57\u5178\u7684\u5f62\u5f0f\u5c01\u88c5\u5230request.session\u4e2d \u5982\u679c\u6bd4\u5bf9\u4e0d\u4e0a \u5219request.session.get()\u8fd4\u56de\u7684\u662fNone","title":"2.2 \u53d6\u503c\u65f6"},{"location":"programming/python/Django/cookie%26session/#3-session","text":"","title":"3. session\u7684\u4fdd\u5b58"},{"location":"programming/python/Django/forms/","text":"forms\u7ec4\u4ef6 \u00b6 \u529f\u80fd\uff1a \u6e32\u67d3HTML\u4ee3\u7801 \u6821\u9a8c\u6570\u636e \u5c55\u793a\u63d0\u793a\u4fe1\u606f 1. \u57fa\u672c\u4f7f\u7528 \u00b6 1 2 3 4 5 6 7 8 # filename: views.py from django import forms class MyForm ( forms . Form ): username = forms . CharField ( min_length = 6 , max_length = 32 ) password = forms . CharField ( min_length = 6 , max_length = 32 ) email = forms . EmailField () 2. \u6570\u636e\u6821\u9a8c \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 from django.test import TestCase # Create your tests here. import os if __name__ == \"__main__\" : os . environ . setdefault ( \"DJANGO_SETTINGS_MODULE\" , \"mysite.settings\" ) import django django . setup () from django import forms class MyForm ( forms . Form ): username = forms . CharField ( min_length = 6 , max_length = 32 ) password = forms . CharField ( min_length = 6 , max_length = 32 ) email = forms . EmailField () # \u5c06\u5e26\u6821\u9a8c\u7684\u6570\u636e\u7ec4\u7ec7\u6210\u5b57\u5178\u7684\u5f62\u5f0f\u4f20\u5165 # \u6821\u9a8c\u6570\u636e\u53ea\u6821\u9a8c\u7c7b\u4e2d\u51fa\u73b0\u7684\u5b57\u6bb5\uff0c\u591a\u4f20\u7684\u5b57\u6bb5\u76f4\u63a5\u5ffd\u7565 # \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u7c7b\u4e2d\u7684\u6240\u6709\u5b57\u6bb5\u90fd\u5fc5\u987b\u4f20\u503c form_obj = MyForm ({ 'username' : 'tom' , 'password' : '123456' , 'email' : 'tom@126.com' }) # \u5224\u65ad\u6570\u636e\u662f\u5426\u5408\u6cd5\uff0c\u53ea\u6709\u5728\u6240\u6709\u7684\u6570\u636e\u5168\u90e8\u5408\u6cd5\u7684\u60c5\u51b5\u4e0b\u624d\u4f1a\u8fd4\u56deTrue print ( form_obj . is_valid ()) # False # \u67e5\u770b\u6240\u6709\u4e0d\u7b26\u5408\u6821\u9a8c\u89c4\u5219\u4ee5\u53ca\u4e0d\u7b26\u5408\u7684\u539f\u56e0 print ( form_obj . errors ) # <ul class=\"errorlist\"><li>username<ul class=\"errorlist\"><li>Ensure this value has at least 6 characters (it has 3).</li></ul></li></ul> # \u67e5\u770b\u6240\u6709\u6821\u9a8c\u901a\u8fc7\u7684\u6570\u636e print ( form_obj . cleaned_data ) # {'password': '123456', 'email': 'tom@126.com'} 3. \u6e32\u67d3\u6807\u7b7e \u00b6 forms\u7ec4\u4ef6\u53ea\u4f1a\u81ea\u52a8\u6e32\u67d3\u83b7\u53d6\u7528\u6237\u8f93\u5165\u7684\u6807\u7b7e(input select radio checkbox)\uff0c\u4e0d\u80fd\u6e32\u67d3\u63d0\u4ea4\u6309\u94ae\u3002 \u89c6\u56fe\u5c42\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 from django.shortcuts import render from django import forms class MyForm ( forms . Form ): username = forms . CharField ( min_length = 6 , max_length = 32 ) password = forms . CharField ( min_length = 6 , max_length = 32 ) email = forms . EmailField () def index ( request ): # \u7b2c\u4e00\u6b65\uff1a\u751f\u6210\u4e00\u4e2a\u7a7a\u5bf9\u8c61 form_obj = MyForm () # \u76f4\u63a5\u5c06\u8be5\u7a7a\u5bf9\u8c61\u4f20\u9012\u7ed9html\u9875\u9762 return render ( request , 'index.html' , locals ()) \u6a21\u677f\u5c42\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Title</title> {% load static %} <script src=\" {% static 'jquery.min.js' %} \"></script> </head> <body> <form action=\"\" method=\"post\"> <h3>\u7b2c\u4e00\u79cd\u65b9\u5f0f\uff1a\u5c01\u88c5\u7a0b\u5ea6\u592a\u9ad8\uff0c\u4e0d\u4fbf\u4e8e\u540e\u7eed\u6269\u5c55\uff0c\u4e00\u822c\u53ea\u5728\u672c\u5730\u6d4b\u8bd5\u65f6\u4f7f\u7528</h3> <h6>1. \u5b57\u6bb5\u653e\u5728p\u6807\u7b7e\u4e2d</h6> {{ form_obj.as_p }} <h6>2. \u5b57\u6bb5\u653e\u5728p\u6807\u7b7e\u4e2d</h6> {{ form_obj.as_ul }} <h6>3. \u6ca1\u6709\u5176\u4ed6\u6807\u7b7e\u5305\u88f9</h6> {{ form_obj.as_table }} <h3>\u7b2c\u4e8c\u79cd\u65b9\u5f0f\uff1a\u53ef\u6269\u5c55\u6027\u5f88\u5f3a\uff0c\u4f46\u662f\u9700\u8981\u4e66\u5199\u7684\u4ee3\u7801\u592a\u591a\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\u4e0d\u7528</h3> {#\u5bf9\u8c61.\u5b57\u6bb5.\u5b57\u6bb5\u7684\u5c5e\u6027#} <p> {{ form_obj.username.label }} : {{ form_obj.username }} </p> <p> {{ form_obj.password.label }} : {{ form_obj.password }} </p> <p> {{ form_obj.email.label }} : {{ form_obj.email }} </p> <h3>\u7b2c\u4e09\u79cd\u65b9\u5f0f\uff08\u63a8\u8350\u4f7f\u7528\uff09\uff1a\u7b49\u4ef7\u4e8e\u7b2c\u4e8c\u4e2d\u65b9\u5f0f\uff0c\u4ee3\u7801\u4e66\u5199\u7b80\u5355\uff0c\u5e76\u4e14\u6269\u5c55\u6027\u4e5f\u9ad8</h3> {% for form in form_obj %} <p> {{ form.label }} : {{ form }} </p> {% endfor %} </form> </body> </html> \u6e32\u67d3\u7ed3\u679c 4. \u5c55\u793a\u9519\u8bef\u4fe1\u606f \u00b6 4.1 \u57fa\u672c\u4f7f\u7528 \u00b6 \u89c6\u56fe\u5c42 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 from django.shortcuts import render , HttpResponse from django import forms class MyForm ( forms . Form ): username = forms . CharField ( min_length = 6 , max_length = 32 , label = '\u7528\u6237\u540d' ) password = forms . CharField ( min_length = 6 , max_length = 32 , label = '\u5bc6\u7801' ) email = forms . EmailField ( label = '\u90ae\u7bb1' ) def index ( request ): # 1. \u751f\u6210\u4e00\u4e2a\u7a7a\u5bf9\u8c61 form_obj = MyForm () if request . method == 'POST' : # 3.\u6821\u9a8c\u6570\u636e form_obj = MyForm ( request . POST ) # request.POST\u53ef\u4ee5\u770b\u6210\u5c31\u662f\u4e00\u4e2a\u5b57\u5178 # 4. \u5224\u65ad\u6570\u636e\u662f\u5426\u5408\u6cd5 if form_obj . is_valid (): # \u5982\u679c\u5408\u6cd5\uff0c\u6267\u884c\u64cd\u4f5c return HttpResponse ( 'ok' ) # 5.\u4e0d\u5408\u6cd5 \u6709\u9519\u8bef # 2. \u76f4\u63a5\u5c06\u8be5\u7a7a\u5bf9\u8c61\u4f20\u9012\u7ed9html\u9875\u9762 return render ( request , 'index.html' , locals ()) # 1. get\u8bf7\u6c42\u548cpost\u4f20\u7ed9html\u9875\u9762\u5bf9\u8c61\u53d8\u91cf\u540d\u5fc5\u987b\u4e00\u6837 # 2. forms\u7ec4\u4ef6\u5f53\u6570\u636e\u4e0d\u5408\u6cd5\u7684\u60c5\u51b5\u4e0b,\u4f1a\u4fdd\u5b58\u4e0a\u6b21\u7684\u6570\u636e \u6a21\u677f\u5c42\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Title</title> </head> <body> <form action=\"\" method=\"post\" novalidate> {# novalidate \u8ba9\u524d\u7aef\u4e0d\u6821\u9a8c\u6570\u636e #} {% for form in form_obj %} <p> {{ form.label }} : {{ form }} <span style=\"color: red\"> {{ form.errors.0 }} </span> </p> {% endfor %} <input type=\"submit\"> </form> </body> </html> \u6e32\u67d3\u6548\u679c 4.2 \u5b9a\u5236\u9519\u8bef\u4fe1\u606f \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 class MyForm ( forms . Form ): username = forms . CharField ( min_length = 6 , max_length = 12 , label = '\u7528\u6237\u540d' , error_messages = { 'min_length' : '\u7528\u6237\u540d\u6700\u5c116\u4f4d' , 'max_length' : '\u7528\u6237\u540d\u6700\u592712\u4f4d' , 'required' : \"\u7528\u6237\u540d\u4e0d\u80fd\u4e3a\u7a7a\" } ) password = forms . CharField ( min_length = 6 , max_length = 32 , label = '\u5bc6\u7801' , error_messages = { 'min_length' : '\u5bc6\u7801\u6700\u5c116\u4f4d' , 'max_length' : '\u5bc6\u7801\u6700\u592732\u4f4d' , 'required' : \"\u5bc6\u7801\u4e0d\u80fd\u4e3a\u7a7a\" }) email = forms . EmailField ( label = '\u90ae\u7bb1' , error_messages = { 'invalid' : '\u90ae\u7bb1\u683c\u5f0f\u4e0d\u6b63\u786e' , 'required' : \"\u90ae\u7bb1\u4e0d\u80fd\u4e3a\u7a7a\" }) 5. \u94a9\u5b50\u51fd\u6570 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 class MyForm ( forms . Form ): username = forms . CharField ( min_length = 6 , max_length = 32 , label = '\u7528\u6237\u540d' ) password = forms . CharField ( min_length = 6 , max_length = 32 , label = '\u5bc6\u7801' ) confirm_password = forms . CharField ( min_length = 6 , max_length = 32 , label = '\u786e\u8ba4\u5bc6\u7801' ) email = forms . EmailField ( label = '\u90ae\u7bb1' ) # \u94a9\u5b50\u51fd\u6570 \u5728\u7c7b\u91cc\u9762\u4e66\u5199\u65b9\u6cd5\u5373\u53ef # 1. \u5c40\u90e8\u94a9\u5b50 \u9700\u8981\u7ed9\u5355\u4e2a\u5b57\u6bb5\u589e\u52a0\u6821\u9a8c\u89c4\u5219\u7684\u65f6\u5019\u53ef\u4ee5\u4f7f\u7528 def clean_username ( self ): # \u83b7\u53d6\u5230\u7528\u6237\u540d username = self . cleaned_data . get ( 'username' ) if '666' in username : # \u63d0\u793a\u524d\u7aef\u5c55\u793a\u9519\u8bef\u4fe1\u606f self . add_error ( 'username' , '\u5149\u558a666\u662f\u4e0d\u884c\u6ef4\uff5e' ) # \u5c06\u94a9\u5b50\u51fd\u6570\u94a9\u53bb\u51fa\u6765\u6570\u636e\u518d\u653e\u56de\u53bb return username # 2. \u5168\u5c40\u94a9\u5b50 \u9700\u8981\u7ed9\u591a\u4e2a\u5b57\u6bb5\u589e\u52a0\u6821\u9a8c\u89c4\u5219\u7684\u65f6\u5019\u53ef\u4ee5\u4f7f\u7528 def clean ( self ): password = self . cleaned_data . get ( 'password' ) confirm_password = self . cleaned_data . get ( 'confirm_password' ) if not confirm_password == password : self . add_error ( 'confirm_password' , '\u4e24\u6b21\u5bc6\u7801\u4e0d\u4e00\u81f4' ) # \u5c06\u94a9\u5b50\u51fd\u6570\u94a9\u51fa\u6765\u6570\u636e\u518d\u653e\u56de\u53bb return self . cleaned_data 6. forms\u7ec4\u4ef6\u5e38\u7528\u53c2\u6570 \u00b6 1 2 3 4 5 6 7 8 9 label # \u5b57\u6bb5\u540d error_messages # \u81ea\u5b9a\u4e49\u62a5\u9519\u4fe1\u606f initial # \u9ed8\u8ba4\u503c required # \u63a7\u5236\u5b57\u6bb5\u662f\u5426\u5fc5\u586b validators = [ RegexValidator ( r '^[0-9]+$' , '\u8bf7\u8f93\u5165\u6570\u5b57' ), RegexValidator ( r '^159[0-9]+$' , '\u6570\u5b57\u5fc5\u987b\u4ee5159\u5f00\u5934' ) ] # \u6b63\u5219\u6821\u9a8c from django.core.validators import RegexValidator widget = forms . widgets . PasswordInput ( attrs = { 'class' : 'form-control c1 c2' }) # attrs \u8fd9\u662f\u5c5e\u6027\uff0c\u6bd4\u5982\u6dfb\u52a0bootstrap\u6837\u5f0f \u4e0d\u540c\u7c7b\u578b\u7684 input : 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 # radio gender = forms . ChoiceField ( choices = (( 1 , \"\u7537\" ), ( 2 , \"\u5973\" ), ( 3 , \"\u4fdd\u5bc6\" )), label = \"\u6027\u522b\" , initial = 3 , widget = forms . widgets . RadioSelect () ) # select hobby = forms . ChoiceField ( choices = (( 1 , \"\u7bee\u7403\" ), ( 2 , \"\u8db3\u7403\" ), ( 3 , \"\u53cc\u8272\u7403\" ),), label = \"\u7231\u597d\" , initial = 3 , widget = forms . widgets . Select () ) # \u591a\u9009 hobby1 = forms . MultipleChoiceField ( choices = (( 1 , \"\u7bee\u7403\" ), ( 2 , \"\u8db3\u7403\" ), ( 3 , \"\u53cc\u8272\u7403\" ),), label = \"\u7231\u597d\" , initial = [ 1 , 3 ], widget = forms . widgets . SelectMultiple () ) # \u5355\u9009checkbox keep = forms . ChoiceField ( label = \"\u662f\u5426\u8bb0\u4f4f\u5bc6\u7801\" , initial = \"checked\" , widget = forms . widgets . CheckboxInput () ) # \u591a\u9009checkbox hobby2 = forms . MultipleChoiceField ( choices = (( 1 , \"\u7bee\u7403\" ), ( 2 , \"\u8db3\u7403\" ), ( 3 , \"\u53cc\u8272\u7403\" ),), label = \"\u7231\u597d\" , initial = [ 1 , 3 ], widget = forms . widgets . CheckboxSelectMultiple () )","title":"forms\u7ec4\u4ef6"},{"location":"programming/python/Django/forms/#forms","text":"\u529f\u80fd\uff1a \u6e32\u67d3HTML\u4ee3\u7801 \u6821\u9a8c\u6570\u636e \u5c55\u793a\u63d0\u793a\u4fe1\u606f","title":"forms\u7ec4\u4ef6"},{"location":"programming/python/Django/forms/#1","text":"1 2 3 4 5 6 7 8 # filename: views.py from django import forms class MyForm ( forms . Form ): username = forms . CharField ( min_length = 6 , max_length = 32 ) password = forms . CharField ( min_length = 6 , max_length = 32 ) email = forms . EmailField ()","title":"1. \u57fa\u672c\u4f7f\u7528"},{"location":"programming/python/Django/forms/#2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 from django.test import TestCase # Create your tests here. import os if __name__ == \"__main__\" : os . environ . setdefault ( \"DJANGO_SETTINGS_MODULE\" , \"mysite.settings\" ) import django django . setup () from django import forms class MyForm ( forms . Form ): username = forms . CharField ( min_length = 6 , max_length = 32 ) password = forms . CharField ( min_length = 6 , max_length = 32 ) email = forms . EmailField () # \u5c06\u5e26\u6821\u9a8c\u7684\u6570\u636e\u7ec4\u7ec7\u6210\u5b57\u5178\u7684\u5f62\u5f0f\u4f20\u5165 # \u6821\u9a8c\u6570\u636e\u53ea\u6821\u9a8c\u7c7b\u4e2d\u51fa\u73b0\u7684\u5b57\u6bb5\uff0c\u591a\u4f20\u7684\u5b57\u6bb5\u76f4\u63a5\u5ffd\u7565 # \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u7c7b\u4e2d\u7684\u6240\u6709\u5b57\u6bb5\u90fd\u5fc5\u987b\u4f20\u503c form_obj = MyForm ({ 'username' : 'tom' , 'password' : '123456' , 'email' : 'tom@126.com' }) # \u5224\u65ad\u6570\u636e\u662f\u5426\u5408\u6cd5\uff0c\u53ea\u6709\u5728\u6240\u6709\u7684\u6570\u636e\u5168\u90e8\u5408\u6cd5\u7684\u60c5\u51b5\u4e0b\u624d\u4f1a\u8fd4\u56deTrue print ( form_obj . is_valid ()) # False # \u67e5\u770b\u6240\u6709\u4e0d\u7b26\u5408\u6821\u9a8c\u89c4\u5219\u4ee5\u53ca\u4e0d\u7b26\u5408\u7684\u539f\u56e0 print ( form_obj . errors ) # <ul class=\"errorlist\"><li>username<ul class=\"errorlist\"><li>Ensure this value has at least 6 characters (it has 3).</li></ul></li></ul> # \u67e5\u770b\u6240\u6709\u6821\u9a8c\u901a\u8fc7\u7684\u6570\u636e print ( form_obj . cleaned_data ) # {'password': '123456', 'email': 'tom@126.com'}","title":"2. \u6570\u636e\u6821\u9a8c"},{"location":"programming/python/Django/forms/#3","text":"forms\u7ec4\u4ef6\u53ea\u4f1a\u81ea\u52a8\u6e32\u67d3\u83b7\u53d6\u7528\u6237\u8f93\u5165\u7684\u6807\u7b7e(input select radio checkbox)\uff0c\u4e0d\u80fd\u6e32\u67d3\u63d0\u4ea4\u6309\u94ae\u3002 \u89c6\u56fe\u5c42\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 from django.shortcuts import render from django import forms class MyForm ( forms . Form ): username = forms . CharField ( min_length = 6 , max_length = 32 ) password = forms . CharField ( min_length = 6 , max_length = 32 ) email = forms . EmailField () def index ( request ): # \u7b2c\u4e00\u6b65\uff1a\u751f\u6210\u4e00\u4e2a\u7a7a\u5bf9\u8c61 form_obj = MyForm () # \u76f4\u63a5\u5c06\u8be5\u7a7a\u5bf9\u8c61\u4f20\u9012\u7ed9html\u9875\u9762 return render ( request , 'index.html' , locals ()) \u6a21\u677f\u5c42\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Title</title> {% load static %} <script src=\" {% static 'jquery.min.js' %} \"></script> </head> <body> <form action=\"\" method=\"post\"> <h3>\u7b2c\u4e00\u79cd\u65b9\u5f0f\uff1a\u5c01\u88c5\u7a0b\u5ea6\u592a\u9ad8\uff0c\u4e0d\u4fbf\u4e8e\u540e\u7eed\u6269\u5c55\uff0c\u4e00\u822c\u53ea\u5728\u672c\u5730\u6d4b\u8bd5\u65f6\u4f7f\u7528</h3> <h6>1. \u5b57\u6bb5\u653e\u5728p\u6807\u7b7e\u4e2d</h6> {{ form_obj.as_p }} <h6>2. \u5b57\u6bb5\u653e\u5728p\u6807\u7b7e\u4e2d</h6> {{ form_obj.as_ul }} <h6>3. \u6ca1\u6709\u5176\u4ed6\u6807\u7b7e\u5305\u88f9</h6> {{ form_obj.as_table }} <h3>\u7b2c\u4e8c\u79cd\u65b9\u5f0f\uff1a\u53ef\u6269\u5c55\u6027\u5f88\u5f3a\uff0c\u4f46\u662f\u9700\u8981\u4e66\u5199\u7684\u4ee3\u7801\u592a\u591a\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\u4e0d\u7528</h3> {#\u5bf9\u8c61.\u5b57\u6bb5.\u5b57\u6bb5\u7684\u5c5e\u6027#} <p> {{ form_obj.username.label }} : {{ form_obj.username }} </p> <p> {{ form_obj.password.label }} : {{ form_obj.password }} </p> <p> {{ form_obj.email.label }} : {{ form_obj.email }} </p> <h3>\u7b2c\u4e09\u79cd\u65b9\u5f0f\uff08\u63a8\u8350\u4f7f\u7528\uff09\uff1a\u7b49\u4ef7\u4e8e\u7b2c\u4e8c\u4e2d\u65b9\u5f0f\uff0c\u4ee3\u7801\u4e66\u5199\u7b80\u5355\uff0c\u5e76\u4e14\u6269\u5c55\u6027\u4e5f\u9ad8</h3> {% for form in form_obj %} <p> {{ form.label }} : {{ form }} </p> {% endfor %} </form> </body> </html> \u6e32\u67d3\u7ed3\u679c","title":"3. \u6e32\u67d3\u6807\u7b7e"},{"location":"programming/python/Django/forms/#4","text":"","title":"4. \u5c55\u793a\u9519\u8bef\u4fe1\u606f"},{"location":"programming/python/Django/forms/#41","text":"\u89c6\u56fe\u5c42 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 from django.shortcuts import render , HttpResponse from django import forms class MyForm ( forms . Form ): username = forms . CharField ( min_length = 6 , max_length = 32 , label = '\u7528\u6237\u540d' ) password = forms . CharField ( min_length = 6 , max_length = 32 , label = '\u5bc6\u7801' ) email = forms . EmailField ( label = '\u90ae\u7bb1' ) def index ( request ): # 1. \u751f\u6210\u4e00\u4e2a\u7a7a\u5bf9\u8c61 form_obj = MyForm () if request . method == 'POST' : # 3.\u6821\u9a8c\u6570\u636e form_obj = MyForm ( request . POST ) # request.POST\u53ef\u4ee5\u770b\u6210\u5c31\u662f\u4e00\u4e2a\u5b57\u5178 # 4. \u5224\u65ad\u6570\u636e\u662f\u5426\u5408\u6cd5 if form_obj . is_valid (): # \u5982\u679c\u5408\u6cd5\uff0c\u6267\u884c\u64cd\u4f5c return HttpResponse ( 'ok' ) # 5.\u4e0d\u5408\u6cd5 \u6709\u9519\u8bef # 2. \u76f4\u63a5\u5c06\u8be5\u7a7a\u5bf9\u8c61\u4f20\u9012\u7ed9html\u9875\u9762 return render ( request , 'index.html' , locals ()) # 1. get\u8bf7\u6c42\u548cpost\u4f20\u7ed9html\u9875\u9762\u5bf9\u8c61\u53d8\u91cf\u540d\u5fc5\u987b\u4e00\u6837 # 2. forms\u7ec4\u4ef6\u5f53\u6570\u636e\u4e0d\u5408\u6cd5\u7684\u60c5\u51b5\u4e0b,\u4f1a\u4fdd\u5b58\u4e0a\u6b21\u7684\u6570\u636e \u6a21\u677f\u5c42\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Title</title> </head> <body> <form action=\"\" method=\"post\" novalidate> {# novalidate \u8ba9\u524d\u7aef\u4e0d\u6821\u9a8c\u6570\u636e #} {% for form in form_obj %} <p> {{ form.label }} : {{ form }} <span style=\"color: red\"> {{ form.errors.0 }} </span> </p> {% endfor %} <input type=\"submit\"> </form> </body> </html> \u6e32\u67d3\u6548\u679c","title":"4.1 \u57fa\u672c\u4f7f\u7528"},{"location":"programming/python/Django/forms/#42","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 class MyForm ( forms . Form ): username = forms . CharField ( min_length = 6 , max_length = 12 , label = '\u7528\u6237\u540d' , error_messages = { 'min_length' : '\u7528\u6237\u540d\u6700\u5c116\u4f4d' , 'max_length' : '\u7528\u6237\u540d\u6700\u592712\u4f4d' , 'required' : \"\u7528\u6237\u540d\u4e0d\u80fd\u4e3a\u7a7a\" } ) password = forms . CharField ( min_length = 6 , max_length = 32 , label = '\u5bc6\u7801' , error_messages = { 'min_length' : '\u5bc6\u7801\u6700\u5c116\u4f4d' , 'max_length' : '\u5bc6\u7801\u6700\u592732\u4f4d' , 'required' : \"\u5bc6\u7801\u4e0d\u80fd\u4e3a\u7a7a\" }) email = forms . EmailField ( label = '\u90ae\u7bb1' , error_messages = { 'invalid' : '\u90ae\u7bb1\u683c\u5f0f\u4e0d\u6b63\u786e' , 'required' : \"\u90ae\u7bb1\u4e0d\u80fd\u4e3a\u7a7a\" })","title":"4.2 \u5b9a\u5236\u9519\u8bef\u4fe1\u606f"},{"location":"programming/python/Django/forms/#5","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 class MyForm ( forms . Form ): username = forms . CharField ( min_length = 6 , max_length = 32 , label = '\u7528\u6237\u540d' ) password = forms . CharField ( min_length = 6 , max_length = 32 , label = '\u5bc6\u7801' ) confirm_password = forms . CharField ( min_length = 6 , max_length = 32 , label = '\u786e\u8ba4\u5bc6\u7801' ) email = forms . EmailField ( label = '\u90ae\u7bb1' ) # \u94a9\u5b50\u51fd\u6570 \u5728\u7c7b\u91cc\u9762\u4e66\u5199\u65b9\u6cd5\u5373\u53ef # 1. \u5c40\u90e8\u94a9\u5b50 \u9700\u8981\u7ed9\u5355\u4e2a\u5b57\u6bb5\u589e\u52a0\u6821\u9a8c\u89c4\u5219\u7684\u65f6\u5019\u53ef\u4ee5\u4f7f\u7528 def clean_username ( self ): # \u83b7\u53d6\u5230\u7528\u6237\u540d username = self . cleaned_data . get ( 'username' ) if '666' in username : # \u63d0\u793a\u524d\u7aef\u5c55\u793a\u9519\u8bef\u4fe1\u606f self . add_error ( 'username' , '\u5149\u558a666\u662f\u4e0d\u884c\u6ef4\uff5e' ) # \u5c06\u94a9\u5b50\u51fd\u6570\u94a9\u53bb\u51fa\u6765\u6570\u636e\u518d\u653e\u56de\u53bb return username # 2. \u5168\u5c40\u94a9\u5b50 \u9700\u8981\u7ed9\u591a\u4e2a\u5b57\u6bb5\u589e\u52a0\u6821\u9a8c\u89c4\u5219\u7684\u65f6\u5019\u53ef\u4ee5\u4f7f\u7528 def clean ( self ): password = self . cleaned_data . get ( 'password' ) confirm_password = self . cleaned_data . get ( 'confirm_password' ) if not confirm_password == password : self . add_error ( 'confirm_password' , '\u4e24\u6b21\u5bc6\u7801\u4e0d\u4e00\u81f4' ) # \u5c06\u94a9\u5b50\u51fd\u6570\u94a9\u51fa\u6765\u6570\u636e\u518d\u653e\u56de\u53bb return self . cleaned_data","title":"5. \u94a9\u5b50\u51fd\u6570"},{"location":"programming/python/Django/forms/#6-forms","text":"1 2 3 4 5 6 7 8 9 label # \u5b57\u6bb5\u540d error_messages # \u81ea\u5b9a\u4e49\u62a5\u9519\u4fe1\u606f initial # \u9ed8\u8ba4\u503c required # \u63a7\u5236\u5b57\u6bb5\u662f\u5426\u5fc5\u586b validators = [ RegexValidator ( r '^[0-9]+$' , '\u8bf7\u8f93\u5165\u6570\u5b57' ), RegexValidator ( r '^159[0-9]+$' , '\u6570\u5b57\u5fc5\u987b\u4ee5159\u5f00\u5934' ) ] # \u6b63\u5219\u6821\u9a8c from django.core.validators import RegexValidator widget = forms . widgets . PasswordInput ( attrs = { 'class' : 'form-control c1 c2' }) # attrs \u8fd9\u662f\u5c5e\u6027\uff0c\u6bd4\u5982\u6dfb\u52a0bootstrap\u6837\u5f0f \u4e0d\u540c\u7c7b\u578b\u7684 input : 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 # radio gender = forms . ChoiceField ( choices = (( 1 , \"\u7537\" ), ( 2 , \"\u5973\" ), ( 3 , \"\u4fdd\u5bc6\" )), label = \"\u6027\u522b\" , initial = 3 , widget = forms . widgets . RadioSelect () ) # select hobby = forms . ChoiceField ( choices = (( 1 , \"\u7bee\u7403\" ), ( 2 , \"\u8db3\u7403\" ), ( 3 , \"\u53cc\u8272\u7403\" ),), label = \"\u7231\u597d\" , initial = 3 , widget = forms . widgets . Select () ) # \u591a\u9009 hobby1 = forms . MultipleChoiceField ( choices = (( 1 , \"\u7bee\u7403\" ), ( 2 , \"\u8db3\u7403\" ), ( 3 , \"\u53cc\u8272\u7403\" ),), label = \"\u7231\u597d\" , initial = [ 1 , 3 ], widget = forms . widgets . SelectMultiple () ) # \u5355\u9009checkbox keep = forms . ChoiceField ( label = \"\u662f\u5426\u8bb0\u4f4f\u5bc6\u7801\" , initial = \"checked\" , widget = forms . widgets . CheckboxInput () ) # \u591a\u9009checkbox hobby2 = forms . MultipleChoiceField ( choices = (( 1 , \"\u7bee\u7403\" ), ( 2 , \"\u8db3\u7403\" ), ( 3 , \"\u53cc\u8272\u7403\" ),), label = \"\u7231\u597d\" , initial = [ 1 , 3 ], widget = forms . widgets . CheckboxSelectMultiple () )","title":"6. forms\u7ec4\u4ef6\u5e38\u7528\u53c2\u6570"},{"location":"programming/python/Django/install/","text":"Django\u5b89\u88c5 \u00b6 \u4e00\u3001\u5b89\u88c5 \u00b6 1 pip install django == 1 .11.29 \u4e8c\u3001\u521b\u5efa\u4e00\u4e2a\u9879\u76ee \u00b6 1. \u521b\u5efa\u9879\u76ee \u00b6 1 $ django-admin startproject mysite 2. \u521b\u5efa\u5e94\u7528 \u00b6 1 $ python manage.py startapp app 3. \u6ce8\u518c\u5e94\u7528 \u00b6 \u4fee\u6539 mysite/mysite/settings.py \u6587\u4ef6 1 2 3 4 5 6 7 8 9 INSTALLED_APPS = [ 'django.contrib.admin' , 'django.contrib.auth' , 'django.contrib.contenttypes' , 'django.contrib.sessions' , 'django.contrib.messages' , 'django.contrib.staticfiles' , 'app.apps.AppConfig' , # \u6dfb\u52a0\u6b64\u884c ] 4. \u521b\u5efa\u6a21\u677f\u6587\u4ef6\u5939 \u00b6 1 $ mkdir mysite/app/templates \u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u6dfb\u52a0\u6a21\u677f\u6587\u4ef6\u8def\u5f84 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 TEMPLATES = [ { 'BACKEND' : 'django.template.backends.django.DjangoTemplates' , 'DIRS' : [ os . path . join ( BASE_DIR , 'templates' )], # \u6dfb\u52a0\u6b64\u884c 'APP_DIRS' : True , 'OPTIONS' : { 'context_processors' : [ 'django.template.context_processors.debug' , 'django.template.context_processors.request' , 'django.contrib.auth.context_processors.auth' , 'django.contrib.messages.context_processors.messages' , ], }, }, ] \u4e09\u3001\u542f\u52a8 \u00b6 1 2 3 4 $ cd mysite $ python manage.py runserver # \u6267\u884cIP\u548c\u7aef\u53e3 $ python manage.py runserver 127 .0.0.1:8888 \u56db\u3001 \u76ee\u5f55\u7ed3\u6784 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 $ tree mysite/ mysite \u251c\u2500\u2500 app \u2502 \u251c\u2500\u2500 __init__.py \u2502 \u251c\u2500\u2500 admin.py \u2502 \u251c\u2500\u2500 apps.py \u2502 \u251c\u2500\u2500 migrations \u2502 \u2502 \u251c\u2500\u2500 __init__.py \u2502 \u251c\u2500\u2500 models.py \u2502 \u251c\u2500\u2500 tests.py \u2502 \u2514\u2500\u2500 views.py \u251c\u2500\u2500 db.sqlite3 \u251c\u2500\u2500 manage.py \u2514\u2500\u2500 mysite \u251c\u2500\u2500 __init__.py \u251c\u2500\u2500 settings.py \u251c\u2500\u2500 urls.py \u2514\u2500\u2500 wsgi.py \u4e94\u3001\u8bf7\u6c42\u751f\u547d\u5468\u671f \u00b6 1. \u6d4f\u89c8\u5668 \u00b6 \u200b \u53d1\u9001HTTP\u8bf7\u6c42 2. Web\u670d\u52a1\u7f51\u7ba1\u63a5\u53e3 \u00b6 2.1 \u4f5c\u7528 \u00b6 \u5904\u7406\u8bf7\u6c42\u6d41\u7a0b\uff1a\u8bf7\u6c42\u6765\u7684\u65f6\u5019\u89e3\u6790\u5c01\u88c5\uff0c\u54cd\u5e94\u8d70\u7684\u65f6\u5019\u6253\u5305\u5904\u7406 2.2 \u5b9e\u73b0 \u00b6 wsgiref\u6a21\u5757\uff0cdjango\u9ed8\u8ba4\u6a21\u5757\uff0c\u4e0d\u80fd\u627f\u53d7\u9ad8\u5e76\u53d1 uwsgi\u6a21\u5757\uff0c\u53ef\u4ee5\u652f\u6301\u9ad8\u5e76\u53d1 \u4e24\u4e2a\u6a21\u5757\u90fd\u662fWSGI\u534f\u8bae\u7684\u5b9e\u73b0 3. Django\u540e\u7aef \u00b6 3.1 \u4e2d\u95f4\u4ef6 \u00b6 3.2 \u8def\u7531\u5c42 \u00b6 \u8bc6\u522b\u8def\u7531\u5339\u914d\u5bf9\u5e94\u7684\u89c6\u56fe\u51fd\u6570 3.3 \u89c6\u56fe\u5c42 \u00b6 \u7f51\u7ad9\u6574\u4f53\u7684\u4e1a\u52a1\u903b\u8f91 3.4 \u6a21\u677f\u5c42 \u00b6 \u7f51\u7ad9\u6240\u6709\u7684html\u6587\u4ef6 3.5 \u6a21\u578b\u5c42 \u00b6 \u6570\u636e\u5e93\u76f8\u5173 4. \u6d41\u7a0b \u00b6 Django\u4ece\u6536\u5230\u6d88\u606f\u4e2d\uff0c\u4ece\u8bf7\u6c42\u6d88\u606f\u4e2d\u5206\u89e3\u51fa\u7528\u6237\u8bbf\u95ee\u7684\u8def\u5f84 \u62ff\u7740\u5f97\u5230\u7684\u8def\u5f84\u5728\u8def\u5f84\u548c\u51fd\u6570\u7684\u5bf9\u5e94\u5173\u7cfb\u5217\u8868\u4e2d\u8fdb\u884c\u5339\u914d\uff0c\u5339\u914d\u4e4b\u540e\u6267\u884c\u51fd\u6570 \u6267\u884c\u51fd\u6570\uff0c\u628a\u6240\u6709\u548c\u8bf7\u6c42\u76f8\u5173\u7684\u6570\u636e\u5c01\u88c5\u5230\u4e00\u4e2arequest\u53c2\u6570\u4e2d render\u627e\u5230html\u6587\u4ef6\uff0c\u6253\u5f00\u5e76\u8bfb\u53d6\u6587\u4ef6\u5185\u5bb9\uff0c\u6309\u7167http\u54cd\u5e94\u6d88\u606f\u7684\u683c\u5f0f\u5c01\u88c5\uff0c\u8fd4\u56de\u7ed9\u7528\u6237\u7684\u6d4f\u89c8\u5668 \u6d4f\u89c8\u5668\u6536\u5230\u54cd\u5e94\u7684\u6d88\u606f\uff0c\u6309\u7167HTML\u7684\u683c\u5f0f\u5c55\u793a\u9875\u9762","title":"Django\u5b89\u88c5"},{"location":"programming/python/Django/install/#django","text":"","title":"Django\u5b89\u88c5"},{"location":"programming/python/Django/install/#_1","text":"1 pip install django == 1 .11.29","title":"\u4e00\u3001\u5b89\u88c5"},{"location":"programming/python/Django/install/#_2","text":"","title":"\u4e8c\u3001\u521b\u5efa\u4e00\u4e2a\u9879\u76ee"},{"location":"programming/python/Django/install/#1","text":"1 $ django-admin startproject mysite","title":"1. \u521b\u5efa\u9879\u76ee"},{"location":"programming/python/Django/install/#2","text":"1 $ python manage.py startapp app","title":"2. \u521b\u5efa\u5e94\u7528"},{"location":"programming/python/Django/install/#3","text":"\u4fee\u6539 mysite/mysite/settings.py \u6587\u4ef6 1 2 3 4 5 6 7 8 9 INSTALLED_APPS = [ 'django.contrib.admin' , 'django.contrib.auth' , 'django.contrib.contenttypes' , 'django.contrib.sessions' , 'django.contrib.messages' , 'django.contrib.staticfiles' , 'app.apps.AppConfig' , # \u6dfb\u52a0\u6b64\u884c ]","title":"3. \u6ce8\u518c\u5e94\u7528"},{"location":"programming/python/Django/install/#4","text":"1 $ mkdir mysite/app/templates \u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u6dfb\u52a0\u6a21\u677f\u6587\u4ef6\u8def\u5f84 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 TEMPLATES = [ { 'BACKEND' : 'django.template.backends.django.DjangoTemplates' , 'DIRS' : [ os . path . join ( BASE_DIR , 'templates' )], # \u6dfb\u52a0\u6b64\u884c 'APP_DIRS' : True , 'OPTIONS' : { 'context_processors' : [ 'django.template.context_processors.debug' , 'django.template.context_processors.request' , 'django.contrib.auth.context_processors.auth' , 'django.contrib.messages.context_processors.messages' , ], }, }, ]","title":"4. \u521b\u5efa\u6a21\u677f\u6587\u4ef6\u5939"},{"location":"programming/python/Django/install/#_3","text":"1 2 3 4 $ cd mysite $ python manage.py runserver # \u6267\u884cIP\u548c\u7aef\u53e3 $ python manage.py runserver 127 .0.0.1:8888","title":"\u4e09\u3001\u542f\u52a8"},{"location":"programming/python/Django/install/#_4","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 $ tree mysite/ mysite \u251c\u2500\u2500 app \u2502 \u251c\u2500\u2500 __init__.py \u2502 \u251c\u2500\u2500 admin.py \u2502 \u251c\u2500\u2500 apps.py \u2502 \u251c\u2500\u2500 migrations \u2502 \u2502 \u251c\u2500\u2500 __init__.py \u2502 \u251c\u2500\u2500 models.py \u2502 \u251c\u2500\u2500 tests.py \u2502 \u2514\u2500\u2500 views.py \u251c\u2500\u2500 db.sqlite3 \u251c\u2500\u2500 manage.py \u2514\u2500\u2500 mysite \u251c\u2500\u2500 __init__.py \u251c\u2500\u2500 settings.py \u251c\u2500\u2500 urls.py \u2514\u2500\u2500 wsgi.py","title":"\u56db\u3001 \u76ee\u5f55\u7ed3\u6784"},{"location":"programming/python/Django/install/#_5","text":"","title":"\u4e94\u3001\u8bf7\u6c42\u751f\u547d\u5468\u671f"},{"location":"programming/python/Django/install/#1_1","text":"\u200b \u53d1\u9001HTTP\u8bf7\u6c42","title":"1. \u6d4f\u89c8\u5668"},{"location":"programming/python/Django/install/#2-web","text":"","title":"2. Web\u670d\u52a1\u7f51\u7ba1\u63a5\u53e3"},{"location":"programming/python/Django/install/#21","text":"\u5904\u7406\u8bf7\u6c42\u6d41\u7a0b\uff1a\u8bf7\u6c42\u6765\u7684\u65f6\u5019\u89e3\u6790\u5c01\u88c5\uff0c\u54cd\u5e94\u8d70\u7684\u65f6\u5019\u6253\u5305\u5904\u7406","title":"2.1 \u4f5c\u7528"},{"location":"programming/python/Django/install/#22","text":"wsgiref\u6a21\u5757\uff0cdjango\u9ed8\u8ba4\u6a21\u5757\uff0c\u4e0d\u80fd\u627f\u53d7\u9ad8\u5e76\u53d1 uwsgi\u6a21\u5757\uff0c\u53ef\u4ee5\u652f\u6301\u9ad8\u5e76\u53d1 \u4e24\u4e2a\u6a21\u5757\u90fd\u662fWSGI\u534f\u8bae\u7684\u5b9e\u73b0","title":"2.2 \u5b9e\u73b0"},{"location":"programming/python/Django/install/#3-django","text":"","title":"3. Django\u540e\u7aef"},{"location":"programming/python/Django/install/#31","text":"","title":"3.1 \u4e2d\u95f4\u4ef6"},{"location":"programming/python/Django/install/#32","text":"\u8bc6\u522b\u8def\u7531\u5339\u914d\u5bf9\u5e94\u7684\u89c6\u56fe\u51fd\u6570","title":"3.2 \u8def\u7531\u5c42"},{"location":"programming/python/Django/install/#33","text":"\u7f51\u7ad9\u6574\u4f53\u7684\u4e1a\u52a1\u903b\u8f91","title":"3.3 \u89c6\u56fe\u5c42"},{"location":"programming/python/Django/install/#34","text":"\u7f51\u7ad9\u6240\u6709\u7684html\u6587\u4ef6","title":"3.4 \u6a21\u677f\u5c42"},{"location":"programming/python/Django/install/#35","text":"\u6570\u636e\u5e93\u76f8\u5173","title":"3.5 \u6a21\u578b\u5c42"},{"location":"programming/python/Django/install/#4_1","text":"Django\u4ece\u6536\u5230\u6d88\u606f\u4e2d\uff0c\u4ece\u8bf7\u6c42\u6d88\u606f\u4e2d\u5206\u89e3\u51fa\u7528\u6237\u8bbf\u95ee\u7684\u8def\u5f84 \u62ff\u7740\u5f97\u5230\u7684\u8def\u5f84\u5728\u8def\u5f84\u548c\u51fd\u6570\u7684\u5bf9\u5e94\u5173\u7cfb\u5217\u8868\u4e2d\u8fdb\u884c\u5339\u914d\uff0c\u5339\u914d\u4e4b\u540e\u6267\u884c\u51fd\u6570 \u6267\u884c\u51fd\u6570\uff0c\u628a\u6240\u6709\u548c\u8bf7\u6c42\u76f8\u5173\u7684\u6570\u636e\u5c01\u88c5\u5230\u4e00\u4e2arequest\u53c2\u6570\u4e2d render\u627e\u5230html\u6587\u4ef6\uff0c\u6253\u5f00\u5e76\u8bfb\u53d6\u6587\u4ef6\u5185\u5bb9\uff0c\u6309\u7167http\u54cd\u5e94\u6d88\u606f\u7684\u683c\u5f0f\u5c01\u88c5\uff0c\u8fd4\u56de\u7ed9\u7528\u6237\u7684\u6d4f\u89c8\u5668 \u6d4f\u89c8\u5668\u6536\u5230\u54cd\u5e94\u7684\u6d88\u606f\uff0c\u6309\u7167HTML\u7684\u683c\u5f0f\u5c55\u793a\u9875\u9762","title":"4. \u6d41\u7a0b"},{"location":"programming/python/Django/middleware/","text":"\u4e2d\u95f4\u4ef6 \u00b6 \u4e00\u3001\u4ecb\u7ecd \u00b6 django\u4e2d\u95f4\u4ef6\u662fdjango\u7684\u95e8\u6237 \u8bf7\u6c42\u6765\u7684\u65f6\u5019\u9700\u8981\u5148\u7ecf\u8fc7\u4e2d\u95f4\u4ef6\u624d\u80fd\u5230\u8fbe\u771f\u6b63\u7684django\u540e\u7aef \u54cd\u5e94\u8d70\u7684\u65f6\u5019\u6700\u540e\u4e5f\u9700\u8981\u7ecf\u8fc7\u4e2d\u95f4\u4ef6\u624d\u80fd\u53d1\u9001\u51fa\u53bb django\u81ea\u5e26\u4e03\u4e2a\u4e2d\u95f4\u4ef6\uff0c\u6bcf\u4e2a\u4e2d\u95f4\u4ef6\u90fd\u6709\u5404\u81ea\u5bf9\u5e94\u7684\u529f\u80fd 1 2 3 4 5 6 7 8 9 MIDDLEWARE = [ 'django.middleware.security.SecurityMiddleware' , 'django.contrib.sessions.middleware.SessionMiddleware' , 'django.middleware.common.CommonMiddleware' , 'django.middleware.csrf.CsrfViewMiddleware' , 'django.contrib.auth.middleware.AuthenticationMiddleware' , 'django.contrib.messages.middleware.MessageMiddleware' , 'django.middleware.clickjacking.XFrameOptionsMiddleware' , ] \u4e8c\u3001\u81ea\u5b9a\u4e49\u4e2d\u95f4\u4ef6 \u00b6 django\u652f\u6301\u7a0b\u5e8f\u5458\u81ea\u5b9a\u4e49\u4e2d\u95f4\u4ef6\u5e76\u4e14\u66b4\u9732\u7ed9\u7a0b\u5e8f\u5458\u4e94\u4e2a\u53ef\u4ee5\u81ea\u5b9a\u4e49\u7684\u65b9\u6cd5\uff1a process_request process_response process_view process_template_response process_exception 1. \u81ea\u5b9a\u4e49\u4e2d\u95f4\u4ef6\u7684\u6d41\u7a0b\uff1a \u00b6 \u5728\u9879\u76ee\u540d\u6216\u8005\u5e94\u7528\u540d\u4e0b\u521b\u5efa\u4e00\u4e2a\u4efb\u610f\u540d\u79f0\u7684\u6587\u4ef6\u5939 \u5728\u8be5\u6587\u4ef6\u5939\u5185\u521b\u5efa\u4e00\u4e2a\u4efb\u610f\u540d\u79f0\u7684py\u6587\u4ef6 \u5728\u8be5py\u6587\u4ef6\u5185\u9700\u8981\u4e66\u5199\u7c7b(\u8fd9\u4e2a\u7c7b\u5fc5\u987b\u7ee7\u627fMiddlewareMixin)\uff0c\u7136\u540e\u5728\u8fd9\u4e2a\u7c7b\u91cc\u9762\u5c31\u53ef\u4ee5\u81ea\u5b9a\u4e49\u4e94\u4e2a\u65b9\u6cd5\u4e86\uff08\u8fd9\u4e94\u4e2a\u65b9\u6cd5\u5e76\u4e0d\u662f\u5168\u90e8\u90fd\u9700\u8981\u4e66\u5199\uff0c\u7528\u51e0\u4e2a\u5199\u51e0\u4e2a)\u3002 \u9700\u8981\u5c06\u7c7b\u7684\u8def\u5f84\u4ee5\u5b57\u7b26\u4e32\u7684\u5f62\u5f0f\u6ce8\u518c\u5230\u914d\u7f6e\u6587\u4ef6\u4e2d\u624d\u80fd\u751f\u6548 2. \u81ea\u5b9a\u4e49\u65b9\u6cd5 \u00b6 1. process_request \u00b6 1 2 3 4 5 6 7 8 9 10 11 from django.utils.deprecation import MiddlewareMixin class MyMiddleware1 ( MiddlewareMixin ): def process_request ( self , request ): print ( \"\u6211\u662f\u7b2c\u4e00\u4e2a\u81ea\u5b9a\u4e49\u4e2d\u95f4\u4ef6\u7684process_request\u65b9\u6cd5\" ) class MyMiddleware2 ( MiddlewareMixin ): def process_request ( self , request ): print ( \"\u6211\u662f\u7b2c\u4e8c\u4e2a\u81ea\u5b9a\u4e49\u4e2d\u95f4\u4ef6\u7684process_request\u65b9\u6cd5\" ) \u89c6\u56fe\u5c42 1 2 3 4 5 6 from django.shortcuts import HttpResponse def home ( request ): print ( \"\u6211\u662f\u4e3b\u9875\" ) return HttpResponse ( 'ok' ) \u603b\u7ed3\uff1a \u8bf7\u6c42\u6765\u7684\u65f6\u5019\u9700\u8981\u7ecf\u8fc7\u6bcf\u4e00\u4e2a\u4e2d\u95f4\u4ef6\u91cc\u9762\u7684process_request\u65b9\u6cd5\uff0c\u7ed3\u679c\u7684\u987a\u5e8f\u662f\u6309\u7167\u914d\u7f6e\u6587\u4ef6\u4e2d\u6ce8\u518c\u7684\u4e2d\u95f4\u4ef6\u4ece\u4e0a\u5f80\u4e0b\u7684\u987a\u5e8f\u4f9d\u6b21\u6267\u884c\u3002 \u5982\u679c\u4e2d\u95f4\u4ef6\u91cc\u9762\u6ca1\u6709\u5b9a\u4e49\u8be5\u65b9\u6cd5\uff0c\u90a3\u4e48\u76f4\u63a5\u8df3\u8fc7\u6267\u884c\u4e0b\u4e00\u4e2a\u4e2d\u95f4\u4ef6\u3002 \u5982\u679c\u8be5\u65b9\u6cd5\u8fd4\u56de\u4e86HttpResponse\u5bf9\u8c61\uff0c\u90a3\u4e48\u8bf7\u6c42\u5c06\u4e0d\u518d\u7ee7\u7eed\u5f80\u540e\u6267\u884c\uff0c\u800c\u662f\u76f4\u63a5\u539f\u8def\u8fd4\u56de(\u5e94\u7528\u573a\u666f\uff1a\u6821\u9a8c\u5931\u8d25\u4e0d\u5141\u8bb8\u8bbf\u95ee...) process_request\u65b9\u6cd5\u5c31\u662f\u7528\u6765\u505a\u5168\u5c40\u76f8\u5173\u7684\u6240\u6709\u9650\u5236\u529f\u80fd 2. process_response \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 from django.utils.deprecation import MiddlewareMixin class MyMiddleware1 ( MiddlewareMixin ): def process_request ( self , request ): print ( \"\u6211\u662f\u7b2c\u4e00\u4e2a\u81ea\u5b9a\u4e49\u4e2d\u95f4\u4ef6\u7684process_request\u65b9\u6cd5\" ) def process_response ( self , request , response ): print ( \"\u6211\u662f\u7b2c\u4e00\u4e2a\u81ea\u5b9a\u4e49\u4e2d\u95f4\u4ef6\u7684process_response\u65b9\u6cd5\" ) return response class MyMiddleware2 ( MiddlewareMixin ): def process_request ( self , request ): print ( \"\u6211\u662f\u7b2c\u4e8c\u4e2a\u81ea\u5b9a\u4e49\u4e2d\u95f4\u4ef6\u7684process_request\u65b9\u6cd5\" ) def process_response ( self , request , response ): print ( \"\u6211\u662f\u7b2c\u4e8c\u4e2a\u81ea\u5b9a\u4e49\u4e2d\u95f4\u4ef6\u7684process_response\u65b9\u6cd5\" ) return response \u603b\u7ed3\uff1a \u54cd\u5e94\u8d70\u7684\u65f6\u5019\u9700\u8981\u7ed3\u679c\u6bcf\u4e00\u4e2a\u4e2d\u95f4\u4ef6\u91cc\u9762\u7684process_response\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u6709\u4e24\u4e2a\u989d\u5916\u7684\u53c2\u6570request,response \u8be5\u65b9\u6cd5\u5fc5\u987b\u8fd4\u56de\u4e00\u4e2aHttpResponse\u5bf9\u8c61 1.\u9ed8\u8ba4\u8fd4\u56de\u7684\u5c31\u662f\u5f62\u53c2response 2.\u53ef\u4ee5\u81ea\u5df1\u8fd4\u56de\u81ea\u5df1\u5b9a\u4e49\u7684\uff0c\u6bd4\u5982HttpResponse('') \u987a\u5e8f\u662f\u6309\u7167\u914d\u7f6e\u6587\u4ef6\u4e2d\u6ce8\u518c\u4e86\u7684\u4e2d\u95f4\u4ef6\u4ece\u4e0b\u5f80\u4e0a\u4f9d\u6b21\u7ecf\u8fc7\uff0c\u5982\u679c\u6ca1\u6709\u5b9a\u4e49\u76f4\u63a5\u8df3\u8fc7\u6267\u884c\u4e0b\u4e00\u4e2a\u3002 \u5982\u679c\u5728\u7b2c\u4e00\u4e2aprocess_request\u65b9\u6cd5\u5c31\u5df2\u7ecf\u8fd4\u56de\u4e86HttpResponse\u5bf9\u8c61\uff0c\u90a3\u4e48\u54cd\u5e94\u8d70\u7684\u65f6\u5019\u4f1a\u76f4\u63a5\u8d70\u540c\u7ea7\u522b\u7684process_reponse\u8fd4\u56de\u3002 3. process_view \u00b6 1 2 3 4 5 6 7 8 9 10 11 class MyMiddleware1 ( MiddlewareMixin ): def process_request ( self , request ): print ( \"\u6211\u662f\u7b2c\u4e00\u4e2a\u81ea\u5b9a\u4e49\u4e2d\u95f4\u4ef6\u7684process_request\u65b9\u6cd5\" ) def process_response ( self , request , response ): print ( \"\u6211\u662f\u7b2c\u4e00\u4e2a\u81ea\u5b9a\u4e49\u4e2d\u95f4\u4ef6\u7684process_response\u65b9\u6cd5\" ) return response def process_view ( self , request , view_name , * args , ** kwargs ): print ( view_name , args , kwargs ) print ( \"\u6211\u662f\u7b2c\u4e00\u4e2a\u81ea\u5b9a\u4e49\u4e2d\u95f4\u4ef6\u7684process_view\u65b9\u6cd5\" ) \u603b\u7ed3\uff1a \u8def\u7531\u5339\u914d\u6210\u529f\u4e4b\u540e\u6267\u884c\u89c6\u56fe\u51fd\u6570\u4e4b\u524d\uff0c\u4f1a\u81ea\u52a8\u6267\u884c\u4e2d\u95f4\u4ef6\u91cc\u9762\u7684\u65b9\u6cd5 \u987a\u5e8f\u662f\u6309\u7167\u914d\u7f6e\u6587\u4ef6\u4e2d\u6ce8\u518c\u7684\u4e2d\u95f4\u4ef6\u4ece\u4e0a\u5f80\u4e0b\u7684\u987a\u5e8f\u4f9d\u6b21\u6267\u884c 4. process_template_response \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 class MyMiddleware1 ( MiddlewareMixin ): def process_request ( self , request ): print ( \"\u6211\u662f\u7b2c\u4e00\u4e2a\u81ea\u5b9a\u4e49\u4e2d\u95f4\u4ef6\u7684process_request\u65b9\u6cd5\" ) def process_response ( self , request , response ): print ( \"\u6211\u662f\u7b2c\u4e00\u4e2a\u81ea\u5b9a\u4e49\u4e2d\u95f4\u4ef6\u7684process_response\u65b9\u6cd5\" ) return response def process_view ( self , request , view_name , * args , ** kwargs ): print ( view_name , args , kwargs ) print ( \"\u6211\u662f\u7b2c\u4e00\u4e2a\u81ea\u5b9a\u4e49\u4e2d\u95f4\u4ef6\u7684process_view\u65b9\u6cd5\" ) def process_template_response ( self , request , response ): print ( \"\u6211\u662f\u7b2c\u4e00\u4e2a\u81ea\u5b9a\u4e49\u4e2d\u95f4\u4ef6\u7684process_template_response\u65b9\u6cd5\" ) return response \u89c6\u56fe\u5c42 1 2 3 4 5 6 7 8 9 10 11 12 from django.shortcuts import HttpResponse def home ( request ): print ( \"\u6211\u662f\u4e3b\u9875\" ) obj = HttpResponse ( 'ok' ) def render (): print ( '\u5185\u90e8render' ) return HttpResponse ( 'hello' ) obj . render = render return obj \u603b\u7ed3\uff1a \u8fd4\u56de\u7684HttpResponse\u5bf9\u8c61\u6709render\u5c5e\u6027\u7684\u65f6\u5019\u624d\u4f1a\u89e6\u53d1 \u987a\u5e8f\u662f\u6309\u7167\u914d\u7f6e\u6587\u4ef6\u4e2d\u6ce8\u518c\u4e86\u7684\u4e2d\u95f4\u4ef6\u4ece\u4e0b\u5f80\u4e0a\u4f9d\u6b21\u7ecf\u8fc7 5. process_exception \u00b6 1 2 3 def process_exception ( self , request , exception ): print ( \"\u6211\u662f\u7b2c\u4e00\u4e2a\u81ea\u5b9a\u4e49\u4e2d\u95f4\u4ef6\u7684process_exception\u65b9\u6cd5\" ) return exception \u603b\u7ed3\uff1a \u5f53\u89c6\u56fe\u51fd\u6570\u4e2d\u51fa\u73b0\u5f02\u5e38\u7684\u60c5\u51b5\u4e0b\u89e6\u53d1 \u987a\u5e8f\u662f\u6309\u7167\u914d\u7f6e\u6587\u4ef6\u4e2d\u6ce8\u518c\u4e86\u7684\u4e2d\u95f4\u4ef6\u4ece\u4e0b\u5f80\u4e0a\u4f9d\u6b21\u7ecf\u8fc7 \u4e09\u3001CSRF \u00b6 1. csrf\u8de8\u7ad9\u8bf7\u6c42\u4f2a\u9020\u6821\u9a8c \u00b6 \u7f51\u7ad9\u5728\u7ed9\u7528\u6237\u8fd4\u56de\u4e00\u4e2a\u5177\u6709\u63d0\u4ea4\u6570\u636e\u529f\u80fd\u9875\u9762\u7684\u65f6\u5019\u4f1a\u7ed9\u8fd9\u4e2a\u9875\u9762\u52a0\u4e00\u4e2a\u552f\u4e00\u6807\u8bc6\u3002\u5f53\u8fd9\u4e2a\u9875\u9762\u671d\u540e\u7aef\u53d1\u9001post\u8bf7\u6c42\u7684\u65f6\u5019 \u6211\u7684\u540e\u7aef\u4f1a\u5148\u6821\u9a8c\u552f\u4e00\u6807\u8bc6\uff0c\u5982\u679c\u552f\u4e00\u6807\u8bc6\u4e0d\u5bf9\u76f4\u63a5\u62d2\u7edd(403 forbbiden)\u5982\u679c\u6210\u529f\u5219\u6b63\u5e38\u6267\u884c \u3002 2. \u6821\u9a8c\u65b9\u5f0f \u00b6 2.1 \u8868\u5355\u6821\u9a8c \u00b6 1 2 3 4 5 6 7 <form action=\"\" method=\"post\"> {% csrf_token %} {# \u52a0\u8fd9\u53e5 #} <p>username:<input type=\"text\" name=\"username\"></p> <p>target_user:<input type=\"text\" name=\"target_user\"></p> <p>money:<input type=\"text\" name=\"money\"></p> <input type=\"submit\"> </form> 2.2 ajax\u6821\u9a8c \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 < script > $ ( '#btn' ). click ( function () { $ . ajax ({ url : '' , type : 'post' , // \u7b2c\u4e00\u79cd \u5229\u7528\u6807\u7b7e\u67e5\u627e\u83b7\u53d6\u9875\u9762\u4e0a\u7684\u968f\u673a\u5b57\u7b26\u4e32 { # data : { \"username\" : 'admin' , 'csrfmiddlewaretoken' : $ ( '[name=csrfmiddlewaretoken]' ). val ()}, # } // \u7b2c\u4e8c\u79cd \u5229\u7528\u6a21\u7248\u8bed\u6cd5\u63d0\u4f9b\u7684\u5feb\u6377\u4e66\u5199 { # data : { \"username\" : 'admin' , 'csrfmiddlewaretoken' : '{{ csrf_token }}' }, # } // \u7b2c\u4e09\u79cd \u901a\u7528\u65b9\u5f0f\u76f4\u63a5\u62f7\u8d1djs\u4ee3\u7801\u5e76\u5e94\u7528\u5230\u81ea\u5df1\u7684html\u9875\u9762\u4e0a\u5373\u53ef data : { \"username\" : 'admin' }, success : function () { } }) }) < /script> \u8de8\u57df\u6821\u9a8cjs\u4ee3\u7801 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 function getCookie ( name ) { var cookieValue = null ; if ( document . cookie && document . cookie !== '' ) { var cookies = document . cookie . split ( ';' ); for ( var i = 0 ; i < cookies . length ; i ++ ) { var cookie = jQuery . trim ( cookies [ i ]); // Does this cookie string begin with the name we want? if ( cookie . substring ( 0 , name . length + 1 ) === ( name + '=' )) { cookieValue = decodeURIComponent ( cookie . substring ( name . length + 1 )); break ; } } } return cookieValue ; } var csrftoken = getCookie ( 'csrftoken' ); function csrfSafeMethod ( method ) { // these HTTP methods do not require CSRF protection return ( /^(GET|HEAD|OPTIONS|TRACE)$/ . test ( method )); } $ . ajaxSetup ({ beforeSend : function ( xhr , settings ) { if ( ! csrfSafeMethod ( settings . type ) && ! this . crossDomain ) { xhr . setRequestHeader ( \"X-CSRFToken\" , csrftoken ); } } }); 2. csrf\u88c5\u9970\u5668 \u00b6 1 2 3 4 5 6 from django.views.decorators.csrf import csrf_protect , csrf_exempt # csrf_protect \u9700\u8981\u6821\u9a8c # \u9488\u5bf9csrf_protect\u7b26\u5408\u6211\u4eec\u4e4b\u524d\u6240\u5b66\u7684\u88c5\u9970\u5668\u7684\u4e09\u79cd\u73a9\u6cd5 # csrf_exempt \u5ffd\u89c6\u6821\u9a8c # \u9488\u5bf9csrf_exempt\u53ea\u80fd\u7ed9dispatch\u65b9\u6cd5\u52a0\u624d\u6709\u6548 2.1 FBV\u88c5\u9970 \u00b6 1 2 3 4 # @csrf_exempt # @csrf_protect def transfer ( request ): return render ( request , 'transfer.html' ) 2.2 CBV\u88c5\u9970 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 from django.views import View from django.utils.decorators import method_decorator # @method_decorator(csrf_protect,name='post') # \u9488\u5bf9csrf_protect \u7b2c\u4e8c\u79cd\u65b9\u5f0f\u53ef\u4ee5 # @method_decorator(csrf_exempt,name='post') # \u9488\u5bf9csrf_exempt \u7b2c\u4e8c\u79cd\u65b9\u5f0f\u4e0d\u53ef\u4ee5 @method_decorator ( csrf_exempt , name = 'dispatch' ) class MyCsrfToken ( View ): # @method_decorator(csrf_protect) # \u9488\u5bf9csrf_protect \u7b2c\u4e09\u79cd\u65b9\u5f0f\u53ef\u4ee5 # @method_decorator(csrf_exempt) # \u9488\u5bf9csrf_exempt \u7b2c\u4e09\u79cd\u65b9\u5f0f\u53ef\u4ee5 def dispatch ( self , request , * args , ** kwargs ): return super ( MyCsrfToken , self ) . dispatch ( request , * args , ** kwargs ) def get ( self , request ): return HttpResponse ( 'get' ) # @method_decorator(csrf_protect) # \u9488\u5bf9csrf_protect \u7b2c\u4e00\u79cd\u65b9\u5f0f\u53ef\u4ee5 # @method_decorator(csrf_exempt) # \u9488\u5bf9csrf_exempt \u7b2c\u4e00\u79cd\u65b9\u5f0f\u4e0d\u53ef\u4ee5 def post ( self , request ): return HttpResponse ( 'post' )","title":"\u4e2d\u95f4\u4ef6"},{"location":"programming/python/Django/middleware/#_1","text":"","title":"\u4e2d\u95f4\u4ef6"},{"location":"programming/python/Django/middleware/#_2","text":"django\u4e2d\u95f4\u4ef6\u662fdjango\u7684\u95e8\u6237 \u8bf7\u6c42\u6765\u7684\u65f6\u5019\u9700\u8981\u5148\u7ecf\u8fc7\u4e2d\u95f4\u4ef6\u624d\u80fd\u5230\u8fbe\u771f\u6b63\u7684django\u540e\u7aef \u54cd\u5e94\u8d70\u7684\u65f6\u5019\u6700\u540e\u4e5f\u9700\u8981\u7ecf\u8fc7\u4e2d\u95f4\u4ef6\u624d\u80fd\u53d1\u9001\u51fa\u53bb django\u81ea\u5e26\u4e03\u4e2a\u4e2d\u95f4\u4ef6\uff0c\u6bcf\u4e2a\u4e2d\u95f4\u4ef6\u90fd\u6709\u5404\u81ea\u5bf9\u5e94\u7684\u529f\u80fd 1 2 3 4 5 6 7 8 9 MIDDLEWARE = [ 'django.middleware.security.SecurityMiddleware' , 'django.contrib.sessions.middleware.SessionMiddleware' , 'django.middleware.common.CommonMiddleware' , 'django.middleware.csrf.CsrfViewMiddleware' , 'django.contrib.auth.middleware.AuthenticationMiddleware' , 'django.contrib.messages.middleware.MessageMiddleware' , 'django.middleware.clickjacking.XFrameOptionsMiddleware' , ]","title":"\u4e00\u3001\u4ecb\u7ecd"},{"location":"programming/python/Django/middleware/#_3","text":"django\u652f\u6301\u7a0b\u5e8f\u5458\u81ea\u5b9a\u4e49\u4e2d\u95f4\u4ef6\u5e76\u4e14\u66b4\u9732\u7ed9\u7a0b\u5e8f\u5458\u4e94\u4e2a\u53ef\u4ee5\u81ea\u5b9a\u4e49\u7684\u65b9\u6cd5\uff1a process_request process_response process_view process_template_response process_exception","title":"\u4e8c\u3001\u81ea\u5b9a\u4e49\u4e2d\u95f4\u4ef6"},{"location":"programming/python/Django/middleware/#1","text":"\u5728\u9879\u76ee\u540d\u6216\u8005\u5e94\u7528\u540d\u4e0b\u521b\u5efa\u4e00\u4e2a\u4efb\u610f\u540d\u79f0\u7684\u6587\u4ef6\u5939 \u5728\u8be5\u6587\u4ef6\u5939\u5185\u521b\u5efa\u4e00\u4e2a\u4efb\u610f\u540d\u79f0\u7684py\u6587\u4ef6 \u5728\u8be5py\u6587\u4ef6\u5185\u9700\u8981\u4e66\u5199\u7c7b(\u8fd9\u4e2a\u7c7b\u5fc5\u987b\u7ee7\u627fMiddlewareMixin)\uff0c\u7136\u540e\u5728\u8fd9\u4e2a\u7c7b\u91cc\u9762\u5c31\u53ef\u4ee5\u81ea\u5b9a\u4e49\u4e94\u4e2a\u65b9\u6cd5\u4e86\uff08\u8fd9\u4e94\u4e2a\u65b9\u6cd5\u5e76\u4e0d\u662f\u5168\u90e8\u90fd\u9700\u8981\u4e66\u5199\uff0c\u7528\u51e0\u4e2a\u5199\u51e0\u4e2a)\u3002 \u9700\u8981\u5c06\u7c7b\u7684\u8def\u5f84\u4ee5\u5b57\u7b26\u4e32\u7684\u5f62\u5f0f\u6ce8\u518c\u5230\u914d\u7f6e\u6587\u4ef6\u4e2d\u624d\u80fd\u751f\u6548","title":"1. \u81ea\u5b9a\u4e49\u4e2d\u95f4\u4ef6\u7684\u6d41\u7a0b\uff1a"},{"location":"programming/python/Django/middleware/#2","text":"","title":"2. \u81ea\u5b9a\u4e49\u65b9\u6cd5"},{"location":"programming/python/Django/middleware/#1-process_request","text":"1 2 3 4 5 6 7 8 9 10 11 from django.utils.deprecation import MiddlewareMixin class MyMiddleware1 ( MiddlewareMixin ): def process_request ( self , request ): print ( \"\u6211\u662f\u7b2c\u4e00\u4e2a\u81ea\u5b9a\u4e49\u4e2d\u95f4\u4ef6\u7684process_request\u65b9\u6cd5\" ) class MyMiddleware2 ( MiddlewareMixin ): def process_request ( self , request ): print ( \"\u6211\u662f\u7b2c\u4e8c\u4e2a\u81ea\u5b9a\u4e49\u4e2d\u95f4\u4ef6\u7684process_request\u65b9\u6cd5\" ) \u89c6\u56fe\u5c42 1 2 3 4 5 6 from django.shortcuts import HttpResponse def home ( request ): print ( \"\u6211\u662f\u4e3b\u9875\" ) return HttpResponse ( 'ok' ) \u603b\u7ed3\uff1a \u8bf7\u6c42\u6765\u7684\u65f6\u5019\u9700\u8981\u7ecf\u8fc7\u6bcf\u4e00\u4e2a\u4e2d\u95f4\u4ef6\u91cc\u9762\u7684process_request\u65b9\u6cd5\uff0c\u7ed3\u679c\u7684\u987a\u5e8f\u662f\u6309\u7167\u914d\u7f6e\u6587\u4ef6\u4e2d\u6ce8\u518c\u7684\u4e2d\u95f4\u4ef6\u4ece\u4e0a\u5f80\u4e0b\u7684\u987a\u5e8f\u4f9d\u6b21\u6267\u884c\u3002 \u5982\u679c\u4e2d\u95f4\u4ef6\u91cc\u9762\u6ca1\u6709\u5b9a\u4e49\u8be5\u65b9\u6cd5\uff0c\u90a3\u4e48\u76f4\u63a5\u8df3\u8fc7\u6267\u884c\u4e0b\u4e00\u4e2a\u4e2d\u95f4\u4ef6\u3002 \u5982\u679c\u8be5\u65b9\u6cd5\u8fd4\u56de\u4e86HttpResponse\u5bf9\u8c61\uff0c\u90a3\u4e48\u8bf7\u6c42\u5c06\u4e0d\u518d\u7ee7\u7eed\u5f80\u540e\u6267\u884c\uff0c\u800c\u662f\u76f4\u63a5\u539f\u8def\u8fd4\u56de(\u5e94\u7528\u573a\u666f\uff1a\u6821\u9a8c\u5931\u8d25\u4e0d\u5141\u8bb8\u8bbf\u95ee...) process_request\u65b9\u6cd5\u5c31\u662f\u7528\u6765\u505a\u5168\u5c40\u76f8\u5173\u7684\u6240\u6709\u9650\u5236\u529f\u80fd","title":"1. process_request"},{"location":"programming/python/Django/middleware/#2-process_response","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 from django.utils.deprecation import MiddlewareMixin class MyMiddleware1 ( MiddlewareMixin ): def process_request ( self , request ): print ( \"\u6211\u662f\u7b2c\u4e00\u4e2a\u81ea\u5b9a\u4e49\u4e2d\u95f4\u4ef6\u7684process_request\u65b9\u6cd5\" ) def process_response ( self , request , response ): print ( \"\u6211\u662f\u7b2c\u4e00\u4e2a\u81ea\u5b9a\u4e49\u4e2d\u95f4\u4ef6\u7684process_response\u65b9\u6cd5\" ) return response class MyMiddleware2 ( MiddlewareMixin ): def process_request ( self , request ): print ( \"\u6211\u662f\u7b2c\u4e8c\u4e2a\u81ea\u5b9a\u4e49\u4e2d\u95f4\u4ef6\u7684process_request\u65b9\u6cd5\" ) def process_response ( self , request , response ): print ( \"\u6211\u662f\u7b2c\u4e8c\u4e2a\u81ea\u5b9a\u4e49\u4e2d\u95f4\u4ef6\u7684process_response\u65b9\u6cd5\" ) return response \u603b\u7ed3\uff1a \u54cd\u5e94\u8d70\u7684\u65f6\u5019\u9700\u8981\u7ed3\u679c\u6bcf\u4e00\u4e2a\u4e2d\u95f4\u4ef6\u91cc\u9762\u7684process_response\u65b9\u6cd5\uff0c\u8be5\u65b9\u6cd5\u6709\u4e24\u4e2a\u989d\u5916\u7684\u53c2\u6570request,response \u8be5\u65b9\u6cd5\u5fc5\u987b\u8fd4\u56de\u4e00\u4e2aHttpResponse\u5bf9\u8c61 1.\u9ed8\u8ba4\u8fd4\u56de\u7684\u5c31\u662f\u5f62\u53c2response 2.\u53ef\u4ee5\u81ea\u5df1\u8fd4\u56de\u81ea\u5df1\u5b9a\u4e49\u7684\uff0c\u6bd4\u5982HttpResponse('') \u987a\u5e8f\u662f\u6309\u7167\u914d\u7f6e\u6587\u4ef6\u4e2d\u6ce8\u518c\u4e86\u7684\u4e2d\u95f4\u4ef6\u4ece\u4e0b\u5f80\u4e0a\u4f9d\u6b21\u7ecf\u8fc7\uff0c\u5982\u679c\u6ca1\u6709\u5b9a\u4e49\u76f4\u63a5\u8df3\u8fc7\u6267\u884c\u4e0b\u4e00\u4e2a\u3002 \u5982\u679c\u5728\u7b2c\u4e00\u4e2aprocess_request\u65b9\u6cd5\u5c31\u5df2\u7ecf\u8fd4\u56de\u4e86HttpResponse\u5bf9\u8c61\uff0c\u90a3\u4e48\u54cd\u5e94\u8d70\u7684\u65f6\u5019\u4f1a\u76f4\u63a5\u8d70\u540c\u7ea7\u522b\u7684process_reponse\u8fd4\u56de\u3002","title":"2. process_response"},{"location":"programming/python/Django/middleware/#3-process_view","text":"1 2 3 4 5 6 7 8 9 10 11 class MyMiddleware1 ( MiddlewareMixin ): def process_request ( self , request ): print ( \"\u6211\u662f\u7b2c\u4e00\u4e2a\u81ea\u5b9a\u4e49\u4e2d\u95f4\u4ef6\u7684process_request\u65b9\u6cd5\" ) def process_response ( self , request , response ): print ( \"\u6211\u662f\u7b2c\u4e00\u4e2a\u81ea\u5b9a\u4e49\u4e2d\u95f4\u4ef6\u7684process_response\u65b9\u6cd5\" ) return response def process_view ( self , request , view_name , * args , ** kwargs ): print ( view_name , args , kwargs ) print ( \"\u6211\u662f\u7b2c\u4e00\u4e2a\u81ea\u5b9a\u4e49\u4e2d\u95f4\u4ef6\u7684process_view\u65b9\u6cd5\" ) \u603b\u7ed3\uff1a \u8def\u7531\u5339\u914d\u6210\u529f\u4e4b\u540e\u6267\u884c\u89c6\u56fe\u51fd\u6570\u4e4b\u524d\uff0c\u4f1a\u81ea\u52a8\u6267\u884c\u4e2d\u95f4\u4ef6\u91cc\u9762\u7684\u65b9\u6cd5 \u987a\u5e8f\u662f\u6309\u7167\u914d\u7f6e\u6587\u4ef6\u4e2d\u6ce8\u518c\u7684\u4e2d\u95f4\u4ef6\u4ece\u4e0a\u5f80\u4e0b\u7684\u987a\u5e8f\u4f9d\u6b21\u6267\u884c","title":"3. process_view"},{"location":"programming/python/Django/middleware/#4-process_template_response","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 class MyMiddleware1 ( MiddlewareMixin ): def process_request ( self , request ): print ( \"\u6211\u662f\u7b2c\u4e00\u4e2a\u81ea\u5b9a\u4e49\u4e2d\u95f4\u4ef6\u7684process_request\u65b9\u6cd5\" ) def process_response ( self , request , response ): print ( \"\u6211\u662f\u7b2c\u4e00\u4e2a\u81ea\u5b9a\u4e49\u4e2d\u95f4\u4ef6\u7684process_response\u65b9\u6cd5\" ) return response def process_view ( self , request , view_name , * args , ** kwargs ): print ( view_name , args , kwargs ) print ( \"\u6211\u662f\u7b2c\u4e00\u4e2a\u81ea\u5b9a\u4e49\u4e2d\u95f4\u4ef6\u7684process_view\u65b9\u6cd5\" ) def process_template_response ( self , request , response ): print ( \"\u6211\u662f\u7b2c\u4e00\u4e2a\u81ea\u5b9a\u4e49\u4e2d\u95f4\u4ef6\u7684process_template_response\u65b9\u6cd5\" ) return response \u89c6\u56fe\u5c42 1 2 3 4 5 6 7 8 9 10 11 12 from django.shortcuts import HttpResponse def home ( request ): print ( \"\u6211\u662f\u4e3b\u9875\" ) obj = HttpResponse ( 'ok' ) def render (): print ( '\u5185\u90e8render' ) return HttpResponse ( 'hello' ) obj . render = render return obj \u603b\u7ed3\uff1a \u8fd4\u56de\u7684HttpResponse\u5bf9\u8c61\u6709render\u5c5e\u6027\u7684\u65f6\u5019\u624d\u4f1a\u89e6\u53d1 \u987a\u5e8f\u662f\u6309\u7167\u914d\u7f6e\u6587\u4ef6\u4e2d\u6ce8\u518c\u4e86\u7684\u4e2d\u95f4\u4ef6\u4ece\u4e0b\u5f80\u4e0a\u4f9d\u6b21\u7ecf\u8fc7","title":"4. process_template_response"},{"location":"programming/python/Django/middleware/#5-process_exception","text":"1 2 3 def process_exception ( self , request , exception ): print ( \"\u6211\u662f\u7b2c\u4e00\u4e2a\u81ea\u5b9a\u4e49\u4e2d\u95f4\u4ef6\u7684process_exception\u65b9\u6cd5\" ) return exception \u603b\u7ed3\uff1a \u5f53\u89c6\u56fe\u51fd\u6570\u4e2d\u51fa\u73b0\u5f02\u5e38\u7684\u60c5\u51b5\u4e0b\u89e6\u53d1 \u987a\u5e8f\u662f\u6309\u7167\u914d\u7f6e\u6587\u4ef6\u4e2d\u6ce8\u518c\u4e86\u7684\u4e2d\u95f4\u4ef6\u4ece\u4e0b\u5f80\u4e0a\u4f9d\u6b21\u7ecf\u8fc7","title":"5. process_exception"},{"location":"programming/python/Django/middleware/#csrf","text":"","title":"\u4e09\u3001CSRF"},{"location":"programming/python/Django/middleware/#1-csrf","text":"\u7f51\u7ad9\u5728\u7ed9\u7528\u6237\u8fd4\u56de\u4e00\u4e2a\u5177\u6709\u63d0\u4ea4\u6570\u636e\u529f\u80fd\u9875\u9762\u7684\u65f6\u5019\u4f1a\u7ed9\u8fd9\u4e2a\u9875\u9762\u52a0\u4e00\u4e2a\u552f\u4e00\u6807\u8bc6\u3002\u5f53\u8fd9\u4e2a\u9875\u9762\u671d\u540e\u7aef\u53d1\u9001post\u8bf7\u6c42\u7684\u65f6\u5019 \u6211\u7684\u540e\u7aef\u4f1a\u5148\u6821\u9a8c\u552f\u4e00\u6807\u8bc6\uff0c\u5982\u679c\u552f\u4e00\u6807\u8bc6\u4e0d\u5bf9\u76f4\u63a5\u62d2\u7edd(403 forbbiden)\u5982\u679c\u6210\u529f\u5219\u6b63\u5e38\u6267\u884c \u3002","title":"1. csrf\u8de8\u7ad9\u8bf7\u6c42\u4f2a\u9020\u6821\u9a8c"},{"location":"programming/python/Django/middleware/#2_1","text":"","title":"2. \u6821\u9a8c\u65b9\u5f0f"},{"location":"programming/python/Django/middleware/#21","text":"1 2 3 4 5 6 7 <form action=\"\" method=\"post\"> {% csrf_token %} {# \u52a0\u8fd9\u53e5 #} <p>username:<input type=\"text\" name=\"username\"></p> <p>target_user:<input type=\"text\" name=\"target_user\"></p> <p>money:<input type=\"text\" name=\"money\"></p> <input type=\"submit\"> </form>","title":"2.1 \u8868\u5355\u6821\u9a8c"},{"location":"programming/python/Django/middleware/#22-ajax","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 < script > $ ( '#btn' ). click ( function () { $ . ajax ({ url : '' , type : 'post' , // \u7b2c\u4e00\u79cd \u5229\u7528\u6807\u7b7e\u67e5\u627e\u83b7\u53d6\u9875\u9762\u4e0a\u7684\u968f\u673a\u5b57\u7b26\u4e32 { # data : { \"username\" : 'admin' , 'csrfmiddlewaretoken' : $ ( '[name=csrfmiddlewaretoken]' ). val ()}, # } // \u7b2c\u4e8c\u79cd \u5229\u7528\u6a21\u7248\u8bed\u6cd5\u63d0\u4f9b\u7684\u5feb\u6377\u4e66\u5199 { # data : { \"username\" : 'admin' , 'csrfmiddlewaretoken' : '{{ csrf_token }}' }, # } // \u7b2c\u4e09\u79cd \u901a\u7528\u65b9\u5f0f\u76f4\u63a5\u62f7\u8d1djs\u4ee3\u7801\u5e76\u5e94\u7528\u5230\u81ea\u5df1\u7684html\u9875\u9762\u4e0a\u5373\u53ef data : { \"username\" : 'admin' }, success : function () { } }) }) < /script> \u8de8\u57df\u6821\u9a8cjs\u4ee3\u7801 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 function getCookie ( name ) { var cookieValue = null ; if ( document . cookie && document . cookie !== '' ) { var cookies = document . cookie . split ( ';' ); for ( var i = 0 ; i < cookies . length ; i ++ ) { var cookie = jQuery . trim ( cookies [ i ]); // Does this cookie string begin with the name we want? if ( cookie . substring ( 0 , name . length + 1 ) === ( name + '=' )) { cookieValue = decodeURIComponent ( cookie . substring ( name . length + 1 )); break ; } } } return cookieValue ; } var csrftoken = getCookie ( 'csrftoken' ); function csrfSafeMethod ( method ) { // these HTTP methods do not require CSRF protection return ( /^(GET|HEAD|OPTIONS|TRACE)$/ . test ( method )); } $ . ajaxSetup ({ beforeSend : function ( xhr , settings ) { if ( ! csrfSafeMethod ( settings . type ) && ! this . crossDomain ) { xhr . setRequestHeader ( \"X-CSRFToken\" , csrftoken ); } } });","title":"2.2 ajax\u6821\u9a8c"},{"location":"programming/python/Django/middleware/#2-csrf","text":"1 2 3 4 5 6 from django.views.decorators.csrf import csrf_protect , csrf_exempt # csrf_protect \u9700\u8981\u6821\u9a8c # \u9488\u5bf9csrf_protect\u7b26\u5408\u6211\u4eec\u4e4b\u524d\u6240\u5b66\u7684\u88c5\u9970\u5668\u7684\u4e09\u79cd\u73a9\u6cd5 # csrf_exempt \u5ffd\u89c6\u6821\u9a8c # \u9488\u5bf9csrf_exempt\u53ea\u80fd\u7ed9dispatch\u65b9\u6cd5\u52a0\u624d\u6709\u6548","title":"2. csrf\u88c5\u9970\u5668"},{"location":"programming/python/Django/middleware/#21-fbv","text":"1 2 3 4 # @csrf_exempt # @csrf_protect def transfer ( request ): return render ( request , 'transfer.html' )","title":"2.1 FBV\u88c5\u9970"},{"location":"programming/python/Django/middleware/#22-cbv","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 from django.views import View from django.utils.decorators import method_decorator # @method_decorator(csrf_protect,name='post') # \u9488\u5bf9csrf_protect \u7b2c\u4e8c\u79cd\u65b9\u5f0f\u53ef\u4ee5 # @method_decorator(csrf_exempt,name='post') # \u9488\u5bf9csrf_exempt \u7b2c\u4e8c\u79cd\u65b9\u5f0f\u4e0d\u53ef\u4ee5 @method_decorator ( csrf_exempt , name = 'dispatch' ) class MyCsrfToken ( View ): # @method_decorator(csrf_protect) # \u9488\u5bf9csrf_protect \u7b2c\u4e09\u79cd\u65b9\u5f0f\u53ef\u4ee5 # @method_decorator(csrf_exempt) # \u9488\u5bf9csrf_exempt \u7b2c\u4e09\u79cd\u65b9\u5f0f\u53ef\u4ee5 def dispatch ( self , request , * args , ** kwargs ): return super ( MyCsrfToken , self ) . dispatch ( request , * args , ** kwargs ) def get ( self , request ): return HttpResponse ( 'get' ) # @method_decorator(csrf_protect) # \u9488\u5bf9csrf_protect \u7b2c\u4e00\u79cd\u65b9\u5f0f\u53ef\u4ee5 # @method_decorator(csrf_exempt) # \u9488\u5bf9csrf_exempt \u7b2c\u4e00\u79cd\u65b9\u5f0f\u4e0d\u53ef\u4ee5 def post ( self , request ): return HttpResponse ( 'post' )","title":"2.2 CBV\u88c5\u9970"},{"location":"programming/python/Django/model/","text":"\u6a21\u578b\u5c42 \u00b6 \u4e00\u3001\u8fde\u63a5\u6570\u636e\u5e93 \u00b6 1. \u521b\u5efa\u6570\u636e\u5e93 \u00b6 1 2 3 CREATE DATABASE test CHARSET utf8 ; # \u6388\u6743 GRANT ALL ON test . * TO 'admin' @ '10.0.0.%' IDENTIFIED BY 'admin@123' ; 2. \u4fee\u6539\u914d\u7f6e\u6587\u4ef6 \u00b6 1. \u5728setting.py\u6587\u4ef6\u4e2d\u6307\u5b9amysql\u6570\u636e\u5e93\u7684\u76f8\u5173\u4fe1\u606f \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 DATABASES = { 'default' : { 'ENGINE' : 'django.db.backends.mysql' , 'NAME' : 'test' , 'USER' : 'admin' , 'PASSWORD' : 'admin@123' , 'HOST' : '10.0.0.128' , 'PORT' : 3306 , 'CHARSET' : 'utf8' } } LOGGING = { 'version' : 1 , 'disable_existing_loggers' : False , 'handlers' : { 'console' :{ 'level' : 'DEBUG' , 'class' : 'logging.StreamHandler' , }, }, # \u5728\u63a7\u5236\u53f0\u6253\u5370ORM\u6267\u884c\u7684SQL\u8bed\u53e5 'loggers' : { 'django.db.backends' : { 'handlers' : [ 'console' ], 'propagate' : True , 'level' : 'DEBUG' , }, } } 2. \u4fee\u6539\u9ed8\u8ba4\u7684mysql\u6a21\u5757 \u00b6 \u5728setting.py\u6587\u4ef6\u540c\u7ea7\u7684\u7684 __init__.py \u4e2d\u4fee\u6539\u8fde\u63a5mysql\u7684\u6a21\u5757\uff08 mysite/mysite/__init__.py \uff09 1 2 3 import pymysql pymysql . install_as_MySQLdb () 3. \u5b89\u88c5pymysql\u6a21\u5757 \u00b6 1 pip install pymysql 3. \u521b\u5efa\u8868 \u00b6 1 2 3 4 5 6 7 8 9 #filename: models.py from django.db import models # Create your models here. class User ( models . Model ): id = models . AutoField ( primary_key = True ) username = models . CharField ( max_length = 32 ) age = models . IntegerField () 4. \u8fc1\u79fb\u6570\u636e\u5e93 \u00b6 1 2 3 4 5 # \u4e8e\u5728\u8be5app\u4e0b\u5efa\u7acbmigrations\u76ee\u5f55\uff0c\u5e76\u8bb0\u5f55\u6240\u6709\u7684\u5173\u4e8emodes.py\u7684\u6539\u52a8 \u6bd4\u5982 0001 _initial . py \uff0c \u4f46\u662f\u8fd9\u4e2a\u6539\u52a8\u8fd8\u6ca1\u6709\u4f5c\u7528\u5230\u6570\u636e\u5e93\u6587\u4ef6 python manage . py makemigrations # \u5c06\u5bf9\u6570\u636e\u5e93\u7684\u66f4\u6539\u5728\u6570\u636e\u5e93\u4e2d\u771f\u5b9e\u6267\u884c\u3002 python manage . py migrate \u4e8c\u3001\u521b\u5efa\u8868 \u00b6 orm\u521b\u5efa\u7684\u8868\u81ea\u52a8\u52a0\u4e86\u524d\u7f00\uff0c\u524d\u7f00\u662f\u5e94\u7528\u7684\u540d\u79f0\uff0c\u9632\u6b62\u591a\u4e2a\u5e94\u7528\u8868\u540d\u51b2\u7a81\u3002 1. \u72ec\u7acb\u8868 \u00b6 1 2 3 4 5 6 7 8 9 #filename: models.py from django.db import models # Create your models here. class User ( models . Model ): id = models . AutoField ( primary_key = True ) username = models . CharField ( max_length = 32 ) age = models . IntegerField () 2. \u5173\u7cfb\u8868 \u00b6 \u8868\u4e0e\u8868\u4e4b\u95f4\u7684\u5173\u7cfb\uff1a \u4e00\u5bf9\u4e00\uff1a models.OneToOneField() \u4e00\u5bf9\u591a\uff1a models.ForeignKey() \u591a\u5bf9\u591a\uff1a models.ManyToManyField() \u6ca1\u6709\u5173\u7cfb \u521b\u5efa\u8868\u5173\u7cfb\u5148\u5c06\u57fa\u8868\u521b\u5efa\u51fa\u6765\uff0c\u7136\u540e\u518d\u6dfb\u52a0\u5916\u952e\u5b57\u6bb5\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 #filename: models.py class Book ( models . Model ): title = models . CharField ( max_length = 32 , verbose_name = \"\u4e66\u540d\" ) price = models . DecimalField ( max_digits = 8 , decimal_places = 2 , verbose_name = \"\u4ef7\u683c\" ) # \u56fe\u4e66\u548c\u51fa\u7248\u793e\u662f\u4e00\u5bf9\u591a\uff0c\u5e76\u4e14\u4e66\u662f\u591a\u7684\u4e00\u65b9\uff0c\u6240\u4ee5\u5916\u952e\u5b57\u6bb5\u653e\u5728Book\u8868\u91cc\u9762 # \u9ed8\u8ba4\u5c31\u662f\u4e0e\u51fa\u7248\u793e\u8868\u7684\u4e3b\u952e\u5b57\u6bb5\u505a\u5916\u952e\u5173\u8054 # \u5982\u679c\u5b57\u6bb5\u5bf9\u5e94\u7684\u662fForeignKey \u90a3\u4e48\u4f1aorm\u4f1a\u81ea\u52a8\u5728\u5b57\u6bb5\u7684\u540e\u9762\u52a0_id\uff0c\u5982\u679c\u81ea\u5df1\u52a0\u4e86_id\u90a3\u4e48orm\u8fd8\u662f\u4f1a\u5728\u540e\u9762\u7ee7\u7eed\u52a0_id publish = models . ForeignKey ( to = 'Publish' ) # \u56fe\u4e66\u548c\u4f5c\u8005\u662f\u591a\u5bf9\u591a\u7684\u5173\u7cfb\uff0c\u5916\u952e\u5b57\u6bb5\u5efa\u5728\u4efb\u610f\u4e00\u65b9\u5747\u53ef\uff0c\u4f46\u662f\u63a8\u8350\u5efa\u5728\u67e5\u8be2\u9891\u7387\u8f83\u9ad8\u7684\u4e00\u65b9 # authors\u662f\u4e00\u4e2a\u865a\u62df\u5b57\u6bb5\uff0c\u5e76\u4e0d\u4f1a\u5728\u6570\u636e\u5e93\u4e2d\u521b\u5efa\u8fd9\u4e2a\u5b57\u6bb5\uff0c\u4e3b\u8981\u662f\u7528\u6765\u544a\u8bc9orm\u4e66\u7c4d\u8868\u548c\u4f5c\u8005\u8868\u662f\u591a\u5bf9\u591a\u5173\u7cfb\uff0c\u8ba9orm\u81ea\u52a8\u5e2e\u4f60\u521b\u5efa\u7b2c\u4e09\u5f20\u5173\u7cfb\u8868 authors = models . ManyToManyField ( to = 'Author' ) class Publish ( models . Model ): name = models . CharField ( max_length = 32 , verbose_name = \"\u51fa\u7248\u793e\u540d\u79f0\" ) addr = models . CharField ( max_length = 64 , verbose_name = \"\u901a\u8baf\u5730\u5740\" ) class Author ( models . Model ): name = models . CharField ( max_length = 32 , verbose_name = \"\u4f5c\u8005\u59d3\u540d\" ) age = models . IntegerField ( verbose_name = \"\u5e74\u9f84\" ) # \u4f5c\u8005\u4e0e\u4f5c\u8005\u8be6\u60c5\u662f\u4e00\u5bf9\u4e00\u7684\u5173\u7cfb,\u5916\u952e\u5b57\u6bb5\u5efa\u5728\u4efb\u610f\u4e00\u65b9\u90fd\u53ef\u4ee5,\u4f46\u662f\u63a8\u8350\u5efa\u5728\u67e5\u8be2\u9891\u7387\u8f83\u9ad8\u7684\u8868\u4e2d # OneToOneField\u4e5f\u4f1a\u81ea\u52a8\u7ed9\u5b57\u6bb5\u52a0_id\u540e\u7f00 author_detail = models . OneToOneField ( to = 'AuthorDetail' ) class AuthorDetail ( models . Model ): email = models . EmailField ( verbose_name = \"\u90ae\u7bb1\" ) addr = models . CharField ( max_length = 32 , verbose_name = \"\u901a\u8baf\u5730\u5740\" ) \u5728django1.X\u7248\u672c\u4e2d\u5916\u952e\u9ed8\u8ba4\u90fd\u662f\u7ea7\u8054\u66f4\u65b0\u5220\u9664\u7684 3. \u591a\u5bf9\u591a\u4e09\u79cd\u521b\u5efa\u65b9\u5f0f \u00b6 1. \u5168\u81ea\u52a8 \u00b6 \u81ea\u52a8\u521b\u5efa\u7b2c\u4e09\u5f20\u5173\u7cfb\u8868\uff0c\u4f46\u662f\u6269\u5c55\u6027\u5dee\uff0c\u6ca1\u6709\u529e\u6cd5\u6dfb\u52a0\u989d\u5916\u5b57\u6bb5\u3002\u53ef\u4ee5\u7528ORM\u63d0\u4f9b\u7684\u7b2c\u4e09\u5f20\u5173\u7cfb\u8868\u7684\u65b9\u6cd5\uff0c\u5982add,remove,clear,set\u7b49\u65b9\u6cd5\u3002 2. \u5168\u624b\u52a8 \u00b6 \u81ea\u5df1\u521b\u5efa\u7b2c\u4e09\u5f20\u8868\uff0c\u81ea\u5df1\u5efa\u5916\u952e\u3002\u6269\u5c55\u6027\u9ad8\uff0c\u4f46\u662f\u65e0\u6cd5\u5229\u7528orm\u63d0\u4f9b\u7684\u7b80\u4fbf\u7684\u67e5\u8be2\u65b9\u6cd5\u3002 1 2 3 4 5 6 7 8 9 class Book ( models . Model ): name = models . CharField ( max_length = 32 ) class Author ( models . Model ): name = models . CharField ( max_length = 32 ) class Book2Author ( models . Model ): book_id = models . ForeignKey ( to = 'Book' ) author_id = models . ForeignKey ( to = 'Author' ) 3. \u534a\u81ea\u52a8 \u00b6 \u5b9e\u9645\u9879\u76ee\u7528\u6b64\u65b9\u6cd5\uff0c\u6269\u5c55\u6027\u597d\u3002\u53ef\u4ee5\u4f7f\u7528orm\u7684\u6b63\u53cd\u5411\u67e5\u8be2\uff0c\u4f46\u662f\u6ca1\u6cd5\u4f7f\u7528add,set,remove,clear\u8fd9\u56db\u4e2a\u65b9\u6cd5 1 2 3 4 5 6 7 8 9 10 11 12 13 class Book ( models . Model ): name = models . CharField ( max_length = 32 ) authors = models . ManyToManyField ( to = 'Author' , through = 'Book2Author' , # \u544a\u8bc9ORM\u901a\u8fc7Book2Author\u6765\u5173\u8054\u5173\u7cfb through_fields = ( 'book' , 'author' ) # \u544a\u8bc9ORM\u54ea\u4e24\u4e2a\u5b57\u6bb5\u6765\u786e\u5b9a\u5173\u8054\u5173\u7cfb\uff08\u901a\u8fc7\u7b2c\u4e09\u5f20\u8868\u67e5\u8be2\u5f53\u524dBOOK\u8868\u662f\u901a\u8fc7book\u5b57\u6bb5\uff0c\u6240\u4ee5book\u5b57\u6bb5\u5728\u524d\uff0cauthor\u5728\u540e\uff09 ) class Author ( models . Model ): name = models . CharField ( max_length = 32 ) class Book2Author ( models . Model ): book = models . ForeignKey ( to = 'Book' ) author = models . ForeignKey ( to = 'Author' ) \u4e09\u3001ORM\u64cd\u4f5c \u00b6 1. \u589e \u00b6 1.1 \u5355\u8868 \u00b6 1.1.1 \u65b9\u6cd5\u4e00\uff1a create() \u00b6 1 2 3 4 5 6 7 8 # \u65b9\u5f0f1\uff1a\u76f4\u63a5\u4f20\u503c models . User . objects . create ( username = 'Eric' , age = 16 ) # \u65b9\u5f0f2\uff1a\u4f20\u5165\u4e00\u4e2a\u5b57\u5178 user = { 'username' : 'Ron' , 'age' : 18 , } models . User . objects . create ( ** user ) 1.1.2 \u65b9\u6cd5\u4e8c\uff1a save() \u00b6 1 2 3 4 5 6 7 8 # \u65b9\u5f0f1\uff1a\u521b\u5efa\u5bf9\u8c61\u65f6\u8d4b\u503c user_obj = models . User ( username = 'Jack' , age = 16 ) user_obj . save () # \u65b9\u5f0f2\uff1a\u5148\u521b\u5efa\u5bf9\u8c61\uff0c\u7136\u540e\u8d4b\u503c\u4fdd\u5b58 user_obj = models . User () user_obj . username = 'John' user_obj . age = 17 user_obj . save () 1.2 \u591a\u8868 \u00b6 1.2.1 \u4e00\u5bf9\u4e00\u3001\u4e00\u5bf9\u591a \u00b6 \u65b9\u5f0f\u4e00\uff1a\u76f4\u63a5\u5199\u5916\u952e\u5b57\u6bb5id 1 models . Book . objects . create ( title = '\u6570\u636e\u7ed3\u6784C\u8bed\u8a00\u7248' , price = 35.00 , publish_id = 1 ) \u65b9\u5f0f\u4e8c\uff1a\u901a\u8fc7\u5bf9\u8c61\u521b\u5efa 1 2 publish_obj = models . Publish . objects . filter ( pk = 1 ) . first () # Publish object models . Book . objects . create ( title = '\u6570\u636e\u7ed3\u6784\u9898\u96c6C\u8bed\u8a00\u7248' , price = 29.0 , publish = publish_obj ) 1.2.2 \u591a\u5bf9\u591a \u00b6 \u65b9\u5f0f\u4e00\uff1a\u901a\u8fc7\u4e3b\u952e\u503c\u6dfb\u52a0 1 2 book_obj = models . Book . objects . filter ( pk = 1 ) . first () book_obj . authors . add ( 2 , 3 ) # book_obj.authors\u76f8\u5f53\u4e8e\u5df2\u7ecf\u5b9a\u4f4d\u5230\u7b2c\u4e09\u5f20\u5173\u7cfb\u8868 \u65b9\u5f0f\u4e8c\uff1a\u901a\u8fc7\u5bf9\u8c61\u6dfb\u52a0 1 2 3 4 book_obj = models . Book . objects . filter ( pk = 1 ) . first () author_obj1 = models . Author . objects . filter ( pk = 2 ) . first () author_obj2 = models . Author . objects . filter ( pk = 3 ) . first () book_obj . authors . add ( author_obj1 , author_obj2 ) 1.3 \u6279\u91cf\u63d2\u5165 bulk_create() \u00b6 1 2 3 4 5 6 book_list = [] for i in range ( 5 ): book_obj = models . Book ( title = '\u7b2c %s \u672c\u4e66' % i , price = 20 , publish_id = 1 ) book_list . append ( book_obj ) models . Book . objects . bulk_create ( book_list ) # \u6267\u884c\u7684SQL:INSERT INTO `app_book` (`title`, `price`, `publish_id`) VALUES ('\u7b2c0\u672c\u4e66', '20.00', 1), ('\u7b2c1\u672c\u4e66', '20.00', 1), ('\u7b2c2\u672c\u4e66', '20.00', 1), ('\u7b2c3\u672c\u4e66', '20.00', 1), ('\u7b2c4\u672c\u4e66', '20.00', 1); 2. \u67e5 \u00b6 \u8fd4\u56de\u7684\u7ed3\u679c\u662f\u4e00\u4e2a QuerySet \u5bf9\u8c61\uff0c\u53ef\u4ee5\u628a\u5b83\u770b\u6210\u662f\u4e00\u4e2a\u5217\u8868\u5957\u6570\u636e\u5bf9\u8c61\u3002\u652f\u6301\u7d22\u5f15\u548c\u5207\u7247\u64cd\u4f5c\uff0c\u4f46\u662f\u4e0d\u652f\u6301\u8d1f\u6570\uff0c\u5e76\u4e14\u4e0d\u63a8\u8350\u4f7f\u7528\u7d22\u5f15\u3002 \u6b63\u53cd\u5411\u67e5\u8be2\uff1a \u6b63\u5411\u67e5\u8be2\uff1a\u4ece\u6709\u5916\u952e\u5b57\u6bb5\u7684\u8868\u5411\u6ca1\u6709\u5916\u952e\u5b57\u6bb5\u7684\u8868\u67e5 \u53cd\u5411\u67e5\u8be2\uff1a\u4ece\u6ca1\u6709\u5916\u952e\u5b57\u6bb5\u7684\u8868\u5411\u6709\u5916\u952e\u5b57\u6bb5\u7684\u8868\u67e5\u8be2 \u6b63\u5411\u67e5\u8be2\u6309\u5b57\u6bb5\uff0c\u53cd\u5411\u67e5\u8be2\u6309\u8868\u540d\u5c0f\u5199 2.1 \u5355\u8868\u67e5\u8be2 \u00b6 2.1.1 \u67e5\u8be2\u6240\u6709\u6570\u636e \u00b6 1 2 3 4 5 6 # \u65b9\u5f0f1\uff1a user_obj = models . User . objects . filter () print ( user_obj ) # \u65b9\u5f0f2\uff1a user_obj = models . User . objects . all () print ( user_obj ) 2.1.2 \u6309\u6761\u4ef6\u7b5b\u9009 \u00b6 filter \u62ec\u53f7\u5185\u53ef\u4ee5\u5199\u591a\u4e2a\u53c2\u6570\uff0c\u67e5\u8be2\u7684\u65f6\u5019\u9ed8\u8ba4\u662fand\u5173\u7cfb 1 2 3 4 5 user_obj = models . User . objects . filter ( age = 16 ) print ( user_obj ) # <QuerySet [<User: User object>]> user_obj = models . User . objects . get ( age = 16 ) print ( user_obj ) # User object # get\u65b9\u6cd5\u8fd4\u56de\u7684\u76f4\u63a5\u5c31\u662f\u5f53\u524d\u6570\u636e\u5bf9\u8c61\uff0c\u4f46\u662f\u5982\u679c\u6570\u636e\u4e0d\u5b58\u5728\u8be5\u65b9\u6cd5\u4f1a\u76f4\u63a5\u62a5\u9519\u3002\u800cfilter\u5219\u4e0d\u4f1a\uff0c\u6240\u4ee5\u5efa\u8bae\u4f7f\u7528filter user_obj = models.User.objects.filter(pk=2) pk\u4f1a\u81ea\u52a8\u67e5\u627e\u5230\u5f53\u524d\u8868\u7684\u4e3b\u952e\u5b57\u6bb5,\u6307\u4ee3\u7684\u5c31\u662f\u5f53\u524d\u8868\u7684\u4e3b\u952e\u5b57\u6bb5.\u7528\u4e86pk\u4e4b\u540e\u5c31\u4e0d\u9700\u8981\u77e5\u9053\u5f53\u524d\u8868\u7684\u4e3b\u952e\u5b57\u6bb5\u5177\u4f53\u7684\u540d\u5b57\u53ef\u3002 2.1.3 \u67e5\u8be2\u7ed3\u679c\u518d\u5904\u7406 \u00b6 1 2 3 4 5 6 7 8 9 order_by () \u3000 # \u5bf9\u7ed3\u679c\u6392\u5e8f reverse () \u3000 # \u5bf9\u67e5\u8be2\u7ed3\u679c\u53cd\u5411\u6392\u5e8f,\u524d\u63d0\u662f\u6570\u636e\u5df2\u7ecf\u6392\u8fc7\u5e8f exists () \u3000\u3000 # \u5982\u679cQuerySet\u5305\u542b\u6570\u636e\uff0c\u5c31\u8fd4\u56deTrue\uff0c\u5426\u5219\u8fd4\u56deFalse distinct () \u3000\u3000 # \u4ece\u8fd4\u56de\u7ed3\u679c\u4e2d\u5254\u9664\u91cd\u590d\u7eaa\u5f55 values () \u3000\u3000 # \u8fd4\u56de\u5b57\u5178\u5e8f\u5217\uff0c\u6bcf\u4e00\u884c\u7684\u6570\u636e\u4ee5\u5b57\u5178\u7684\u5f62\u5f0f\u8fd4\u56de values_list () \u3000\u3000 # \u8fd4\u56de\u5143\u7ec4\u5e8f\u5217\uff0c\u6bcf\u4e00\u884c\u7684\u6570\u636e\u4ee5\u5143\u7ec4\u7684\u5f62\u5f0f\u8fd4\u56de count () # \u8fd4\u56de\u6570\u636e\u5e93\u4e2d\u5339\u914d\u67e5\u8be2(QuerySet)\u7684\u5bf9\u8c61\u6570\u91cf\u3002 first () # \u8fd4\u56de\u7b2c\u4e00\u6761\u8bb0\u5f55 last () # \u8fd4\u56de\u6700\u540e\u4e00\u6761\u8bb0\u5f55 2.1.4 \u6761\u4ef6\u8fc7\u6ee4 \u00b6 1 2 res = models . User . objects . filter ( age__gt = 16 ) print ( res ) # <QuerySet [<User: User object>, <User: User object>]> \u5e38\u7528\u6761\u4ef6 1 2 3 4 5 6 7 8 9 10 11 12 13 __gt # \u5927\u4e8e __lt # \u5c0f\u4e8e __gte # \u5927\u4e8e\u6216\u5c0f\u4e8e __lte # \u5c0f\u4e8e\u6216\u7b49\u4e8e __contains # \u5305\u542b\uff0c\u5bf9\u5927\u5c0f\u5199\u654f\u611f __icontains # \u5305\u542b\uff0c\u5bf9\u5927\u5c0f\u5199\u4e0d\u654f\u611f __startwith __endwith __istartwith __iendwith __in = [] __range [ start , end ] # \u5728start\u548cend\u4e4b\u95f4\uff0c\u5305\u542bstart\u548cend __isnull 2.2 \u591a\u8868\u67e5\u8be2 \u00b6 2.2.1 \u57fa\u4e8e\u5bf9\u8c61\u7684\u8de8\u8868\u67e5\u8be2 \u00b6 1. \u6b63\u5411\u67e5\u8be2 \u00b6 1 2 3 4 5 6 7 8 9 # \u67e5\u8be2\u4e66\u7c4d\u4e3b\u952e\u4e3a1\u7684\u51fa\u7248\u793e book_obj = models . Book . objects . filter ( pk = 1 ) . first () res = book_obj . publish print ( res ) # Publish object print ( res . name ) # \u6e05\u534e\u5927\u5b66\u51fa\u7248\u793e # \u67e5\u8be2\u4e66\u7c4d\u4e3b\u952e\u4e3a2\u7684\u4f5c\u8005 book_obj = models . Book . objects . filter ( pk = 1 ) . first () res = book_obj . authors . all () print ( res ) # <QuerySet [<Author: Author object>, <Author: Author object>]> 2. \u53cd\u5411\u67e5\u8be2 \u00b6 1 2 3 4 5 6 7 8 # \u67e5\u8be2\u4e3b\u952e\u4e3a1\u7684\u51fa\u7248\u793e\u51fa\u7248\u7684\u4e66 publish_obj = models . Publish . objects . filter ( pk = 1 ) . first () res = publish_obj . book_set . all () print ( res ) # <QuerySet [<Book: Book object>, <Book: Book object>]> author_detail_obj = models . AuthorDetail . objects . filter ( addr__contains = '\u6e05\u534e\u5927\u5b66' ) . first () res = author_detail_obj . author print ( res . name ) \u57fa\u4e8e\u5bf9\u8c61\u53cd\u5411\u67e5\u8be2\u7684\u65f6\u5019\uff1a\u5f53\u67e5\u8be2\u7ed3\u679c\u53ef\u4ee5\u6709\u591a\u4e2a\u7684\u65f6\u5019\u5c31\u5fc5\u987b\u52a0 _set.all() \uff1b\u5f53\u7684\u7ed3\u679c\u53ea\u6709\u4e00\u4e2a\u7684\u65f6\u5019\u4e0d\u9700\u8981\u52a0 _set.all() 2.2.2 \u57fa\u4e8e\u53cc\u4e0b\u5212\u7ebf\u7684\u8de8\u8868\u67e5\u8be2 \u00b6 1. \u6b63\u5411\u67e5\u8be2 \u00b6 1 2 3 4 5 6 7 8 # \u67e5\u4f5c\u8005\u8be6\u60c5 res = models . Author . objects . filter ( name = '\u4e25\u851a\u654f' ) . values ( 'author_detail__email ' , 'name' ) # \u5c0f\u5199\u7b2c\u4e09\u5f20\u8868\u540d__\u5b57\u6bb5\u540d print ( res ) # <QuerySet [{'author_detail__email': 'yanweimin@126.com', 'name': '\u4e25\u851a\u654f'}]> # \u8fde\u7eed\u8de8\u8868\u67e5\u4e66\u7c4d\u4e3b\u952e\u662f1\u7684\u4f5c\u8005\u7684\u90ae\u7bb1 # book-->\u4e2d\u95f4\u8868-->author_detail res = models . Book . objects . filter ( pk = 1 ) . values ( 'authors__author_detail__email' ) print ( res ) # <QuerySet [{'authors__author_detail__email': 'yanweimin@126.com'}, {'authors__author_detail__email': 'wuweimin@163.com'}]> 2. \u53cd\u5411\u67e5\u8be2 \u00b6 1 2 3 # \u67e5\u4f5c\u8005\u8be6\u60c5 res = models . AuthorDetail . objects . filter ( author__name = '\u4e25\u851a\u654f' ) . values ( 'email' , 'author__name' ) print ( res ) # <QuerySet [{'email': 'yanweimin@126.com', 'author__name': '\u4e25\u851a\u654f'}]> 2.3 \u805a\u5408\u67e5\u8be2\u548c\u5206\u7ec4\u67e5\u8be2 \u00b6 \u805a\u5408\u67e5\u8be2 aggregate \u901a\u5e38\u60c5\u51b5\u4e0b\u90fd\u662f\u914d\u5408\u5206\u7ec4\u4e00\u8d77\u4f7f\u7528\u7684 1 2 3 4 5 6 from django.db.models import Max , Min , Sum , Count , Avg res = models . Book . objects . annotate ( author_num = Count ( 'authors' )) . values ( 'title' , 'author_num' ) # author_num\u76f8\u5f53\u4e8e\u5b57\u6bb5\u7684\u522b\u540d print ( res ) res = models . Book . objects . aggregate ( Max ( 'price' ), Min ( 'price' ), Sum ( 'price' ), Count ( 'pk' ), Avg ( 'price' )) print ( res ) # {'price__max': Decimal('35.00'), 'price__min': Decimal('29.00'), 'price__sum': Decimal('64.00'), 'pk__count': 2, 'price__avg': 32.0} 2.5 F\u67e5\u8be2 \u00b6 \u80fd\u591f\u76f4\u63a5\u83b7\u53d6\u5230\u8868\u4e2d\u67d0\u4e2a\u5b57\u6bb5\u5bf9\u5e94\u7684\u6570\u636e 1. \u52a0\u3001\u51cf\u3001\u4e58\u3001\u9664\u3001\u53d6\u6a21\u4ee5\u53ca\u5e42\u8fd0\u7b97\u7b49\u7b97\u672f\u64cd\u4f5c \u00b6 1 2 3 4 from django.db.models import F res = models . Book . objects . update ( price = F ( 'price' ) - 5 ) print ( res ) # \u6267\u884c\u7684SQL\uff1aUPDATE `app_book` SET `price` = (`app_book`.`price` - 5); 2. \u62fc\u63a5\u5b57\u7b26\u4e32 \u00b6 1 2 3 4 5 6 from django.db.models import F from django.db.models.functions import Concat from django.db.models import Value models . Book . objects . update ( title = Concat ( F ( 'title' ), Value ( '(\u70ed\u9500)' ))) # \u5982\u679c\u4e0d\u7528concat\uff0c\u5b57\u6bb5\u4e0b\u6240\u6709\u503c\u90fd\u4f1a\u53d8\u4e3a\u7a7a 2.6 Q\u67e5\u8be2 \u00b6 \u5b9e\u73b0\u590d\u6742\u7684\u6761\u4ef6\u67e5\u8be2 1 2 3 4 5 6 7 8 9 10 11 12 from django.db.models import Q res = models . Book . objects . filter ( Q ( price__gt = 20 ), Q ( price__lt = 30 )) # Q\u5305\u88f9\u9017\u53f7\u5206\u5272 \u8fd8\u662fand\u5173\u7cfb print ( res ) # <QuerySet [<Book: Book object>]> res = models . Book . objects . filter ( Q ( price__gt = 30 ) | Q ( price__lt = 20 )) # | or\u5173\u7cfb print ( res ) # <QuerySet [<Book: Book object>]> res = models . Book . objects . filter ( ~ Q ( price__gt = 30 )) # ~ not\u5173\u7cfb print ( res ) # # <QuerySet [<Book: Book object>]> # \u5bf9\u5e94\u7684SQL # SELECT `app_book`.`id`, `app_book`.`title`, `app_book`.`price`, `app_book`.`publish_id` FROM `app_book` WHERE (`app_book`.`price` > 20 AND `app_book`.`price` < 30) LIMIT 21; # SELECT `app_book`.`id`, `app_book`.`title`, `app_book`.`price`, `app_book`.`publish_id` FROM `app_book` WHERE (`app_book`.`price` > 30 OR `app_book`.`price` < 20) LIMIT 21; # SELECT `app_book`.`id`, `app_book`.`title`, `app_book`.`price`, `app_book`.`publish_id` FROM `app_book` WHERE NOT (`app_book`.`price` > 30) LIMIT 21; Q\u7684\u9ad8\u9636\u7528\u6cd5\uff1a\u80fd\u591f\u5c06\u67e5\u8be2\u6761\u4ef6\u7684\u5de6\u8fb9\u4e5f\u53d8\u6210\u5b57\u7b26\u4e32\u7684\u5f62\u5f0f 1 2 3 4 5 6 7 8 9 from django.db.models import Q q = Q () q . connector = 'and' # \u5982\u679c\u4e0d\u6307\u5b9a\u8fde\u63a5\u7236\uff0c\u9ed8\u8ba4\u662fand\u5173\u7cfb q . children . append (( 'price__gt' , 20 )) q . children . append (( 'price__lt' , 30 )) res = models . Book . objects . filter ( q ) print ( res ) # <QuerySet [<Book: Book object>]> # SELECT `app_book`.`id`, `app_book`.`title`, `app_book`.`price`, `app_book`.`publish_id` FROM `app_book` WHERE (`app_book`.`price` > 20 and `app_book`.`price` < 30) LIMIT 21; 3. \u6539 \u00b6 3.1 \u5355\u8868 \u00b6 3.1 \u65b9\u6cd5\u4e00\uff1a update() \u00b6 1 2 3 # user_obj \u662f <class 'django.db.models.query.QuerySet'> user_obj = models . User . objects . filter ( username = 'John' ) user_obj . update ( age = 20 ) 3.2 \u65b9\u6cd5\u4e8c\uff1a save() \u00b6 1 2 3 4 # user_obj \u662f <class 'app.models.User'> user_obj = models . User . objects . filter ( username = 'John' ) . first () user_obj . age = 21 user_obj . save () 3.2 \u591a\u8868 \u00b6 3.2.1 \u4e00\u5bf9\u4e00\u3001\u4e00\u5bf9\u591a \u00b6 \u65b9\u5f0f\u4e00\uff1a\u76f4\u63a5\u5199\u5916\u952e\u5b57\u6bb5id 1 models . Book . objects . filter ( pk = 1 ) . update ( publish_id = 2 ) \u65b9\u5f0f\u4e8c\uff1a\u901a\u8fc7\u5bf9\u8c61\u4fee\u6539 1 2 publish_obj = models . Publish . objects . filter ( pk = 1 ) . first () models . Book . objects . filter ( pk = 1 ) . update ( publish = publish_obj ) 3.2.2 \u591a\u8868 \u00b6 \u65b9\u5f0f\u4e00\uff1a 1 2 book_obj = models . Book . objects . filter ( pk = 1 ) . first () book_obj . authors . set ([ 2 ]) # \u62ec\u53f7\u5185\u5fc5\u987b\u7ed9\u4e00\u4e2a\u53ef\u8fed\u4ee3\u5bf9\u8c61 \u65b9\u5f0f\u4e8c\uff1a 1 2 3 4 book_obj = models . Book . objects . filter ( pk = 1 ) . first () author_obj1 = models . Author . objects . filter ( pk = 2 ) . first () author_obj2 = models . Author . objects . filter ( pk = 3 ) . first () book_obj . authors . set ([ author_obj1 , author_obj2 ]) # \u62ec\u53f7\u5185\u5fc5\u987b\u7ed9\u4e00\u4e2a\u53ef\u8fed\u4ee3\u5bf9\u8c61 \u6e05\u7a7a\u7b2c\u4e09\u5f20\u5173\u7cfb\u8868 1 2 book_obj = models . Book . objects . filter ( pk = 1 ) . first () book_obj . authors . clear () # \u62ec\u53f7\u5185\u4e0d\u8981\u52a0\u4efb\u4f55\u53c2\u6570 4. \u5220 \u00b6 4.1 \u5355\u8868 \u00b6 1 2 user_obj = models . User . objects . filter ( username = 'Jack' ) user_obj . delete () 4.2 \u591a\u8868 \u00b6 4.2.1 \u4e00\u5bf9\u4e00\uff0c\u4e00\u5bf9\u591a \u00b6 \u65b9\u6cd5\u540c\u5355\u8868\uff0c\u5220\u9664\u662f\u7ea7\u8054\u5220\u9664 4.2.2 \u591a\u5bf9\u591a \u00b6 \u65b9\u5f0f\u4e00\uff1a\u6839\u636e\u5916\u952e\u503c\u5220\u9664 1 2 3 book_obj = models . Book . objects . filter ( pk = 1 ) . first () book_obj . authors . remove ( 2 , 3 ) # DELETE FROM `app_book_authors` WHERE (`app_book_authors`.`book_id` = 1 AND `app_book_authors`.`author_id` IN (2, 3)); \u65b9\u5f0f\u4e8c\uff1a\u901a\u8fc7\u5bf9\u8c61\u5220\u9664 1 2 3 4 5 book_obj = models . Book . objects . filter ( pk = 1 ) . first () author_obj1 = models . Author . objects . filter ( pk = 2 ) . first () author_obj2 = models . Author . objects . filter ( pk = 3 ) . first () book_obj . authors . remove ( author_obj1 , author_obj2 ) # remove\u62ec\u53f7\u5185\u65e2\u53ef\u4ee5\u4f20\u6570\u5b57\u4e5f\u53ef\u4ee5\u4f20\u5bf9\u8c61 \u5e76\u4e14\u90fd\u652f\u6301\u591a\u4e2a 5. \u4e8b\u52a1 \u00b6 1 2 3 4 5 6 7 8 9 from django.db import transaction try : with transaction . atomic (): # sql1 # sql2 ... # \u5728with\u4ee3\u7801\u5feb\u5185\u4e66\u5199\u7684\u6240\u6709orm\u64cd\u4f5c\u90fd\u662f\u5c5e\u4e8e\u540c\u4e00\u4e2a\u4e8b\u52a1 except Exception as e : print ( e ) \u56db\u3001\u5e38\u7528\u5b57\u6bb5\u548c\u53c2\u6570 \u00b6 https://www.cnblogs.com/Dominic-Ji/p/9203990.html \u4e94\u3001\u6570\u636e\u5e93\u67e5\u8be2\u4f18\u5316 \u00b6 1. only\u4e0edefer \u00b6 only() \u7ed3\u679c\u662f\u4e00\u4e2a\u5217\u8868\u5957\u591a\u4e2a\u5bf9\u8c61\uff0c\u8fd9\u4e9b\u5bf9\u8c61\u9ed8\u8ba4\u53ea\u6709only\u62ec\u53f7\u5185\u7684\u5c5e\u6027\uff0c\u4f46\u662f\u4e5f\u53ef\u4ee5\u70b9\u51fb\u62ec\u53f7\u5185\u6ca1\u6709\u7684\u5c5e\u6027\uff0c\u53ea\u662f\u9700\u8981\u989d\u5916\u7684\u8d70\u6570\u636e\u5e93\u64cd\u4f5c\u3002 defer() \u8ddfonly\u521a\u597d\u76f8\u53cd\uff0c\u5bf9\u8c61\u91cc\u9762\u552f\u72ec\u6ca1\u6709\u62ec\u53f7\u5185\u6307\u5b9a\u7684\u5c5e\u6027\u3002 2. select_related\u4e0eprefetch_related \u00b6 select_related( \u5185\u90e8\u7684\u672c\u8d28\u662f\u8054\u8868\u64cd\u4f5c\uff08 inner join \uff09\uff0c\u62ec\u53f7\u5185\u53ea\u80fd\u653e\u5916\u952e\u5b57\u6bb5\u5e76\u4e14\u591a\u5bf9\u591a\u4e0d\u884c\u3002\u62ec\u53f7\u5185\u53ef\u4ee5\u653e\u591a\u4e2a\u5916\u952e\u5b57\u6bb5\uff08 select_related(\u5916\u952e\u5b57\u6bb51__\u5916\u952e\u5b57\u6bb52__\u5916\u952e\u5b57\u6bb53__... )\uff0c\u5c06\u8054\u8868\u4e4b\u540e\u7684\u7ed3\u679c\u5168\u90e8\u67e5\u8be2\u51fa\u6765\u5c01\u88c5\u5230\u5bf9\u8c61\u91cc\u9762\uff0c\u4e4b\u540e\u5bf9\u8c61\u5728\u70b9\u51fb\u8868\u7684\u5b57\u6bb5\u7684\u65f6\u5019\u90fd\u65e0\u9700\u518d\u8d70\u6570\u636e\u5e93\u3002 prefetch_related() \u5185\u90e8\u672c\u8d28\u662f\u5b50\u67e5\u8be2\uff0c\u5185\u90e8\u901a\u8fc7\u5b50\u67e5\u8be2\u7684\u65b9\u5f0f\u5c06\u591a\u5f20\u7684\u8868\u6570\u636e\u4e5f\u5c01\u88c5\u5230\u5bf9\u8c61\u4e2d\uff0c\u8fd9\u6837\u7528\u6237\u5728\u4f7f\u7528\u7684\u65f6\u5019\u4e5f\u662f\u611f\u89c9\u4e0d\u51fa\u6765\u7684\u3002 \u4e0a\u8ff0\u4e24\u79cd\u65b9\u5f0f\uff0c\u5728\u4e0d\u540c\u7684\u573a\u666f\u4e0b\u6548\u7387\u5404\u6709\u5343\u79cb","title":"\u6a21\u578b\u5c42"},{"location":"programming/python/Django/model/#_1","text":"","title":"\u6a21\u578b\u5c42"},{"location":"programming/python/Django/model/#_2","text":"","title":"\u4e00\u3001\u8fde\u63a5\u6570\u636e\u5e93"},{"location":"programming/python/Django/model/#1","text":"1 2 3 CREATE DATABASE test CHARSET utf8 ; # \u6388\u6743 GRANT ALL ON test . * TO 'admin' @ '10.0.0.%' IDENTIFIED BY 'admin@123' ;","title":"1. \u521b\u5efa\u6570\u636e\u5e93"},{"location":"programming/python/Django/model/#2","text":"","title":"2. \u4fee\u6539\u914d\u7f6e\u6587\u4ef6"},{"location":"programming/python/Django/model/#1-settingpymysql","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 DATABASES = { 'default' : { 'ENGINE' : 'django.db.backends.mysql' , 'NAME' : 'test' , 'USER' : 'admin' , 'PASSWORD' : 'admin@123' , 'HOST' : '10.0.0.128' , 'PORT' : 3306 , 'CHARSET' : 'utf8' } } LOGGING = { 'version' : 1 , 'disable_existing_loggers' : False , 'handlers' : { 'console' :{ 'level' : 'DEBUG' , 'class' : 'logging.StreamHandler' , }, }, # \u5728\u63a7\u5236\u53f0\u6253\u5370ORM\u6267\u884c\u7684SQL\u8bed\u53e5 'loggers' : { 'django.db.backends' : { 'handlers' : [ 'console' ], 'propagate' : True , 'level' : 'DEBUG' , }, } }","title":"1. \u5728setting.py\u6587\u4ef6\u4e2d\u6307\u5b9amysql\u6570\u636e\u5e93\u7684\u76f8\u5173\u4fe1\u606f"},{"location":"programming/python/Django/model/#2-mysql","text":"\u5728setting.py\u6587\u4ef6\u540c\u7ea7\u7684\u7684 __init__.py \u4e2d\u4fee\u6539\u8fde\u63a5mysql\u7684\u6a21\u5757\uff08 mysite/mysite/__init__.py \uff09 1 2 3 import pymysql pymysql . install_as_MySQLdb ()","title":"2. \u4fee\u6539\u9ed8\u8ba4\u7684mysql\u6a21\u5757"},{"location":"programming/python/Django/model/#3-pymysql","text":"1 pip install pymysql","title":"3. \u5b89\u88c5pymysql\u6a21\u5757"},{"location":"programming/python/Django/model/#3","text":"1 2 3 4 5 6 7 8 9 #filename: models.py from django.db import models # Create your models here. class User ( models . Model ): id = models . AutoField ( primary_key = True ) username = models . CharField ( max_length = 32 ) age = models . IntegerField ()","title":"3. \u521b\u5efa\u8868"},{"location":"programming/python/Django/model/#4","text":"1 2 3 4 5 # \u4e8e\u5728\u8be5app\u4e0b\u5efa\u7acbmigrations\u76ee\u5f55\uff0c\u5e76\u8bb0\u5f55\u6240\u6709\u7684\u5173\u4e8emodes.py\u7684\u6539\u52a8 \u6bd4\u5982 0001 _initial . py \uff0c \u4f46\u662f\u8fd9\u4e2a\u6539\u52a8\u8fd8\u6ca1\u6709\u4f5c\u7528\u5230\u6570\u636e\u5e93\u6587\u4ef6 python manage . py makemigrations # \u5c06\u5bf9\u6570\u636e\u5e93\u7684\u66f4\u6539\u5728\u6570\u636e\u5e93\u4e2d\u771f\u5b9e\u6267\u884c\u3002 python manage . py migrate","title":"4.  \u8fc1\u79fb\u6570\u636e\u5e93"},{"location":"programming/python/Django/model/#_3","text":"orm\u521b\u5efa\u7684\u8868\u81ea\u52a8\u52a0\u4e86\u524d\u7f00\uff0c\u524d\u7f00\u662f\u5e94\u7528\u7684\u540d\u79f0\uff0c\u9632\u6b62\u591a\u4e2a\u5e94\u7528\u8868\u540d\u51b2\u7a81\u3002","title":"\u4e8c\u3001\u521b\u5efa\u8868"},{"location":"programming/python/Django/model/#1_1","text":"1 2 3 4 5 6 7 8 9 #filename: models.py from django.db import models # Create your models here. class User ( models . Model ): id = models . AutoField ( primary_key = True ) username = models . CharField ( max_length = 32 ) age = models . IntegerField ()","title":"1. \u72ec\u7acb\u8868"},{"location":"programming/python/Django/model/#2_1","text":"\u8868\u4e0e\u8868\u4e4b\u95f4\u7684\u5173\u7cfb\uff1a \u4e00\u5bf9\u4e00\uff1a models.OneToOneField() \u4e00\u5bf9\u591a\uff1a models.ForeignKey() \u591a\u5bf9\u591a\uff1a models.ManyToManyField() \u6ca1\u6709\u5173\u7cfb \u521b\u5efa\u8868\u5173\u7cfb\u5148\u5c06\u57fa\u8868\u521b\u5efa\u51fa\u6765\uff0c\u7136\u540e\u518d\u6dfb\u52a0\u5916\u952e\u5b57\u6bb5\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 #filename: models.py class Book ( models . Model ): title = models . CharField ( max_length = 32 , verbose_name = \"\u4e66\u540d\" ) price = models . DecimalField ( max_digits = 8 , decimal_places = 2 , verbose_name = \"\u4ef7\u683c\" ) # \u56fe\u4e66\u548c\u51fa\u7248\u793e\u662f\u4e00\u5bf9\u591a\uff0c\u5e76\u4e14\u4e66\u662f\u591a\u7684\u4e00\u65b9\uff0c\u6240\u4ee5\u5916\u952e\u5b57\u6bb5\u653e\u5728Book\u8868\u91cc\u9762 # \u9ed8\u8ba4\u5c31\u662f\u4e0e\u51fa\u7248\u793e\u8868\u7684\u4e3b\u952e\u5b57\u6bb5\u505a\u5916\u952e\u5173\u8054 # \u5982\u679c\u5b57\u6bb5\u5bf9\u5e94\u7684\u662fForeignKey \u90a3\u4e48\u4f1aorm\u4f1a\u81ea\u52a8\u5728\u5b57\u6bb5\u7684\u540e\u9762\u52a0_id\uff0c\u5982\u679c\u81ea\u5df1\u52a0\u4e86_id\u90a3\u4e48orm\u8fd8\u662f\u4f1a\u5728\u540e\u9762\u7ee7\u7eed\u52a0_id publish = models . ForeignKey ( to = 'Publish' ) # \u56fe\u4e66\u548c\u4f5c\u8005\u662f\u591a\u5bf9\u591a\u7684\u5173\u7cfb\uff0c\u5916\u952e\u5b57\u6bb5\u5efa\u5728\u4efb\u610f\u4e00\u65b9\u5747\u53ef\uff0c\u4f46\u662f\u63a8\u8350\u5efa\u5728\u67e5\u8be2\u9891\u7387\u8f83\u9ad8\u7684\u4e00\u65b9 # authors\u662f\u4e00\u4e2a\u865a\u62df\u5b57\u6bb5\uff0c\u5e76\u4e0d\u4f1a\u5728\u6570\u636e\u5e93\u4e2d\u521b\u5efa\u8fd9\u4e2a\u5b57\u6bb5\uff0c\u4e3b\u8981\u662f\u7528\u6765\u544a\u8bc9orm\u4e66\u7c4d\u8868\u548c\u4f5c\u8005\u8868\u662f\u591a\u5bf9\u591a\u5173\u7cfb\uff0c\u8ba9orm\u81ea\u52a8\u5e2e\u4f60\u521b\u5efa\u7b2c\u4e09\u5f20\u5173\u7cfb\u8868 authors = models . ManyToManyField ( to = 'Author' ) class Publish ( models . Model ): name = models . CharField ( max_length = 32 , verbose_name = \"\u51fa\u7248\u793e\u540d\u79f0\" ) addr = models . CharField ( max_length = 64 , verbose_name = \"\u901a\u8baf\u5730\u5740\" ) class Author ( models . Model ): name = models . CharField ( max_length = 32 , verbose_name = \"\u4f5c\u8005\u59d3\u540d\" ) age = models . IntegerField ( verbose_name = \"\u5e74\u9f84\" ) # \u4f5c\u8005\u4e0e\u4f5c\u8005\u8be6\u60c5\u662f\u4e00\u5bf9\u4e00\u7684\u5173\u7cfb,\u5916\u952e\u5b57\u6bb5\u5efa\u5728\u4efb\u610f\u4e00\u65b9\u90fd\u53ef\u4ee5,\u4f46\u662f\u63a8\u8350\u5efa\u5728\u67e5\u8be2\u9891\u7387\u8f83\u9ad8\u7684\u8868\u4e2d # OneToOneField\u4e5f\u4f1a\u81ea\u52a8\u7ed9\u5b57\u6bb5\u52a0_id\u540e\u7f00 author_detail = models . OneToOneField ( to = 'AuthorDetail' ) class AuthorDetail ( models . Model ): email = models . EmailField ( verbose_name = \"\u90ae\u7bb1\" ) addr = models . CharField ( max_length = 32 , verbose_name = \"\u901a\u8baf\u5730\u5740\" ) \u5728django1.X\u7248\u672c\u4e2d\u5916\u952e\u9ed8\u8ba4\u90fd\u662f\u7ea7\u8054\u66f4\u65b0\u5220\u9664\u7684","title":"2. \u5173\u7cfb\u8868"},{"location":"programming/python/Django/model/#3_1","text":"","title":"3. \u591a\u5bf9\u591a\u4e09\u79cd\u521b\u5efa\u65b9\u5f0f"},{"location":"programming/python/Django/model/#1_2","text":"\u81ea\u52a8\u521b\u5efa\u7b2c\u4e09\u5f20\u5173\u7cfb\u8868\uff0c\u4f46\u662f\u6269\u5c55\u6027\u5dee\uff0c\u6ca1\u6709\u529e\u6cd5\u6dfb\u52a0\u989d\u5916\u5b57\u6bb5\u3002\u53ef\u4ee5\u7528ORM\u63d0\u4f9b\u7684\u7b2c\u4e09\u5f20\u5173\u7cfb\u8868\u7684\u65b9\u6cd5\uff0c\u5982add,remove,clear,set\u7b49\u65b9\u6cd5\u3002","title":"1. \u5168\u81ea\u52a8"},{"location":"programming/python/Django/model/#2_2","text":"\u81ea\u5df1\u521b\u5efa\u7b2c\u4e09\u5f20\u8868\uff0c\u81ea\u5df1\u5efa\u5916\u952e\u3002\u6269\u5c55\u6027\u9ad8\uff0c\u4f46\u662f\u65e0\u6cd5\u5229\u7528orm\u63d0\u4f9b\u7684\u7b80\u4fbf\u7684\u67e5\u8be2\u65b9\u6cd5\u3002 1 2 3 4 5 6 7 8 9 class Book ( models . Model ): name = models . CharField ( max_length = 32 ) class Author ( models . Model ): name = models . CharField ( max_length = 32 ) class Book2Author ( models . Model ): book_id = models . ForeignKey ( to = 'Book' ) author_id = models . ForeignKey ( to = 'Author' )","title":"2. \u5168\u624b\u52a8"},{"location":"programming/python/Django/model/#3_2","text":"\u5b9e\u9645\u9879\u76ee\u7528\u6b64\u65b9\u6cd5\uff0c\u6269\u5c55\u6027\u597d\u3002\u53ef\u4ee5\u4f7f\u7528orm\u7684\u6b63\u53cd\u5411\u67e5\u8be2\uff0c\u4f46\u662f\u6ca1\u6cd5\u4f7f\u7528add,set,remove,clear\u8fd9\u56db\u4e2a\u65b9\u6cd5 1 2 3 4 5 6 7 8 9 10 11 12 13 class Book ( models . Model ): name = models . CharField ( max_length = 32 ) authors = models . ManyToManyField ( to = 'Author' , through = 'Book2Author' , # \u544a\u8bc9ORM\u901a\u8fc7Book2Author\u6765\u5173\u8054\u5173\u7cfb through_fields = ( 'book' , 'author' ) # \u544a\u8bc9ORM\u54ea\u4e24\u4e2a\u5b57\u6bb5\u6765\u786e\u5b9a\u5173\u8054\u5173\u7cfb\uff08\u901a\u8fc7\u7b2c\u4e09\u5f20\u8868\u67e5\u8be2\u5f53\u524dBOOK\u8868\u662f\u901a\u8fc7book\u5b57\u6bb5\uff0c\u6240\u4ee5book\u5b57\u6bb5\u5728\u524d\uff0cauthor\u5728\u540e\uff09 ) class Author ( models . Model ): name = models . CharField ( max_length = 32 ) class Book2Author ( models . Model ): book = models . ForeignKey ( to = 'Book' ) author = models . ForeignKey ( to = 'Author' )","title":"3. \u534a\u81ea\u52a8"},{"location":"programming/python/Django/model/#orm","text":"","title":"\u4e09\u3001ORM\u64cd\u4f5c"},{"location":"programming/python/Django/model/#1_3","text":"","title":"1. \u589e"},{"location":"programming/python/Django/model/#11","text":"","title":"1.1 \u5355\u8868"},{"location":"programming/python/Django/model/#111-create","text":"1 2 3 4 5 6 7 8 # \u65b9\u5f0f1\uff1a\u76f4\u63a5\u4f20\u503c models . User . objects . create ( username = 'Eric' , age = 16 ) # \u65b9\u5f0f2\uff1a\u4f20\u5165\u4e00\u4e2a\u5b57\u5178 user = { 'username' : 'Ron' , 'age' : 18 , } models . User . objects . create ( ** user )","title":"1.1.1 \u65b9\u6cd5\u4e00\uff1acreate()"},{"location":"programming/python/Django/model/#112-save","text":"1 2 3 4 5 6 7 8 # \u65b9\u5f0f1\uff1a\u521b\u5efa\u5bf9\u8c61\u65f6\u8d4b\u503c user_obj = models . User ( username = 'Jack' , age = 16 ) user_obj . save () # \u65b9\u5f0f2\uff1a\u5148\u521b\u5efa\u5bf9\u8c61\uff0c\u7136\u540e\u8d4b\u503c\u4fdd\u5b58 user_obj = models . User () user_obj . username = 'John' user_obj . age = 17 user_obj . save ()","title":"1.1.2 \u65b9\u6cd5\u4e8c\uff1asave()"},{"location":"programming/python/Django/model/#12","text":"","title":"1.2 \u591a\u8868"},{"location":"programming/python/Django/model/#121","text":"\u65b9\u5f0f\u4e00\uff1a\u76f4\u63a5\u5199\u5916\u952e\u5b57\u6bb5id 1 models . Book . objects . create ( title = '\u6570\u636e\u7ed3\u6784C\u8bed\u8a00\u7248' , price = 35.00 , publish_id = 1 ) \u65b9\u5f0f\u4e8c\uff1a\u901a\u8fc7\u5bf9\u8c61\u521b\u5efa 1 2 publish_obj = models . Publish . objects . filter ( pk = 1 ) . first () # Publish object models . Book . objects . create ( title = '\u6570\u636e\u7ed3\u6784\u9898\u96c6C\u8bed\u8a00\u7248' , price = 29.0 , publish = publish_obj )","title":"1.2.1 \u4e00\u5bf9\u4e00\u3001\u4e00\u5bf9\u591a"},{"location":"programming/python/Django/model/#122","text":"\u65b9\u5f0f\u4e00\uff1a\u901a\u8fc7\u4e3b\u952e\u503c\u6dfb\u52a0 1 2 book_obj = models . Book . objects . filter ( pk = 1 ) . first () book_obj . authors . add ( 2 , 3 ) # book_obj.authors\u76f8\u5f53\u4e8e\u5df2\u7ecf\u5b9a\u4f4d\u5230\u7b2c\u4e09\u5f20\u5173\u7cfb\u8868 \u65b9\u5f0f\u4e8c\uff1a\u901a\u8fc7\u5bf9\u8c61\u6dfb\u52a0 1 2 3 4 book_obj = models . Book . objects . filter ( pk = 1 ) . first () author_obj1 = models . Author . objects . filter ( pk = 2 ) . first () author_obj2 = models . Author . objects . filter ( pk = 3 ) . first () book_obj . authors . add ( author_obj1 , author_obj2 )","title":"1.2.2 \u591a\u5bf9\u591a"},{"location":"programming/python/Django/model/#13-bulk_create","text":"1 2 3 4 5 6 book_list = [] for i in range ( 5 ): book_obj = models . Book ( title = '\u7b2c %s \u672c\u4e66' % i , price = 20 , publish_id = 1 ) book_list . append ( book_obj ) models . Book . objects . bulk_create ( book_list ) # \u6267\u884c\u7684SQL:INSERT INTO `app_book` (`title`, `price`, `publish_id`) VALUES ('\u7b2c0\u672c\u4e66', '20.00', 1), ('\u7b2c1\u672c\u4e66', '20.00', 1), ('\u7b2c2\u672c\u4e66', '20.00', 1), ('\u7b2c3\u672c\u4e66', '20.00', 1), ('\u7b2c4\u672c\u4e66', '20.00', 1);","title":"1.3 \u6279\u91cf\u63d2\u5165bulk_create()"},{"location":"programming/python/Django/model/#2_3","text":"\u8fd4\u56de\u7684\u7ed3\u679c\u662f\u4e00\u4e2a QuerySet \u5bf9\u8c61\uff0c\u53ef\u4ee5\u628a\u5b83\u770b\u6210\u662f\u4e00\u4e2a\u5217\u8868\u5957\u6570\u636e\u5bf9\u8c61\u3002\u652f\u6301\u7d22\u5f15\u548c\u5207\u7247\u64cd\u4f5c\uff0c\u4f46\u662f\u4e0d\u652f\u6301\u8d1f\u6570\uff0c\u5e76\u4e14\u4e0d\u63a8\u8350\u4f7f\u7528\u7d22\u5f15\u3002 \u6b63\u53cd\u5411\u67e5\u8be2\uff1a \u6b63\u5411\u67e5\u8be2\uff1a\u4ece\u6709\u5916\u952e\u5b57\u6bb5\u7684\u8868\u5411\u6ca1\u6709\u5916\u952e\u5b57\u6bb5\u7684\u8868\u67e5 \u53cd\u5411\u67e5\u8be2\uff1a\u4ece\u6ca1\u6709\u5916\u952e\u5b57\u6bb5\u7684\u8868\u5411\u6709\u5916\u952e\u5b57\u6bb5\u7684\u8868\u67e5\u8be2 \u6b63\u5411\u67e5\u8be2\u6309\u5b57\u6bb5\uff0c\u53cd\u5411\u67e5\u8be2\u6309\u8868\u540d\u5c0f\u5199","title":"2. \u67e5"},{"location":"programming/python/Django/model/#21","text":"","title":"2.1 \u5355\u8868\u67e5\u8be2"},{"location":"programming/python/Django/model/#211","text":"1 2 3 4 5 6 # \u65b9\u5f0f1\uff1a user_obj = models . User . objects . filter () print ( user_obj ) # \u65b9\u5f0f2\uff1a user_obj = models . User . objects . all () print ( user_obj )","title":"2.1.1 \u67e5\u8be2\u6240\u6709\u6570\u636e"},{"location":"programming/python/Django/model/#212","text":"filter \u62ec\u53f7\u5185\u53ef\u4ee5\u5199\u591a\u4e2a\u53c2\u6570\uff0c\u67e5\u8be2\u7684\u65f6\u5019\u9ed8\u8ba4\u662fand\u5173\u7cfb 1 2 3 4 5 user_obj = models . User . objects . filter ( age = 16 ) print ( user_obj ) # <QuerySet [<User: User object>]> user_obj = models . User . objects . get ( age = 16 ) print ( user_obj ) # User object # get\u65b9\u6cd5\u8fd4\u56de\u7684\u76f4\u63a5\u5c31\u662f\u5f53\u524d\u6570\u636e\u5bf9\u8c61\uff0c\u4f46\u662f\u5982\u679c\u6570\u636e\u4e0d\u5b58\u5728\u8be5\u65b9\u6cd5\u4f1a\u76f4\u63a5\u62a5\u9519\u3002\u800cfilter\u5219\u4e0d\u4f1a\uff0c\u6240\u4ee5\u5efa\u8bae\u4f7f\u7528filter user_obj = models.User.objects.filter(pk=2) pk\u4f1a\u81ea\u52a8\u67e5\u627e\u5230\u5f53\u524d\u8868\u7684\u4e3b\u952e\u5b57\u6bb5,\u6307\u4ee3\u7684\u5c31\u662f\u5f53\u524d\u8868\u7684\u4e3b\u952e\u5b57\u6bb5.\u7528\u4e86pk\u4e4b\u540e\u5c31\u4e0d\u9700\u8981\u77e5\u9053\u5f53\u524d\u8868\u7684\u4e3b\u952e\u5b57\u6bb5\u5177\u4f53\u7684\u540d\u5b57\u53ef\u3002","title":"2.1.2 \u6309\u6761\u4ef6\u7b5b\u9009"},{"location":"programming/python/Django/model/#213","text":"1 2 3 4 5 6 7 8 9 order_by () \u3000 # \u5bf9\u7ed3\u679c\u6392\u5e8f reverse () \u3000 # \u5bf9\u67e5\u8be2\u7ed3\u679c\u53cd\u5411\u6392\u5e8f,\u524d\u63d0\u662f\u6570\u636e\u5df2\u7ecf\u6392\u8fc7\u5e8f exists () \u3000\u3000 # \u5982\u679cQuerySet\u5305\u542b\u6570\u636e\uff0c\u5c31\u8fd4\u56deTrue\uff0c\u5426\u5219\u8fd4\u56deFalse distinct () \u3000\u3000 # \u4ece\u8fd4\u56de\u7ed3\u679c\u4e2d\u5254\u9664\u91cd\u590d\u7eaa\u5f55 values () \u3000\u3000 # \u8fd4\u56de\u5b57\u5178\u5e8f\u5217\uff0c\u6bcf\u4e00\u884c\u7684\u6570\u636e\u4ee5\u5b57\u5178\u7684\u5f62\u5f0f\u8fd4\u56de values_list () \u3000\u3000 # \u8fd4\u56de\u5143\u7ec4\u5e8f\u5217\uff0c\u6bcf\u4e00\u884c\u7684\u6570\u636e\u4ee5\u5143\u7ec4\u7684\u5f62\u5f0f\u8fd4\u56de count () # \u8fd4\u56de\u6570\u636e\u5e93\u4e2d\u5339\u914d\u67e5\u8be2(QuerySet)\u7684\u5bf9\u8c61\u6570\u91cf\u3002 first () # \u8fd4\u56de\u7b2c\u4e00\u6761\u8bb0\u5f55 last () # \u8fd4\u56de\u6700\u540e\u4e00\u6761\u8bb0\u5f55","title":"2.1.3 \u67e5\u8be2\u7ed3\u679c\u518d\u5904\u7406"},{"location":"programming/python/Django/model/#214","text":"1 2 res = models . User . objects . filter ( age__gt = 16 ) print ( res ) # <QuerySet [<User: User object>, <User: User object>]> \u5e38\u7528\u6761\u4ef6 1 2 3 4 5 6 7 8 9 10 11 12 13 __gt # \u5927\u4e8e __lt # \u5c0f\u4e8e __gte # \u5927\u4e8e\u6216\u5c0f\u4e8e __lte # \u5c0f\u4e8e\u6216\u7b49\u4e8e __contains # \u5305\u542b\uff0c\u5bf9\u5927\u5c0f\u5199\u654f\u611f __icontains # \u5305\u542b\uff0c\u5bf9\u5927\u5c0f\u5199\u4e0d\u654f\u611f __startwith __endwith __istartwith __iendwith __in = [] __range [ start , end ] # \u5728start\u548cend\u4e4b\u95f4\uff0c\u5305\u542bstart\u548cend __isnull","title":"2.1.4 \u6761\u4ef6\u8fc7\u6ee4"},{"location":"programming/python/Django/model/#22","text":"","title":"2.2 \u591a\u8868\u67e5\u8be2"},{"location":"programming/python/Django/model/#221","text":"","title":"2.2.1 \u57fa\u4e8e\u5bf9\u8c61\u7684\u8de8\u8868\u67e5\u8be2"},{"location":"programming/python/Django/model/#1_4","text":"1 2 3 4 5 6 7 8 9 # \u67e5\u8be2\u4e66\u7c4d\u4e3b\u952e\u4e3a1\u7684\u51fa\u7248\u793e book_obj = models . Book . objects . filter ( pk = 1 ) . first () res = book_obj . publish print ( res ) # Publish object print ( res . name ) # \u6e05\u534e\u5927\u5b66\u51fa\u7248\u793e # \u67e5\u8be2\u4e66\u7c4d\u4e3b\u952e\u4e3a2\u7684\u4f5c\u8005 book_obj = models . Book . objects . filter ( pk = 1 ) . first () res = book_obj . authors . all () print ( res ) # <QuerySet [<Author: Author object>, <Author: Author object>]>","title":"1. \u6b63\u5411\u67e5\u8be2"},{"location":"programming/python/Django/model/#2_4","text":"1 2 3 4 5 6 7 8 # \u67e5\u8be2\u4e3b\u952e\u4e3a1\u7684\u51fa\u7248\u793e\u51fa\u7248\u7684\u4e66 publish_obj = models . Publish . objects . filter ( pk = 1 ) . first () res = publish_obj . book_set . all () print ( res ) # <QuerySet [<Book: Book object>, <Book: Book object>]> author_detail_obj = models . AuthorDetail . objects . filter ( addr__contains = '\u6e05\u534e\u5927\u5b66' ) . first () res = author_detail_obj . author print ( res . name ) \u57fa\u4e8e\u5bf9\u8c61\u53cd\u5411\u67e5\u8be2\u7684\u65f6\u5019\uff1a\u5f53\u67e5\u8be2\u7ed3\u679c\u53ef\u4ee5\u6709\u591a\u4e2a\u7684\u65f6\u5019\u5c31\u5fc5\u987b\u52a0 _set.all() \uff1b\u5f53\u7684\u7ed3\u679c\u53ea\u6709\u4e00\u4e2a\u7684\u65f6\u5019\u4e0d\u9700\u8981\u52a0 _set.all()","title":"2. \u53cd\u5411\u67e5\u8be2"},{"location":"programming/python/Django/model/#222","text":"","title":"2.2.2 \u57fa\u4e8e\u53cc\u4e0b\u5212\u7ebf\u7684\u8de8\u8868\u67e5\u8be2"},{"location":"programming/python/Django/model/#1_5","text":"1 2 3 4 5 6 7 8 # \u67e5\u4f5c\u8005\u8be6\u60c5 res = models . Author . objects . filter ( name = '\u4e25\u851a\u654f' ) . values ( 'author_detail__email ' , 'name' ) # \u5c0f\u5199\u7b2c\u4e09\u5f20\u8868\u540d__\u5b57\u6bb5\u540d print ( res ) # <QuerySet [{'author_detail__email': 'yanweimin@126.com', 'name': '\u4e25\u851a\u654f'}]> # \u8fde\u7eed\u8de8\u8868\u67e5\u4e66\u7c4d\u4e3b\u952e\u662f1\u7684\u4f5c\u8005\u7684\u90ae\u7bb1 # book-->\u4e2d\u95f4\u8868-->author_detail res = models . Book . objects . filter ( pk = 1 ) . values ( 'authors__author_detail__email' ) print ( res ) # <QuerySet [{'authors__author_detail__email': 'yanweimin@126.com'}, {'authors__author_detail__email': 'wuweimin@163.com'}]>","title":"1. \u6b63\u5411\u67e5\u8be2"},{"location":"programming/python/Django/model/#2_5","text":"1 2 3 # \u67e5\u4f5c\u8005\u8be6\u60c5 res = models . AuthorDetail . objects . filter ( author__name = '\u4e25\u851a\u654f' ) . values ( 'email' , 'author__name' ) print ( res ) # <QuerySet [{'email': 'yanweimin@126.com', 'author__name': '\u4e25\u851a\u654f'}]>","title":"2. \u53cd\u5411\u67e5\u8be2"},{"location":"programming/python/Django/model/#23","text":"\u805a\u5408\u67e5\u8be2 aggregate \u901a\u5e38\u60c5\u51b5\u4e0b\u90fd\u662f\u914d\u5408\u5206\u7ec4\u4e00\u8d77\u4f7f\u7528\u7684 1 2 3 4 5 6 from django.db.models import Max , Min , Sum , Count , Avg res = models . Book . objects . annotate ( author_num = Count ( 'authors' )) . values ( 'title' , 'author_num' ) # author_num\u76f8\u5f53\u4e8e\u5b57\u6bb5\u7684\u522b\u540d print ( res ) res = models . Book . objects . aggregate ( Max ( 'price' ), Min ( 'price' ), Sum ( 'price' ), Count ( 'pk' ), Avg ( 'price' )) print ( res ) # {'price__max': Decimal('35.00'), 'price__min': Decimal('29.00'), 'price__sum': Decimal('64.00'), 'pk__count': 2, 'price__avg': 32.0}","title":"2.3 \u805a\u5408\u67e5\u8be2\u548c\u5206\u7ec4\u67e5\u8be2"},{"location":"programming/python/Django/model/#25-f","text":"\u80fd\u591f\u76f4\u63a5\u83b7\u53d6\u5230\u8868\u4e2d\u67d0\u4e2a\u5b57\u6bb5\u5bf9\u5e94\u7684\u6570\u636e","title":"2.5 F\u67e5\u8be2"},{"location":"programming/python/Django/model/#1_6","text":"1 2 3 4 from django.db.models import F res = models . Book . objects . update ( price = F ( 'price' ) - 5 ) print ( res ) # \u6267\u884c\u7684SQL\uff1aUPDATE `app_book` SET `price` = (`app_book`.`price` - 5);","title":"1.  \u52a0\u3001\u51cf\u3001\u4e58\u3001\u9664\u3001\u53d6\u6a21\u4ee5\u53ca\u5e42\u8fd0\u7b97\u7b49\u7b97\u672f\u64cd\u4f5c"},{"location":"programming/python/Django/model/#2_6","text":"1 2 3 4 5 6 from django.db.models import F from django.db.models.functions import Concat from django.db.models import Value models . Book . objects . update ( title = Concat ( F ( 'title' ), Value ( '(\u70ed\u9500)' ))) # \u5982\u679c\u4e0d\u7528concat\uff0c\u5b57\u6bb5\u4e0b\u6240\u6709\u503c\u90fd\u4f1a\u53d8\u4e3a\u7a7a","title":"2.  \u62fc\u63a5\u5b57\u7b26\u4e32"},{"location":"programming/python/Django/model/#26-q","text":"\u5b9e\u73b0\u590d\u6742\u7684\u6761\u4ef6\u67e5\u8be2 1 2 3 4 5 6 7 8 9 10 11 12 from django.db.models import Q res = models . Book . objects . filter ( Q ( price__gt = 20 ), Q ( price__lt = 30 )) # Q\u5305\u88f9\u9017\u53f7\u5206\u5272 \u8fd8\u662fand\u5173\u7cfb print ( res ) # <QuerySet [<Book: Book object>]> res = models . Book . objects . filter ( Q ( price__gt = 30 ) | Q ( price__lt = 20 )) # | or\u5173\u7cfb print ( res ) # <QuerySet [<Book: Book object>]> res = models . Book . objects . filter ( ~ Q ( price__gt = 30 )) # ~ not\u5173\u7cfb print ( res ) # # <QuerySet [<Book: Book object>]> # \u5bf9\u5e94\u7684SQL # SELECT `app_book`.`id`, `app_book`.`title`, `app_book`.`price`, `app_book`.`publish_id` FROM `app_book` WHERE (`app_book`.`price` > 20 AND `app_book`.`price` < 30) LIMIT 21; # SELECT `app_book`.`id`, `app_book`.`title`, `app_book`.`price`, `app_book`.`publish_id` FROM `app_book` WHERE (`app_book`.`price` > 30 OR `app_book`.`price` < 20) LIMIT 21; # SELECT `app_book`.`id`, `app_book`.`title`, `app_book`.`price`, `app_book`.`publish_id` FROM `app_book` WHERE NOT (`app_book`.`price` > 30) LIMIT 21; Q\u7684\u9ad8\u9636\u7528\u6cd5\uff1a\u80fd\u591f\u5c06\u67e5\u8be2\u6761\u4ef6\u7684\u5de6\u8fb9\u4e5f\u53d8\u6210\u5b57\u7b26\u4e32\u7684\u5f62\u5f0f 1 2 3 4 5 6 7 8 9 from django.db.models import Q q = Q () q . connector = 'and' # \u5982\u679c\u4e0d\u6307\u5b9a\u8fde\u63a5\u7236\uff0c\u9ed8\u8ba4\u662fand\u5173\u7cfb q . children . append (( 'price__gt' , 20 )) q . children . append (( 'price__lt' , 30 )) res = models . Book . objects . filter ( q ) print ( res ) # <QuerySet [<Book: Book object>]> # SELECT `app_book`.`id`, `app_book`.`title`, `app_book`.`price`, `app_book`.`publish_id` FROM `app_book` WHERE (`app_book`.`price` > 20 and `app_book`.`price` < 30) LIMIT 21;","title":"2.6 Q\u67e5\u8be2"},{"location":"programming/python/Django/model/#3_3","text":"","title":"3. \u6539"},{"location":"programming/python/Django/model/#31","text":"","title":"3.1 \u5355\u8868"},{"location":"programming/python/Django/model/#31-update","text":"1 2 3 # user_obj \u662f <class 'django.db.models.query.QuerySet'> user_obj = models . User . objects . filter ( username = 'John' ) user_obj . update ( age = 20 )","title":"3.1 \u65b9\u6cd5\u4e00\uff1aupdate()"},{"location":"programming/python/Django/model/#32-save","text":"1 2 3 4 # user_obj \u662f <class 'app.models.User'> user_obj = models . User . objects . filter ( username = 'John' ) . first () user_obj . age = 21 user_obj . save ()","title":"3.2 \u65b9\u6cd5\u4e8c\uff1asave()"},{"location":"programming/python/Django/model/#32","text":"","title":"3.2 \u591a\u8868"},{"location":"programming/python/Django/model/#321","text":"\u65b9\u5f0f\u4e00\uff1a\u76f4\u63a5\u5199\u5916\u952e\u5b57\u6bb5id 1 models . Book . objects . filter ( pk = 1 ) . update ( publish_id = 2 ) \u65b9\u5f0f\u4e8c\uff1a\u901a\u8fc7\u5bf9\u8c61\u4fee\u6539 1 2 publish_obj = models . Publish . objects . filter ( pk = 1 ) . first () models . Book . objects . filter ( pk = 1 ) . update ( publish = publish_obj )","title":"3.2.1 \u4e00\u5bf9\u4e00\u3001\u4e00\u5bf9\u591a"},{"location":"programming/python/Django/model/#322","text":"\u65b9\u5f0f\u4e00\uff1a 1 2 book_obj = models . Book . objects . filter ( pk = 1 ) . first () book_obj . authors . set ([ 2 ]) # \u62ec\u53f7\u5185\u5fc5\u987b\u7ed9\u4e00\u4e2a\u53ef\u8fed\u4ee3\u5bf9\u8c61 \u65b9\u5f0f\u4e8c\uff1a 1 2 3 4 book_obj = models . Book . objects . filter ( pk = 1 ) . first () author_obj1 = models . Author . objects . filter ( pk = 2 ) . first () author_obj2 = models . Author . objects . filter ( pk = 3 ) . first () book_obj . authors . set ([ author_obj1 , author_obj2 ]) # \u62ec\u53f7\u5185\u5fc5\u987b\u7ed9\u4e00\u4e2a\u53ef\u8fed\u4ee3\u5bf9\u8c61 \u6e05\u7a7a\u7b2c\u4e09\u5f20\u5173\u7cfb\u8868 1 2 book_obj = models . Book . objects . filter ( pk = 1 ) . first () book_obj . authors . clear () # \u62ec\u53f7\u5185\u4e0d\u8981\u52a0\u4efb\u4f55\u53c2\u6570","title":"3.2.2 \u591a\u8868"},{"location":"programming/python/Django/model/#4_1","text":"","title":"4. \u5220"},{"location":"programming/python/Django/model/#41","text":"1 2 user_obj = models . User . objects . filter ( username = 'Jack' ) user_obj . delete ()","title":"4.1 \u5355\u8868"},{"location":"programming/python/Django/model/#42","text":"","title":"4.2 \u591a\u8868"},{"location":"programming/python/Django/model/#421","text":"\u65b9\u6cd5\u540c\u5355\u8868\uff0c\u5220\u9664\u662f\u7ea7\u8054\u5220\u9664","title":"4.2.1 \u4e00\u5bf9\u4e00\uff0c\u4e00\u5bf9\u591a"},{"location":"programming/python/Django/model/#422","text":"\u65b9\u5f0f\u4e00\uff1a\u6839\u636e\u5916\u952e\u503c\u5220\u9664 1 2 3 book_obj = models . Book . objects . filter ( pk = 1 ) . first () book_obj . authors . remove ( 2 , 3 ) # DELETE FROM `app_book_authors` WHERE (`app_book_authors`.`book_id` = 1 AND `app_book_authors`.`author_id` IN (2, 3)); \u65b9\u5f0f\u4e8c\uff1a\u901a\u8fc7\u5bf9\u8c61\u5220\u9664 1 2 3 4 5 book_obj = models . Book . objects . filter ( pk = 1 ) . first () author_obj1 = models . Author . objects . filter ( pk = 2 ) . first () author_obj2 = models . Author . objects . filter ( pk = 3 ) . first () book_obj . authors . remove ( author_obj1 , author_obj2 ) # remove\u62ec\u53f7\u5185\u65e2\u53ef\u4ee5\u4f20\u6570\u5b57\u4e5f\u53ef\u4ee5\u4f20\u5bf9\u8c61 \u5e76\u4e14\u90fd\u652f\u6301\u591a\u4e2a","title":"4.2.2 \u591a\u5bf9\u591a"},{"location":"programming/python/Django/model/#5","text":"1 2 3 4 5 6 7 8 9 from django.db import transaction try : with transaction . atomic (): # sql1 # sql2 ... # \u5728with\u4ee3\u7801\u5feb\u5185\u4e66\u5199\u7684\u6240\u6709orm\u64cd\u4f5c\u90fd\u662f\u5c5e\u4e8e\u540c\u4e00\u4e2a\u4e8b\u52a1 except Exception as e : print ( e )","title":"5. \u4e8b\u52a1"},{"location":"programming/python/Django/model/#_4","text":"https://www.cnblogs.com/Dominic-Ji/p/9203990.html","title":"\u56db\u3001\u5e38\u7528\u5b57\u6bb5\u548c\u53c2\u6570"},{"location":"programming/python/Django/model/#_5","text":"","title":"\u4e94\u3001\u6570\u636e\u5e93\u67e5\u8be2\u4f18\u5316"},{"location":"programming/python/Django/model/#1-onlydefer","text":"only() \u7ed3\u679c\u662f\u4e00\u4e2a\u5217\u8868\u5957\u591a\u4e2a\u5bf9\u8c61\uff0c\u8fd9\u4e9b\u5bf9\u8c61\u9ed8\u8ba4\u53ea\u6709only\u62ec\u53f7\u5185\u7684\u5c5e\u6027\uff0c\u4f46\u662f\u4e5f\u53ef\u4ee5\u70b9\u51fb\u62ec\u53f7\u5185\u6ca1\u6709\u7684\u5c5e\u6027\uff0c\u53ea\u662f\u9700\u8981\u989d\u5916\u7684\u8d70\u6570\u636e\u5e93\u64cd\u4f5c\u3002 defer() \u8ddfonly\u521a\u597d\u76f8\u53cd\uff0c\u5bf9\u8c61\u91cc\u9762\u552f\u72ec\u6ca1\u6709\u62ec\u53f7\u5185\u6307\u5b9a\u7684\u5c5e\u6027\u3002","title":"1. only\u4e0edefer"},{"location":"programming/python/Django/model/#2-select_relatedprefetch_related","text":"select_related( \u5185\u90e8\u7684\u672c\u8d28\u662f\u8054\u8868\u64cd\u4f5c\uff08 inner join \uff09\uff0c\u62ec\u53f7\u5185\u53ea\u80fd\u653e\u5916\u952e\u5b57\u6bb5\u5e76\u4e14\u591a\u5bf9\u591a\u4e0d\u884c\u3002\u62ec\u53f7\u5185\u53ef\u4ee5\u653e\u591a\u4e2a\u5916\u952e\u5b57\u6bb5\uff08 select_related(\u5916\u952e\u5b57\u6bb51__\u5916\u952e\u5b57\u6bb52__\u5916\u952e\u5b57\u6bb53__... )\uff0c\u5c06\u8054\u8868\u4e4b\u540e\u7684\u7ed3\u679c\u5168\u90e8\u67e5\u8be2\u51fa\u6765\u5c01\u88c5\u5230\u5bf9\u8c61\u91cc\u9762\uff0c\u4e4b\u540e\u5bf9\u8c61\u5728\u70b9\u51fb\u8868\u7684\u5b57\u6bb5\u7684\u65f6\u5019\u90fd\u65e0\u9700\u518d\u8d70\u6570\u636e\u5e93\u3002 prefetch_related() \u5185\u90e8\u672c\u8d28\u662f\u5b50\u67e5\u8be2\uff0c\u5185\u90e8\u901a\u8fc7\u5b50\u67e5\u8be2\u7684\u65b9\u5f0f\u5c06\u591a\u5f20\u7684\u8868\u6570\u636e\u4e5f\u5c01\u88c5\u5230\u5bf9\u8c61\u4e2d\uff0c\u8fd9\u6837\u7528\u6237\u5728\u4f7f\u7528\u7684\u65f6\u5019\u4e5f\u662f\u611f\u89c9\u4e0d\u51fa\u6765\u7684\u3002 \u4e0a\u8ff0\u4e24\u79cd\u65b9\u5f0f\uff0c\u5728\u4e0d\u540c\u7684\u573a\u666f\u4e0b\u6548\u7387\u5404\u6709\u5343\u79cb","title":"2. select_related\u4e0eprefetch_related"},{"location":"programming/python/Django/response/","text":"Response\u4e09\u677f\u65a7 \u00b6 1. HttpResponse \u00b6 app/views.py 1 2 3 4 5 from django.shortcuts import HttpResponse def index ( request ): return HttpResponse ( \"Hello World\" ) mysite/urls.py 1 2 3 4 5 6 7 8 from django.conf.urls import url from django.contrib import admin from app import views urlpatterns = [ url ( r '^admin/' , admin . site . urls ), url ( r '^index/' , views . index ) ] 2. render \u00b6 \u8fd4\u56de\u6e32\u67d3\u8fc7\u5f97\u6a21\u677f\u6587\u4ef6 app/views.py 1 2 3 4 5 from django.shortcuts import render def index ( request ): return render ( request , 'index.html' ) templates/index.html 1 2 3 4 5 6 7 8 9 10 <!DOCTYPE html> < html lang = \"en\" > < head > < meta charset = \"UTF-8\" > < title > index </ title > </ head > < body > < p > Hello Index </ p > </ body > </ html > 3. redirect \u00b6 \u91cd\u5b9a\u5411 app/views.py 1 2 3 4 5 from django.shortcuts import redirect def index ( request ): return redirect ( 'http://www.baidu.com' )","title":"Response\u4e09\u677f\u65a7"},{"location":"programming/python/Django/response/#response","text":"","title":"Response\u4e09\u677f\u65a7"},{"location":"programming/python/Django/response/#1-httpresponse","text":"app/views.py 1 2 3 4 5 from django.shortcuts import HttpResponse def index ( request ): return HttpResponse ( \"Hello World\" ) mysite/urls.py 1 2 3 4 5 6 7 8 from django.conf.urls import url from django.contrib import admin from app import views urlpatterns = [ url ( r '^admin/' , admin . site . urls ), url ( r '^index/' , views . index ) ]","title":"1. HttpResponse"},{"location":"programming/python/Django/response/#2-render","text":"\u8fd4\u56de\u6e32\u67d3\u8fc7\u5f97\u6a21\u677f\u6587\u4ef6 app/views.py 1 2 3 4 5 from django.shortcuts import render def index ( request ): return render ( request , 'index.html' ) templates/index.html 1 2 3 4 5 6 7 8 9 10 <!DOCTYPE html> < html lang = \"en\" > < head > < meta charset = \"UTF-8\" > < title > index </ title > </ head > < body > < p > Hello Index </ p > </ body > </ html >","title":"2. render"},{"location":"programming/python/Django/response/#3-redirect","text":"\u91cd\u5b9a\u5411 app/views.py 1 2 3 4 5 from django.shortcuts import redirect def index ( request ): return redirect ( 'http://www.baidu.com' )","title":"3. redirect"},{"location":"programming/python/Django/template/","text":"\u6a21\u677f\u5c42 \u00b6 \u4e00\u3001\u9759\u6001\u6587\u4ef6\u914d\u7f6e \u00b6 1.\u521b\u5efa\u9759\u6001\u6587\u4ef6\u76ee\u5f55 \u00b6 1 2 mkdir mysite/app/static # \u7f51\u7ad9\u4f7f\u7528\u7684\u9759\u6001\u6587\u4ef6(css,js,img)\u4e00\u822c\u90fd\u653e\u5728static\u76ee\u5f55\u4e0b 2. \u4fee\u6539\u914d\u7f6e\u6587\u4ef6 \u00b6 1 2 3 4 5 6 7 8 9 # \u5982\u679c\u60f3\u8bbf\u95ee\u9759\u6001\u6587\u4ef6\uff0c\u6a21\u677f\u6587\u4ef6\u4e2d\u7684\u9759\u6001\u6587\u4ef6\u8def\u5f84\u5c31\u5fc5\u987b\u4ee5static\u5f00\u5934\uff0c\u7136\u540e\u4eceSTATICFILES_DIRS\u4e2d\u7ed9\u7684\u8def\u5f84\u4ece\u4e0a\u5230\u4e0b\u4f9d\u6b21\u67e5\u627e\u6307\u5b9a\u7684\u9759\u6001\u6587\u4ef6 STATIC_URL = '/static/' # \u6dfb\u52a0\u4ee5\u4e0b\u5185\u5bb9 STATICFILES_DIRS = [ os . path . join ( BASE_DIR , 'static' ), os . path . join ( BASE_DIR , 'static1' ), os . path . join ( BASE_DIR , 'static2' ), ] 3. \u9759\u6001\u6587\u4ef6\u52a8\u6001\u89e3\u6790 \u00b6 template/index.html 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 <!DOCTYPE html> < html lang = \"en\" > < head > < meta charset = \"UTF-8\" > < title > \u767b\u5f55 </ title > {% load static %} <!--\u7c7b\u4f3c\u4e8e\u5bfc\u5165\u6a21\u5757\uff0c\u53ef\u4ee5\u52a8\u6001\u89e3\u6790\u914d\u7f6e\u6587\u4ef6\u4e2dSTATIC_URL\u7684\u503c--> < link rel = \"stylesheet\" href = \"{% static 'bootstrap-3.3.7-dist/css/bootstrap.min.css' %}\" > < script src = \"{% static 'bootstrap-3.3.7-dist/js/bootstrap.min.js' %}\" ></ script > </ head > < body > < h1 class = \"text-center\" > \u767b\u9646 </ h1 > < div class = \"container\" > < div class = \"row\" > < div class = \"col-md-8 col-md-offset-2\" > < form action = \"\" method = \"post\" > < p > username: < input type = \"text\" name = \"username\" class = \"form-control\" ></ p > < p > password: < input type = \"password\" name = \"password\" class = \"form-control\" ></ p > < input type = \"submit\" class = \"btn btn-success btn-block\" > </ form > </ div > </ div > </ div > </ body > </ html > \u4e8c\u3001\u6a21\u677f\u8bed\u6cd5 \u00b6 1. \u8bed\u6cd5 \u00b6 1 2 {{ }}: \u53d8\u91cf\u76f8\u5173 { % % }: \u903b\u8f91\u76f8\u5173 2. \u503c\u4f20\u9012 \u00b6 \u6a21\u7248\u8bed\u6cd5\u53ef\u4ee5\u4f20\u9012\u7684\u540e\u7aefpython\u6570\u636e\u7c7b\u578b \u89c6\u56fe\u51fd\u6570 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 from django.shortcuts import render def home ( request ): n = 18 f = 9.99 s = 'Hello World!' b = True l = [ '\u5218\u5907' , '\u5173\u7fbd' , '\u5f20\u98de' ] t = ( '\u5434' , '\u8700' , '\u9b4f' ) d = { 'username' : 'Tom' , 'age' : '17' } st = { 'a' , 'b' , 'c' } def foo (): return 'func:foo' class Bar : def func ( self ): return 'Bar-->func' @staticmethod def static_func (): return 'Bar-->static_func' @classmethod def class_func ( cls ): return 'Bar-->class_func' def __str__ ( self ): return 'Class Bar' obj = Bar () return render ( request , 'home.html' , locals ()) \u6a21\u677f 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 <!DOCTYPE html> < html lang = \"en\" > < head > < meta charset = \"UTF-8\" > < title > home </ title > </ head > < body > < p > {{ n }} </ p > < p > {{ f }} </ p > < p > {{ s }} </ p > < p > {{ b }} </ p > < p > {{ l }} </ p > < p > {{ d }} </ p > < p > {{ t }} </ p > < p > {{ st }} </ p > < p > {{ foo }} </ p > < p > {{ Bar }} </ p > < p > {{ obj }} </ p > < p > {{ obj.func }} </ p > < p > {{ obj.static_func }} </ p > < p > {{ obj.class_func }} </ p > </ body > </ html > \u4f20\u9012\u51fd\u6570\u540d\u4f1a\u81ea\u52a8\u52a0\u62ec\u53f7\u8c03\u7528\uff0c\u4f46\u662f\u6a21\u7248\u8bed\u6cd5\u4e0d\u652f\u6301\u7ed9\u51fd\u6570\u4f20\u989d\u5916\u7684\u53c2\u6570 \u4f20\u7c7b\u540d\u7684\u65f6\u5019\u4e5f\u4f1a\u81ea\u52a8\u52a0\u62ec\u53f7\u8c03\u7528(\u5b9e\u4f8b\u5316) \u5185\u90e8\u80fd\u591f\u81ea\u52a8\u5224\u65ad\u51fa\u5f53\u524d\u7684\u53d8\u91cf\u540d\u662f\u5426\u53ef\u4ee5\u52a0\u62ec\u53f7\u8c03\u7528\uff0c\u5982\u679c\u53ef\u4ee5\u5c31\u4f1a\u81ea\u52a8\u6267\u884c\uff08\u9488\u5bf9\u7684\u662f\u51fd\u6570\u540d\u548c\u7c7b\u540d\uff09 \u6e32\u67d3\u540e\u7684\u9875\u9762 3. \u53d6\u503c \u00b6 django\u6a21\u7248\u8bed\u6cd5\u7684\u53d6\u503c\u662f\u56fa\u5b9a\u7684\u683c\u5f0f\uff0c\u53ea\u80fd\u91c7\u7528\u53e5\u70b9\u7b26( . ) .\u952e \uff1a {{ d.username }} .\u7d22\u5f15 \uff1a {{ d.hobby.3.info }} 4. \u8fc7\u6ee4\u5668 \u00b6 \u8bed\u6cd5\uff1a {{\u6570\u636e|\u8fc7\u6ee4\u5668:\u53c2\u6570}} 4.1 \u5185\u7f6e\u8fc7\u6ee4\u5668 \u00b6 \u89c6\u56fe\u5c42 1 2 3 4 5 6 7 8 9 10 11 12 13 14 #filename: urls.py from django.shortcuts import render import datetime def home ( request ): n = 88 s = 'Hello World! I love you.' msg = \"\u4f60\u597d\u4e16\u754c\uff01\u6211\u7231\u4f60\u3002\" l = [ '\u5218\u5907' , '\u5173\u7fbd' , '\u5f20\u98de' ] file_size = 12321483 current_time = datetime . datetime . now () h = '<h2>hello</h2>' return render ( request , 'home.html' , locals ()) \u6a21\u677f\u5c42 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>home</title> </head> <body> <p>\u7edf\u8ba1\u957f\u5ea6: {{ s | length }} </p> <p>\u9ed8\u8ba4\u503c\uff08\u5982\u679cd\u7684\u5e03\u5c14\u503c\u662fTrue\u5c31\u5c55\u793ad,\u5426\u5219\u5c55\u793a\u5192\u53f7\u540e\u9762\u7684\u503c\uff09\uff1a {{ d | default :\"haha\" }} </p> <p>\u6587\u4ef6\u5927\u5c0f(\u628aKB\u8f6c\u6210\u53ef\u8bfb\u5927\u5c0f): {{ file_size | filesizeformat }} </p> <p>\u65e5\u671f\u683c\u5f0f\u5316: {{ current_time | date :'Y-m-d H:i:s' }} </p> <p>\u5207\u7247\u64cd\u4f5c(\u652f\u6301\u6b65\u957f): {{ l | slice :'0:2:2' }} </p> <p>\u5207\u53d6\u5b57\u7b26(\u5305\u542b\u4e09\u4e2a\u70b9): {{ s | truncatechars : 7 }} </p> <p>\u5207\u53d6\u5355\u8bcd(\u4e0d\u5305\u542b\u4e09\u4e2a\u70b9 \u6309\u7167\u7a7a\u683c\u5207): {{ s | truncatewords : 3 }} </p> <p>\u5207\u53d6\u5355\u8bcd(\u4e0d\u5305\u542b\u4e09\u4e2a\u70b9 \u6309\u7167\u7a7a\u683c\u5207): {{ msg | truncatewords : 3 }} </p> <p>\u79fb\u9664\u7279\u5b9a\u7684\u5b57\u7b26: {{ s | cut :' ' }} </p> <p>\u62fc\u63a5\u64cd\u4f5c: {{ l | join :'-' }} </p> <p>\u62fc\u63a5\u64cd\u4f5c(\u52a0\u6cd5): {{ n | add : 10 }} </p> <p>\u62fc\u63a5\u64cd\u4f5c(\u52a0\u6cd5): {{ s | add : msg }} </p> <p>\u8f6c\u4e49: {{ h | safe }} </p> </body> </html> \u6e32\u67d3\u7ed3\u679c \u540e\u7aef\u8f6c\u4e49 1 2 3 4 5 6 7 from django.shortcuts import render from django.utils.safestring import mark_safe def home ( request ): res = mark_safe ( '<h1>Hello</h1>' ) return render ( request , 'home.html' , locals ()) 1 2 3 4 5 6 7 8 9 10 <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>home</title> </head> <body> <p>\u540e\u7aef\u8f6c\u4e49: {{ res }} </p> </body> </html> 4.2 \u81ea\u5b9a\u4e49\u8fc7\u6ee4\u5668 \u00b6 \u6b65\u9aa4\uff1a \u5728\u5e94\u7528\u4e0b\u521b\u5efa\u4e00\u4e2a\u540d\u5b57\u201d\u5fc5\u987b\u201c\u53eb templatetags \u7684\u6587\u4ef6\u5939 \u5728\u8be5\u6587\u4ef6\u5939\u5185\u521b\u5efa\u201c\u4efb\u610f\u201d\u540d\u79f0\u7684 py \u6587\u4ef6eg: mytag.py \u5728\u8be5 py \u6587\u4ef6\u5185\"\u5fc5\u987b\"\u5148\u4e66\u5199\u4e0b\u9762\u4e24\u53e5\u8bdd(\u5355\u8bcd\u4e00\u4e2a\u90fd\u4e0d\u80fd\u9519) python from django import template register = template.Library() \u5b9a\u4e49\u8fc7\u6ee4\u5668 1 2 3 4 5 6 7 8 9 #filename: templatetags/mytag.py from django import template register = template . Library () @register.filter ( name = 'my_add' ) # name=\"\u8fc7\u6ee4\u5668\u7684\u540d\u79f0\" def my_sum ( v1 , v2 ): return v1 + v2 \u4f7f\u7528 1 2 {% load mytag %} <p> {{ n | my_add : 66 }} </p> 5. \u6807\u7b7e \u00b6 5.1 for \u00b6 1 2 3 {% for foo in l %} <p> {{ foo }} </p> {% endfor %} for\u5faa\u73af\u5185\u7f6e\u53d8\u91cf 1 2 3 {% for foo in l %} <p> {{ forloop }} </p> {% endfor %} 1 2 3 {'parentloop': {}, 'counter0': 0, 'counter': 1, 'revcounter': 3, 'revcounter0': 2, 'first': True, 'last': False} {'parentloop': {}, 'counter0': 1, 'counter': 2, 'revcounter': 2, 'revcounter0': 1, 'first': False, 'last': False} {'parentloop': {}, 'counter0': 2, 'counter': 3, 'revcounter': 1, 'revcounter0': 0, 'first': False, 'last': True} \u5904\u7406\u5b57\u5178 1 2 3 4 5 6 7 8 9 {% for foo in d.keys %} <p> {{ foo }} </p> {% endfor %} {% for foo in d.values %} <p> {{ foo }} </p> {% endfor %} {% for k , v in d.items %} <p> {{ k }} --> {{ v }} </p> {% endfor %} empty 1 2 3 4 5 {% for foo in ll %} <p> {{ forloop }} </p> {% empty %} <p>\u5faa\u73af\u5bf9\u8c61\u6ca1\u6709\u5185\u5bb9\uff0c\u5c31\u663e\u793a\u8fd9\u884c</p> {% endfor %} 5.2 if \u00b6 1 2 3 4 5 6 7 {% if n > 80 %} <p>\u771f\u68d2</p> {% elif n > 60 %} <p>\u8fd8\u884c</p> {% else %} <p>\u52aa\u529b\u5427\uff0c\u5c11\u5e74!</p> {% endif %} \u652f\u6301\u7684\u8fd0\u7b97\u7b26 1 2 3 in or and not == , != , < , > , <= , >= 5.3 with \u8d77\u522b\u540d \u00b6 \u5728with\u8bed\u6cd5\u5185\u5c31\u53ef\u4ee5\u901a\u8fc7as\u540e\u9762\u7684\u522b\u540d\u5feb\u901f\u7684\u4f7f\u7528\u5230\u524d\u9762\u975e\u5e38\u590d\u6742\u83b7\u53d6\u6570\u636e\u7684\u65b9\u5f0f 1 2 3 {% with l | length as count %} <p>\u5217\u8868\u957f\u5ea6: {{ count }} </p> {% endwith %} 5.4 \u81ea\u5b9a\u4e49\u6807\u7b7e \u00b6 \u81ea\u5b9a\u4e49\u6807\u7b7e\u7684\u53c2\u6570\u53ef\u4ee5\u6709\u591a\u4e2a 1 2 3 4 5 6 7 8 9 # filename: templatetags/mytag.py from django import template register = template . Library () @register.simple_tag ( name = 'my_plus' ) # name=\"\u6807\u7b7e\u7684\u540d\u79f0\" def plus_plus ( a , b , c , d ): return ' %s - %s - %s - %s ' % ( a , b , c , d ) \u4f7f\u7528 1 2 {% load mytag %} <p> {% my_plus 'my' 'age' 'is' 18 %} </p> 5.5 \u81ea\u5b9a\u4e49 inclusion_tag \u00b6 \u5f53html\u9875\u9762\u67d0\u4e00\u4e2a\u5730\u65b9\u7684\u9875\u9762\u9700\u8981\u4f20\u53c2\u6570\u624d\u80fd\u591f\u52a8\u6001\u7684\u6e32\u67d3\u51fa\u6765\uff0c\u5e76\u4e14\u5728\u591a\u4e2a\u9875\u9762\u4e0a\u90fd\u9700\u8981\u4f7f\u7528\u5230\u8be5\u5c40\u90e8 \u90a3\u4e48\u5c31\u8003\u8651\u5c06\u8be5\u5c40\u90e8\u9875\u9762\u505a\u6210 inclusion_tag \u5f62\u5f0f \u5185\u90e8\u539f\u7406\uff1a \u5148\u5b9a\u4e49\u4e00\u4e2a\u65b9\u6cd5 \u5728\u9875\u9762\u4e0a\u8c03\u7528\u8be5\u65b9\u6cd5\u5e76\u4e14\u53ef\u4ee5\u4f20\u503c \u8be5\u65b9\u6cd5\u4f1a\u751f\u6210\u4e00\u4e9b\u6570\u636e\u7136\u540e\u4f20\u9012\u7ed9\u4e00\u4e2ahtml\u9875\u9762 \u4e4b\u540e\u5c06\u6e32\u67d3\u597d\u7684\u7ed3\u679c\u653e\u5230\u8c03\u7528\u7684\u4f4d\u7f6e \u5b9a\u4e49inclusion_tag 1 2 3 4 5 6 7 8 9 from django import template register = template . Library () @register.inclusion_tag ( 'menu_list.html' ) # \u6570\u636e\u8fd4\u56de\u7ed9\u54ea\u4e2a\u9875\u9762\u53bb\u5904\u7406 def show ( n ): data = [ '\u7b2c{}\u9879' . format ( i ) for i in range ( n )] return locals () # \u5c06data\u4f20\u9012\u7ed9home.html show\u51fd\u6570\u5904\u7406\u7684\u7ed3\u679c\u5728 menu_list.html \u4e2d\u5904\u7406 1 2 3 {% for foo in data %} <li> {{ foo }} </li> {% endfor %} \u6e32\u67d3\u540e\u7684\u9875\u9762\u5728\u5176\u4ed6\u9875\u9762\u4e2d\u4f7f\u7528 1 2 3 4 5 6 7 8 9 10 11 <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>\u4e3b\u9875</title> </head> <body> {% load mytag %} {% show 5 %} </body> </html> \u8bbf\u95ee\u7ed3\u679c \u4e09\u3001\u6a21\u677f\u7ee7\u627f \u00b6 \u5f53\u7f51\u7ad9\u9875\u9762\u6574\u4f53\u90fd\u5dee\u4e0d\u591a\uff0c\u53ea\u662f\u67d0\u4e00\u4e9b\u5c40\u90e8\u5728\u505a\u53d8\u5316 \uff0c\u5c31\u53ef\u4ee5\u7528\u5230\u6a21\u677f\u7ee7\u627f\u3002 \u5148\u5b9a\u4e49\u4e00\u4e2a\u6a21\u677f\u9875\u9762\uff0c\u5728\u6a21\u7248\u9875\u9762\u4e0a\u63d0\u524d\u5212\u5b9a\u53ef\u4ee5\u88ab\u4fee\u6539\u7684\u533a\u57df \u5b50\u9875\u9762\u7ee7\u627f\u6a21\u677f\uff0c\u5728\u5212\u5b9a\u7684\u533a\u57df\u5b9a\u5236\u4fee\u6539\u5b50\u9875\u9762\u7684\u5185\u5bb9 \u4e00\u822c\u60c5\u51b5\u4e0b\u6a21\u7248\u9875\u9762\u4e0a\u5e94\u8be5\u81f3\u5c11\u6709\u4e09\u5757\u53ef\u4ee5\u88ab\u4fee\u6539\u7684\u533a\u57df\uff08css\uff0cjs\uff0chtml\uff09 1. \u6a21\u677f\u9875\u9762\u7684\u5b9a\u4e49 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Title</title> {% block css %} {% endblock %} </head> <body> {% block content %} <p>\u6a21\u677f\u9875\u9762\u5185\u5bb9</p> {% endblock %} {% block js %} {% endblock %} </body> </html> 2. \u5b50\u9875\u9762\u7ee7\u627f \u00b6 1 2 3 4 {% extends 'base.html' %} {% block content %} <p>\u5b50\u9875\u9762\u5185\u5bb9</p> {% endblock %} \u5b50\u9875\u9762\u4e2d\u7ee7\u7eed\u5f15\u7528\u6a21\u677f\u7684\u5185\u5bb9 1 2 3 4 5 6 {% extends 'base.html' %} {% block content %} \u5b50\u9875\u9762\u5185\u5bb9 {{ block .super }} \u5b50\u9875\u9762\u5185\u5bb9 {% endblock %} \u56db\u3001\u6a21\u677f\u5bfc\u5165 \u00b6 \u5c06\u9875\u9762\u7684\u67d0\u4e00\u4e2a\u5c40\u90e8\u5f53\u6210\u6a21\u5757\u7684\u5f62\u5f0f\uff0c\u54ea\u4e2a\u5730\u65b9\u9700\u8981\u5c31\u53ef\u4ee5\u76f4\u63a5\u5bfc\u5165\u4f7f\u7528\u5373\u53ef 1 {% include 'menu.html' %}","title":"\u6a21\u677f\u5c42"},{"location":"programming/python/Django/template/#_1","text":"","title":"\u6a21\u677f\u5c42"},{"location":"programming/python/Django/template/#_2","text":"","title":"\u4e00\u3001\u9759\u6001\u6587\u4ef6\u914d\u7f6e"},{"location":"programming/python/Django/template/#1","text":"1 2 mkdir mysite/app/static # \u7f51\u7ad9\u4f7f\u7528\u7684\u9759\u6001\u6587\u4ef6(css,js,img)\u4e00\u822c\u90fd\u653e\u5728static\u76ee\u5f55\u4e0b","title":"1.\u521b\u5efa\u9759\u6001\u6587\u4ef6\u76ee\u5f55"},{"location":"programming/python/Django/template/#2","text":"1 2 3 4 5 6 7 8 9 # \u5982\u679c\u60f3\u8bbf\u95ee\u9759\u6001\u6587\u4ef6\uff0c\u6a21\u677f\u6587\u4ef6\u4e2d\u7684\u9759\u6001\u6587\u4ef6\u8def\u5f84\u5c31\u5fc5\u987b\u4ee5static\u5f00\u5934\uff0c\u7136\u540e\u4eceSTATICFILES_DIRS\u4e2d\u7ed9\u7684\u8def\u5f84\u4ece\u4e0a\u5230\u4e0b\u4f9d\u6b21\u67e5\u627e\u6307\u5b9a\u7684\u9759\u6001\u6587\u4ef6 STATIC_URL = '/static/' # \u6dfb\u52a0\u4ee5\u4e0b\u5185\u5bb9 STATICFILES_DIRS = [ os . path . join ( BASE_DIR , 'static' ), os . path . join ( BASE_DIR , 'static1' ), os . path . join ( BASE_DIR , 'static2' ), ]","title":"2. \u4fee\u6539\u914d\u7f6e\u6587\u4ef6"},{"location":"programming/python/Django/template/#3","text":"template/index.html 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 <!DOCTYPE html> < html lang = \"en\" > < head > < meta charset = \"UTF-8\" > < title > \u767b\u5f55 </ title > {% load static %} <!--\u7c7b\u4f3c\u4e8e\u5bfc\u5165\u6a21\u5757\uff0c\u53ef\u4ee5\u52a8\u6001\u89e3\u6790\u914d\u7f6e\u6587\u4ef6\u4e2dSTATIC_URL\u7684\u503c--> < link rel = \"stylesheet\" href = \"{% static 'bootstrap-3.3.7-dist/css/bootstrap.min.css' %}\" > < script src = \"{% static 'bootstrap-3.3.7-dist/js/bootstrap.min.js' %}\" ></ script > </ head > < body > < h1 class = \"text-center\" > \u767b\u9646 </ h1 > < div class = \"container\" > < div class = \"row\" > < div class = \"col-md-8 col-md-offset-2\" > < form action = \"\" method = \"post\" > < p > username: < input type = \"text\" name = \"username\" class = \"form-control\" ></ p > < p > password: < input type = \"password\" name = \"password\" class = \"form-control\" ></ p > < input type = \"submit\" class = \"btn btn-success btn-block\" > </ form > </ div > </ div > </ div > </ body > </ html >","title":"3. \u9759\u6001\u6587\u4ef6\u52a8\u6001\u89e3\u6790"},{"location":"programming/python/Django/template/#_3","text":"","title":"\u4e8c\u3001\u6a21\u677f\u8bed\u6cd5"},{"location":"programming/python/Django/template/#1_1","text":"1 2 {{ }}: \u53d8\u91cf\u76f8\u5173 { % % }: \u903b\u8f91\u76f8\u5173","title":"1. \u8bed\u6cd5"},{"location":"programming/python/Django/template/#2_1","text":"\u6a21\u7248\u8bed\u6cd5\u53ef\u4ee5\u4f20\u9012\u7684\u540e\u7aefpython\u6570\u636e\u7c7b\u578b \u89c6\u56fe\u51fd\u6570 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 from django.shortcuts import render def home ( request ): n = 18 f = 9.99 s = 'Hello World!' b = True l = [ '\u5218\u5907' , '\u5173\u7fbd' , '\u5f20\u98de' ] t = ( '\u5434' , '\u8700' , '\u9b4f' ) d = { 'username' : 'Tom' , 'age' : '17' } st = { 'a' , 'b' , 'c' } def foo (): return 'func:foo' class Bar : def func ( self ): return 'Bar-->func' @staticmethod def static_func (): return 'Bar-->static_func' @classmethod def class_func ( cls ): return 'Bar-->class_func' def __str__ ( self ): return 'Class Bar' obj = Bar () return render ( request , 'home.html' , locals ()) \u6a21\u677f 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 <!DOCTYPE html> < html lang = \"en\" > < head > < meta charset = \"UTF-8\" > < title > home </ title > </ head > < body > < p > {{ n }} </ p > < p > {{ f }} </ p > < p > {{ s }} </ p > < p > {{ b }} </ p > < p > {{ l }} </ p > < p > {{ d }} </ p > < p > {{ t }} </ p > < p > {{ st }} </ p > < p > {{ foo }} </ p > < p > {{ Bar }} </ p > < p > {{ obj }} </ p > < p > {{ obj.func }} </ p > < p > {{ obj.static_func }} </ p > < p > {{ obj.class_func }} </ p > </ body > </ html > \u4f20\u9012\u51fd\u6570\u540d\u4f1a\u81ea\u52a8\u52a0\u62ec\u53f7\u8c03\u7528\uff0c\u4f46\u662f\u6a21\u7248\u8bed\u6cd5\u4e0d\u652f\u6301\u7ed9\u51fd\u6570\u4f20\u989d\u5916\u7684\u53c2\u6570 \u4f20\u7c7b\u540d\u7684\u65f6\u5019\u4e5f\u4f1a\u81ea\u52a8\u52a0\u62ec\u53f7\u8c03\u7528(\u5b9e\u4f8b\u5316) \u5185\u90e8\u80fd\u591f\u81ea\u52a8\u5224\u65ad\u51fa\u5f53\u524d\u7684\u53d8\u91cf\u540d\u662f\u5426\u53ef\u4ee5\u52a0\u62ec\u53f7\u8c03\u7528\uff0c\u5982\u679c\u53ef\u4ee5\u5c31\u4f1a\u81ea\u52a8\u6267\u884c\uff08\u9488\u5bf9\u7684\u662f\u51fd\u6570\u540d\u548c\u7c7b\u540d\uff09 \u6e32\u67d3\u540e\u7684\u9875\u9762","title":"2. \u503c\u4f20\u9012"},{"location":"programming/python/Django/template/#3_1","text":"django\u6a21\u7248\u8bed\u6cd5\u7684\u53d6\u503c\u662f\u56fa\u5b9a\u7684\u683c\u5f0f\uff0c\u53ea\u80fd\u91c7\u7528\u53e5\u70b9\u7b26( . ) .\u952e \uff1a {{ d.username }} .\u7d22\u5f15 \uff1a {{ d.hobby.3.info }}","title":"3. \u53d6\u503c"},{"location":"programming/python/Django/template/#4","text":"\u8bed\u6cd5\uff1a {{\u6570\u636e|\u8fc7\u6ee4\u5668:\u53c2\u6570}}","title":"4. \u8fc7\u6ee4\u5668"},{"location":"programming/python/Django/template/#41","text":"\u89c6\u56fe\u5c42 1 2 3 4 5 6 7 8 9 10 11 12 13 14 #filename: urls.py from django.shortcuts import render import datetime def home ( request ): n = 88 s = 'Hello World! I love you.' msg = \"\u4f60\u597d\u4e16\u754c\uff01\u6211\u7231\u4f60\u3002\" l = [ '\u5218\u5907' , '\u5173\u7fbd' , '\u5f20\u98de' ] file_size = 12321483 current_time = datetime . datetime . now () h = '<h2>hello</h2>' return render ( request , 'home.html' , locals ()) \u6a21\u677f\u5c42 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>home</title> </head> <body> <p>\u7edf\u8ba1\u957f\u5ea6: {{ s | length }} </p> <p>\u9ed8\u8ba4\u503c\uff08\u5982\u679cd\u7684\u5e03\u5c14\u503c\u662fTrue\u5c31\u5c55\u793ad,\u5426\u5219\u5c55\u793a\u5192\u53f7\u540e\u9762\u7684\u503c\uff09\uff1a {{ d | default :\"haha\" }} </p> <p>\u6587\u4ef6\u5927\u5c0f(\u628aKB\u8f6c\u6210\u53ef\u8bfb\u5927\u5c0f): {{ file_size | filesizeformat }} </p> <p>\u65e5\u671f\u683c\u5f0f\u5316: {{ current_time | date :'Y-m-d H:i:s' }} </p> <p>\u5207\u7247\u64cd\u4f5c(\u652f\u6301\u6b65\u957f): {{ l | slice :'0:2:2' }} </p> <p>\u5207\u53d6\u5b57\u7b26(\u5305\u542b\u4e09\u4e2a\u70b9): {{ s | truncatechars : 7 }} </p> <p>\u5207\u53d6\u5355\u8bcd(\u4e0d\u5305\u542b\u4e09\u4e2a\u70b9 \u6309\u7167\u7a7a\u683c\u5207): {{ s | truncatewords : 3 }} </p> <p>\u5207\u53d6\u5355\u8bcd(\u4e0d\u5305\u542b\u4e09\u4e2a\u70b9 \u6309\u7167\u7a7a\u683c\u5207): {{ msg | truncatewords : 3 }} </p> <p>\u79fb\u9664\u7279\u5b9a\u7684\u5b57\u7b26: {{ s | cut :' ' }} </p> <p>\u62fc\u63a5\u64cd\u4f5c: {{ l | join :'-' }} </p> <p>\u62fc\u63a5\u64cd\u4f5c(\u52a0\u6cd5): {{ n | add : 10 }} </p> <p>\u62fc\u63a5\u64cd\u4f5c(\u52a0\u6cd5): {{ s | add : msg }} </p> <p>\u8f6c\u4e49: {{ h | safe }} </p> </body> </html> \u6e32\u67d3\u7ed3\u679c \u540e\u7aef\u8f6c\u4e49 1 2 3 4 5 6 7 from django.shortcuts import render from django.utils.safestring import mark_safe def home ( request ): res = mark_safe ( '<h1>Hello</h1>' ) return render ( request , 'home.html' , locals ()) 1 2 3 4 5 6 7 8 9 10 <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>home</title> </head> <body> <p>\u540e\u7aef\u8f6c\u4e49: {{ res }} </p> </body> </html>","title":"4.1 \u5185\u7f6e\u8fc7\u6ee4\u5668"},{"location":"programming/python/Django/template/#42","text":"\u6b65\u9aa4\uff1a \u5728\u5e94\u7528\u4e0b\u521b\u5efa\u4e00\u4e2a\u540d\u5b57\u201d\u5fc5\u987b\u201c\u53eb templatetags \u7684\u6587\u4ef6\u5939 \u5728\u8be5\u6587\u4ef6\u5939\u5185\u521b\u5efa\u201c\u4efb\u610f\u201d\u540d\u79f0\u7684 py \u6587\u4ef6eg: mytag.py \u5728\u8be5 py \u6587\u4ef6\u5185\"\u5fc5\u987b\"\u5148\u4e66\u5199\u4e0b\u9762\u4e24\u53e5\u8bdd(\u5355\u8bcd\u4e00\u4e2a\u90fd\u4e0d\u80fd\u9519) python from django import template register = template.Library() \u5b9a\u4e49\u8fc7\u6ee4\u5668 1 2 3 4 5 6 7 8 9 #filename: templatetags/mytag.py from django import template register = template . Library () @register.filter ( name = 'my_add' ) # name=\"\u8fc7\u6ee4\u5668\u7684\u540d\u79f0\" def my_sum ( v1 , v2 ): return v1 + v2 \u4f7f\u7528 1 2 {% load mytag %} <p> {{ n | my_add : 66 }} </p>","title":"4.2 \u81ea\u5b9a\u4e49\u8fc7\u6ee4\u5668"},{"location":"programming/python/Django/template/#5","text":"","title":"5. \u6807\u7b7e"},{"location":"programming/python/Django/template/#51-for","text":"1 2 3 {% for foo in l %} <p> {{ foo }} </p> {% endfor %} for\u5faa\u73af\u5185\u7f6e\u53d8\u91cf 1 2 3 {% for foo in l %} <p> {{ forloop }} </p> {% endfor %} 1 2 3 {'parentloop': {}, 'counter0': 0, 'counter': 1, 'revcounter': 3, 'revcounter0': 2, 'first': True, 'last': False} {'parentloop': {}, 'counter0': 1, 'counter': 2, 'revcounter': 2, 'revcounter0': 1, 'first': False, 'last': False} {'parentloop': {}, 'counter0': 2, 'counter': 3, 'revcounter': 1, 'revcounter0': 0, 'first': False, 'last': True} \u5904\u7406\u5b57\u5178 1 2 3 4 5 6 7 8 9 {% for foo in d.keys %} <p> {{ foo }} </p> {% endfor %} {% for foo in d.values %} <p> {{ foo }} </p> {% endfor %} {% for k , v in d.items %} <p> {{ k }} --> {{ v }} </p> {% endfor %} empty 1 2 3 4 5 {% for foo in ll %} <p> {{ forloop }} </p> {% empty %} <p>\u5faa\u73af\u5bf9\u8c61\u6ca1\u6709\u5185\u5bb9\uff0c\u5c31\u663e\u793a\u8fd9\u884c</p> {% endfor %}","title":"5.1 for"},{"location":"programming/python/Django/template/#52-if","text":"1 2 3 4 5 6 7 {% if n > 80 %} <p>\u771f\u68d2</p> {% elif n > 60 %} <p>\u8fd8\u884c</p> {% else %} <p>\u52aa\u529b\u5427\uff0c\u5c11\u5e74!</p> {% endif %} \u652f\u6301\u7684\u8fd0\u7b97\u7b26 1 2 3 in or and not == , != , < , > , <= , >=","title":"5.2 if"},{"location":"programming/python/Django/template/#53-with","text":"\u5728with\u8bed\u6cd5\u5185\u5c31\u53ef\u4ee5\u901a\u8fc7as\u540e\u9762\u7684\u522b\u540d\u5feb\u901f\u7684\u4f7f\u7528\u5230\u524d\u9762\u975e\u5e38\u590d\u6742\u83b7\u53d6\u6570\u636e\u7684\u65b9\u5f0f 1 2 3 {% with l | length as count %} <p>\u5217\u8868\u957f\u5ea6: {{ count }} </p> {% endwith %}","title":"5.3 with\u8d77\u522b\u540d"},{"location":"programming/python/Django/template/#54","text":"\u81ea\u5b9a\u4e49\u6807\u7b7e\u7684\u53c2\u6570\u53ef\u4ee5\u6709\u591a\u4e2a 1 2 3 4 5 6 7 8 9 # filename: templatetags/mytag.py from django import template register = template . Library () @register.simple_tag ( name = 'my_plus' ) # name=\"\u6807\u7b7e\u7684\u540d\u79f0\" def plus_plus ( a , b , c , d ): return ' %s - %s - %s - %s ' % ( a , b , c , d ) \u4f7f\u7528 1 2 {% load mytag %} <p> {% my_plus 'my' 'age' 'is' 18 %} </p>","title":"5.4 \u81ea\u5b9a\u4e49\u6807\u7b7e"},{"location":"programming/python/Django/template/#55-inclusion_tag","text":"\u5f53html\u9875\u9762\u67d0\u4e00\u4e2a\u5730\u65b9\u7684\u9875\u9762\u9700\u8981\u4f20\u53c2\u6570\u624d\u80fd\u591f\u52a8\u6001\u7684\u6e32\u67d3\u51fa\u6765\uff0c\u5e76\u4e14\u5728\u591a\u4e2a\u9875\u9762\u4e0a\u90fd\u9700\u8981\u4f7f\u7528\u5230\u8be5\u5c40\u90e8 \u90a3\u4e48\u5c31\u8003\u8651\u5c06\u8be5\u5c40\u90e8\u9875\u9762\u505a\u6210 inclusion_tag \u5f62\u5f0f \u5185\u90e8\u539f\u7406\uff1a \u5148\u5b9a\u4e49\u4e00\u4e2a\u65b9\u6cd5 \u5728\u9875\u9762\u4e0a\u8c03\u7528\u8be5\u65b9\u6cd5\u5e76\u4e14\u53ef\u4ee5\u4f20\u503c \u8be5\u65b9\u6cd5\u4f1a\u751f\u6210\u4e00\u4e9b\u6570\u636e\u7136\u540e\u4f20\u9012\u7ed9\u4e00\u4e2ahtml\u9875\u9762 \u4e4b\u540e\u5c06\u6e32\u67d3\u597d\u7684\u7ed3\u679c\u653e\u5230\u8c03\u7528\u7684\u4f4d\u7f6e \u5b9a\u4e49inclusion_tag 1 2 3 4 5 6 7 8 9 from django import template register = template . Library () @register.inclusion_tag ( 'menu_list.html' ) # \u6570\u636e\u8fd4\u56de\u7ed9\u54ea\u4e2a\u9875\u9762\u53bb\u5904\u7406 def show ( n ): data = [ '\u7b2c{}\u9879' . format ( i ) for i in range ( n )] return locals () # \u5c06data\u4f20\u9012\u7ed9home.html show\u51fd\u6570\u5904\u7406\u7684\u7ed3\u679c\u5728 menu_list.html \u4e2d\u5904\u7406 1 2 3 {% for foo in data %} <li> {{ foo }} </li> {% endfor %} \u6e32\u67d3\u540e\u7684\u9875\u9762\u5728\u5176\u4ed6\u9875\u9762\u4e2d\u4f7f\u7528 1 2 3 4 5 6 7 8 9 10 11 <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>\u4e3b\u9875</title> </head> <body> {% load mytag %} {% show 5 %} </body> </html> \u8bbf\u95ee\u7ed3\u679c","title":"5.5 \u81ea\u5b9a\u4e49inclusion_tag"},{"location":"programming/python/Django/template/#_4","text":"\u5f53\u7f51\u7ad9\u9875\u9762\u6574\u4f53\u90fd\u5dee\u4e0d\u591a\uff0c\u53ea\u662f\u67d0\u4e00\u4e9b\u5c40\u90e8\u5728\u505a\u53d8\u5316 \uff0c\u5c31\u53ef\u4ee5\u7528\u5230\u6a21\u677f\u7ee7\u627f\u3002 \u5148\u5b9a\u4e49\u4e00\u4e2a\u6a21\u677f\u9875\u9762\uff0c\u5728\u6a21\u7248\u9875\u9762\u4e0a\u63d0\u524d\u5212\u5b9a\u53ef\u4ee5\u88ab\u4fee\u6539\u7684\u533a\u57df \u5b50\u9875\u9762\u7ee7\u627f\u6a21\u677f\uff0c\u5728\u5212\u5b9a\u7684\u533a\u57df\u5b9a\u5236\u4fee\u6539\u5b50\u9875\u9762\u7684\u5185\u5bb9 \u4e00\u822c\u60c5\u51b5\u4e0b\u6a21\u7248\u9875\u9762\u4e0a\u5e94\u8be5\u81f3\u5c11\u6709\u4e09\u5757\u53ef\u4ee5\u88ab\u4fee\u6539\u7684\u533a\u57df\uff08css\uff0cjs\uff0chtml\uff09","title":"\u4e09\u3001\u6a21\u677f\u7ee7\u627f"},{"location":"programming/python/Django/template/#1_2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Title</title> {% block css %} {% endblock %} </head> <body> {% block content %} <p>\u6a21\u677f\u9875\u9762\u5185\u5bb9</p> {% endblock %} {% block js %} {% endblock %} </body> </html>","title":"1. \u6a21\u677f\u9875\u9762\u7684\u5b9a\u4e49"},{"location":"programming/python/Django/template/#2_2","text":"1 2 3 4 {% extends 'base.html' %} {% block content %} <p>\u5b50\u9875\u9762\u5185\u5bb9</p> {% endblock %} \u5b50\u9875\u9762\u4e2d\u7ee7\u7eed\u5f15\u7528\u6a21\u677f\u7684\u5185\u5bb9 1 2 3 4 5 6 {% extends 'base.html' %} {% block content %} \u5b50\u9875\u9762\u5185\u5bb9 {{ block .super }} \u5b50\u9875\u9762\u5185\u5bb9 {% endblock %}","title":"2. \u5b50\u9875\u9762\u7ee7\u627f"},{"location":"programming/python/Django/template/#_5","text":"\u5c06\u9875\u9762\u7684\u67d0\u4e00\u4e2a\u5c40\u90e8\u5f53\u6210\u6a21\u5757\u7684\u5f62\u5f0f\uff0c\u54ea\u4e2a\u5730\u65b9\u9700\u8981\u5c31\u53ef\u4ee5\u76f4\u63a5\u5bfc\u5165\u4f7f\u7528\u5373\u53ef 1 {% include 'menu.html' %}","title":"\u56db\u3001\u6a21\u677f\u5bfc\u5165"},{"location":"programming/python/Django/urls/","text":"\u8def\u7531\u5c42 \u00b6 \u4e00\u3001\u8def\u7531\u5339\u914d \u00b6 1. \u5728mysite/mysite/urls.py\u4e2d\u4e66\u5199\u8def\u7531 \u00b6 1 2 3 4 5 6 7 8 9 from django.conf.urls import url from django.contrib import admin from app import views urlpatterns = [ url ( r '^admin/' , admin . site . urls ), url ( r '^login/' , views . login ), url ( r '^$' , views . index ), ] url() \u65b9\u6cd5\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u53ea\u8981\u7b2c\u4e00\u4e2a\u53c2\u6570\u6b63\u5219\u8868\u8fbe\u5f0f\u80fd\u591f\u5339\u914d\u5230\u5185\u5bb9 \u90a3\u4e48\u5c31\u4f1a\u7acb\u523b\u505c\u6b62\u5f80\u4e0b\u5339\u914d\uff0c\u76f4\u63a5\u6267\u884c\u5bf9\u5e94\u7684\u89c6\u56fe\u51fd\u6570\u3002 \u5728\u6d4f\u89c8\u5668\u8f93\u5165http://127.0.0.1:8000/login\u65f6\uff0cDjango\u4f1a\u505a\u4e00\u6b21301\u91cd\u5b9a\u5411\uff08\u81ea\u52a8\u5728URL\u540e\u9762\u52a0 / \uff0c\u91cd\u65b0\u8bf7\u6c42\u4e00\u6b21\uff09\u3002 \u53ef\u4ee5\u518d\u914d\u7f6e\u6587\u4ef6\u4e2d\u6dfb\u52a0 APPEND_SLASH = False \u6765\u53d6\u6d88\u81ea\u52a8\u52a0 / \u91cd\u5b9a\u5411 \u4e8c. \u5206\u7ec4 \u00b6 \u5206\u7ec4\uff1a\u5c06\u67d0\u4e00\u6bb5\u6b63\u5219\u8868\u8fbe\u5f0f\u7528\u5c0f\u62ec\u53f7\u6269\u8d77\u6765 1. \u65e0\u540d\u5206\u7ec4 \u00b6 \u65e0\u540d\u5206\u7ec4 \u5c31\u662f\u5c06\u62ec\u53f7\u5185\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d\u5230\u7684\u5185\u5bb9\u5f53\u4f5c \u4f4d\u7f6e \u53c2\u6570\u4f20\u9012\u7ed9\u540e\u9762\u7684\u89c6\u56fe\u51fd\u6570\u3002 1 2 3 4 5 6 7 8 from django.conf.urls import url from django.contrib import admin from app import views urlpatterns = [ url ( r '^admin/' , admin . site . urls ), url ( r '^article/(\\d{4})' , views . article ), # \u65e0\u540d\u5206\u7ec4 ] \u89c6\u56fe\u51fd\u6570\u4e2d\u5f62\u53c2\u7684\u540d\u5b57\u53ef\u4ee5\u662f\u4efb\u610f\u7684\u5b57\u7b26\u4e32 1 2 3 4 5 6 # filename: views.py from django.shortcuts import HttpResponse # \u5f62\u53c2\u7684\u540d\u5b57\u53ef\u4ee5\u662f\u4efb\u610f\u7684\u5b57\u7b26\u4e32 def article ( request , arg ): return HttpResponse ( \" %s \u5e74\u7684\u6587\u7ae0\" % arg ) 2. \u6709\u540d\u5206\u7ec4 \u00b6 \u6709\u540d\u5206\u7ec4 \u5c31\u662f\u5c06\u62ec\u53f7\u5185\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d\u5230\u7684\u5185\u5bb9\u5f53\u4f5c \u5173\u952e\u5b57\u53c2\u6570 \u4f20\u9012\u7ed9\u540e\u9762\u7684\u89c6\u56fe\u51fd\u6570\u3002 1 2 3 4 5 6 7 8 9 # filename: urls.py from django.conf.urls import url from django.contrib import admin from app import views urlpatterns = [ url ( r '^admin/' , admin . site . urls ), url ( r '^article/(?P<year>\\d{4})' , views . article ) # \u6b63\u5219\u8868\u8fbe\u5f0f\u8d77\u4e00\u4e2a\u522b\u540d ] \u89c6\u56fe\u51fd\u6570\u4e2d\u5f62\u53c2\u7684\u540d\u5b57\u5fc5\u987b\u662f\u8def\u7531\u4e2d\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u522b\u540d 1 2 3 4 5 6 # filename: views.py from django.shortcuts import HttpResponse # \u5f62\u53c2\u7684\u540d\u5b57\u662f\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u522b\u540d def article ( request , year ): return HttpResponse ( \" %s \u5e74\u7684\u6587\u7ae0\" % year ) \u65e0\u540d\u5206\u7ec4\u548c\u6709\u540d\u5206\u7ec4\u4e0d\u53ef\u4ee5\u6df7\u5408\u4f7f\u7528\uff0c\u4f46\u662f\u540c\u4e00\u4e2a\u5206\u7ec4\u53ef\u4ee5\u91cd\u590d\u4f7f\u7528\u591a\u6b21 1 2 3 4 5 urlpatterns = [ ... url ( r '^article/([0-9]{4})/([0-9]{2})/([0-9]+)/$' , views . article ), url ( r '^article/(?P<year>[0-9]{4})/(?P<month>[0-9]{2})/(?P<day>[0-9]{2})/$' , views . article ), ] \u4e09\u3001\u53cd\u5411\u89e3\u6790 \u00b6 1. \u666e\u901a\u89e3\u6790 \u00b6 \u901a\u8fc7\u4e00\u4e9b\u65b9\u6cd5\u5f97\u5230\u4e00\u4e2a\u7ed3\u679c \u8be5\u7ed3\u679c\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\u5bf9\u5e94\u7684url\u89e6\u53d1\u89c6\u56fe\u51fd\u6570 \u7b2c\u4e00\u6b65\uff1a\u7ed9\u8def\u7531\u4e0e\u89c6\u56fe\u51fd\u6570\u8d77\u522b\u540d 1 2 3 4 5 6 7 8 9 10 11 # filename: urls.py from django.conf.urls import url from django.contrib import admin from app import views urlpatterns = [ url ( r '^admin/' , admin . site . urls ), url ( r '^login/' , views . login ), # \u7ed9\u8def\u7531\u548c\u89c6\u56fe\u51fd\u6570\u8d77\u4e00\u4e2a\u522b\u540d url ( r 'register/' , views . reg_func , name = \"reg\" ) ] \u7b2c\u4e8c\u6b65\uff1a\u540e\u7aef\u53cd\u5411\u89e3\u6790 1 2 3 4 5 6 7 8 9 10 11 #filename: views.py from django.shortcuts import render , reverse def login ( request ): return render ( request , 'login.html' ) def reg_func ( request ): print ( reverse ( 'reg' )) # /register/ return render ( request , 'register.html' ) \u7b2c\u4e09\u6b65\uff1a\u524d\u7aef\u53cd\u5411\u89e3\u6790 1 2 3 4 5 6 7 8 9 10 11 12 13 14 <!DOCTYPE html> < html lang = \"en\" > < head > < meta charset = \"UTF-8\" > < title > \u767b\u5f55 </ title > </ head > < body > < ul > < li >< a href = \"#\" > \u767b\u5f55 </ a ></ li > <!--\u8df3\u8f6c\u5230http://127.0.0.1:8000/register/--> < li >< a href = \"{% url 'reg' %}\" > \u6ce8\u518c </ a ></ li > </ ul > </ body > </ html > 2. \u65e0\u540d\u6709\u540d\u5206\u7ec4\u53cd\u5411\u89e3\u6790 \u00b6 2.1 \u65e0\u540d\u5206\u7ec4\u53cd\u5411\u89e3\u6790 \u00b6 \u7b2c\u4e00\u6b65\uff1a\u8def\u7531 1 2 3 4 5 6 7 8 9 10 # filename: urls.py from django.conf.urls import url from django.contrib import admin from app import views urlpatterns = [ url ( r '^admin/' , admin . site . urls ), url ( r 'home/' , views . home ), url ( r 'article/(\\d{4})/' , views . article , name = 'new_article' ) ] \u7b2c\u4e8c\u6b65\uff1a\u540e\u7aef\u53cd\u5411\u89e3\u6790 1 2 3 4 5 6 7 8 9 10 11 12 # filename: view.py from django.shortcuts import render , HttpResponse , reverse def home ( request ): return render ( request , 'home.html' ) def article ( request , arg ): year = arg url = reverse ( 'new_article' , args = ( arg ,)) # \u89e3\u91ca\u7684\u65f6\u5019\u9700\u8981\u52a0\u4e00\u4e2a\u53c2\u6570 return HttpResponse ( 'url\u7684\u503c\u662f %s ,arg\u7684\u662f\u503c\u662f %s ' % ( url , year )) \u7b2c\u4e09\u6b65\uff1a\u524d\u7aef\u53cd\u5411\u89e3\u6790 1 2 3 4 5 6 7 8 9 10 11 12 13 14 <!--filename:home.html--> <!DOCTYPE html> < html lang = \"en\" > < head > < meta charset = \"UTF-8\" > < title > home </ title > </ head > < body > < ul > < li >< a href = \"{% url 'new_article' 2020 %}\" > 2020 </ a ></ li > < li >< a href = \"{% url 'new_article' 2021 %}\" > 2021 </ a ></ li > </ ul > </ body > </ html > 2.2 \u6709\u540d\u5206\u7ec4\u53cd\u5411\u89e3\u6790 \u00b6 \u7b2c\u4e00\u6b65\uff1a\u8def\u7531 1 2 3 4 5 6 7 8 9 10 # filename: urls.py from django.conf.urls import url from django.contrib import admin from app import views urlpatterns = [ url ( r '^admin/' , admin . site . urls ), url ( r 'home/' , views . home ), url ( r 'article/(?P<year>\\d{4})/' , views . article , name = 'new_article' ) ] \u7b2c\u4e8c\u6b65\uff1a\u540e\u7aef\u89e3\u6790 1 2 3 4 5 6 7 8 9 10 11 12 # filename: views.py from django.shortcuts import render , HttpResponse , reverse def home ( request ): return render ( request , 'home.html' ) def article ( request , year ): print ( reverse ( 'new_article' , kwargs = { 'year' : year })) # \u53e6\u4e00\u79cd\u5199\u6cd5 url = reverse ( 'new_article' , args = ( year ,)) return HttpResponse ( 'url\u7684\u503c\u662f %s ,arg\u7684\u662f\u503c\u662f %s ' % ( url , year )) \u7b2c\u4e09\u6b65\uff1a\u524d\u7aef\u89e3\u6790 1 2 3 4 5 6 7 8 9 10 11 12 13 <!DOCTYPE html> < html lang = \"en\" > < head > < meta charset = \"UTF-8\" > < title > home </ title > </ head > < body > < ul > < li >< a href = \"{% url 'new_article' year=2020 %}\" > 2020 </ a ></ li > <!--\u53e6\u4e00\u79cd\u5199\u6cd5\uff0c\u4e0d\u91cd\u8981--> < li >< a href = \"{% url 'new_article' 2021 %}\" > 2021 </ a ></ li > </ ul > </ body > </ html > \u56db\u3001\u8def\u7531\u5206\u53d1 \u00b6 django\u7684\u6bcf\u4e00\u4e2a\u5e94\u7528\u90fd\u53ef\u4ee5\u6709\u81ea\u5df1\u7684templates\u76ee\u5f55\u3001urls.py\u3001static\u76ee\u5f55\uff0c\u57fa\u4e8e\u4e0a\u8ff0\u7684\u7279\u70b9\uff0cdjango\u80fd\u591f\u975e\u5e38\u597d\u7684\u505a\u5230\u6309\u6a21\u5757\u5f00\u53d1\uff0c\u6bcf\u4e00\u4e2a\u529f\u80fd\u6a21\u5757\u5bf9\u5e94\u4e00\u4e2aapp\uff0c\u6700\u540e\u5728\u914d\u7f6e\u6587\u4ef6\u91cc\u9762\u6ce8\u518c\u6240\u6709\u7684app\u518d\u5229\u7528\u8def\u7531\u5206\u53d1\u7684\u7279\u70b9\u5c06\u6240\u6709\u7684app\u6574\u5408\u6210\u4e00\u4e2a\u5b8c\u6574\u7684\u9879\u76ee\u3002 \u5f53\u4e00\u4e2adjango\u9879\u76ee\u4e2d\u7684url\u7279\u522b\u591a\u7684\u65f6\u5019\uff0c\u603b\u8def\u7531urls.py\u4ee3\u7801\u975e\u5e38\u5197\u4f59\u4e0d\u597d\u7ef4\u62a4\uff0c\u8fd9\u4e2a\u65f6\u5019\u4e5f\u53ef\u4ee5\u5229\u7528\u8def\u7531\u5206\u53d1\u6765\u51cf\u8f7b\u603b\u8def\u7531\u7684\u538b\u529b\u3002 \u5229\u7528\u8def\u7531\u5206\u53d1\u4e4b\u540e\uff0c\u603b\u8def\u7531\u4e0d\u518d\u5904\u7406\u8def\u7531\u4e0e\u89c6\u56fe\u51fd\u6570\u7684\u76f4\u63a5\u5bf9\u5e94\u5173\u7cfb\uff0c\u800c\u662f\u505a\u4e00\u4e2a\u5206\u53d1\u5904\u7406\uff0c \u8bc6\u522b\u5f53\u524durl\u662f\u5c5e\u4e8e\u54ea\u4e2a\u5e94\u7528\u4e0b\uff0c\u7136\u540e\u76f4\u63a5\u5206\u53d1\u7ed9\u5bf9\u5e94\u7684\u5e94\u7528\u53bb\u5904\u7406\u3002 1. \u603b\u8def\u7531\u914d\u7f6e \u00b6 1.1 \u65b9\u5f0f\u4e00 \u00b6 1 2 3 4 5 6 7 8 9 10 from django.conf.urls import url , include from django.contrib import admin from app01 import urls as app01_urls from app02 import urls as app02_urls urlpatterns = [ url ( r '^admin/' , admin . site . urls ), url ( r '^app01/' , include ( app01_urls )), url ( r '^app02/' , include ( app02_urls )), ] 1.2 \u65b9\u5f0f\u4e8c\uff08\u63a8\u8350\u5199\u6cd5\uff09 \u00b6 1 2 3 4 5 6 7 8 9 from django.conf.urls import url , include from django.contrib import admin urlpatterns = [ url ( r '^admin/' , admin . site . urls ), url ( r '^app01/' , include ( 'app01.urls' )), url ( r '^app02/' , include ( 'app02.urls' )), ] # \u6ce8\u610f\u4e8b\u9879:\u603b\u8def\u7531\u91cc\u9762\u7684url\u5343\u4e07\u4e0d\u80fd\u52a0$\u7ed3\u5c3e 2. \u5b50\u8def\u7531\u914d\u7f6e \u00b6 app01/urls.py 1 2 3 4 5 6 from django.conf.urls import url from app01 import views urlpatterns = [ url ( r '^index/' , views . index ) ] app02/urls.py 1 2 3 4 5 6 from django.conf.urls import url from app02 import views urlpatterns = [ url ( r '^index/' , views . index ) ] \u4e94\u3001\u540d\u79f0\u7a7a\u95f4 \u00b6 \u5f53\u591a\u4e2a\u5e94\u7528\u51fa\u73b0\u4e86\u76f8\u540c\u7684\u522b\u540d\uff0c\u6b63\u5e38\u60c5\u51b5\u4e0b\u7684\u53cd\u5411\u89e3\u6790\u662f\u6ca1\u6709\u529e\u6cd5\u81ea\u52a8\u8bc6\u522b\u524d\u7f00\u7684\u3002 1. \u603b\u8def\u7531 \u00b6 1 2 3 4 5 6 7 8 9 # filename: urls.py from django.conf.urls import url , include from django.contrib import admin urlpatterns = [ url ( r '^admin/' , admin . site . urls ), url ( r '^app01/' , include ( 'app01.urls' , namespace = 'app01' )), url ( r '^app02/' , include ( 'app02.urls' , namespace = 'app02' )), ] 2. \u5b50\u8def\u7531 \u00b6 app01/urls.py 1 2 3 4 5 6 from django.conf.urls import url from app01 import views urlpatterns = [ url ( r '^index/' , views . index , name = 'index' ) ] app02/urls.py 1 2 3 4 5 6 from django.conf.urls import url from app02 import views urlpatterns = [ url ( r '^index/' , views . index , name = 'index' ) ] 3. \u6a21\u677f\u5c42 \u00b6 1 2 {% url 'app01:index' %} {% url 'app02:index' %} \u5176\u5b9e\u53ea\u8981\u4fdd\u8bc1\u540d\u5b57\u4e0d\u51b2\u7a81\u5c31\u6ca1\u6709\u5fc5\u8981\u4f7f\u7528\u540d\u79f0\u7a7a\u95f4\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\u6709\u591a\u4e2aapp\u7684\u65f6\u5019\u65f6\uff0c\u5728\u8d77\u522b\u540d\u7684\u65f6\u5019\u52a0app\u7684\u524d\u7f00\u5c31\u80fd\u591f\u786e\u4fdd\u591a\u4e2aapp\u4e4b\u95f4\u540d\u5b57\u4e0d\u51b2\u7a81\u3002 1 2 3 4 5 6 urlpatterns = [ url ( r '^index/' , views . index , name = 'app01_index' ) ] urlpatterns = [ url ( r '^index/' , views . index , name = 'app02_index' ) ] \u516d\u3001\u4f2a\u9759\u6001 \u00b6 1 2 3 urlpatterns = [ url ( r '^index.html' , views . reg , name = 'index' ) ]","title":"\u8def\u7531\u5c42"},{"location":"programming/python/Django/urls/#_1","text":"","title":"\u8def\u7531\u5c42"},{"location":"programming/python/Django/urls/#_2","text":"","title":"\u4e00\u3001\u8def\u7531\u5339\u914d"},{"location":"programming/python/Django/urls/#1-mysitemysiteurlspy","text":"1 2 3 4 5 6 7 8 9 from django.conf.urls import url from django.contrib import admin from app import views urlpatterns = [ url ( r '^admin/' , admin . site . urls ), url ( r '^login/' , views . login ), url ( r '^$' , views . index ), ] url() \u65b9\u6cd5\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u662f\u6b63\u5219\u8868\u8fbe\u5f0f\uff0c\u53ea\u8981\u7b2c\u4e00\u4e2a\u53c2\u6570\u6b63\u5219\u8868\u8fbe\u5f0f\u80fd\u591f\u5339\u914d\u5230\u5185\u5bb9 \u90a3\u4e48\u5c31\u4f1a\u7acb\u523b\u505c\u6b62\u5f80\u4e0b\u5339\u914d\uff0c\u76f4\u63a5\u6267\u884c\u5bf9\u5e94\u7684\u89c6\u56fe\u51fd\u6570\u3002 \u5728\u6d4f\u89c8\u5668\u8f93\u5165http://127.0.0.1:8000/login\u65f6\uff0cDjango\u4f1a\u505a\u4e00\u6b21301\u91cd\u5b9a\u5411\uff08\u81ea\u52a8\u5728URL\u540e\u9762\u52a0 / \uff0c\u91cd\u65b0\u8bf7\u6c42\u4e00\u6b21\uff09\u3002 \u53ef\u4ee5\u518d\u914d\u7f6e\u6587\u4ef6\u4e2d\u6dfb\u52a0 APPEND_SLASH = False \u6765\u53d6\u6d88\u81ea\u52a8\u52a0 / \u91cd\u5b9a\u5411","title":"1. \u5728mysite/mysite/urls.py\u4e2d\u4e66\u5199\u8def\u7531"},{"location":"programming/python/Django/urls/#_3","text":"\u5206\u7ec4\uff1a\u5c06\u67d0\u4e00\u6bb5\u6b63\u5219\u8868\u8fbe\u5f0f\u7528\u5c0f\u62ec\u53f7\u6269\u8d77\u6765","title":"\u4e8c. \u5206\u7ec4"},{"location":"programming/python/Django/urls/#1","text":"\u65e0\u540d\u5206\u7ec4 \u5c31\u662f\u5c06\u62ec\u53f7\u5185\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d\u5230\u7684\u5185\u5bb9\u5f53\u4f5c \u4f4d\u7f6e \u53c2\u6570\u4f20\u9012\u7ed9\u540e\u9762\u7684\u89c6\u56fe\u51fd\u6570\u3002 1 2 3 4 5 6 7 8 from django.conf.urls import url from django.contrib import admin from app import views urlpatterns = [ url ( r '^admin/' , admin . site . urls ), url ( r '^article/(\\d{4})' , views . article ), # \u65e0\u540d\u5206\u7ec4 ] \u89c6\u56fe\u51fd\u6570\u4e2d\u5f62\u53c2\u7684\u540d\u5b57\u53ef\u4ee5\u662f\u4efb\u610f\u7684\u5b57\u7b26\u4e32 1 2 3 4 5 6 # filename: views.py from django.shortcuts import HttpResponse # \u5f62\u53c2\u7684\u540d\u5b57\u53ef\u4ee5\u662f\u4efb\u610f\u7684\u5b57\u7b26\u4e32 def article ( request , arg ): return HttpResponse ( \" %s \u5e74\u7684\u6587\u7ae0\" % arg )","title":"1. \u65e0\u540d\u5206\u7ec4"},{"location":"programming/python/Django/urls/#2","text":"\u6709\u540d\u5206\u7ec4 \u5c31\u662f\u5c06\u62ec\u53f7\u5185\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d\u5230\u7684\u5185\u5bb9\u5f53\u4f5c \u5173\u952e\u5b57\u53c2\u6570 \u4f20\u9012\u7ed9\u540e\u9762\u7684\u89c6\u56fe\u51fd\u6570\u3002 1 2 3 4 5 6 7 8 9 # filename: urls.py from django.conf.urls import url from django.contrib import admin from app import views urlpatterns = [ url ( r '^admin/' , admin . site . urls ), url ( r '^article/(?P<year>\\d{4})' , views . article ) # \u6b63\u5219\u8868\u8fbe\u5f0f\u8d77\u4e00\u4e2a\u522b\u540d ] \u89c6\u56fe\u51fd\u6570\u4e2d\u5f62\u53c2\u7684\u540d\u5b57\u5fc5\u987b\u662f\u8def\u7531\u4e2d\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u522b\u540d 1 2 3 4 5 6 # filename: views.py from django.shortcuts import HttpResponse # \u5f62\u53c2\u7684\u540d\u5b57\u662f\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u522b\u540d def article ( request , year ): return HttpResponse ( \" %s \u5e74\u7684\u6587\u7ae0\" % year ) \u65e0\u540d\u5206\u7ec4\u548c\u6709\u540d\u5206\u7ec4\u4e0d\u53ef\u4ee5\u6df7\u5408\u4f7f\u7528\uff0c\u4f46\u662f\u540c\u4e00\u4e2a\u5206\u7ec4\u53ef\u4ee5\u91cd\u590d\u4f7f\u7528\u591a\u6b21 1 2 3 4 5 urlpatterns = [ ... url ( r '^article/([0-9]{4})/([0-9]{2})/([0-9]+)/$' , views . article ), url ( r '^article/(?P<year>[0-9]{4})/(?P<month>[0-9]{2})/(?P<day>[0-9]{2})/$' , views . article ), ]","title":"2. \u6709\u540d\u5206\u7ec4"},{"location":"programming/python/Django/urls/#_4","text":"","title":"\u4e09\u3001\u53cd\u5411\u89e3\u6790"},{"location":"programming/python/Django/urls/#1_1","text":"\u901a\u8fc7\u4e00\u4e9b\u65b9\u6cd5\u5f97\u5230\u4e00\u4e2a\u7ed3\u679c \u8be5\u7ed3\u679c\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\u5bf9\u5e94\u7684url\u89e6\u53d1\u89c6\u56fe\u51fd\u6570 \u7b2c\u4e00\u6b65\uff1a\u7ed9\u8def\u7531\u4e0e\u89c6\u56fe\u51fd\u6570\u8d77\u522b\u540d 1 2 3 4 5 6 7 8 9 10 11 # filename: urls.py from django.conf.urls import url from django.contrib import admin from app import views urlpatterns = [ url ( r '^admin/' , admin . site . urls ), url ( r '^login/' , views . login ), # \u7ed9\u8def\u7531\u548c\u89c6\u56fe\u51fd\u6570\u8d77\u4e00\u4e2a\u522b\u540d url ( r 'register/' , views . reg_func , name = \"reg\" ) ] \u7b2c\u4e8c\u6b65\uff1a\u540e\u7aef\u53cd\u5411\u89e3\u6790 1 2 3 4 5 6 7 8 9 10 11 #filename: views.py from django.shortcuts import render , reverse def login ( request ): return render ( request , 'login.html' ) def reg_func ( request ): print ( reverse ( 'reg' )) # /register/ return render ( request , 'register.html' ) \u7b2c\u4e09\u6b65\uff1a\u524d\u7aef\u53cd\u5411\u89e3\u6790 1 2 3 4 5 6 7 8 9 10 11 12 13 14 <!DOCTYPE html> < html lang = \"en\" > < head > < meta charset = \"UTF-8\" > < title > \u767b\u5f55 </ title > </ head > < body > < ul > < li >< a href = \"#\" > \u767b\u5f55 </ a ></ li > <!--\u8df3\u8f6c\u5230http://127.0.0.1:8000/register/--> < li >< a href = \"{% url 'reg' %}\" > \u6ce8\u518c </ a ></ li > </ ul > </ body > </ html >","title":"1. \u666e\u901a\u89e3\u6790"},{"location":"programming/python/Django/urls/#2_1","text":"","title":"2. \u65e0\u540d\u6709\u540d\u5206\u7ec4\u53cd\u5411\u89e3\u6790"},{"location":"programming/python/Django/urls/#21","text":"\u7b2c\u4e00\u6b65\uff1a\u8def\u7531 1 2 3 4 5 6 7 8 9 10 # filename: urls.py from django.conf.urls import url from django.contrib import admin from app import views urlpatterns = [ url ( r '^admin/' , admin . site . urls ), url ( r 'home/' , views . home ), url ( r 'article/(\\d{4})/' , views . article , name = 'new_article' ) ] \u7b2c\u4e8c\u6b65\uff1a\u540e\u7aef\u53cd\u5411\u89e3\u6790 1 2 3 4 5 6 7 8 9 10 11 12 # filename: view.py from django.shortcuts import render , HttpResponse , reverse def home ( request ): return render ( request , 'home.html' ) def article ( request , arg ): year = arg url = reverse ( 'new_article' , args = ( arg ,)) # \u89e3\u91ca\u7684\u65f6\u5019\u9700\u8981\u52a0\u4e00\u4e2a\u53c2\u6570 return HttpResponse ( 'url\u7684\u503c\u662f %s ,arg\u7684\u662f\u503c\u662f %s ' % ( url , year )) \u7b2c\u4e09\u6b65\uff1a\u524d\u7aef\u53cd\u5411\u89e3\u6790 1 2 3 4 5 6 7 8 9 10 11 12 13 14 <!--filename:home.html--> <!DOCTYPE html> < html lang = \"en\" > < head > < meta charset = \"UTF-8\" > < title > home </ title > </ head > < body > < ul > < li >< a href = \"{% url 'new_article' 2020 %}\" > 2020 </ a ></ li > < li >< a href = \"{% url 'new_article' 2021 %}\" > 2021 </ a ></ li > </ ul > </ body > </ html >","title":"2.1 \u65e0\u540d\u5206\u7ec4\u53cd\u5411\u89e3\u6790"},{"location":"programming/python/Django/urls/#22","text":"\u7b2c\u4e00\u6b65\uff1a\u8def\u7531 1 2 3 4 5 6 7 8 9 10 # filename: urls.py from django.conf.urls import url from django.contrib import admin from app import views urlpatterns = [ url ( r '^admin/' , admin . site . urls ), url ( r 'home/' , views . home ), url ( r 'article/(?P<year>\\d{4})/' , views . article , name = 'new_article' ) ] \u7b2c\u4e8c\u6b65\uff1a\u540e\u7aef\u89e3\u6790 1 2 3 4 5 6 7 8 9 10 11 12 # filename: views.py from django.shortcuts import render , HttpResponse , reverse def home ( request ): return render ( request , 'home.html' ) def article ( request , year ): print ( reverse ( 'new_article' , kwargs = { 'year' : year })) # \u53e6\u4e00\u79cd\u5199\u6cd5 url = reverse ( 'new_article' , args = ( year ,)) return HttpResponse ( 'url\u7684\u503c\u662f %s ,arg\u7684\u662f\u503c\u662f %s ' % ( url , year )) \u7b2c\u4e09\u6b65\uff1a\u524d\u7aef\u89e3\u6790 1 2 3 4 5 6 7 8 9 10 11 12 13 <!DOCTYPE html> < html lang = \"en\" > < head > < meta charset = \"UTF-8\" > < title > home </ title > </ head > < body > < ul > < li >< a href = \"{% url 'new_article' year=2020 %}\" > 2020 </ a ></ li > <!--\u53e6\u4e00\u79cd\u5199\u6cd5\uff0c\u4e0d\u91cd\u8981--> < li >< a href = \"{% url 'new_article' 2021 %}\" > 2021 </ a ></ li > </ ul > </ body > </ html >","title":"2.2 \u6709\u540d\u5206\u7ec4\u53cd\u5411\u89e3\u6790"},{"location":"programming/python/Django/urls/#_5","text":"django\u7684\u6bcf\u4e00\u4e2a\u5e94\u7528\u90fd\u53ef\u4ee5\u6709\u81ea\u5df1\u7684templates\u76ee\u5f55\u3001urls.py\u3001static\u76ee\u5f55\uff0c\u57fa\u4e8e\u4e0a\u8ff0\u7684\u7279\u70b9\uff0cdjango\u80fd\u591f\u975e\u5e38\u597d\u7684\u505a\u5230\u6309\u6a21\u5757\u5f00\u53d1\uff0c\u6bcf\u4e00\u4e2a\u529f\u80fd\u6a21\u5757\u5bf9\u5e94\u4e00\u4e2aapp\uff0c\u6700\u540e\u5728\u914d\u7f6e\u6587\u4ef6\u91cc\u9762\u6ce8\u518c\u6240\u6709\u7684app\u518d\u5229\u7528\u8def\u7531\u5206\u53d1\u7684\u7279\u70b9\u5c06\u6240\u6709\u7684app\u6574\u5408\u6210\u4e00\u4e2a\u5b8c\u6574\u7684\u9879\u76ee\u3002 \u5f53\u4e00\u4e2adjango\u9879\u76ee\u4e2d\u7684url\u7279\u522b\u591a\u7684\u65f6\u5019\uff0c\u603b\u8def\u7531urls.py\u4ee3\u7801\u975e\u5e38\u5197\u4f59\u4e0d\u597d\u7ef4\u62a4\uff0c\u8fd9\u4e2a\u65f6\u5019\u4e5f\u53ef\u4ee5\u5229\u7528\u8def\u7531\u5206\u53d1\u6765\u51cf\u8f7b\u603b\u8def\u7531\u7684\u538b\u529b\u3002 \u5229\u7528\u8def\u7531\u5206\u53d1\u4e4b\u540e\uff0c\u603b\u8def\u7531\u4e0d\u518d\u5904\u7406\u8def\u7531\u4e0e\u89c6\u56fe\u51fd\u6570\u7684\u76f4\u63a5\u5bf9\u5e94\u5173\u7cfb\uff0c\u800c\u662f\u505a\u4e00\u4e2a\u5206\u53d1\u5904\u7406\uff0c \u8bc6\u522b\u5f53\u524durl\u662f\u5c5e\u4e8e\u54ea\u4e2a\u5e94\u7528\u4e0b\uff0c\u7136\u540e\u76f4\u63a5\u5206\u53d1\u7ed9\u5bf9\u5e94\u7684\u5e94\u7528\u53bb\u5904\u7406\u3002","title":"\u56db\u3001\u8def\u7531\u5206\u53d1"},{"location":"programming/python/Django/urls/#1_2","text":"","title":"1. \u603b\u8def\u7531\u914d\u7f6e"},{"location":"programming/python/Django/urls/#11","text":"1 2 3 4 5 6 7 8 9 10 from django.conf.urls import url , include from django.contrib import admin from app01 import urls as app01_urls from app02 import urls as app02_urls urlpatterns = [ url ( r '^admin/' , admin . site . urls ), url ( r '^app01/' , include ( app01_urls )), url ( r '^app02/' , include ( app02_urls )), ]","title":"1.1 \u65b9\u5f0f\u4e00"},{"location":"programming/python/Django/urls/#12","text":"1 2 3 4 5 6 7 8 9 from django.conf.urls import url , include from django.contrib import admin urlpatterns = [ url ( r '^admin/' , admin . site . urls ), url ( r '^app01/' , include ( 'app01.urls' )), url ( r '^app02/' , include ( 'app02.urls' )), ] # \u6ce8\u610f\u4e8b\u9879:\u603b\u8def\u7531\u91cc\u9762\u7684url\u5343\u4e07\u4e0d\u80fd\u52a0$\u7ed3\u5c3e","title":"1.2 \u65b9\u5f0f\u4e8c\uff08\u63a8\u8350\u5199\u6cd5\uff09"},{"location":"programming/python/Django/urls/#2_2","text":"app01/urls.py 1 2 3 4 5 6 from django.conf.urls import url from app01 import views urlpatterns = [ url ( r '^index/' , views . index ) ] app02/urls.py 1 2 3 4 5 6 from django.conf.urls import url from app02 import views urlpatterns = [ url ( r '^index/' , views . index ) ]","title":"2. \u5b50\u8def\u7531\u914d\u7f6e"},{"location":"programming/python/Django/urls/#_6","text":"\u5f53\u591a\u4e2a\u5e94\u7528\u51fa\u73b0\u4e86\u76f8\u540c\u7684\u522b\u540d\uff0c\u6b63\u5e38\u60c5\u51b5\u4e0b\u7684\u53cd\u5411\u89e3\u6790\u662f\u6ca1\u6709\u529e\u6cd5\u81ea\u52a8\u8bc6\u522b\u524d\u7f00\u7684\u3002","title":"\u4e94\u3001\u540d\u79f0\u7a7a\u95f4"},{"location":"programming/python/Django/urls/#1_3","text":"1 2 3 4 5 6 7 8 9 # filename: urls.py from django.conf.urls import url , include from django.contrib import admin urlpatterns = [ url ( r '^admin/' , admin . site . urls ), url ( r '^app01/' , include ( 'app01.urls' , namespace = 'app01' )), url ( r '^app02/' , include ( 'app02.urls' , namespace = 'app02' )), ]","title":"1. \u603b\u8def\u7531"},{"location":"programming/python/Django/urls/#2_3","text":"app01/urls.py 1 2 3 4 5 6 from django.conf.urls import url from app01 import views urlpatterns = [ url ( r '^index/' , views . index , name = 'index' ) ] app02/urls.py 1 2 3 4 5 6 from django.conf.urls import url from app02 import views urlpatterns = [ url ( r '^index/' , views . index , name = 'index' ) ]","title":"2. \u5b50\u8def\u7531"},{"location":"programming/python/Django/urls/#3","text":"1 2 {% url 'app01:index' %} {% url 'app02:index' %} \u5176\u5b9e\u53ea\u8981\u4fdd\u8bc1\u540d\u5b57\u4e0d\u51b2\u7a81\u5c31\u6ca1\u6709\u5fc5\u8981\u4f7f\u7528\u540d\u79f0\u7a7a\u95f4\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\u6709\u591a\u4e2aapp\u7684\u65f6\u5019\u65f6\uff0c\u5728\u8d77\u522b\u540d\u7684\u65f6\u5019\u52a0app\u7684\u524d\u7f00\u5c31\u80fd\u591f\u786e\u4fdd\u591a\u4e2aapp\u4e4b\u95f4\u540d\u5b57\u4e0d\u51b2\u7a81\u3002 1 2 3 4 5 6 urlpatterns = [ url ( r '^index/' , views . index , name = 'app01_index' ) ] urlpatterns = [ url ( r '^index/' , views . index , name = 'app02_index' ) ]","title":"3. \u6a21\u677f\u5c42"},{"location":"programming/python/Django/urls/#_7","text":"1 2 3 urlpatterns = [ url ( r '^index.html' , views . reg , name = 'index' ) ]","title":"\u516d\u3001\u4f2a\u9759\u6001"},{"location":"programming/python/Django/view/","text":"\u89c6\u56fe\u5c42 \u00b6 1. \u8bf7\u6c42\u54cd\u5e94\u4e09\u677f\u65a7 \u00b6 \u89c6\u56fe\u51fd\u6570\u5fc5\u987b\u8981\u8fd4\u56de\u4e00\u4e2aHttpResponse\u5bf9\u8c61 1.2 HttpResponse \u00b6 \u8fd4\u56de\u5b57\u7b26\u4e32\u7c7b\u578b 1 2 3 4 5 6 # filename: app/views.py from django.shortcuts import HttpResponse def index ( request ): return HttpResponse ( \"Hello World\" ) 1.2 render \u00b6 \u8fd4\u56de\u6e32\u67d3\u8fc7\u5f97\u6a21\u677f\u6587\u4ef6 1 2 3 4 5 6 # app/views.py from django.shortcuts import render def index ( request ): return render ( request , 'index.html' ) 1.3 redirect \u00b6 \u91cd\u5b9a\u5411 1 2 3 4 5 6 # filename: app/views.py from django.shortcuts import redirect def index ( request ): return redirect ( 'http://www.baidu.com' ) 1.4 JsonResponse \u00b6 django\u540e\u7aef\u7ed9\u524d\u7aef\u8fd4\u56dejson\u683c\u5f0f\u7684\u6570\u636e 2. request\u5bf9\u8c61 \u00b6 2.1 request\u5bf9\u8c61\u65b9\u6cd5 \u00b6 request.method \uff1a\u4ee5\u5168\u5927\u5199\u7684\u5b57\u7b26\u4e32\u8fd4\u56de\u8bf7\u6c42\u65b9\u5f0f\u3002 request.GET \uff1a\u8fd4\u56de\u7528\u6237\u63d0\u4ea4\u7684GET\u8bf7\u6c42\u6570\u636e <QueryDict: {'username': ['admin'], 'password': ['123456']}> request.GET.get('key') request.GET.getlist('key') request.POST \uff1a\u8fd4\u56de\u7528\u6237\u63d0\u4ea4\u7684POST\u8bf7\u6c42\u6570\u636e request.POST.get('key') request.POST.getlist('key') request.body request.path request.path_info request.get_full_path() \uff1a\u80fd\u8fc7\u83b7\u53d6\u5b8c\u6574\u7684url\u53ca\u95ee\u53f7\u540e\u9762\u7684\u53c2\u6570\uff0c\u5982/login/?username=admin&password=123456 request.FILES \uff1a\u83b7\u53d6\u6587\u4ef6\u6570\u636e request.is_ajax() \uff1a\u5224\u65ad\u5f53\u524d\u8bf7\u6c42\u662f\u5426\u662fajax\u8bf7\u6c42 \u8fd4\u56de\u5e03\u5c14\u503c 3. form\u8868\u5355\u4e0a\u4f20\u6587\u4ef6\u53ca\u540e\u7aef\u64cd\u4f5c \u00b6 1. \u524d\u7aef \u00b6 form\u8868\u5355\u4e0a\u4f20\u6587\u4ef6\u7c7b\u578b\u7684\u6570\u636e method\u5fc5\u987b\u6307\u5b9a\u6210 post enctype\u5fc5\u987b\u6362\u6210 multipart/form-data 1 2 3 4 < form action = \"\" method = \"post\" enctype = \"multipart/form-data\" > < p > file: < input type = \"file\" name = \"file\" ></ p > < input type = \"submit\" > </ form > 2. \u540e\u7aef \u00b6 1 2 3 4 5 6 7 8 9 10 def upload_file ( request ): if request . method == 'POST' : print ( request . body ) # \u539f\u751f\u7684\u6d4f\u89c8\u5668\u53d1\u8fc7\u6765\u7684\u4e8c\u8fdb\u5236\u6570\u636e print ( request . FILES ) # \u83b7\u53d6\u6587\u4ef6\u6570\u636e <MultiValueDict: {'file': [<InMemoryUploadedFile: ebc.jpg (image/jpeg)>]}> file_obj = request . FILES . get ( 'file' ) # \u6587\u4ef6\u5bf9\u8c61 print ( file_obj . name ) # abc.jpg with open ( file_obj . name , 'wb' ) as f : for line in file_obj . chunks (): # \u63a8\u8350\u52a0\u4e0achunks\u65b9\u6cd5 \u5176\u5b9e\u8ddf\u4e0d\u52a0\u662f\u4e00\u6837\u7684\u90fd\u662f\u4e00\u884c\u884c\u7684\u8bfb\u53d6 f . write ( line ) return render ( request , 'upload_file.html' ) 4. FBV\u4e0eCBV \u00b6 4.1 Function-based views \u00b6 1 2 3 4 5 from django.shortcuts import HttpResponse def login ( request ): return HttpResponse ( 'ok' ) 4.2 Class-based views \u00b6 \u8def\u7531\u5c42 1 2 3 4 5 6 7 8 9 # filename: urls.py from django.conf.urls import url from django.contrib import admin from app import views urlpatterns = [ url ( r '^admin/' , admin . site . urls ), url ( r '^login/' , views . Login . as_view ()), ] \u89c6\u56fe\u5c42 1 2 3 4 5 6 7 8 9 10 11 from django.shortcuts import HttpResponse from django.views import View class Login ( View ): def get ( self , request ): return HttpResponse ( 'get\u8bf7\u6c42' ) def post ( self , request ): return HttpResponse ( 'post\u8bf7\u6c42' ) 4.2.1 \u6dfb\u52a0\u88c5\u9970\u5668 \u00b6 \u65b9\u5f0f\u4e00\uff1a \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 from django.shortcuts import render , HttpResponse , redirect from django.views import View def login_auth ( func ): def inner ( request , * args , ** kwargs ): target_url = request . get_full_path () if request . COOKIES . get ( 'username' ): return func ( request , * args , ** kwargs ) else : return redirect ( '/login/?redirect= %s ' % target_url ) return inner class MyLogin ( View ): @method_decorator ( login_auth ) # \u65b9\u5f0f1:\u76f4\u63a5\u52a0\u5728\u65b9\u6cd5\u4e0a def get ( self , request ): return HttpResponse ( \"get\u8bf7\u6c42\" ) def post ( self , request ): return HttpResponse ( 'post\u8bf7\u6c42' ) \u65b9\u5f0f\u4e8c\uff1a \u00b6 1 2 3 4 5 6 7 8 9 # \u53ef\u4ee5\u6dfb\u52a0\u591a\u4e2a\u9488\u5bf9\u4e0d\u540c\u7684\u65b9\u6cd5\u52a0\u4e0d\u540c\u7684\u88c5\u9970\u5668 @method_decorator ( login_auth , name = 'post' ) @method_decorator ( login_auth , name = 'get' ) class MyCBV ( View ): def get ( self , request ): return HttpResponse () def post ( self , request ): return HttpResponse () \u65b9\u5f0f\u4e09\uff1a \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 class MyCBV ( View ): # \u5b83\u4f1a\u76f4\u63a5\u4f5c\u7528\u4e8e\u5f53\u524d\u7c7b\u91cc\u9762\u7684\u6240\u6709\u7684\u65b9\u6cd5 @method_decorator ( login_auth ) def dispatch ( self , request , * args , ** kwargs ): \"\"\" \u770bCBV\u6e90\u7801\u53ef\u4ee5\u5f97\u51fa CBV\u91cc\u9762\u6240\u6709\u7684\u65b9\u6cd5\u5728\u6267\u884c\u4e4b\u524d\u90fd\u9700\u8981\u5148\u7ecf\u8fc7 dispatch\u65b9\u6cd5(\u8be5\u65b9\u6cd5\u4f60\u53ef\u4ee5\u770b\u6210\u662f\u4e00\u4e2a\u5206\u53d1\u65b9\u6cd5) \"\"\" super () . dispatch ( request , * args , ** kwargs ) def get ( self , request ): return HttpResponse () def post ( self , request ): return HttpResponse () 5. Ajax \u00b6 ajax \u5728\u4e0d\u91cd\u65b0\u52a0\u8f7d\u6574\u4e2a\u9875\u9762\u7684\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u4e0e\u670d\u52a1\u5668\u4ea4\u6362\u6570\u636e\u5e76\u66f4\u65b0\u90e8\u5206\u7f51\u9875\u5185\u5bb9\u3002 \u524d\u540e\u7aef\u4f20\u8f93\u6570\u636e\u7684\u65f6\u5019\u4e00\u5b9a\u8981\u786e\u4fdd\u7f16\u7801\u683c\u5f0f\u8ddf\u6570\u636e\u771f\u6b63\u7684\u683c\u5f0f\u4e00\u81f4\u3002 ajax\u7279\u70b9\uff1a \u5f02\u6b65\u63d0\u4ea4 \u5c40\u90e8\u5237\u65b0 \u524d\u540e\u7aef\u4f20\u8f93\u6570\u636e\u7684\u5e38\u89c1\u7f16\u7801\u683c\u5f0f: x-www-form-urlencoded form-data json \u524d\u540e\u7aef\u4f20\u8f93\u6570\u636e\u65f6POST\u8bf7\u6c42\u7684\u65b9\u5f0f\uff1a form\u8868\u5355 x-www-form-urlencoded \uff1a\u524d\u7aef\u6570\u636e\u683c\u5f0f\uff1a username=Tom&age=18 \uff0cdjango\u540e\u7aef\u9488\u5bf9\u7b26\u5408urlencoded\u7f16\u7801\u683c\u5f0f\u7684\u6570\u636e\u90fd\u4f1a\u89e3\u6790\u5c01\u88c5\u5230request.POST\u4e2d\u3002 form-data \uff1a\u666e\u901a\u7684\u952e\u503c\u89e3\u6790\u5230request.POST\u4e2d\uff0c\u6587\u4ef6\u89e3\u6790\u5230request.FILES\u4e2d\u3002 json \uff1aform\u8868\u5355\u662f\u6ca1\u6709\u529e\u6cd5\u53d1\u9001json\u683c\u5f0f\u6570\u636e\u7684\u3002 ajax\u8bf7\u6c42 \u9ed8\u8ba4\u7684\u7f16\u7801\u683c\u5f0f\u4e5f\u662f x-www-form-urlencoded 5.1 \u57fa\u672c\u4f7f\u7528 \u00b6 \u6a21\u677f\u5c42 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Title</title> {% load static %} <script src=\" {% static 'jquery.min.js' %} \"></script> </head> <body> <input type=\"text\" id=\"d1\"> + <input type=\"text\" id=\"d2\"> = <input type=\"text\" id=\"d3\"> <button id=\"btn\">\u6c42\u548c</button> <script> // \u5148\u7ed9\u6309\u94ae\u7ed1\u5b9a\u4e00\u4e2a\u70b9\u51fb\u4e8b\u4ef6 $('#btn').click(function () { // \u671d\u540e\u7aef\u53d1\u9001ajax\u8bf7\u6c42 $.ajax({ url: '', // 1.\u6307\u5b9a\u671d\u54ea\u4e2a\u540e\u7aef\u53d1\u9001ajax\u8bf7\u6c42\uff0c\u4e0d\u5199\u5c31\u662f\u671d\u5f53\u524d\u5730\u5740\u63d0\u4ea4 type: 'post', // 2.\u8bf7\u6c42\u65b9\u5f0f\uff0c\u4e0d\u6307\u5b9a\u9ed8\u8ba4\u5c31\u662fget data: { // 3.\u6570\u636e 'v1': $('#d1').val(), 'v2': $('#d2').val() }, success: function (args) { // 4.\u56de\u8c03\u51fd\u6570:\u5f53\u540e\u7aef\u7ed9\u4f60\u8fd4\u56de\u7ed3\u679c\u7684\u65f6\u5019\u4f1a\u81ea\u52a8\u89e6\u53d1 args\u63a5\u53d7\u540e\u7aef\u7684\u8fd4\u56de\u7ed3\u679c $('#d3').val(args) // \u901a\u8fc7DOM\u64cd\u4f5c\u52a8\u6001\u6e32\u67d3\u5230\u7b2c\u4e09\u4e2ainput\u91cc\u9762#} } }) }) </script> </body> </html> \u89c6\u56fe\u5c42 1 2 3 4 5 6 7 8 9 from django.shortcuts import render , HttpResponse def index ( request ): if request . method == 'POST' : v1 = request . POST . get ( 'v1' ) v2 = request . POST . get ( 'v2' ) return HttpResponse ( int ( v1 ) + int ( v2 )) # \u8981\u5148\u8f6cint\u884c return render ( request , 'index.html' ) \u6548\u679c 5.2 ajax\u53d1\u9001json\u683c\u5f0f\u6570\u636e \u00b6 \u6a21\u677f\u5c42 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Title</title> {% load static %} <script src=\" {% static 'jquery.min.js' %} \"></script> </head> <body> name:<input type=\"text\" id=\"name\"> <br> age:<input type=\"text\" id=\"age\"> <br> <button id=\"btn\">\u53d1\u9001</button> <script> // \u5148\u7ed9\u6309\u94ae\u7ed1\u5b9a\u4e00\u4e2a\u70b9\u51fb\u4e8b\u4ef6 $('#btn').click(function () { // \u671d\u540e\u7aef\u53d1\u9001ajax\u8bf7\u6c42 $.ajax({ url: '', type: 'post', data: JSON.stringify({ 'name': $('#name').val(), 'age': $('#age').val() }), contentType:'application/json', // \u6307\u5b9a\u7f16\u7801\u683c\u5f0f success: function () { } }) }) </script> </body> </html> \u89c6\u56fe\u5c42 1 2 3 4 5 6 7 8 9 10 11 from django.shortcuts import render , HttpResponse import json def index ( request ): if request . method == 'POST' : print ( request . is_ajax ()) # True print ( request . body ) # \u6536\u5230\u4e8c\u8fdb\u5236\u7684\u6570\u636e\uff1ab'{\"name\":\"Tom\",\"age\":\"18\"}' # json.loads\u62ec\u53f7\u5185\u5982\u679c\u4f20\u5165\u4e86\u4e00\u4e2a\u4e8c\u8fdb\u5236\u683c\u5f0f\u7684\u6570\u636e\u90a3\u4e48\u5185\u90e8\u81ea\u52a8\u89e3\u7801\u518d\u53cd\u5e8f\u5217\u5316 print ( json . loads ( request . body )) # {'name': 'Tom', 'age': '18'} return render ( request , 'index.html' ) ajax\u53d1\u9001json\u683c\u5f0f\u6570\u636e\u9700\u8981\u6ce8\u610f\u70b9: contentType\u53c2\u6570\u6307\u5b9a\u6210:application/json \u6570\u636e\u662f\u771f\u6b63\u7684json\u683c\u5f0f\u6570\u636e django\u540e\u7aef\u4e0d\u4f1a\u5e2e\u4f60\u5904\u7406json\u683c\u5f0f\u6570\u636e\u9700\u8981\u4f60\u81ea\u5df1\u53bbrequest.body\u83b7\u53d6\u5e76\u5904\u7406 5.3 ajax\u53d1\u9001\u6587\u4ef6 \u00b6 ajax\u53d1\u9001\u6587\u4ef6\u9700\u8981\u501f\u52a9\u4e8ejs\u5185\u7f6e\u5bf9\u8c61FormData\u3002 django\u540e\u7aef\u80fd\u591f\u76f4\u63a5\u8bc6\u522b\u5230formdata\u5bf9\u8c61\u5e76\u4e14\u80fd\u591f\u5c06\u5185\u90e8\u7684\u666e\u901a\u952e\u503c\u81ea\u52a8\u89e3\u6790\u5e76\u5c01\u88c5\u5230request.POST\u4e2d\uff0c\u6587\u4ef6\u6570\u636e\u81ea\u52a8\u89e3\u6790\u5e76\u5c01\u88c5\u5230request.FILES\u4e2d\u3002 \u6a21\u677f\u5c42 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Title</title> {% load static %} <script src=\" {% static 'jquery.min.js' %} \"></script> </head> <body> <p>name:<input type=\"text\" id=\"name\"></p> <p>age:<input type=\"text\" id=\"age\"></p> <p><input type=\"file\" id=\"myfile\"></p> <button id=\"btn\">\u53d1\u9001</button> <script> // \u70b9\u51fb\u6309\u94ae\u671d\u540e\u7aef\u53d1\u9001\u666e\u901a\u952e\u503c\u5bf9\u548c\u6587\u4ef6\u6570\u636e $('#btn').on('click', function () { // 1 \u9700\u8981\u5148\u5229\u7528FormData\u5185\u7f6e\u5bf9\u8c61 let formDateObj = new FormData(); // \u53ef\u4ee5\u6dfb\u52a0\u666e\u901a\u952e\u503c\u5bf9\uff0c\u4e5f\u53ef\u4ee5\u6dfb\u52a0\u6587\u4ef6\u5bf9\u8c61 // 2 \u6dfb\u52a0\u666e\u901a\u7684\u952e\u503c\u5bf9 formDateObj.append('name', $('#name').val()); formDateObj.append('age', $('#age').val()); // 3 \u6dfb\u52a0\u6587\u4ef6\u5bf9\u8c61 formDateObj.append('myfile', $('#myfile')[0].files[0]) // 4 \u5c06\u5bf9\u8c61\u57fa\u4e8eajax\u53d1\u9001\u7ed9\u540e\u7aef $.ajax({ url: '', type: 'post', data: formDateObj, // \u76f4\u63a5\u5c06\u5bf9\u8c61\u653e\u5728data\u540e\u9762\u5373\u53ef // ajax\u53d1\u9001\u6587\u4ef6\u5fc5\u987b\u8981\u6307\u5b9a\u7684\u4e24\u4e2a\u53c2\u6570 contentType: false, // \u4e0d\u9700\u4f7f\u7528\u4efb\u4f55\u7f16\u7801\uff0cdjango\u540e\u7aef\u80fd\u591f\u81ea\u52a8\u8bc6\u522bformdata\u5bf9\u8c61 processData: false, // \u544a\u8bc9\u4f60\u7684\u6d4f\u89c8\u5668\u4e0d\u8981\u5bf9\u4f60\u7684\u6570\u636e\u8fdb\u884c\u4efb\u4f55\u5904\u7406 success: function (args) { } }) }) </script> </body> </html> \u89c6\u56fe\u5c42 1 2 3 4 5 6 7 8 9 from django.shortcuts import render def index ( request ): if request . is_ajax (): if request . method == 'POST' : print ( request . POST ) # <QueryDict: {'name': ['Tom'], 'age': ['age']}> print ( request . FILES ) # <MultiValueDict: {'myfile': [<InMemoryUploadedFile: abc.jpg (image/jpeg)>]}> return render ( request , 'index.html' )","title":"\u89c6\u56fe\u5c42"},{"location":"programming/python/Django/view/#_1","text":"","title":"\u89c6\u56fe\u5c42"},{"location":"programming/python/Django/view/#1","text":"\u89c6\u56fe\u51fd\u6570\u5fc5\u987b\u8981\u8fd4\u56de\u4e00\u4e2aHttpResponse\u5bf9\u8c61","title":"1. \u8bf7\u6c42\u54cd\u5e94\u4e09\u677f\u65a7"},{"location":"programming/python/Django/view/#12-httpresponse","text":"\u8fd4\u56de\u5b57\u7b26\u4e32\u7c7b\u578b 1 2 3 4 5 6 # filename: app/views.py from django.shortcuts import HttpResponse def index ( request ): return HttpResponse ( \"Hello World\" )","title":"1.2 HttpResponse"},{"location":"programming/python/Django/view/#12-render","text":"\u8fd4\u56de\u6e32\u67d3\u8fc7\u5f97\u6a21\u677f\u6587\u4ef6 1 2 3 4 5 6 # app/views.py from django.shortcuts import render def index ( request ): return render ( request , 'index.html' )","title":"1.2 render"},{"location":"programming/python/Django/view/#13-redirect","text":"\u91cd\u5b9a\u5411 1 2 3 4 5 6 # filename: app/views.py from django.shortcuts import redirect def index ( request ): return redirect ( 'http://www.baidu.com' )","title":"1.3 redirect"},{"location":"programming/python/Django/view/#14-jsonresponse","text":"django\u540e\u7aef\u7ed9\u524d\u7aef\u8fd4\u56dejson\u683c\u5f0f\u7684\u6570\u636e","title":"1.4 JsonResponse"},{"location":"programming/python/Django/view/#2-request","text":"","title":"2. request\u5bf9\u8c61"},{"location":"programming/python/Django/view/#21-request","text":"request.method \uff1a\u4ee5\u5168\u5927\u5199\u7684\u5b57\u7b26\u4e32\u8fd4\u56de\u8bf7\u6c42\u65b9\u5f0f\u3002 request.GET \uff1a\u8fd4\u56de\u7528\u6237\u63d0\u4ea4\u7684GET\u8bf7\u6c42\u6570\u636e <QueryDict: {'username': ['admin'], 'password': ['123456']}> request.GET.get('key') request.GET.getlist('key') request.POST \uff1a\u8fd4\u56de\u7528\u6237\u63d0\u4ea4\u7684POST\u8bf7\u6c42\u6570\u636e request.POST.get('key') request.POST.getlist('key') request.body request.path request.path_info request.get_full_path() \uff1a\u80fd\u8fc7\u83b7\u53d6\u5b8c\u6574\u7684url\u53ca\u95ee\u53f7\u540e\u9762\u7684\u53c2\u6570\uff0c\u5982/login/?username=admin&password=123456 request.FILES \uff1a\u83b7\u53d6\u6587\u4ef6\u6570\u636e request.is_ajax() \uff1a\u5224\u65ad\u5f53\u524d\u8bf7\u6c42\u662f\u5426\u662fajax\u8bf7\u6c42 \u8fd4\u56de\u5e03\u5c14\u503c","title":"2.1 request\u5bf9\u8c61\u65b9\u6cd5"},{"location":"programming/python/Django/view/#3-form","text":"","title":"3. form\u8868\u5355\u4e0a\u4f20\u6587\u4ef6\u53ca\u540e\u7aef\u64cd\u4f5c"},{"location":"programming/python/Django/view/#1_1","text":"form\u8868\u5355\u4e0a\u4f20\u6587\u4ef6\u7c7b\u578b\u7684\u6570\u636e method\u5fc5\u987b\u6307\u5b9a\u6210 post enctype\u5fc5\u987b\u6362\u6210 multipart/form-data 1 2 3 4 < form action = \"\" method = \"post\" enctype = \"multipart/form-data\" > < p > file: < input type = \"file\" name = \"file\" ></ p > < input type = \"submit\" > </ form >","title":"1. \u524d\u7aef"},{"location":"programming/python/Django/view/#2","text":"1 2 3 4 5 6 7 8 9 10 def upload_file ( request ): if request . method == 'POST' : print ( request . body ) # \u539f\u751f\u7684\u6d4f\u89c8\u5668\u53d1\u8fc7\u6765\u7684\u4e8c\u8fdb\u5236\u6570\u636e print ( request . FILES ) # \u83b7\u53d6\u6587\u4ef6\u6570\u636e <MultiValueDict: {'file': [<InMemoryUploadedFile: ebc.jpg (image/jpeg)>]}> file_obj = request . FILES . get ( 'file' ) # \u6587\u4ef6\u5bf9\u8c61 print ( file_obj . name ) # abc.jpg with open ( file_obj . name , 'wb' ) as f : for line in file_obj . chunks (): # \u63a8\u8350\u52a0\u4e0achunks\u65b9\u6cd5 \u5176\u5b9e\u8ddf\u4e0d\u52a0\u662f\u4e00\u6837\u7684\u90fd\u662f\u4e00\u884c\u884c\u7684\u8bfb\u53d6 f . write ( line ) return render ( request , 'upload_file.html' )","title":"2. \u540e\u7aef"},{"location":"programming/python/Django/view/#4-fbvcbv","text":"","title":"4. FBV\u4e0eCBV"},{"location":"programming/python/Django/view/#41-function-based-views","text":"1 2 3 4 5 from django.shortcuts import HttpResponse def login ( request ): return HttpResponse ( 'ok' )","title":"4.1 Function-based views"},{"location":"programming/python/Django/view/#42-class-based-views","text":"\u8def\u7531\u5c42 1 2 3 4 5 6 7 8 9 # filename: urls.py from django.conf.urls import url from django.contrib import admin from app import views urlpatterns = [ url ( r '^admin/' , admin . site . urls ), url ( r '^login/' , views . Login . as_view ()), ] \u89c6\u56fe\u5c42 1 2 3 4 5 6 7 8 9 10 11 from django.shortcuts import HttpResponse from django.views import View class Login ( View ): def get ( self , request ): return HttpResponse ( 'get\u8bf7\u6c42' ) def post ( self , request ): return HttpResponse ( 'post\u8bf7\u6c42' )","title":"4.2 Class-based views"},{"location":"programming/python/Django/view/#421","text":"","title":"4.2.1 \u6dfb\u52a0\u88c5\u9970\u5668"},{"location":"programming/python/Django/view/#_2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 from django.shortcuts import render , HttpResponse , redirect from django.views import View def login_auth ( func ): def inner ( request , * args , ** kwargs ): target_url = request . get_full_path () if request . COOKIES . get ( 'username' ): return func ( request , * args , ** kwargs ) else : return redirect ( '/login/?redirect= %s ' % target_url ) return inner class MyLogin ( View ): @method_decorator ( login_auth ) # \u65b9\u5f0f1:\u76f4\u63a5\u52a0\u5728\u65b9\u6cd5\u4e0a def get ( self , request ): return HttpResponse ( \"get\u8bf7\u6c42\" ) def post ( self , request ): return HttpResponse ( 'post\u8bf7\u6c42' )","title":"\u65b9\u5f0f\u4e00\uff1a"},{"location":"programming/python/Django/view/#_3","text":"1 2 3 4 5 6 7 8 9 # \u53ef\u4ee5\u6dfb\u52a0\u591a\u4e2a\u9488\u5bf9\u4e0d\u540c\u7684\u65b9\u6cd5\u52a0\u4e0d\u540c\u7684\u88c5\u9970\u5668 @method_decorator ( login_auth , name = 'post' ) @method_decorator ( login_auth , name = 'get' ) class MyCBV ( View ): def get ( self , request ): return HttpResponse () def post ( self , request ): return HttpResponse ()","title":"\u65b9\u5f0f\u4e8c\uff1a"},{"location":"programming/python/Django/view/#_4","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 class MyCBV ( View ): # \u5b83\u4f1a\u76f4\u63a5\u4f5c\u7528\u4e8e\u5f53\u524d\u7c7b\u91cc\u9762\u7684\u6240\u6709\u7684\u65b9\u6cd5 @method_decorator ( login_auth ) def dispatch ( self , request , * args , ** kwargs ): \"\"\" \u770bCBV\u6e90\u7801\u53ef\u4ee5\u5f97\u51fa CBV\u91cc\u9762\u6240\u6709\u7684\u65b9\u6cd5\u5728\u6267\u884c\u4e4b\u524d\u90fd\u9700\u8981\u5148\u7ecf\u8fc7 dispatch\u65b9\u6cd5(\u8be5\u65b9\u6cd5\u4f60\u53ef\u4ee5\u770b\u6210\u662f\u4e00\u4e2a\u5206\u53d1\u65b9\u6cd5) \"\"\" super () . dispatch ( request , * args , ** kwargs ) def get ( self , request ): return HttpResponse () def post ( self , request ): return HttpResponse ()","title":"\u65b9\u5f0f\u4e09\uff1a"},{"location":"programming/python/Django/view/#5-ajax","text":"ajax \u5728\u4e0d\u91cd\u65b0\u52a0\u8f7d\u6574\u4e2a\u9875\u9762\u7684\u60c5\u51b5\u4e0b\uff0c\u53ef\u4ee5\u4e0e\u670d\u52a1\u5668\u4ea4\u6362\u6570\u636e\u5e76\u66f4\u65b0\u90e8\u5206\u7f51\u9875\u5185\u5bb9\u3002 \u524d\u540e\u7aef\u4f20\u8f93\u6570\u636e\u7684\u65f6\u5019\u4e00\u5b9a\u8981\u786e\u4fdd\u7f16\u7801\u683c\u5f0f\u8ddf\u6570\u636e\u771f\u6b63\u7684\u683c\u5f0f\u4e00\u81f4\u3002 ajax\u7279\u70b9\uff1a \u5f02\u6b65\u63d0\u4ea4 \u5c40\u90e8\u5237\u65b0 \u524d\u540e\u7aef\u4f20\u8f93\u6570\u636e\u7684\u5e38\u89c1\u7f16\u7801\u683c\u5f0f: x-www-form-urlencoded form-data json \u524d\u540e\u7aef\u4f20\u8f93\u6570\u636e\u65f6POST\u8bf7\u6c42\u7684\u65b9\u5f0f\uff1a form\u8868\u5355 x-www-form-urlencoded \uff1a\u524d\u7aef\u6570\u636e\u683c\u5f0f\uff1a username=Tom&age=18 \uff0cdjango\u540e\u7aef\u9488\u5bf9\u7b26\u5408urlencoded\u7f16\u7801\u683c\u5f0f\u7684\u6570\u636e\u90fd\u4f1a\u89e3\u6790\u5c01\u88c5\u5230request.POST\u4e2d\u3002 form-data \uff1a\u666e\u901a\u7684\u952e\u503c\u89e3\u6790\u5230request.POST\u4e2d\uff0c\u6587\u4ef6\u89e3\u6790\u5230request.FILES\u4e2d\u3002 json \uff1aform\u8868\u5355\u662f\u6ca1\u6709\u529e\u6cd5\u53d1\u9001json\u683c\u5f0f\u6570\u636e\u7684\u3002 ajax\u8bf7\u6c42 \u9ed8\u8ba4\u7684\u7f16\u7801\u683c\u5f0f\u4e5f\u662f x-www-form-urlencoded","title":"5. Ajax"},{"location":"programming/python/Django/view/#51","text":"\u6a21\u677f\u5c42 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Title</title> {% load static %} <script src=\" {% static 'jquery.min.js' %} \"></script> </head> <body> <input type=\"text\" id=\"d1\"> + <input type=\"text\" id=\"d2\"> = <input type=\"text\" id=\"d3\"> <button id=\"btn\">\u6c42\u548c</button> <script> // \u5148\u7ed9\u6309\u94ae\u7ed1\u5b9a\u4e00\u4e2a\u70b9\u51fb\u4e8b\u4ef6 $('#btn').click(function () { // \u671d\u540e\u7aef\u53d1\u9001ajax\u8bf7\u6c42 $.ajax({ url: '', // 1.\u6307\u5b9a\u671d\u54ea\u4e2a\u540e\u7aef\u53d1\u9001ajax\u8bf7\u6c42\uff0c\u4e0d\u5199\u5c31\u662f\u671d\u5f53\u524d\u5730\u5740\u63d0\u4ea4 type: 'post', // 2.\u8bf7\u6c42\u65b9\u5f0f\uff0c\u4e0d\u6307\u5b9a\u9ed8\u8ba4\u5c31\u662fget data: { // 3.\u6570\u636e 'v1': $('#d1').val(), 'v2': $('#d2').val() }, success: function (args) { // 4.\u56de\u8c03\u51fd\u6570:\u5f53\u540e\u7aef\u7ed9\u4f60\u8fd4\u56de\u7ed3\u679c\u7684\u65f6\u5019\u4f1a\u81ea\u52a8\u89e6\u53d1 args\u63a5\u53d7\u540e\u7aef\u7684\u8fd4\u56de\u7ed3\u679c $('#d3').val(args) // \u901a\u8fc7DOM\u64cd\u4f5c\u52a8\u6001\u6e32\u67d3\u5230\u7b2c\u4e09\u4e2ainput\u91cc\u9762#} } }) }) </script> </body> </html> \u89c6\u56fe\u5c42 1 2 3 4 5 6 7 8 9 from django.shortcuts import render , HttpResponse def index ( request ): if request . method == 'POST' : v1 = request . POST . get ( 'v1' ) v2 = request . POST . get ( 'v2' ) return HttpResponse ( int ( v1 ) + int ( v2 )) # \u8981\u5148\u8f6cint\u884c return render ( request , 'index.html' ) \u6548\u679c","title":"5.1 \u57fa\u672c\u4f7f\u7528"},{"location":"programming/python/Django/view/#52-ajaxjson","text":"\u6a21\u677f\u5c42 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Title</title> {% load static %} <script src=\" {% static 'jquery.min.js' %} \"></script> </head> <body> name:<input type=\"text\" id=\"name\"> <br> age:<input type=\"text\" id=\"age\"> <br> <button id=\"btn\">\u53d1\u9001</button> <script> // \u5148\u7ed9\u6309\u94ae\u7ed1\u5b9a\u4e00\u4e2a\u70b9\u51fb\u4e8b\u4ef6 $('#btn').click(function () { // \u671d\u540e\u7aef\u53d1\u9001ajax\u8bf7\u6c42 $.ajax({ url: '', type: 'post', data: JSON.stringify({ 'name': $('#name').val(), 'age': $('#age').val() }), contentType:'application/json', // \u6307\u5b9a\u7f16\u7801\u683c\u5f0f success: function () { } }) }) </script> </body> </html> \u89c6\u56fe\u5c42 1 2 3 4 5 6 7 8 9 10 11 from django.shortcuts import render , HttpResponse import json def index ( request ): if request . method == 'POST' : print ( request . is_ajax ()) # True print ( request . body ) # \u6536\u5230\u4e8c\u8fdb\u5236\u7684\u6570\u636e\uff1ab'{\"name\":\"Tom\",\"age\":\"18\"}' # json.loads\u62ec\u53f7\u5185\u5982\u679c\u4f20\u5165\u4e86\u4e00\u4e2a\u4e8c\u8fdb\u5236\u683c\u5f0f\u7684\u6570\u636e\u90a3\u4e48\u5185\u90e8\u81ea\u52a8\u89e3\u7801\u518d\u53cd\u5e8f\u5217\u5316 print ( json . loads ( request . body )) # {'name': 'Tom', 'age': '18'} return render ( request , 'index.html' ) ajax\u53d1\u9001json\u683c\u5f0f\u6570\u636e\u9700\u8981\u6ce8\u610f\u70b9: contentType\u53c2\u6570\u6307\u5b9a\u6210:application/json \u6570\u636e\u662f\u771f\u6b63\u7684json\u683c\u5f0f\u6570\u636e django\u540e\u7aef\u4e0d\u4f1a\u5e2e\u4f60\u5904\u7406json\u683c\u5f0f\u6570\u636e\u9700\u8981\u4f60\u81ea\u5df1\u53bbrequest.body\u83b7\u53d6\u5e76\u5904\u7406","title":"5.2 ajax\u53d1\u9001json\u683c\u5f0f\u6570\u636e"},{"location":"programming/python/Django/view/#53-ajax","text":"ajax\u53d1\u9001\u6587\u4ef6\u9700\u8981\u501f\u52a9\u4e8ejs\u5185\u7f6e\u5bf9\u8c61FormData\u3002 django\u540e\u7aef\u80fd\u591f\u76f4\u63a5\u8bc6\u522b\u5230formdata\u5bf9\u8c61\u5e76\u4e14\u80fd\u591f\u5c06\u5185\u90e8\u7684\u666e\u901a\u952e\u503c\u81ea\u52a8\u89e3\u6790\u5e76\u5c01\u88c5\u5230request.POST\u4e2d\uff0c\u6587\u4ef6\u6570\u636e\u81ea\u52a8\u89e3\u6790\u5e76\u5c01\u88c5\u5230request.FILES\u4e2d\u3002 \u6a21\u677f\u5c42 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Title</title> {% load static %} <script src=\" {% static 'jquery.min.js' %} \"></script> </head> <body> <p>name:<input type=\"text\" id=\"name\"></p> <p>age:<input type=\"text\" id=\"age\"></p> <p><input type=\"file\" id=\"myfile\"></p> <button id=\"btn\">\u53d1\u9001</button> <script> // \u70b9\u51fb\u6309\u94ae\u671d\u540e\u7aef\u53d1\u9001\u666e\u901a\u952e\u503c\u5bf9\u548c\u6587\u4ef6\u6570\u636e $('#btn').on('click', function () { // 1 \u9700\u8981\u5148\u5229\u7528FormData\u5185\u7f6e\u5bf9\u8c61 let formDateObj = new FormData(); // \u53ef\u4ee5\u6dfb\u52a0\u666e\u901a\u952e\u503c\u5bf9\uff0c\u4e5f\u53ef\u4ee5\u6dfb\u52a0\u6587\u4ef6\u5bf9\u8c61 // 2 \u6dfb\u52a0\u666e\u901a\u7684\u952e\u503c\u5bf9 formDateObj.append('name', $('#name').val()); formDateObj.append('age', $('#age').val()); // 3 \u6dfb\u52a0\u6587\u4ef6\u5bf9\u8c61 formDateObj.append('myfile', $('#myfile')[0].files[0]) // 4 \u5c06\u5bf9\u8c61\u57fa\u4e8eajax\u53d1\u9001\u7ed9\u540e\u7aef $.ajax({ url: '', type: 'post', data: formDateObj, // \u76f4\u63a5\u5c06\u5bf9\u8c61\u653e\u5728data\u540e\u9762\u5373\u53ef // ajax\u53d1\u9001\u6587\u4ef6\u5fc5\u987b\u8981\u6307\u5b9a\u7684\u4e24\u4e2a\u53c2\u6570 contentType: false, // \u4e0d\u9700\u4f7f\u7528\u4efb\u4f55\u7f16\u7801\uff0cdjango\u540e\u7aef\u80fd\u591f\u81ea\u52a8\u8bc6\u522bformdata\u5bf9\u8c61 processData: false, // \u544a\u8bc9\u4f60\u7684\u6d4f\u89c8\u5668\u4e0d\u8981\u5bf9\u4f60\u7684\u6570\u636e\u8fdb\u884c\u4efb\u4f55\u5904\u7406 success: function (args) { } }) }) </script> </body> </html> \u89c6\u56fe\u5c42 1 2 3 4 5 6 7 8 9 from django.shortcuts import render def index ( request ): if request . is_ajax (): if request . method == 'POST' : print ( request . POST ) # <QueryDict: {'name': ['Tom'], 'age': ['age']}> print ( request . FILES ) # <MultiValueDict: {'myfile': [<InMemoryUploadedFile: abc.jpg (image/jpeg)>]}> return render ( request , 'index.html' )","title":"5.3 ajax\u53d1\u9001\u6587\u4ef6"},{"location":"programming/python/DjangoRESTframework/install/","text":"\u5b89\u88c5 \u00b6 \u4e00\u3001\u5b98\u7f51 \u00b6 1 https://www.django-rest-framework.org/ \u4e8c\u3001\u5b89\u88c5 \u00b6 1 $ pip install djangorestframework == 3 .10 \u4e09\u3001\u6ce8\u518c \u00b6 1 2 3 4 5 # filename: settings.py INSTALLED_APPS = [ ... 'rest_framework' , ]","title":"\u5b89\u88c5"},{"location":"programming/python/DjangoRESTframework/install/#_1","text":"","title":"\u5b89\u88c5"},{"location":"programming/python/DjangoRESTframework/install/#_2","text":"1 https://www.django-rest-framework.org/","title":"\u4e00\u3001\u5b98\u7f51"},{"location":"programming/python/DjangoRESTframework/install/#_3","text":"1 $ pip install djangorestframework == 3 .10","title":"\u4e8c\u3001\u5b89\u88c5"},{"location":"programming/python/DjangoRESTframework/install/#_4","text":"1 2 3 4 5 # filename: settings.py INSTALLED_APPS = [ ... 'rest_framework' , ]","title":"\u4e09\u3001\u6ce8\u518c"},{"location":"programming/python/DjangoRESTframework/%E5%BA%8F%E5%88%97%E5%8C%96/","text":"\u5e8f\u5217\u5316\uff08Serializers\uff09 \u00b6 \u4e00\u3001\u5e8f\u5217\u5316 \u00b6 \u5e8f\u5217\u5316\uff1a\u5e8f\u5217\u5316\u5668\u4f1a\u628a\u6a21\u578b\u5bf9\u8c61\u8f6c\u6362\u6210\u5b57\u5178,\u7ecf\u8fc7 response \u4ee5\u540e\u53d8\u6210 json \u5b57\u7b26\u4e32 \u53cd\u5e8f\u5217\u5316\uff1a\u628a\u5ba2\u6237\u7aef\u53d1\u9001\u8fc7\u6765\u7684\u6570\u636e\u7ecf\u8fc7 request \u4ee5\u540e\u53d8\u6210\u5b57\u5178\uff0c\u5e8f\u5217\u5316\u5668\u53ef\u4ee5\u628a\u5b57\u5178\u8f6c\u6210\u6a21\u578b\u3002 \u4e8c\u3001\u57fa\u672c\u4f7f\u7528 \u00b6 1. \u67e5 \u00b6 \u4f7f\u7528\u6d41\u7a0b\uff1a \u65b0\u5efa\u4e00\u4e2a py \u6587\u4ef6\uff08\u4e13\u95e8\u7528\u6765\u5199\u5e8f\u5217\u5316\u7c7b\uff09\u5199\u4e00\u4e2a\u5e8f\u5217\u5316\u7684\u7c7b\uff0c\u7ee7\u627f Serializer \u3002\u5728\u7c7b\u4e2d\u5199\u8981\u5e8f\u5217\u5316\u7684\u5b57\u6bb5\uff08\u60f3\u5e8f\u5217\u5316\u54ea\u4e2a\u5b57\u6bb5\uff0c\u5c31\u5728\u7c7b\u4e2d\u5199\u54ea\u4e2a\u5b57\u6bb5\uff09\u3002 \u5728\u89c6\u56fe\u7c7b\u4e2d\u4f7f\u7528\uff1a\u5bfc\u5165\u5e8f\u5217\u5316\u7c7b\u7136\u540e\u5b9e\u4f8b\u5316\u5f97\u5230\u5e8f\u5217\u5316\u7c7b\u7684\u5bf9\u8c61\uff0c\u5e76\u4e14\u628a\u8981\u5e8f\u5217\u5316\u7684\u5bf9\u8c61\u4f20\u5165\u3002 \u5e8f\u5217\u5316\u7c7b\u7684\u5bf9\u8c61.data \u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u5b57\u5178 \u628a\u5b57\u5178\u8fd4\u56de\uff1a\u5982\u679c\u4e0d\u4f7f\u7528 rest_framework \u7684 Response \uff0c\u5c31\u5f97\u4f7f\u7528 JsonResponse 1. \u51c6\u5907 models.py \u00b6 \u5e8f\u5217\u5316 Serializers \u662f\u4e3a\u4e86\u65b9\u4fbf\u64cd\u4f5c\u6a21\u578b\uff0c\u5148\u51c6\u5907models\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 class Book ( models . Model ): title = models . CharField ( max_length = 32 , verbose_name = \"\u4e66\u540d\" ) price = models . DecimalField ( max_digits = 8 , decimal_places = 2 , verbose_name = \"\u4ef7\u683c\" ) sales = models . IntegerField ( verbose_name = '\u9500\u552e\u91cf' ) publish = models . ForeignKey ( to = 'Publish' ) authors = models . ManyToManyField ( to = 'Author' ) class Publish ( models . Model ): name = models . CharField ( max_length = 32 , verbose_name = \"\u51fa\u7248\u793e\u540d\u79f0\" ) addr = models . CharField ( max_length = 64 , verbose_name = \"\u901a\u8baf\u5730\u5740\" ) class Author ( models . Model ): name = models . CharField ( max_length = 32 , verbose_name = \"\u4f5c\u8005\u59d3\u540d\" ) age = models . IntegerField ( verbose_name = \"\u5e74\u9f84\" ) author_detail = models . OneToOneField ( to = 'AuthorDetail' ) class AuthorDetail ( models . Model ): email = models . EmailField ( verbose_name = \"\u90ae\u7bb1\" ) addr = models . CharField ( max_length = 32 , verbose_name = \"\u901a\u8baf\u5730\u5740\" ) 2. \u521b\u5efa\u5e8f\u5217\u5316\u7684\u7c7b \u00b6 \u65b0\u5efa\u4e00\u4e2a serializers.py 1 2 3 4 5 6 7 8 9 10 11 from rest_framework import serializers class BookSerializer ( serializers . Serializer ): # \u5199\u4e0a\u8981\u5e8f\u5217\u5316\u7684\u5b57\u6bb5\uff1aserializers.\u5b57\u6bb5\u7c7b\u578b() # \u952e\u7684\u540d\u5b57\u8981\u548cmodel.py\u4e2d\u7684\u4e00\u6837 id = serializers . IntegerField () title = serializers . CharField () price = serializers . DecimalField ( max_digits = 8 , decimal_places = 2 ) sales = serializers . IntegerField () publish_id = serializers . IntegerField () 3. \u5728 views.py \u5199\u89c6\u56fe \u00b6 \u9700\u8981\u7ee7\u627f rest_framework \u4e2d\u7684 APIView \u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 from django.shortcuts import render , HttpResponse # Create your views here. from rest_framework.views import APIView from app.models import Book from app.serializers import BookSerializer from rest_framework.response import Response class BookView ( APIView ): # \u67e5\u8be2\u4e00\u6761\u6570\u636e def get ( self , request , pk ): book = Book . objects . filter ( id = pk ) . first () book_ser_obj = BookSerializer ( book ) # \u5b9e\u4f8b\u5316\uff0c\u4f20\u5165\u8981\u5e8f\u5217\u5316\u7684\u5bf9\u8c61 return Response ( book_ser_obj . data ) # \u8fd4\u56de\u5e8f\u5217\u5316\u4ee5\u540e\u7684\u5b57\u5178 4. \u5728 urls.py \u6ce8\u518c\u8def\u7531 \u00b6 1 2 3 4 5 6 7 8 from django.conf.urls import url from django.contrib import admin from app import views urlpatterns = [ url ( r '^admin/' , admin . site . urls ), url ( r '^books/(?P<pk>\\d)' , views . BookView . as_view ()), ] 5. \u9a8c\u8bc1 \u00b6 2. \u6539 \u00b6 \u4f7f\u7528\u6d41\u7a0b\uff1a \u5199\u4e00\u4e2a\u5e8f\u5217\u5316\u7684\u7c7b\uff0c\u7ee7\u627f Serializer \u3002\u5728\u7c7b\u4e2d\u5199\u8981\u53cd\u5e8f\u5217\u5316\u7684\u5b57\u6bb5\u3002 \u5728\u89c6\u56fe\u7c7b\u4e2d\u4f7f\u7528\uff1a\u5bfc\u5165\u5e8f\u5217\u5316\u7c7b\uff1b\u5b9e\u4f8b\u5316\u5f97\u5230\u5e8f\u5217\u5316\u7c7b\u7684\u5bf9\u8c61\uff0c\u628a\u8981\u4fee\u6539\u7684\u5bf9\u8c61\u548c\u4fee\u6539\u7684\u6570\u636e\u4f20\u5165\u3002\u5982\uff1a book_ser_obj=BookSerializer(instance=book,data=request.data) \u6570\u636e\u6821\u9a8c book_ser_obj.is_valid() \u5982\u679c\u6821\u9a8c\u901a\u8fc7\uff0c\u5c31\u4fdd\u5b58\uff1a book_ser_obj.save() \u5982\u679c\u6821\u9a8c\u4e0d\u901a\u8fc7\uff0c\u81ea\u5df1\u5199\u903b\u8f91\u5904\u7406 \u5982\u679c\u5b57\u6bb5\u7684\u6821\u9a8c\u89c4\u5219\u4e0d\u591f\uff0c\u53ef\u4ee5\u5199\u94a9\u5b50\u51fd\u6570 \u5c40\u90e8\u94a9\u5b50\uff1a\u6821\u9a8c\u4e00\u4e2a\u5b57\u6bb5 \u5168\u5c40\u94a9\u5b50\uff1a\u540c\u65f6\u6821\u9a8c\u591a\u4e2a\u5b57\u6bb5 2.1 \u5728\u89c6\u56fe\u7c7b\u4e2d\u5199 put() \u65b9\u6cd5 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 class BookView ( APIView ): ... def put ( self , request , pk ): # \u5b9a\u4e49\u4e00\u4e2a\u8fd4\u56de\u7684\u6570\u636e response_msg = { 'status' : 100 , 'msg' : '\u6210\u529f' } # \u627e\u5230\u8981\u4fee\u6539\u7684\u5bf9\u8c61 book = Book . objects . filter ( id = pk ) . first () # \u5f97\u5230\u4e00\u4e2a\u5e8f\u5217\u5316\u7c7b\u7684\u5bf9\u8c61 # \u9700\u8981\u4f20\u5165\u7684\u53c2\u6570\u53ef\u4ee5\u518d\u7236\u7c7b\u4e2d\u627e\u5230 # class BaseSerializer(Field): # def __init__(self, instance=None, data=empty, **kwargs): book_ser_obj = BookSerializer ( instance = book , data = request . data ) # \u8fdb\u884c\u6570\u636e\u9a8c\u8bc1 if book_ser_obj . is_valid (): # \u8fd4\u56deTrue\u8868\u793a\u9a8c\u8bc1\u901a\u8fc7 book_ser_obj . save () response_msg [ 'data' ] = book_ser_obj . data # \u5b57\u5178\u683c\u5f0f else : response_msg [ 'status' ] = 101 response_msg [ 'msg' ] = '\u6570\u636e\u6821\u9a8c\u5931\u8d25' response_msg [ 'data' ] = book_ser_obj . errors return Response ( response_msg ) \u5f53\u76f4\u63a5\u53d1\u9001 PUT \u8bf7\u6c42\u65f6\uff0c\u4f1a\u629b\u51fa\u5f02\u5e38 1 2 File \"D:\\APP\\python36\\lib\\site-packages\\rest_framework\\serializers.py\" , line 165 , in update raise NotImplementedError ( '`update()` must be implemented.' ) \u5728 serializers.py \u4e2d\u901a\u8fc7\u6765 raise \u629b\u51fa\u5f02\u5e38\uff0c\u8981\u6c42\u6211\u4eec\u91cd\u65b0 update() \u65b9\u6cd5\u3002 1 2 3 4 5 # serializers.py class BaseSerializer ( Field ): ... def update ( self , instance , validated_data ): raise NotImplementedError ( '`update()` must be implemented.' ) 2.2 \u5728 serializes.py \u4e2d\u91cd\u5199 update() \u65b9\u6cd5 \u00b6 1 2 3 4 5 6 7 8 9 10 11 class BookSerializer ( serializers . Serializer ): ... def update ( self , instance , validated_data ): # instance\u662fbook\u8fd9\u4e2a\u5bf9\u8c61 # validated_data\u662f\u6821\u9a8c\u540e\u7684\u6570\u636e instance . title = validated_data . get ( 'title' ) instance . price = validated_data . get ( 'price' ) instance . sales = validated_data . get ( 'sales' ) instance . publish_id = validated_data . get ( 'publish_id' ) instance . save () # book.save() django \u7684orm\u63d0\u4f9b\u7684 return instance 2.3 \u6570\u636e\u6821\u9a8c\u7684\u94a9\u5b50\u51fd\u6570 \u00b6 2.3.1 \u5c40\u90e8\u94a9\u5b50 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 # serializers.py from rest_framework import serializers from rest_framework.serializers import ValidationError class BookSerializer ( serializers . Serializer ): ... # \u5c40\u90e8\u94a9\u5b50 def validate_price ( self , data ): # validate_\u5b57\u6bb5\u540d \u63a5\u6536\u4e00\u4e2a\u53c2\u6570 # \u5982\u679c\u4ef7\u683c\u5c0f\u4e8e0\uff0c\u5c31\u6821\u9a8c\u4e0d\u901a\u8fc7 print ( type ( data )) # <class 'str'> print ( data ) # -200 if float ( data ) > 0 : return data else : # \u6821\u9a8c\u5931\u8d25\uff0c\u629b\u5f02\u5e38 raise ValidationError ( '\u4ef7\u683c\u4e0d\u80fd\u4e3a\u8d1f\u6570' ) 2.3.2 \u5168\u5c40\u94a9\u5b50 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 from rest_framework import serializers from rest_framework.serializers import ValidationError class BookSerializer ( serializers . Serializer ): ... # \u5168\u5c40\u94a9\u5b50\uff0c\u6821\u9a8c\u591a\u4e2a\u5b57\u6bb5 def validate ( self , validate_data ): price = validate_data . get ( 'price' ) sales = validate_data . get ( 'sales' ) if price < 0 or sales < 0 : raise ValidationError ( '\u5b57\u6bb5\u4e0d\u80fd\u4e3a\u8d1f\u6570' ) else : return validate_data 3. \u5220 \u00b6 1 2 3 4 5 6 7 8 9 10 # views.py from rest_framework.response import Response class BookView ( APIView ): ... def delete ( self , request , pk ): response_msg = { 'status' : 100 , 'msg' : '\u6210\u529f' } ret = Book . objects . filter ( pk = pk ) . delete () return Response ( response_msg ) \u4ee5\u4e0a\u7684\u4e09\u79cd\u65b9\u6cd5\u5728\u53d1\u9001\u8bf7\u6c42\u65f6\uff0c\u90fd\u9700\u8981\u5728 books/ \u540e\u52a0\u4e00\u4e2a\u4e3b\u952e\u503c\u3002\u6240\u4ee5\u4e0a\u8ff0\u7684\u4e09\u79cd\u65b9\u6cd5\u53ef\u4ee5\u516c\u7528\u540c\u4e00\u4e2a\u89c6\u56fe\u3002\u4f46\u662f\u5bf9\u4e8e\u67e5\u8be2\u6240\u6709\u6570\u636e\u548c\u65b0\u589e\u6570\u636e\uff0c books/ \u540e\u4e0d\u9700\u8981\u52a0\u53c2\u6570\uff0c\u9700\u8981\u65b0\u5efa\u4e00\u4e2a\u89c6\u56fe\u7c7b\u548c url \u5339\u914d\u89c4\u5219\u6765\u5b9e\u73b0\u67e5\u8be2\u6240\u6709\u548c\u65b0\u589e\u6570\u636e\u7684\u65b9\u6cd5\u3002 4. \u67e5\u8be2\u6240\u6709 \u00b6 \u65b0\u589e\u4e00\u4e2a\u89c6\u56fe\u7c7b 1 2 3 4 5 6 7 class BooksView ( APIView ): def get ( self , request ): response_msg = { 'status' : 100 , 'msg' : '\u6210\u529f' } books = Book . objects . all () book_ser_obj = BookSerializer ( books , many = True ) # \u5e8f\u5217\u5316\u591a\u6761,\u5982\u679c\u5e8f\u5217\u5316\u4e00\u6761\uff0c\u4e0d\u9700\u8981\u5199 response_msg [ 'data' ] = book_ser_obj . data return Response ( response_msg ) \u6dfb\u52a0\u8def\u7531 1 2 3 4 5 6 7 8 9 from django.conf.urls import url from django.contrib import admin from app import views urlpatterns = [ url ( r '^admin/' , admin . site . urls ), url ( r '^books/(?P<pk>\\d)' , views . BookView . as_view ()), url ( r '^books/' , views . BooksView . as_view ()), ] 5. \u589e \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 class BooksView ( APIView ): # \u65b0\u589e def post ( self , request ): response_msg = { 'status' : 100 , 'msg' : '\u6210\u529f' } # \u4fee\u6539\u624d\u6709instance\uff0c\u65b0\u589e\u6ca1\u6709instance\uff0c\u53ea\u6709data book_ser_obj = BookSerializer ( data = request . data ) # \u6821\u9a8c\u5b57\u6bb5 if book_ser_obj . is_valid (): book_ser_obj . save () # \u9700\u8981\u4ece\u5199create() response_msg [ 'data' ] = book_ser_obj . data else : response_msg [ 'status' ] = 102 response_msg [ 'msg' ] = '\u6570\u636e\u6821\u9a8c\u5931\u8d25' response_msg [ 'data' ] = book_ser_obj . errors return Response ( response_msg ) \u76f4\u63a5\u8bbf\u95ee\u540c\u6837\u4f1a\u629b\u51fa\u5f02\u5e38\uff0c\u9700\u8981\u5728\u5e8f\u5217\u5316\u7c7b\u4e2d\u91cd\u5199 create() \u65b9\u6cd5 1 2 3 4 5 6 7 # serializers.py from app.views import Book class BookSerializer ( serializers . Serializer ): ... def create ( self , validated_data ): instance = Book . objects . create ( ** validated_data ) return instance \u4e09\u3001 source \u7684\u4f7f\u7528 \u00b6 1. \u4fee\u6539\u5e8f\u5217\u5316\u7c7b\u4e2d\u5b57\u6bb5\u7684\u540d\u5b57 \u00b6 \u5982\u679c\u4e0d\u60f3\u76f4\u63a5\u5c06model\u4e2d\u5b57\u6bb5\u7684\u540d\u5b57\u66b4\u9732\uff0c\u53ef\u4ee5\u901a\u8fc7source\u6765\u6307\u5b9amodel\u4e2d\u5b57\u6bb5\u7684\u540d\u5b57\uff0c\u5e8f\u5217\u5316\u7c7b\u4e2d\u7684\u952e\u53ef\u4ee5\u7528\u522b\u7684\u540d\u5b57\u6765\u4ee3\u66ff\u3002 1 2 3 4 5 class BookSerializer ( serializers . Serializer ): id = serializers . IntegerField () # title = serializers.CharField() name = serializers . CharField ( source = 'title' ) ... 2. \u8de8\u8868 \u00b6 1 2 3 class BookSerializer ( serializers . Serializer ): ... publish = serializers . CharField ( source = 'publish.name' ) # \u67e5\u8be2\u51fa\u51fa\u7248\u793e\u7684\u540d\u79f0 3. \u6267\u884cmodel\u8868\u4e2d\u7684\u65b9\u6cd5 \u00b6 source \u5982\u679c\u662f\u5b57\u6bb5\uff0c\u4f1a\u663e\u793a\u5b57\u6bb5\uff0c\u5982\u679c\u662f\u65b9\u6cd5\uff0c\u4f1a\u6267\u884c\u65b9\u6cd5\uff0c\u4e0d\u7528\u52a0\u62ec\u53f7\u3002 \u5982\u5728\u6a21\u578b\u4e2d\u5b9a\u4e49\u4e00\u4e2a\u65b9\u6cd5\uff0c\u76f4\u63a5\u53ef\u4ee5\u5728\u5728source\u6307\u5b9a\u6267\u884c \u3002 1 2 3 4 5 6 7 8 9 10 # \u5728\u6a21\u578b\u4e2d\u52a0\u4e00\u4e2achoices\u5b57\u6bb5 class Book ( models . Model ): ... stock_status = models . IntegerField ( choices = (( 0 , '\u5145\u8db3' ), ( 1 , \"\u7d27\u5f20\" ), ( 2 , \"\u65e0\u8d27\" )), verbose_name = '\u5e93\u5b58\u72b6\u6001' , default = 0 ) # \u6a21\u578b\u8868\u4e2d\u81ea\u5df1\u5b9a\u4e49\u7684\u65b9\u6cd5 def access_time ( self ): import datetime return datetime . datetime . now () \u5982\u679c\u60f3\u5728\u54cd\u5e94\u4e2d\u663e\u793a\u8fd9\u4e2a\u5b57\u6bb5\u5bf9\u5e94\u7684\u6c49\u5b57\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528source\u3002 1 2 3 4 class BookSerializer ( serializers . Serializer ): ... stock_status = serializers . CharField ( source = 'get_stock_status_display' ) time = serializers . CharField ( source = 'access_time' ) \u56db\u3001\u5c01\u88c5Response\u5bf9\u8c61 \u00b6 \u4e0a\u9762\u7684\u6bcf\u4e00\u4e2a\u65b9\u6cd5\u4e2d\u90fd\u5199\u4e86\u4e00\u4e2a response_msg \u3002\u53ef\u4ee5\u5229\u7528\u7684\u9762\u5411\u5bf9\u8c61\u7684\u5c01\u88c5\u7279\u6027\uff0c\u628a\u54cd\u5e94\u7684\u6d88\u606f\u5c01\u88c5\u5230\u4e00\u4e2a\u7c7b\u4e2d\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 # 1. \u81ea\u5b9a\u4e49MyResponse\u7c7b class MyResponse : def __init__ ( self ): self . status = 100 self . msg = '\u6210\u529f' @property def get_dict ( self ): return self . __dict__ class BooksView ( APIView ): def get ( self , request ): response = MyResponse () books = Book . objects . all () book_ser_obj = BookSerializer ( books , many = True ) # \u5e8f\u5217\u5316\u591a\u6761,\u5982\u679c\u5e8f\u5217\u5316\u4e00\u6761\uff0c\u4e0d\u9700\u8981\u5199 response . data = book_ser_obj . data return Response ( response . get_dict ) \u4e94\u3001 SerializerMethodField \u00b6 \u5982\u679c\u60f3\u8981\u5728\u5e8f\u5217\u5316\u7684\u5b57\u6bb5\u4e2d\u52a0\u5165 authors \uff0c\u76f4\u63a5\u52a0 authors = serializers.CharField() \u8fd4\u56de\u7684\u662f \"authors\": \"app.Author.None\" \u3002\u9700\u8981\u501f\u52a9 SerializerMethodField \u6765\u8fd4\u56de\u5176\u4ed6\u5b57\u6bb5\u3002 1 2 3 4 5 6 7 8 9 10 11 12 class BookSerializer ( serializers . Serializer ): ... # \u9700\u8981\u6709\u4e2a\u914d\u5957\u65b9\u6cd5\uff0c\u65b9\u6cd5\u540d\u53ebget_\u5b57\u6bb5\u540d\uff0c\u8fd4\u56de\u503c\u5c31\u662f\u8981\u663e\u793a\u7684\u4e1c\u897f authors = serializers . SerializerMethodField () def get_authors ( self , instance ): # book\u5bf9\u8c61 authors = instance . authors . all () # \u53d6\u51fa\u6240\u6709\u4f5c\u8005 res = [] for author in authors : res . append ({ 'name' : author . name , 'age' : author . age }) return res \u516d\u3001 \u6a21\u578b\u7c7b\u5e8f\u5217\u5316\u5668 ModelSerializer \u00b6 \u4e0d\u9700\u8981\u91cd\u5199 create() \u548c update() \u65b9\u6cd5\u4e86\uff0c\u5176\u4ed6\u4f7f\u7528\u548c\u4e0a\u8ff0\u4e00\u6837\u3002 \u5e8f\u5217\u5316\u6570\u636e\u5e93\u65f6\u4f7f\u7528 1. \u5b9a\u4e49 \u00b6 1 2 3 4 class BookModelSerializer ( serializers . ModelSerializer ): class Meta : model = Book # \u6307\u660e\u53c2\u7167\u54ea\u4e2a\u6a21\u578b\u7c7b\uff0c\u5bf9\u5e94\u4e0amodels.py\u4e2d\u7684\u6a21\u578b fields = '__all__' # \u6307\u660e\u4e3a\u6a21\u578b\u7c7b\u7684\u54ea\u4e9b\u5b57\u6bb5\u751f\u6210 2. \u6307\u5b9a\u5e8f\u5217\u5316\u5b57\u6bb5 \u00b6 2.1 \u4f7f\u7528 fields \u6765\u660e\u786e\u5b57\u6bb5\uff0c __all__ \u8868\u540d\u5305\u542b\u6240\u6709\u5b57\u6bb5\uff0c\u4e5f\u53ef\u4ee5\u5199\u660e\u5177\u4f53\u54ea\u4e9b\u5b57\u6bb5\uff0c\u5982 \u00b6 1 2 3 4 class BookModelSerializer ( serializers . ModelSerializer ): class Meta : model = Book fields = ( 'id' , 'title' , 'price' ) # \u53ea\u5e8f\u5217\u5316\u6307\u5b9a\u7684\u5b57\u6bb5 2.2 \u4f7f\u7528 exclude \u6392\u9664\u5b57\u6bb5 \u00b6 1 2 3 4 class BookModelSerializer ( serializers . ModelSerializer ): class Meta : model = Book exclude = ( 'name' ,) # fields\u548cexclude\u53ea\u80fd\u5199\u5176\u4e2d\u4e00\u4e2a 2.3 \u6307\u660e\u53ea\u8bfb\u5b57\u6bb5 \u00b6 1 2 3 4 5 class BookModelSerializer ( serializers . ModelSerializer ): class Meta : model = Book fields = '__all__' read_only_fields = ( 'name' ,) 2.4 \u989d\u5916\u53c2\u6570 \u00b6 1 2 3 4 5 6 7 class BookModelSerializer ( serializers . ModelSerializer ): class Meta : model = Book fields = '__all__' extra_kwargs = { # \u7c7b\u4f3c\u4e8e\u8fd9\u79cd\u5f62\u5f0fname=serializers.CharField(max_length=16,min_length=4) 'price' : { 'write_only' : True }, } 2.5 depth \u00b6 \u8fde\u8868\u6309\u5c42\u6b21\u6df1\u5ea6\u8fd4\u56de\u6bcf\u4e00\u5c42\u7684\u6240\u6709 \u5b57\u6bb5 \u8fd4\u56de\u7684\u5b57\u6bb5\u8fc7\u591a","title":"\u5e8f\u5217\u5316\uff08Serializers\uff09"},{"location":"programming/python/DjangoRESTframework/%E5%BA%8F%E5%88%97%E5%8C%96/#serializers","text":"","title":"\u5e8f\u5217\u5316\uff08Serializers\uff09"},{"location":"programming/python/DjangoRESTframework/%E5%BA%8F%E5%88%97%E5%8C%96/#_1","text":"\u5e8f\u5217\u5316\uff1a\u5e8f\u5217\u5316\u5668\u4f1a\u628a\u6a21\u578b\u5bf9\u8c61\u8f6c\u6362\u6210\u5b57\u5178,\u7ecf\u8fc7 response \u4ee5\u540e\u53d8\u6210 json \u5b57\u7b26\u4e32 \u53cd\u5e8f\u5217\u5316\uff1a\u628a\u5ba2\u6237\u7aef\u53d1\u9001\u8fc7\u6765\u7684\u6570\u636e\u7ecf\u8fc7 request \u4ee5\u540e\u53d8\u6210\u5b57\u5178\uff0c\u5e8f\u5217\u5316\u5668\u53ef\u4ee5\u628a\u5b57\u5178\u8f6c\u6210\u6a21\u578b\u3002","title":"\u4e00\u3001\u5e8f\u5217\u5316"},{"location":"programming/python/DjangoRESTframework/%E5%BA%8F%E5%88%97%E5%8C%96/#_2","text":"","title":"\u4e8c\u3001\u57fa\u672c\u4f7f\u7528"},{"location":"programming/python/DjangoRESTframework/%E5%BA%8F%E5%88%97%E5%8C%96/#1","text":"\u4f7f\u7528\u6d41\u7a0b\uff1a \u65b0\u5efa\u4e00\u4e2a py \u6587\u4ef6\uff08\u4e13\u95e8\u7528\u6765\u5199\u5e8f\u5217\u5316\u7c7b\uff09\u5199\u4e00\u4e2a\u5e8f\u5217\u5316\u7684\u7c7b\uff0c\u7ee7\u627f Serializer \u3002\u5728\u7c7b\u4e2d\u5199\u8981\u5e8f\u5217\u5316\u7684\u5b57\u6bb5\uff08\u60f3\u5e8f\u5217\u5316\u54ea\u4e2a\u5b57\u6bb5\uff0c\u5c31\u5728\u7c7b\u4e2d\u5199\u54ea\u4e2a\u5b57\u6bb5\uff09\u3002 \u5728\u89c6\u56fe\u7c7b\u4e2d\u4f7f\u7528\uff1a\u5bfc\u5165\u5e8f\u5217\u5316\u7c7b\u7136\u540e\u5b9e\u4f8b\u5316\u5f97\u5230\u5e8f\u5217\u5316\u7c7b\u7684\u5bf9\u8c61\uff0c\u5e76\u4e14\u628a\u8981\u5e8f\u5217\u5316\u7684\u5bf9\u8c61\u4f20\u5165\u3002 \u5e8f\u5217\u5316\u7c7b\u7684\u5bf9\u8c61.data \u53ef\u4ee5\u5f97\u5230\u4e00\u4e2a\u5b57\u5178 \u628a\u5b57\u5178\u8fd4\u56de\uff1a\u5982\u679c\u4e0d\u4f7f\u7528 rest_framework \u7684 Response \uff0c\u5c31\u5f97\u4f7f\u7528 JsonResponse","title":"1. \u67e5"},{"location":"programming/python/DjangoRESTframework/%E5%BA%8F%E5%88%97%E5%8C%96/#1-modelspy","text":"\u5e8f\u5217\u5316 Serializers \u662f\u4e3a\u4e86\u65b9\u4fbf\u64cd\u4f5c\u6a21\u578b\uff0c\u5148\u51c6\u5907models\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 class Book ( models . Model ): title = models . CharField ( max_length = 32 , verbose_name = \"\u4e66\u540d\" ) price = models . DecimalField ( max_digits = 8 , decimal_places = 2 , verbose_name = \"\u4ef7\u683c\" ) sales = models . IntegerField ( verbose_name = '\u9500\u552e\u91cf' ) publish = models . ForeignKey ( to = 'Publish' ) authors = models . ManyToManyField ( to = 'Author' ) class Publish ( models . Model ): name = models . CharField ( max_length = 32 , verbose_name = \"\u51fa\u7248\u793e\u540d\u79f0\" ) addr = models . CharField ( max_length = 64 , verbose_name = \"\u901a\u8baf\u5730\u5740\" ) class Author ( models . Model ): name = models . CharField ( max_length = 32 , verbose_name = \"\u4f5c\u8005\u59d3\u540d\" ) age = models . IntegerField ( verbose_name = \"\u5e74\u9f84\" ) author_detail = models . OneToOneField ( to = 'AuthorDetail' ) class AuthorDetail ( models . Model ): email = models . EmailField ( verbose_name = \"\u90ae\u7bb1\" ) addr = models . CharField ( max_length = 32 , verbose_name = \"\u901a\u8baf\u5730\u5740\" )","title":"1. \u51c6\u5907models.py"},{"location":"programming/python/DjangoRESTframework/%E5%BA%8F%E5%88%97%E5%8C%96/#2","text":"\u65b0\u5efa\u4e00\u4e2a serializers.py 1 2 3 4 5 6 7 8 9 10 11 from rest_framework import serializers class BookSerializer ( serializers . Serializer ): # \u5199\u4e0a\u8981\u5e8f\u5217\u5316\u7684\u5b57\u6bb5\uff1aserializers.\u5b57\u6bb5\u7c7b\u578b() # \u952e\u7684\u540d\u5b57\u8981\u548cmodel.py\u4e2d\u7684\u4e00\u6837 id = serializers . IntegerField () title = serializers . CharField () price = serializers . DecimalField ( max_digits = 8 , decimal_places = 2 ) sales = serializers . IntegerField () publish_id = serializers . IntegerField ()","title":"2. \u521b\u5efa\u5e8f\u5217\u5316\u7684\u7c7b"},{"location":"programming/python/DjangoRESTframework/%E5%BA%8F%E5%88%97%E5%8C%96/#3-viewspy","text":"\u9700\u8981\u7ee7\u627f rest_framework \u4e2d\u7684 APIView \u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 from django.shortcuts import render , HttpResponse # Create your views here. from rest_framework.views import APIView from app.models import Book from app.serializers import BookSerializer from rest_framework.response import Response class BookView ( APIView ): # \u67e5\u8be2\u4e00\u6761\u6570\u636e def get ( self , request , pk ): book = Book . objects . filter ( id = pk ) . first () book_ser_obj = BookSerializer ( book ) # \u5b9e\u4f8b\u5316\uff0c\u4f20\u5165\u8981\u5e8f\u5217\u5316\u7684\u5bf9\u8c61 return Response ( book_ser_obj . data ) # \u8fd4\u56de\u5e8f\u5217\u5316\u4ee5\u540e\u7684\u5b57\u5178","title":"3. \u5728views.py\u5199\u89c6\u56fe"},{"location":"programming/python/DjangoRESTframework/%E5%BA%8F%E5%88%97%E5%8C%96/#4-urlspy","text":"1 2 3 4 5 6 7 8 from django.conf.urls import url from django.contrib import admin from app import views urlpatterns = [ url ( r '^admin/' , admin . site . urls ), url ( r '^books/(?P<pk>\\d)' , views . BookView . as_view ()), ]","title":"4. \u5728urls.py\u6ce8\u518c\u8def\u7531"},{"location":"programming/python/DjangoRESTframework/%E5%BA%8F%E5%88%97%E5%8C%96/#5","text":"","title":"5. \u9a8c\u8bc1"},{"location":"programming/python/DjangoRESTframework/%E5%BA%8F%E5%88%97%E5%8C%96/#2_1","text":"\u4f7f\u7528\u6d41\u7a0b\uff1a \u5199\u4e00\u4e2a\u5e8f\u5217\u5316\u7684\u7c7b\uff0c\u7ee7\u627f Serializer \u3002\u5728\u7c7b\u4e2d\u5199\u8981\u53cd\u5e8f\u5217\u5316\u7684\u5b57\u6bb5\u3002 \u5728\u89c6\u56fe\u7c7b\u4e2d\u4f7f\u7528\uff1a\u5bfc\u5165\u5e8f\u5217\u5316\u7c7b\uff1b\u5b9e\u4f8b\u5316\u5f97\u5230\u5e8f\u5217\u5316\u7c7b\u7684\u5bf9\u8c61\uff0c\u628a\u8981\u4fee\u6539\u7684\u5bf9\u8c61\u548c\u4fee\u6539\u7684\u6570\u636e\u4f20\u5165\u3002\u5982\uff1a book_ser_obj=BookSerializer(instance=book,data=request.data) \u6570\u636e\u6821\u9a8c book_ser_obj.is_valid() \u5982\u679c\u6821\u9a8c\u901a\u8fc7\uff0c\u5c31\u4fdd\u5b58\uff1a book_ser_obj.save() \u5982\u679c\u6821\u9a8c\u4e0d\u901a\u8fc7\uff0c\u81ea\u5df1\u5199\u903b\u8f91\u5904\u7406 \u5982\u679c\u5b57\u6bb5\u7684\u6821\u9a8c\u89c4\u5219\u4e0d\u591f\uff0c\u53ef\u4ee5\u5199\u94a9\u5b50\u51fd\u6570 \u5c40\u90e8\u94a9\u5b50\uff1a\u6821\u9a8c\u4e00\u4e2a\u5b57\u6bb5 \u5168\u5c40\u94a9\u5b50\uff1a\u540c\u65f6\u6821\u9a8c\u591a\u4e2a\u5b57\u6bb5","title":"2. \u6539"},{"location":"programming/python/DjangoRESTframework/%E5%BA%8F%E5%88%97%E5%8C%96/#21-put","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 class BookView ( APIView ): ... def put ( self , request , pk ): # \u5b9a\u4e49\u4e00\u4e2a\u8fd4\u56de\u7684\u6570\u636e response_msg = { 'status' : 100 , 'msg' : '\u6210\u529f' } # \u627e\u5230\u8981\u4fee\u6539\u7684\u5bf9\u8c61 book = Book . objects . filter ( id = pk ) . first () # \u5f97\u5230\u4e00\u4e2a\u5e8f\u5217\u5316\u7c7b\u7684\u5bf9\u8c61 # \u9700\u8981\u4f20\u5165\u7684\u53c2\u6570\u53ef\u4ee5\u518d\u7236\u7c7b\u4e2d\u627e\u5230 # class BaseSerializer(Field): # def __init__(self, instance=None, data=empty, **kwargs): book_ser_obj = BookSerializer ( instance = book , data = request . data ) # \u8fdb\u884c\u6570\u636e\u9a8c\u8bc1 if book_ser_obj . is_valid (): # \u8fd4\u56deTrue\u8868\u793a\u9a8c\u8bc1\u901a\u8fc7 book_ser_obj . save () response_msg [ 'data' ] = book_ser_obj . data # \u5b57\u5178\u683c\u5f0f else : response_msg [ 'status' ] = 101 response_msg [ 'msg' ] = '\u6570\u636e\u6821\u9a8c\u5931\u8d25' response_msg [ 'data' ] = book_ser_obj . errors return Response ( response_msg ) \u5f53\u76f4\u63a5\u53d1\u9001 PUT \u8bf7\u6c42\u65f6\uff0c\u4f1a\u629b\u51fa\u5f02\u5e38 1 2 File \"D:\\APP\\python36\\lib\\site-packages\\rest_framework\\serializers.py\" , line 165 , in update raise NotImplementedError ( '`update()` must be implemented.' ) \u5728 serializers.py \u4e2d\u901a\u8fc7\u6765 raise \u629b\u51fa\u5f02\u5e38\uff0c\u8981\u6c42\u6211\u4eec\u91cd\u65b0 update() \u65b9\u6cd5\u3002 1 2 3 4 5 # serializers.py class BaseSerializer ( Field ): ... def update ( self , instance , validated_data ): raise NotImplementedError ( '`update()` must be implemented.' )","title":"2.1 \u5728\u89c6\u56fe\u7c7b\u4e2d\u5199put()\u65b9\u6cd5"},{"location":"programming/python/DjangoRESTframework/%E5%BA%8F%E5%88%97%E5%8C%96/#22-serializespyupdate","text":"1 2 3 4 5 6 7 8 9 10 11 class BookSerializer ( serializers . Serializer ): ... def update ( self , instance , validated_data ): # instance\u662fbook\u8fd9\u4e2a\u5bf9\u8c61 # validated_data\u662f\u6821\u9a8c\u540e\u7684\u6570\u636e instance . title = validated_data . get ( 'title' ) instance . price = validated_data . get ( 'price' ) instance . sales = validated_data . get ( 'sales' ) instance . publish_id = validated_data . get ( 'publish_id' ) instance . save () # book.save() django \u7684orm\u63d0\u4f9b\u7684 return instance","title":"2.2 \u5728serializes.py\u4e2d\u91cd\u5199update()\u65b9\u6cd5"},{"location":"programming/python/DjangoRESTframework/%E5%BA%8F%E5%88%97%E5%8C%96/#23","text":"","title":"2.3 \u6570\u636e\u6821\u9a8c\u7684\u94a9\u5b50\u51fd\u6570"},{"location":"programming/python/DjangoRESTframework/%E5%BA%8F%E5%88%97%E5%8C%96/#231","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 # serializers.py from rest_framework import serializers from rest_framework.serializers import ValidationError class BookSerializer ( serializers . Serializer ): ... # \u5c40\u90e8\u94a9\u5b50 def validate_price ( self , data ): # validate_\u5b57\u6bb5\u540d \u63a5\u6536\u4e00\u4e2a\u53c2\u6570 # \u5982\u679c\u4ef7\u683c\u5c0f\u4e8e0\uff0c\u5c31\u6821\u9a8c\u4e0d\u901a\u8fc7 print ( type ( data )) # <class 'str'> print ( data ) # -200 if float ( data ) > 0 : return data else : # \u6821\u9a8c\u5931\u8d25\uff0c\u629b\u5f02\u5e38 raise ValidationError ( '\u4ef7\u683c\u4e0d\u80fd\u4e3a\u8d1f\u6570' )","title":"2.3.1 \u5c40\u90e8\u94a9\u5b50"},{"location":"programming/python/DjangoRESTframework/%E5%BA%8F%E5%88%97%E5%8C%96/#232","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 from rest_framework import serializers from rest_framework.serializers import ValidationError class BookSerializer ( serializers . Serializer ): ... # \u5168\u5c40\u94a9\u5b50\uff0c\u6821\u9a8c\u591a\u4e2a\u5b57\u6bb5 def validate ( self , validate_data ): price = validate_data . get ( 'price' ) sales = validate_data . get ( 'sales' ) if price < 0 or sales < 0 : raise ValidationError ( '\u5b57\u6bb5\u4e0d\u80fd\u4e3a\u8d1f\u6570' ) else : return validate_data","title":"2.3.2 \u5168\u5c40\u94a9\u5b50"},{"location":"programming/python/DjangoRESTframework/%E5%BA%8F%E5%88%97%E5%8C%96/#3","text":"1 2 3 4 5 6 7 8 9 10 # views.py from rest_framework.response import Response class BookView ( APIView ): ... def delete ( self , request , pk ): response_msg = { 'status' : 100 , 'msg' : '\u6210\u529f' } ret = Book . objects . filter ( pk = pk ) . delete () return Response ( response_msg ) \u4ee5\u4e0a\u7684\u4e09\u79cd\u65b9\u6cd5\u5728\u53d1\u9001\u8bf7\u6c42\u65f6\uff0c\u90fd\u9700\u8981\u5728 books/ \u540e\u52a0\u4e00\u4e2a\u4e3b\u952e\u503c\u3002\u6240\u4ee5\u4e0a\u8ff0\u7684\u4e09\u79cd\u65b9\u6cd5\u53ef\u4ee5\u516c\u7528\u540c\u4e00\u4e2a\u89c6\u56fe\u3002\u4f46\u662f\u5bf9\u4e8e\u67e5\u8be2\u6240\u6709\u6570\u636e\u548c\u65b0\u589e\u6570\u636e\uff0c books/ \u540e\u4e0d\u9700\u8981\u52a0\u53c2\u6570\uff0c\u9700\u8981\u65b0\u5efa\u4e00\u4e2a\u89c6\u56fe\u7c7b\u548c url \u5339\u914d\u89c4\u5219\u6765\u5b9e\u73b0\u67e5\u8be2\u6240\u6709\u548c\u65b0\u589e\u6570\u636e\u7684\u65b9\u6cd5\u3002","title":"3. \u5220"},{"location":"programming/python/DjangoRESTframework/%E5%BA%8F%E5%88%97%E5%8C%96/#4","text":"\u65b0\u589e\u4e00\u4e2a\u89c6\u56fe\u7c7b 1 2 3 4 5 6 7 class BooksView ( APIView ): def get ( self , request ): response_msg = { 'status' : 100 , 'msg' : '\u6210\u529f' } books = Book . objects . all () book_ser_obj = BookSerializer ( books , many = True ) # \u5e8f\u5217\u5316\u591a\u6761,\u5982\u679c\u5e8f\u5217\u5316\u4e00\u6761\uff0c\u4e0d\u9700\u8981\u5199 response_msg [ 'data' ] = book_ser_obj . data return Response ( response_msg ) \u6dfb\u52a0\u8def\u7531 1 2 3 4 5 6 7 8 9 from django.conf.urls import url from django.contrib import admin from app import views urlpatterns = [ url ( r '^admin/' , admin . site . urls ), url ( r '^books/(?P<pk>\\d)' , views . BookView . as_view ()), url ( r '^books/' , views . BooksView . as_view ()), ]","title":"4. \u67e5\u8be2\u6240\u6709"},{"location":"programming/python/DjangoRESTframework/%E5%BA%8F%E5%88%97%E5%8C%96/#5_1","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 class BooksView ( APIView ): # \u65b0\u589e def post ( self , request ): response_msg = { 'status' : 100 , 'msg' : '\u6210\u529f' } # \u4fee\u6539\u624d\u6709instance\uff0c\u65b0\u589e\u6ca1\u6709instance\uff0c\u53ea\u6709data book_ser_obj = BookSerializer ( data = request . data ) # \u6821\u9a8c\u5b57\u6bb5 if book_ser_obj . is_valid (): book_ser_obj . save () # \u9700\u8981\u4ece\u5199create() response_msg [ 'data' ] = book_ser_obj . data else : response_msg [ 'status' ] = 102 response_msg [ 'msg' ] = '\u6570\u636e\u6821\u9a8c\u5931\u8d25' response_msg [ 'data' ] = book_ser_obj . errors return Response ( response_msg ) \u76f4\u63a5\u8bbf\u95ee\u540c\u6837\u4f1a\u629b\u51fa\u5f02\u5e38\uff0c\u9700\u8981\u5728\u5e8f\u5217\u5316\u7c7b\u4e2d\u91cd\u5199 create() \u65b9\u6cd5 1 2 3 4 5 6 7 # serializers.py from app.views import Book class BookSerializer ( serializers . Serializer ): ... def create ( self , validated_data ): instance = Book . objects . create ( ** validated_data ) return instance","title":"5. \u589e"},{"location":"programming/python/DjangoRESTframework/%E5%BA%8F%E5%88%97%E5%8C%96/#source","text":"","title":"\u4e09\u3001source\u7684\u4f7f\u7528"},{"location":"programming/python/DjangoRESTframework/%E5%BA%8F%E5%88%97%E5%8C%96/#1_1","text":"\u5982\u679c\u4e0d\u60f3\u76f4\u63a5\u5c06model\u4e2d\u5b57\u6bb5\u7684\u540d\u5b57\u66b4\u9732\uff0c\u53ef\u4ee5\u901a\u8fc7source\u6765\u6307\u5b9amodel\u4e2d\u5b57\u6bb5\u7684\u540d\u5b57\uff0c\u5e8f\u5217\u5316\u7c7b\u4e2d\u7684\u952e\u53ef\u4ee5\u7528\u522b\u7684\u540d\u5b57\u6765\u4ee3\u66ff\u3002 1 2 3 4 5 class BookSerializer ( serializers . Serializer ): id = serializers . IntegerField () # title = serializers.CharField() name = serializers . CharField ( source = 'title' ) ...","title":"1. \u4fee\u6539\u5e8f\u5217\u5316\u7c7b\u4e2d\u5b57\u6bb5\u7684\u540d\u5b57"},{"location":"programming/python/DjangoRESTframework/%E5%BA%8F%E5%88%97%E5%8C%96/#2_2","text":"1 2 3 class BookSerializer ( serializers . Serializer ): ... publish = serializers . CharField ( source = 'publish.name' ) # \u67e5\u8be2\u51fa\u51fa\u7248\u793e\u7684\u540d\u79f0","title":"2. \u8de8\u8868"},{"location":"programming/python/DjangoRESTframework/%E5%BA%8F%E5%88%97%E5%8C%96/#3-model","text":"source \u5982\u679c\u662f\u5b57\u6bb5\uff0c\u4f1a\u663e\u793a\u5b57\u6bb5\uff0c\u5982\u679c\u662f\u65b9\u6cd5\uff0c\u4f1a\u6267\u884c\u65b9\u6cd5\uff0c\u4e0d\u7528\u52a0\u62ec\u53f7\u3002 \u5982\u5728\u6a21\u578b\u4e2d\u5b9a\u4e49\u4e00\u4e2a\u65b9\u6cd5\uff0c\u76f4\u63a5\u53ef\u4ee5\u5728\u5728source\u6307\u5b9a\u6267\u884c \u3002 1 2 3 4 5 6 7 8 9 10 # \u5728\u6a21\u578b\u4e2d\u52a0\u4e00\u4e2achoices\u5b57\u6bb5 class Book ( models . Model ): ... stock_status = models . IntegerField ( choices = (( 0 , '\u5145\u8db3' ), ( 1 , \"\u7d27\u5f20\" ), ( 2 , \"\u65e0\u8d27\" )), verbose_name = '\u5e93\u5b58\u72b6\u6001' , default = 0 ) # \u6a21\u578b\u8868\u4e2d\u81ea\u5df1\u5b9a\u4e49\u7684\u65b9\u6cd5 def access_time ( self ): import datetime return datetime . datetime . now () \u5982\u679c\u60f3\u5728\u54cd\u5e94\u4e2d\u663e\u793a\u8fd9\u4e2a\u5b57\u6bb5\u5bf9\u5e94\u7684\u6c49\u5b57\uff0c\u5c31\u53ef\u4ee5\u4f7f\u7528source\u3002 1 2 3 4 class BookSerializer ( serializers . Serializer ): ... stock_status = serializers . CharField ( source = 'get_stock_status_display' ) time = serializers . CharField ( source = 'access_time' )","title":"3. \u6267\u884cmodel\u8868\u4e2d\u7684\u65b9\u6cd5"},{"location":"programming/python/DjangoRESTframework/%E5%BA%8F%E5%88%97%E5%8C%96/#response","text":"\u4e0a\u9762\u7684\u6bcf\u4e00\u4e2a\u65b9\u6cd5\u4e2d\u90fd\u5199\u4e86\u4e00\u4e2a response_msg \u3002\u53ef\u4ee5\u5229\u7528\u7684\u9762\u5411\u5bf9\u8c61\u7684\u5c01\u88c5\u7279\u6027\uff0c\u628a\u54cd\u5e94\u7684\u6d88\u606f\u5c01\u88c5\u5230\u4e00\u4e2a\u7c7b\u4e2d\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 # 1. \u81ea\u5b9a\u4e49MyResponse\u7c7b class MyResponse : def __init__ ( self ): self . status = 100 self . msg = '\u6210\u529f' @property def get_dict ( self ): return self . __dict__ class BooksView ( APIView ): def get ( self , request ): response = MyResponse () books = Book . objects . all () book_ser_obj = BookSerializer ( books , many = True ) # \u5e8f\u5217\u5316\u591a\u6761,\u5982\u679c\u5e8f\u5217\u5316\u4e00\u6761\uff0c\u4e0d\u9700\u8981\u5199 response . data = book_ser_obj . data return Response ( response . get_dict )","title":"\u56db\u3001\u5c01\u88c5Response\u5bf9\u8c61"},{"location":"programming/python/DjangoRESTframework/%E5%BA%8F%E5%88%97%E5%8C%96/#serializermethodfield","text":"\u5982\u679c\u60f3\u8981\u5728\u5e8f\u5217\u5316\u7684\u5b57\u6bb5\u4e2d\u52a0\u5165 authors \uff0c\u76f4\u63a5\u52a0 authors = serializers.CharField() \u8fd4\u56de\u7684\u662f \"authors\": \"app.Author.None\" \u3002\u9700\u8981\u501f\u52a9 SerializerMethodField \u6765\u8fd4\u56de\u5176\u4ed6\u5b57\u6bb5\u3002 1 2 3 4 5 6 7 8 9 10 11 12 class BookSerializer ( serializers . Serializer ): ... # \u9700\u8981\u6709\u4e2a\u914d\u5957\u65b9\u6cd5\uff0c\u65b9\u6cd5\u540d\u53ebget_\u5b57\u6bb5\u540d\uff0c\u8fd4\u56de\u503c\u5c31\u662f\u8981\u663e\u793a\u7684\u4e1c\u897f authors = serializers . SerializerMethodField () def get_authors ( self , instance ): # book\u5bf9\u8c61 authors = instance . authors . all () # \u53d6\u51fa\u6240\u6709\u4f5c\u8005 res = [] for author in authors : res . append ({ 'name' : author . name , 'age' : author . age }) return res","title":"\u4e94\u3001SerializerMethodField"},{"location":"programming/python/DjangoRESTframework/%E5%BA%8F%E5%88%97%E5%8C%96/#modelserializer","text":"\u4e0d\u9700\u8981\u91cd\u5199 create() \u548c update() \u65b9\u6cd5\u4e86\uff0c\u5176\u4ed6\u4f7f\u7528\u548c\u4e0a\u8ff0\u4e00\u6837\u3002 \u5e8f\u5217\u5316\u6570\u636e\u5e93\u65f6\u4f7f\u7528","title":"\u516d\u3001 \u6a21\u578b\u7c7b\u5e8f\u5217\u5316\u5668ModelSerializer"},{"location":"programming/python/DjangoRESTframework/%E5%BA%8F%E5%88%97%E5%8C%96/#1_2","text":"1 2 3 4 class BookModelSerializer ( serializers . ModelSerializer ): class Meta : model = Book # \u6307\u660e\u53c2\u7167\u54ea\u4e2a\u6a21\u578b\u7c7b\uff0c\u5bf9\u5e94\u4e0amodels.py\u4e2d\u7684\u6a21\u578b fields = '__all__' # \u6307\u660e\u4e3a\u6a21\u578b\u7c7b\u7684\u54ea\u4e9b\u5b57\u6bb5\u751f\u6210","title":"1. \u5b9a\u4e49"},{"location":"programming/python/DjangoRESTframework/%E5%BA%8F%E5%88%97%E5%8C%96/#2_3","text":"","title":"2.   \u6307\u5b9a\u5e8f\u5217\u5316\u5b57\u6bb5"},{"location":"programming/python/DjangoRESTframework/%E5%BA%8F%E5%88%97%E5%8C%96/#21-fields__all__","text":"1 2 3 4 class BookModelSerializer ( serializers . ModelSerializer ): class Meta : model = Book fields = ( 'id' , 'title' , 'price' ) # \u53ea\u5e8f\u5217\u5316\u6307\u5b9a\u7684\u5b57\u6bb5","title":"2.1  \u4f7f\u7528fields\u6765\u660e\u786e\u5b57\u6bb5\uff0c__all__\u8868\u540d\u5305\u542b\u6240\u6709\u5b57\u6bb5\uff0c\u4e5f\u53ef\u4ee5\u5199\u660e\u5177\u4f53\u54ea\u4e9b\u5b57\u6bb5\uff0c\u5982"},{"location":"programming/python/DjangoRESTframework/%E5%BA%8F%E5%88%97%E5%8C%96/#22-exclude","text":"1 2 3 4 class BookModelSerializer ( serializers . ModelSerializer ): class Meta : model = Book exclude = ( 'name' ,) # fields\u548cexclude\u53ea\u80fd\u5199\u5176\u4e2d\u4e00\u4e2a","title":"2.2  \u4f7f\u7528exclude\u6392\u9664\u5b57\u6bb5"},{"location":"programming/python/DjangoRESTframework/%E5%BA%8F%E5%88%97%E5%8C%96/#23_1","text":"1 2 3 4 5 class BookModelSerializer ( serializers . ModelSerializer ): class Meta : model = Book fields = '__all__' read_only_fields = ( 'name' ,)","title":"2.3  \u6307\u660e\u53ea\u8bfb\u5b57\u6bb5"},{"location":"programming/python/DjangoRESTframework/%E5%BA%8F%E5%88%97%E5%8C%96/#24","text":"1 2 3 4 5 6 7 class BookModelSerializer ( serializers . ModelSerializer ): class Meta : model = Book fields = '__all__' extra_kwargs = { # \u7c7b\u4f3c\u4e8e\u8fd9\u79cd\u5f62\u5f0fname=serializers.CharField(max_length=16,min_length=4) 'price' : { 'write_only' : True }, }","title":"2.4 \u989d\u5916\u53c2\u6570"},{"location":"programming/python/DjangoRESTframework/%E5%BA%8F%E5%88%97%E5%8C%96/#25depth","text":"\u8fde\u8868\u6309\u5c42\u6b21\u6df1\u5ea6\u8fd4\u56de\u6bcf\u4e00\u5c42\u7684\u6240\u6709 \u5b57\u6bb5 \u8fd4\u56de\u7684\u5b57\u6bb5\u8fc7\u591a","title":"2.5depth"},{"location":"programming/python/DjangoRESTframework/%E8%87%AA%E5%AE%9A%E4%B9%89response/","text":"\u4e00\u3001\u81ea\u5b9a\u4e49\u5f02\u5e38\u5904\u7406 \u00b6 1 2 3 4 5 6 7 8 9 10 from rest_framework.response import Response class APIResponse ( Response ): def __init__ ( self , code = 100 , msg = '\u6210\u529f' , data = None , status = None , headers = None , ** kwargs ): dic = { 'code' : code , 'msg' : msg } if data : dic = { 'code' : code , 'msg' : msg , 'data' : data } dic . update ( kwargs ) super () . __init__ ( data = dic , status = status , headers = headers )","title":"\u81ea\u5b9a\u4e49response"},{"location":"programming/python/DjangoRESTframework/%E8%87%AA%E5%AE%9A%E4%B9%89response/#_1","text":"1 2 3 4 5 6 7 8 9 10 from rest_framework.response import Response class APIResponse ( Response ): def __init__ ( self , code = 100 , msg = '\u6210\u529f' , data = None , status = None , headers = None , ** kwargs ): dic = { 'code' : code , 'msg' : msg } if data : dic = { 'code' : code , 'msg' : msg , 'data' : data } dic . update ( kwargs ) super () . __init__ ( data = dic , status = status , headers = headers )","title":"\u4e00\u3001\u81ea\u5b9a\u4e49\u5f02\u5e38\u5904\u7406"},{"location":"programming/python/DjangoRESTframework/%E8%A7%86%E5%9B%BE/","text":"\u89c6\u56fe \u00b6 rest framework \u4e2d\u7684\u4e24\u4e2a\u89c6\u56fe\u57fa\u7c7b APIView GenericAPIView \u4e00\u3001\u57fa\u4e8eAPIView\u5199\u63a5\u53e3 \u00b6 APIView \u7ee7\u627f\u81ea View \u3002 1 2 3 class Book ( models . Model ): title = models . CharField ( max_length = 32 , verbose_name = \"\u4e66\u540d\" ) price = models . DecimalField ( max_digits = 8 , decimal_places = 2 , verbose_name = \"\u4ef7\u683c\" ) 1. \u5e8f\u5217\u5316\u7c7b \u00b6 1 2 3 4 5 6 7 8 from rest_framework import serializers from app.views import Book class BookSerializer ( serializers . ModelSerializer ): class Meta : model = Book fields = '__all__' 2. \u89c6\u56fe \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 from django.shortcuts import render # Create your views here. from rest_framework.views import APIView from app.models import Book from app.serializers import BookSerializer from rest_framework.response import Response class BookView ( APIView ): def get ( self , request , pk ): book = Book . objects . filter ( id = pk ) . first () book_ser_obj = BookSerializer ( book ) return Response ( book_ser_obj . data ) def put ( self , request , pk ): book = Book . objects . filter ( id = pk ) . first () book_ser_obj = BookSerializer ( instance = book , data = request . data ) if book_ser_obj . is_valid (): # \u8fd4\u56deTrue\u8868\u793a\u9a8c\u8bc1\u901a\u8fc7 book_ser_obj . save () return Response ( book_ser_obj . data ) else : return Response ({ 'status' : 100 , 'msg' : '\u6210\u529f' }) def delete ( self , request , pk ): ret = Book . objects . filter ( pk = pk ) . delete () return Response ({ 'status' : 100 , 'msg' : '\u6210\u529f' }) class BooksView ( APIView ): def get ( self , request ): books = Book . objects . all () book_ser_obj = BookSerializer ( books , many = True ) # \u5e8f\u5217\u5316\u591a\u6761,\u5982\u679c\u5e8f\u5217\u5316\u4e00\u6761\uff0c\u4e0d\u9700\u8981\u5199 return Response ( book_ser_obj . data ) def post ( self , request ): book_ser_obj = BookSerializer ( data = request . data ) if book_ser_obj . is_valid (): book_ser_obj . save () # \u9700\u8981\u4ece\u5199create() return Response ( book_ser_obj . data ) else : return Response ({ 'status' : 100 , 'msg' : '\u6210\u529f' }) # \u589e\u591a\u6761\u6570\u636e # if isinstance(request.data,list): # book_ser_obj = BookSerializer(data=request.data, many=True) # \u5206\u6790\u6e90\u7801 # \u6539\u591a\u6761\u6570\u636e 3. \u8def\u7531 \u00b6 1 2 3 4 5 6 7 8 9 from django.conf.urls import url from django.contrib import admin from app import views urlpatterns = [ url ( r '^admin/' , admin . site . urls ), url ( r '^books/(?P<pk>\\d)' , views . BookView . as_view ()), url ( r '^books/' , views . BooksView . as_view ()), ] \u4e8c\u3001 \u57fa\u4e8e GenericAPIView \u5199\u63a5\u53e3 \u00b6 \u770b\u6e90\u7801\u53ef\u77e5 GenericAPIView \u7ee7\u627f\u4e86 APIView \uff1a 1 2 3 4 5 class GenericAPIView ( views . APIView ): ... queryset = None # queryset\u8981\u4f20queryset\u5bf9\u8c61 serializer_class = None # \u4f7f\u7528\u54ea\u4e2a\u5e8f\u5217\u5316\u7c7b\u6765\u5e8f\u5217\u5316\u6570\u636e ... \u7ee7\u627f GenericAPIView \u4fee\u6539\u89c6\u56fe 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 from django.shortcuts import render # Create your views here. from rest_framework.views import APIView from app.models import Book from app.serializers import BookSerializer from rest_framework.response import Response from rest_framework.generics import GenericAPIView class BookView ( GenericAPIView ): queryset = Book . objects serializer_class = BookSerializer def get ( self , request , pk ): # book = Book.objects.filter(id=pk).first() book = self . get_object () book_ser_obj = self . get_serializer ( book ) return Response ( book_ser_obj . data ) def put ( self , request , pk ): book = self . get_object () book_ser_obj = self . get_serializer ( instance = book , data = request . data ) if book_ser_obj . is_valid (): # \u8fd4\u56deTrue\u8868\u793a\u9a8c\u8bc1\u901a\u8fc7 book_ser_obj . save () return Response ( book_ser_obj . data ) else : return Response ({ 'status' : 100 , 'msg' : '\u6210\u529f' }) def delete ( self , request , pk ): ret = self . get_object () . delete () return Response ({ 'status' : 100 , 'msg' : '\u6210\u529f' }) class BooksView ( GenericAPIView ): queryset = Book . objects serializer_class = BookSerializer def get ( self , request ): # books = Book.objects.all() books = self . get_queryset () # \u770b\u6e90\u7801\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u5c31\u53ea\u6267\u884c\u7684 Book.objects.all() # book_ser_obj = BookSerializer(books, many=True) # \u5e8f\u5217\u5316\u591a\u6761,\u5982\u679c\u5e8f\u5217\u5316\u4e00\u6761\uff0c\u4e0d\u9700\u8981\u5199 book_ser_obj = self . get_serializer ( books , many = True ) return Response ( book_ser_obj . data ) def post ( self , request ): # book_ser_obj = BookSerializer(data=request.data) book_ser_obj = self . get_serializer ( data = request . data ) if book_ser_obj . is_valid (): book_ser_obj . save () # \u9700\u8981\u4ece\u5199create() return Response ( book_ser_obj . data ) else : return Response ({ 'status' : 100 , 'msg' : '\u6210\u529f' }) \u7528\u4e86 GenericAPIView \u4ee5\u540e\uff0c\u518d\u5199\u5176\u4ed6\u6a21\u578b\u7684\u5e8f\u5217\u5316\uff0c\u53ea\u9700\u8981\u4fee\u6539 queryset \u548c serializer_class \u7684\u503c\u5c31\u53ef\u4ee5\u4e86\uff0c\u4e24\u4e2a\u89c6\u56fe\u4e2d\u7684\u65b9\u6cd5\uff08get,post,put,delete\uff09\uff0c\u4e0d\u9700\u8981\u6539\uff0c\u76f4\u63a5\u590d\u5236\u5c31\u53ef\u4ee5\u7528\u4e86\u3002\u4f46\u662f\u8fd9\u79cd\u5199\u6cd5\u5f88\u5197\u4f59\uff0c\u53ef\u4ee5\u628a\u8fd9\u4e94\u4e2a\u65b9\u6cd5\u5c01\u88c5\u8d77\u6765\uff0c\u4e8e\u662f rest framework \u5c31\u6709\u4e86\u4ee5\u4e0b\u7684\u4e94\u4e2a\u89c6\u56fe\u6269\u5c55\u7c7b\u3002 \u4e09\u3001\u57fa\u4e8eGenericAPIView\u548c5\u4e2a\u89c6\u56fe\u6269\u5c55\u7c7b\u5199\u63a5\u53e3 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 # views.py from app.models import Book from app.serializers import BookSerializer from rest_framework.generics import GenericAPIView from rest_framework.mixins import ListModelMixin , CreateModelMixin , UpdateModelMixin , DestroyModelMixin , \\ RetrieveModelMixin class BookView ( GenericAPIView , RetrieveModelMixin , DestroyModelMixin , UpdateModelMixin ): queryset = Book . objects serializer_class = BookSerializer def get ( self , request , pk ): return self . retrieve ( request , pk ) def put ( self , request , pk ): return self . update ( request , pk ) def delete ( self , request , pk ): return self . destroy (( request , pk )) class BooksView ( GenericAPIView , ListModelMixin , CreateModelMixin ): queryset = Book . objects serializer_class = BookSerializer def get ( self , request ): return self . list ( request ) def post ( self , request ): return self . create ( request ) \u56db\u3001 GenericAPIView \u76849\u4e2a\u89c6\u56fe\u5b50\u7c7b \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 # D:\\APP\\python36\\Lib\\site-packages\\rest_framework\\generics.py # \u57fa\u7840\u7684\u4e94\u4e2a\u5b50\u7c7b class CreateAPIView ( mixins . CreateModelMixin , GenericAPIView ): ... class ListAPIView ( mixins . ListModelMixin , GenericAPIView ): ... class DestroyAPIView ( mixins . DestroyModelMixin , GenericAPIView ): ... class UpdateAPIView ( mixins . UpdateModelMixin , GenericAPIView ): ... class RetrieveAPIView ( mixins . RetrieveModelMixin , GenericAPIView ): ... # \u7ec4\u5408\u5230\u4e00\u8d77\u7684 # get\u548cpost\u7ec4\u5408\u4e3a\u4e00\u4e2a class ListCreateAPIView ( mixins . ListModelMixin , mixins . CreateModelMixin , GenericAPIView ): ... # get\u548cdelete\u7ec4\u5408\u4e3a\u4e00\u4e2a class RetrieveDestroyAPIView ( mixins . RetrieveModelMixin , mixins . DestroyModelMixin , GenericAPIView ): ... # get\u548cput\u7ec4\u5408\u4e3a\u4e00\u4e2a class RetrieveUpdateAPIView ( mixins . RetrieveModelMixin , mixins . UpdateModelMixin , GenericAPIView ): ... # get\u3001put\u548cdelete\u7ec4\u5408\u4e3a\u4e00\u4e2a class RetrieveUpdateDestroyAPIView ( mixins . RetrieveModelMixin , mixins . UpdateModelMixin , mixins . DestroyModelMixin , GenericAPIView ): ... \u4f7f\u7528\u89c6\u56fe\u5b50\u7c7b\u4ee5\u540e\u7684 views.py 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 # views.py from app.models import Book from app.serializers import BookSerializer from rest_framework.generics import GenericAPIView , ListAPIView , CreateAPIView , UpdateAPIView , DestroyAPIView , \\ RetrieveAPIView class BookView ( UpdateAPIView , DestroyAPIView , RetrieveAPIView ): queryset = Book . objects serializer_class = BookSerializer class BooksView ( ListAPIView , CreateAPIView ): queryset = Book . objects serializer_class = BookSerializer \u6e90\u7801\u9605\u8bfb 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 class GenericAPIView ( views . APIView ): ... def get_object ( self ): queryset = self . filter_queryset ( self . get_queryset ()) # \u8fd4\u56de\u6240\u6709\u6570\u636equeryset\u5bf9\u8c61 # Perform the lookup filtering. lookup_url_kwarg = self . lookup_url_kwarg or self . lookup_field # lookup_field = 'pk' \u8def\u7531\u6709\u540d\u5206\u7ec4\u4e2d\u7684pk assert lookup_url_kwarg in self . kwargs , ( 'Expected view %s to be called with a URL keyword argument ' 'named \" %s \". Fix your URL conf, or set the `.lookup_field` ' 'attribute on the view correctly.' % ( self . __class__ . __name__ , lookup_url_kwarg ) ) filter_kwargs = { self . lookup_field : self . kwargs [ lookup_url_kwarg ]} obj = get_object_or_404 ( queryset , ** filter_kwargs ) # May raise a permission denied self . check_object_permissions ( self . request , obj ) return obj \u4e0a\u8bc9\u7684\u4e24\u7ec4\u63a5\u53e3\uff0c\u53ef\u4ee5\u4f7f\u7528 ModelViewSet \u6574\u5408\u4e3a\u4e00\u4e2a\u3002 \u4e94\u3001 ModelViewSet \u00b6 1. \u4f7f\u7528 ModelViewSet \u7f16\u51995\u4e2a\u63a5\u53e3 \u00b6 1 2 3 4 5 6 7 8 from app.models import Book from app.serializers import BookSerializer from rest_framework.viewsets import ModelViewSet class BooksView ( ModelViewSet ): # 5\u4e2a\u63a5\u53e3\u90fd\u6709\uff0c\u4f46\u662f\u8def\u7531\u9700\u8981\u7279\u6b8a\u914d\u7f6e queryset = Book . objects serializer_class = BookSerializer \u8def\u7531\u4e2d\u7684 as_view() \u9700\u8981\u4f20\u5165\u53c2\u6570 1 2 3 4 5 6 7 8 9 10 from django.conf.urls import url from django.contrib import admin from app import views urlpatterns = [ url ( r '^admin/' , admin . site . urls ), url ( r '^books/(?P<pk>\\d)' , views . BooksView . as_view ( actions = { 'get' : 'retrieve' , 'put' : 'update' , 'delete' : 'destroy' })), # \u5f53\u8def\u5f84\u5339\u914d\uff0c\u53c8\u662fget\u8bf7\u6c42\uff0c\u4f1a\u6267\u884cBooksView\u7684list\u65b9\u6cd5 url ( r '^books/' , views . BooksView . as_view ( actions = { 'get' : 'list' , 'post' : 'create' })), ] 2. ViewSetMixin \u6e90\u7801\u5206\u6790 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 class ViewSetMixin : # \u91cd\u5199\u4e86as_views\u65b9\u6cd5 @classonlymethod def as_view ( cls , actions = None , ** initkwargs ): def view ( request , * args , ** kwargs ): self = cls ( ** initkwargs ) self . action_map = actions # \u6838\u5fc3\u4ee3\u7801\uff08\u6240\u4ee5\u8def\u7531\u4e2d\u53ea\u8981\u914d\u7f6e\u4e86\u5bf9\u5e94\u5173\u7cfb\uff0c\u6bd4\u5982{'get':'list'}\uff09,\u5f53get\u8bf7\u6c42\u6765\uff0c\u5c31\u4f1a\u6267\u884clist\u65b9\u6cd5 for method , action in actions . items (): # get list handler = getattr ( self , action ) # \u6267\u884c\u5b8c\u4e0a\u4e00\u53e5\uff0chandler\u5c31\u53d8\u6210\u4e86list\u7684\u5185\u5b58\u5730\u5740 setattr ( self , method , handler ) # \u6267\u884c\u5b8c\u4e0a\u4e00\u53e5 \u5bf9\u8c61.get=list ... 1 2 3 4 5 6 7 8 9 10 # \u91cd\u5199\u4e86as_view # \u6838\u5fc3\u4ee3\u7801\uff08\u6240\u4ee5\u8def\u7531\u4e2d\u53ea\u8981\u914d\u7f6e\u4e86\u5bf9\u5e94\u5173\u7cfb\uff0c\u6bd4\u5982{'get':'list'}\uff09,\u5f53get\u8bf7\u6c42\u6765\uff0c\u5c31\u4f1a\u6267\u884clist\u65b9\u6cd5 for method , action in actions . items (): #method\uff1aget # action\uff1alist handler = getattr ( self , action ) #\u6267\u884c\u5b8c\u4e0a\u4e00\u53e5\uff0chandler\u5c31\u53d8\u6210\u4e86list\u7684\u5185\u5b58\u5730\u5740 setattr ( self , method , handler ) #\u6267\u884c\u5b8c\u4e0a\u4e00\u53e5 \u5bf9\u8c61.get=list #for\u5faa\u73af\u6267\u884c\u5b8c\u6bd5 \u5bf9\u8c61.get:\u5bf9\u7740list \u5bf9\u8c61.post\uff1a\u5bf9\u7740create 3 \u7ee7\u627f ViewSetMixin \u7684\u89c6\u56fe\u7c7b \u00b6 1 2 3 4 5 6 7 8 # views.py from rest_framework.viewsets import ViewSetMixin class BooksView ( ViewSetMixin , APIView ): #\u4e00\u5b9a\u8981\u653e\u5728APIVIew\u524d def get_all_book ( self , request ): print ( \"xxxx\" ) book_list = Book . objects . all () book_ser = BookSerializer ( book_list , many = True ) return Response ( book_ser . data ) \u8def\u7531 1 2 3 # urls.py #\u7ee7\u627fViewSetMixin\u7684\u89c6\u56fe\u7c7b\uff0c\u8def\u7531\u53ef\u4ee5\u6539\u5199\u6210\u8fd9\u6837 url ( 'books/' , views . BooksView . as_view ( actions = { 'get' : 'get_all_book' })),","title":"\u89c6\u56fe"},{"location":"programming/python/DjangoRESTframework/%E8%A7%86%E5%9B%BE/#_1","text":"rest framework \u4e2d\u7684\u4e24\u4e2a\u89c6\u56fe\u57fa\u7c7b APIView GenericAPIView","title":"\u89c6\u56fe"},{"location":"programming/python/DjangoRESTframework/%E8%A7%86%E5%9B%BE/#apiview","text":"APIView \u7ee7\u627f\u81ea View \u3002 1 2 3 class Book ( models . Model ): title = models . CharField ( max_length = 32 , verbose_name = \"\u4e66\u540d\" ) price = models . DecimalField ( max_digits = 8 , decimal_places = 2 , verbose_name = \"\u4ef7\u683c\" )","title":"\u4e00\u3001\u57fa\u4e8eAPIView\u5199\u63a5\u53e3"},{"location":"programming/python/DjangoRESTframework/%E8%A7%86%E5%9B%BE/#1","text":"1 2 3 4 5 6 7 8 from rest_framework import serializers from app.views import Book class BookSerializer ( serializers . ModelSerializer ): class Meta : model = Book fields = '__all__'","title":"1. \u5e8f\u5217\u5316\u7c7b"},{"location":"programming/python/DjangoRESTframework/%E8%A7%86%E5%9B%BE/#2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 from django.shortcuts import render # Create your views here. from rest_framework.views import APIView from app.models import Book from app.serializers import BookSerializer from rest_framework.response import Response class BookView ( APIView ): def get ( self , request , pk ): book = Book . objects . filter ( id = pk ) . first () book_ser_obj = BookSerializer ( book ) return Response ( book_ser_obj . data ) def put ( self , request , pk ): book = Book . objects . filter ( id = pk ) . first () book_ser_obj = BookSerializer ( instance = book , data = request . data ) if book_ser_obj . is_valid (): # \u8fd4\u56deTrue\u8868\u793a\u9a8c\u8bc1\u901a\u8fc7 book_ser_obj . save () return Response ( book_ser_obj . data ) else : return Response ({ 'status' : 100 , 'msg' : '\u6210\u529f' }) def delete ( self , request , pk ): ret = Book . objects . filter ( pk = pk ) . delete () return Response ({ 'status' : 100 , 'msg' : '\u6210\u529f' }) class BooksView ( APIView ): def get ( self , request ): books = Book . objects . all () book_ser_obj = BookSerializer ( books , many = True ) # \u5e8f\u5217\u5316\u591a\u6761,\u5982\u679c\u5e8f\u5217\u5316\u4e00\u6761\uff0c\u4e0d\u9700\u8981\u5199 return Response ( book_ser_obj . data ) def post ( self , request ): book_ser_obj = BookSerializer ( data = request . data ) if book_ser_obj . is_valid (): book_ser_obj . save () # \u9700\u8981\u4ece\u5199create() return Response ( book_ser_obj . data ) else : return Response ({ 'status' : 100 , 'msg' : '\u6210\u529f' }) # \u589e\u591a\u6761\u6570\u636e # if isinstance(request.data,list): # book_ser_obj = BookSerializer(data=request.data, many=True) # \u5206\u6790\u6e90\u7801 # \u6539\u591a\u6761\u6570\u636e","title":"2. \u89c6\u56fe"},{"location":"programming/python/DjangoRESTframework/%E8%A7%86%E5%9B%BE/#3","text":"1 2 3 4 5 6 7 8 9 from django.conf.urls import url from django.contrib import admin from app import views urlpatterns = [ url ( r '^admin/' , admin . site . urls ), url ( r '^books/(?P<pk>\\d)' , views . BookView . as_view ()), url ( r '^books/' , views . BooksView . as_view ()), ]","title":"3. \u8def\u7531"},{"location":"programming/python/DjangoRESTframework/%E8%A7%86%E5%9B%BE/#genericapiview","text":"\u770b\u6e90\u7801\u53ef\u77e5 GenericAPIView \u7ee7\u627f\u4e86 APIView \uff1a 1 2 3 4 5 class GenericAPIView ( views . APIView ): ... queryset = None # queryset\u8981\u4f20queryset\u5bf9\u8c61 serializer_class = None # \u4f7f\u7528\u54ea\u4e2a\u5e8f\u5217\u5316\u7c7b\u6765\u5e8f\u5217\u5316\u6570\u636e ... \u7ee7\u627f GenericAPIView \u4fee\u6539\u89c6\u56fe 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 from django.shortcuts import render # Create your views here. from rest_framework.views import APIView from app.models import Book from app.serializers import BookSerializer from rest_framework.response import Response from rest_framework.generics import GenericAPIView class BookView ( GenericAPIView ): queryset = Book . objects serializer_class = BookSerializer def get ( self , request , pk ): # book = Book.objects.filter(id=pk).first() book = self . get_object () book_ser_obj = self . get_serializer ( book ) return Response ( book_ser_obj . data ) def put ( self , request , pk ): book = self . get_object () book_ser_obj = self . get_serializer ( instance = book , data = request . data ) if book_ser_obj . is_valid (): # \u8fd4\u56deTrue\u8868\u793a\u9a8c\u8bc1\u901a\u8fc7 book_ser_obj . save () return Response ( book_ser_obj . data ) else : return Response ({ 'status' : 100 , 'msg' : '\u6210\u529f' }) def delete ( self , request , pk ): ret = self . get_object () . delete () return Response ({ 'status' : 100 , 'msg' : '\u6210\u529f' }) class BooksView ( GenericAPIView ): queryset = Book . objects serializer_class = BookSerializer def get ( self , request ): # books = Book.objects.all() books = self . get_queryset () # \u770b\u6e90\u7801\uff0c\u8fd9\u4e2a\u65b9\u6cd5\u5c31\u53ea\u6267\u884c\u7684 Book.objects.all() # book_ser_obj = BookSerializer(books, many=True) # \u5e8f\u5217\u5316\u591a\u6761,\u5982\u679c\u5e8f\u5217\u5316\u4e00\u6761\uff0c\u4e0d\u9700\u8981\u5199 book_ser_obj = self . get_serializer ( books , many = True ) return Response ( book_ser_obj . data ) def post ( self , request ): # book_ser_obj = BookSerializer(data=request.data) book_ser_obj = self . get_serializer ( data = request . data ) if book_ser_obj . is_valid (): book_ser_obj . save () # \u9700\u8981\u4ece\u5199create() return Response ( book_ser_obj . data ) else : return Response ({ 'status' : 100 , 'msg' : '\u6210\u529f' }) \u7528\u4e86 GenericAPIView \u4ee5\u540e\uff0c\u518d\u5199\u5176\u4ed6\u6a21\u578b\u7684\u5e8f\u5217\u5316\uff0c\u53ea\u9700\u8981\u4fee\u6539 queryset \u548c serializer_class \u7684\u503c\u5c31\u53ef\u4ee5\u4e86\uff0c\u4e24\u4e2a\u89c6\u56fe\u4e2d\u7684\u65b9\u6cd5\uff08get,post,put,delete\uff09\uff0c\u4e0d\u9700\u8981\u6539\uff0c\u76f4\u63a5\u590d\u5236\u5c31\u53ef\u4ee5\u7528\u4e86\u3002\u4f46\u662f\u8fd9\u79cd\u5199\u6cd5\u5f88\u5197\u4f59\uff0c\u53ef\u4ee5\u628a\u8fd9\u4e94\u4e2a\u65b9\u6cd5\u5c01\u88c5\u8d77\u6765\uff0c\u4e8e\u662f rest framework \u5c31\u6709\u4e86\u4ee5\u4e0b\u7684\u4e94\u4e2a\u89c6\u56fe\u6269\u5c55\u7c7b\u3002","title":"\u4e8c\u3001 \u57fa\u4e8eGenericAPIView\u5199\u63a5\u53e3"},{"location":"programming/python/DjangoRESTframework/%E8%A7%86%E5%9B%BE/#genericapiview5","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 # views.py from app.models import Book from app.serializers import BookSerializer from rest_framework.generics import GenericAPIView from rest_framework.mixins import ListModelMixin , CreateModelMixin , UpdateModelMixin , DestroyModelMixin , \\ RetrieveModelMixin class BookView ( GenericAPIView , RetrieveModelMixin , DestroyModelMixin , UpdateModelMixin ): queryset = Book . objects serializer_class = BookSerializer def get ( self , request , pk ): return self . retrieve ( request , pk ) def put ( self , request , pk ): return self . update ( request , pk ) def delete ( self , request , pk ): return self . destroy (( request , pk )) class BooksView ( GenericAPIView , ListModelMixin , CreateModelMixin ): queryset = Book . objects serializer_class = BookSerializer def get ( self , request ): return self . list ( request ) def post ( self , request ): return self . create ( request )","title":"\u4e09\u3001\u57fa\u4e8eGenericAPIView\u548c5\u4e2a\u89c6\u56fe\u6269\u5c55\u7c7b\u5199\u63a5\u53e3"},{"location":"programming/python/DjangoRESTframework/%E8%A7%86%E5%9B%BE/#genericapiview9","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 # D:\\APP\\python36\\Lib\\site-packages\\rest_framework\\generics.py # \u57fa\u7840\u7684\u4e94\u4e2a\u5b50\u7c7b class CreateAPIView ( mixins . CreateModelMixin , GenericAPIView ): ... class ListAPIView ( mixins . ListModelMixin , GenericAPIView ): ... class DestroyAPIView ( mixins . DestroyModelMixin , GenericAPIView ): ... class UpdateAPIView ( mixins . UpdateModelMixin , GenericAPIView ): ... class RetrieveAPIView ( mixins . RetrieveModelMixin , GenericAPIView ): ... # \u7ec4\u5408\u5230\u4e00\u8d77\u7684 # get\u548cpost\u7ec4\u5408\u4e3a\u4e00\u4e2a class ListCreateAPIView ( mixins . ListModelMixin , mixins . CreateModelMixin , GenericAPIView ): ... # get\u548cdelete\u7ec4\u5408\u4e3a\u4e00\u4e2a class RetrieveDestroyAPIView ( mixins . RetrieveModelMixin , mixins . DestroyModelMixin , GenericAPIView ): ... # get\u548cput\u7ec4\u5408\u4e3a\u4e00\u4e2a class RetrieveUpdateAPIView ( mixins . RetrieveModelMixin , mixins . UpdateModelMixin , GenericAPIView ): ... # get\u3001put\u548cdelete\u7ec4\u5408\u4e3a\u4e00\u4e2a class RetrieveUpdateDestroyAPIView ( mixins . RetrieveModelMixin , mixins . UpdateModelMixin , mixins . DestroyModelMixin , GenericAPIView ): ... \u4f7f\u7528\u89c6\u56fe\u5b50\u7c7b\u4ee5\u540e\u7684 views.py 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 # views.py from app.models import Book from app.serializers import BookSerializer from rest_framework.generics import GenericAPIView , ListAPIView , CreateAPIView , UpdateAPIView , DestroyAPIView , \\ RetrieveAPIView class BookView ( UpdateAPIView , DestroyAPIView , RetrieveAPIView ): queryset = Book . objects serializer_class = BookSerializer class BooksView ( ListAPIView , CreateAPIView ): queryset = Book . objects serializer_class = BookSerializer \u6e90\u7801\u9605\u8bfb 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 class GenericAPIView ( views . APIView ): ... def get_object ( self ): queryset = self . filter_queryset ( self . get_queryset ()) # \u8fd4\u56de\u6240\u6709\u6570\u636equeryset\u5bf9\u8c61 # Perform the lookup filtering. lookup_url_kwarg = self . lookup_url_kwarg or self . lookup_field # lookup_field = 'pk' \u8def\u7531\u6709\u540d\u5206\u7ec4\u4e2d\u7684pk assert lookup_url_kwarg in self . kwargs , ( 'Expected view %s to be called with a URL keyword argument ' 'named \" %s \". Fix your URL conf, or set the `.lookup_field` ' 'attribute on the view correctly.' % ( self . __class__ . __name__ , lookup_url_kwarg ) ) filter_kwargs = { self . lookup_field : self . kwargs [ lookup_url_kwarg ]} obj = get_object_or_404 ( queryset , ** filter_kwargs ) # May raise a permission denied self . check_object_permissions ( self . request , obj ) return obj \u4e0a\u8bc9\u7684\u4e24\u7ec4\u63a5\u53e3\uff0c\u53ef\u4ee5\u4f7f\u7528 ModelViewSet \u6574\u5408\u4e3a\u4e00\u4e2a\u3002","title":"\u56db\u3001GenericAPIView\u76849\u4e2a\u89c6\u56fe\u5b50\u7c7b"},{"location":"programming/python/DjangoRESTframework/%E8%A7%86%E5%9B%BE/#modelviewset","text":"","title":"\u4e94\u3001ModelViewSet"},{"location":"programming/python/DjangoRESTframework/%E8%A7%86%E5%9B%BE/#1-modelviewset5","text":"1 2 3 4 5 6 7 8 from app.models import Book from app.serializers import BookSerializer from rest_framework.viewsets import ModelViewSet class BooksView ( ModelViewSet ): # 5\u4e2a\u63a5\u53e3\u90fd\u6709\uff0c\u4f46\u662f\u8def\u7531\u9700\u8981\u7279\u6b8a\u914d\u7f6e queryset = Book . objects serializer_class = BookSerializer \u8def\u7531\u4e2d\u7684 as_view() \u9700\u8981\u4f20\u5165\u53c2\u6570 1 2 3 4 5 6 7 8 9 10 from django.conf.urls import url from django.contrib import admin from app import views urlpatterns = [ url ( r '^admin/' , admin . site . urls ), url ( r '^books/(?P<pk>\\d)' , views . BooksView . as_view ( actions = { 'get' : 'retrieve' , 'put' : 'update' , 'delete' : 'destroy' })), # \u5f53\u8def\u5f84\u5339\u914d\uff0c\u53c8\u662fget\u8bf7\u6c42\uff0c\u4f1a\u6267\u884cBooksView\u7684list\u65b9\u6cd5 url ( r '^books/' , views . BooksView . as_view ( actions = { 'get' : 'list' , 'post' : 'create' })), ]","title":"1. \u4f7f\u7528ModelViewSet\u7f16\u51995\u4e2a\u63a5\u53e3"},{"location":"programming/python/DjangoRESTframework/%E8%A7%86%E5%9B%BE/#2-viewsetmixin","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 class ViewSetMixin : # \u91cd\u5199\u4e86as_views\u65b9\u6cd5 @classonlymethod def as_view ( cls , actions = None , ** initkwargs ): def view ( request , * args , ** kwargs ): self = cls ( ** initkwargs ) self . action_map = actions # \u6838\u5fc3\u4ee3\u7801\uff08\u6240\u4ee5\u8def\u7531\u4e2d\u53ea\u8981\u914d\u7f6e\u4e86\u5bf9\u5e94\u5173\u7cfb\uff0c\u6bd4\u5982{'get':'list'}\uff09,\u5f53get\u8bf7\u6c42\u6765\uff0c\u5c31\u4f1a\u6267\u884clist\u65b9\u6cd5 for method , action in actions . items (): # get list handler = getattr ( self , action ) # \u6267\u884c\u5b8c\u4e0a\u4e00\u53e5\uff0chandler\u5c31\u53d8\u6210\u4e86list\u7684\u5185\u5b58\u5730\u5740 setattr ( self , method , handler ) # \u6267\u884c\u5b8c\u4e0a\u4e00\u53e5 \u5bf9\u8c61.get=list ... 1 2 3 4 5 6 7 8 9 10 # \u91cd\u5199\u4e86as_view # \u6838\u5fc3\u4ee3\u7801\uff08\u6240\u4ee5\u8def\u7531\u4e2d\u53ea\u8981\u914d\u7f6e\u4e86\u5bf9\u5e94\u5173\u7cfb\uff0c\u6bd4\u5982{'get':'list'}\uff09,\u5f53get\u8bf7\u6c42\u6765\uff0c\u5c31\u4f1a\u6267\u884clist\u65b9\u6cd5 for method , action in actions . items (): #method\uff1aget # action\uff1alist handler = getattr ( self , action ) #\u6267\u884c\u5b8c\u4e0a\u4e00\u53e5\uff0chandler\u5c31\u53d8\u6210\u4e86list\u7684\u5185\u5b58\u5730\u5740 setattr ( self , method , handler ) #\u6267\u884c\u5b8c\u4e0a\u4e00\u53e5 \u5bf9\u8c61.get=list #for\u5faa\u73af\u6267\u884c\u5b8c\u6bd5 \u5bf9\u8c61.get:\u5bf9\u7740list \u5bf9\u8c61.post\uff1a\u5bf9\u7740create","title":"2. ViewSetMixin\u6e90\u7801\u5206\u6790"},{"location":"programming/python/DjangoRESTframework/%E8%A7%86%E5%9B%BE/#3-viewsetmixin","text":"1 2 3 4 5 6 7 8 # views.py from rest_framework.viewsets import ViewSetMixin class BooksView ( ViewSetMixin , APIView ): #\u4e00\u5b9a\u8981\u653e\u5728APIVIew\u524d def get_all_book ( self , request ): print ( \"xxxx\" ) book_list = Book . objects . all () book_ser = BookSerializer ( book_list , many = True ) return Response ( book_ser . data ) \u8def\u7531 1 2 3 # urls.py #\u7ee7\u627fViewSetMixin\u7684\u89c6\u56fe\u7c7b\uff0c\u8def\u7531\u53ef\u4ee5\u6539\u5199\u6210\u8fd9\u6837 url ( 'books/' , views . BooksView . as_view ( actions = { 'get' : 'get_all_book' })),","title":"3 \u7ee7\u627fViewSetMixin\u7684\u89c6\u56fe\u7c7b"},{"location":"programming/python/DjangoRESTframework/%E8%AE%A4%E8%AF%81%E3%80%81%E6%9D%83%E9%99%90%E5%92%8C%E9%A2%91%E7%8E%87/","text":"\u8ba4\u8bc1\u3001\u6743\u9650\u548c\u8bbf\u95ee\u63a7\u5236 \u00b6 \u4e00\u3001\u8ba4\u8bc1 \u00b6 \u4f7f\u7528\u65b9\u6cd5\uff1a \u5199\u4e00\u4e2a\u7c7b\uff0c\u7ee7\u627f BaseAuthentication \uff0c\u91cd\u5199 authenticate() \uff0c\u5728\u8fd9\u4e2a\u65b9\u6cd5\u91cc\u5199\u8ba4\u8bc1\u7684\u903b\u8f91\u3002 \u8ba4\u8bc1\u901a\u8fc7\uff0c\u8fd4\u56de\u4e24\u4e2a\u503c\uff0c\u4e00\u4e2a\u503c\u6700\u7ec8\u7ed9\u4e86Requet\u5bf9\u8c61\u7684user\uff0c \u8ba4\u8bc1\u5931\u8d25\uff0c\u629b\u5f02\u5e38\uff1a APIException \u6216\u8005 AuthenticationFailed \u4f7f\u7528 \u5168\u5c40\u4f7f\u7528 \u5c40\u90e8\u4f7f\u7528 \u8ba4\u8bc1\u53ef\u4ee5\u6709\u591a\u4e2a\uff0c\u4ece\u5de6\u5230\u53f3\u4f9d\u6b21\u6267\u884c 1. \u51c6\u5907 \u00b6 \u51c6\u5907\u7528\u6237\u6570\u636e 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 # models.py from django.db import models # Create your models here. class Book ( models . Model ): title = models . CharField ( max_length = 32 , verbose_name = \"\u4e66\u540d\" ) price = models . DecimalField ( max_digits = 8 , decimal_places = 2 , verbose_name = \"\u4ef7\u683c\" ) class User ( models . Model ): username = models . CharField ( max_length = 32 ) password = models . CharField ( max_length = 32 ) user_type = models . IntegerField ( choices = (( 0 , '\u8d85\u7ea7\u7528\u6237' ), ( 1 , '\u666e\u901a\u7528\u6237' ))) class UserToken ( models . Model ): token = models . CharField ( max_length = 64 ) user = models . OneToOneField ( to = 'User' ) 2. \u81ea\u5b9a\u4e49\u8ba4\u8bc1\u7c7b \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 # auth.py from rest_framework.authentication import BaseAuthentication from rest_framework.exceptions import AuthenticationFailed from app.models import UserToken class MyAuthentication ( BaseAuthentication ): def authenticate ( self , request ): # \u8ba4\u8bc1\u903b\u8f91\uff0c\u5982\u679c\u8ba4\u8bc1\u901a\u8fc7\uff0c\u8fd4\u56de\u4e24\u4e2a\u503c # \u5982\u679c\u8ba4\u8bc1\u5931\u8d25\uff0c\u629b\u51faAuthenticationFailed\u5f02\u5e38 token = request . GET . get ( 'token' ) if token : user_token = UserToken . objects . filter ( token = token ) . first () # \u8ba4\u8bc1\u901a\u8fc7 if user_token : return user_token . user , token else : raise AuthenticationFailed ( '\u8ba4\u8bc1\u5931\u8d25' ) else : raise AuthenticationFailed ( '\u8bf7\u6c42\u5730\u5740\u4e2d\u9700\u8981\u643a\u5e26token' ) 3. \u4f7f\u7528 \u00b6 3.1 \u5c40\u90e8\u4f7f\u7528 \u00b6 \u5728\u89c6\u56fe\u7c7b\u4e2d\uff0c\u7ed9\u9700\u8981\u8ba4\u8bc1\u7684\u89c6\u56fe\u52a0\u4e0a authentication_classes = [MyAuthentication] 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 from app import models from app.serializers import BookSerializer from rest_framework.viewsets import ModelViewSet from rest_framework.views import APIView from rest_framework.response import Response import uuid from app.auth import MyAuthentication class BooksView ( ModelViewSet ): authentication_classes = [ MyAuthentication ] queryset = models . Book . objects serializer_class = BookSerializer class TestView ( APIView ): authentication_classes = [ MyAuthentication ] def get ( self , request ): return Response ({ 'username' : request . user . username }) class LoginView ( APIView ): def post ( self , request ): username = request . data . get ( 'username' ) password = request . data . get ( 'password' ) user = models . User . objects . filter ( username = username , password = password ) . first () if user : # \u767b\u9646\u6210\u529f,\u751f\u6210\u4e00\u4e2a\u968f\u673a\u5b57\u7b26\u4e32 token = uuid . uuid4 () # \u5b58\u5230UserToken\u8868\u4e2d # update_or_create\u6709\u5c31\u66f4\u65b0\uff0c\u6ca1\u6709\u5c31\u65b0\u589e models . UserToken . objects . update_or_create ( defaults = { 'token' : token }, user = user ) return Response ({ 'status' : 100 , 'msg' : '\u767b\u9646\u6210\u529f' , 'token' : token }) else : return Response ({ 'status' : 101 , 'msg' : '\u7528\u6237\u540d\u6216\u5bc6\u7801\u9519\u8bef' }) 3.2 \u5168\u5c40\u4f7f\u7528 \u00b6 1 2 3 REST_FRAMEWORK = { \"DEFAULT_AUTHENTICATION_CLASSES\" : [ \"app.auth.MyAuthentication\" , ] } 3.3 \u5c40\u90e8\u7981\u7528 \u00b6 \u5728\u89c6\u56fe\u7c7b\u4e2d\u52a0\u4e0a authentication_classes=[] 1 2 3 class LoginView ( APIView ): authentication_classes = [] ... 4. \u6e90\u7801\u5206\u6790 \u00b6 \u4e8c\u3001\u6743\u9650 \u00b6 \u4f7f\u7528\u65b9\u6cd5\uff1a \u5199\u4e00\u4e2a\u7c7b\uff0c\u7ee7\u627f BasePermission \uff0c\u91cd\u5199 has_permission \u5982\u679c\u6743\u9650\u901a\u8fc7\uff0c\u5c31\u8fd4\u56deTrue\uff0c\u4e0d\u901a\u8fc7\u5c31\u8fd4\u56deFalse 1. \u81ea\u5b9a\u4e49\u6743\u9650 \u00b6 1. \u5199\u4e00\u4e2a\u6743\u9650\u7684\u7c7b \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 # auth.py from rest_framework.permissions import BasePermission class UserPermission ( BasePermission ): def has_permission ( self , request , view ): # \u4e0d\u662f\u8d85\u7ea7\u7528\u6237\uff0c\u4e0d\u80fd\u8bbf\u95ee # \u7531\u4e8e\u8ba4\u8bc1\u5df2\u7ecf\u8fc7\u4e86\uff0crequest\u5185\u5c31\u6709user\u5bf9\u8c61\u4e86\uff0c\u5f53\u524d\u767b\u5f55\u7528\u6237 user = request . user # \u5f53\u524d\u767b\u5f55\u7528\u6237 if user . user_type == 0 : return True else : return False 2. \u4f7f\u7528 \u00b6 1. \u5c40\u90e8\u4f7f\u7528 \u00b6 \u5728\u89c6\u56fe\u6587\u4ef6\u4e2d\u5bfc\u5165\u81ea\u5b9a\u4e49\u7684\u8ba4\u8bc1\u7c7b\uff0c\u5728\u89c6\u56fe\u7c7b\u4e2d\u52a0\u4e0a permission_classes = [\u81ea\u5b9a\u4e49\u8ba4\u8bc1\u7c7b\u540d] 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 # view.py from app.auth import MyAuthentication , UserPermission class BooksView ( ModelViewSet ): authentication_classes = [ MyAuthentication ] permission_classes = [ UserPermission ] queryset = models . Book . objects serializer_class = BookSerializer class LoginView ( APIView ): ... class TestView ( APIView ): ... 2. \u5168\u5c40\u4f7f\u7528 \u00b6 1 2 3 4 5 6 7 # settings.py REST_FRAMEWORK = { \"DEFAULT_AUTHENTICATION_CLASSES\" : [ \"app.auth.MyAuthentication\" , ], 'DEFAULT_PERMISSION_CLASSES' : [ # \u52a0\u4e0a\u81ea\u5b9a\u4e49\u7684\u8ba4\u8bc1\u7c7b 'app.auth.UserPermission' , ], } 3. \u5c40\u90e8\u7981\u7528 \u00b6 1 permission_classes = [] 2. \u5185\u7f6e\u6743\u9650 \u00b6 \u4f7f\u7528\u524d\u63d0\uff1a\u7528\u4e86Django\u81ea\u5e26\u7684 auth \u6a21\u5757 1. \u4f7f\u7528\u6d41\u7a0b \u00b6 1. \u521b\u5efa\u4e00\u4e2a\u8d85\u7ea7\u7ba1\u7406\u5458\u7528\u6237 \u00b6 1 python manage . py createsuperuser 2. \u5199\u89c6\u56fe\u7c7b \u00b6 \u89c6\u56fe\u6587\u4ef6\u4e2d\u5bfc\u5165\u81ea\u5e26\u7684\u8ba4\u8bc1\u7c7b\u548c\u6743\u9650\u7c7b\uff0c\u5e76\u5728\u89c6\u56fe\u4e2d\u4f7f\u7528 1 2 3 4 5 6 7 8 9 10 11 # views.py from rest_framework.authentication import SessionAuthentication from rest_framework.permissions import IsAdminUser class SalaryView ( APIView ): authentication_classes = [ SessionAuthentication , ] permission_classes = [ IsAdminUser , ] # \u6e90\u7801\uff1abool(request.user and request.user.is_staff) def get ( self , request , * args , ** kwargs ): return Response ( '\u7ba1\u7406\u5458\u767b\u5f55\uff0c\u6709\u6743\u9650\u67e5\u770b' ) 3. \u7ba1\u7406\u5458\u767b\u5f55\u5230admin\uff0c\u518d\u8bbf\u95eeSalaryView\u5c31\u6709\u6743\u9650\uff0c \u00b6 4. is_staff \u5b57\u6bb5\u503c\u4e3a0\u7684\u6ca1\u6709\u6743\u9650\u8bbf\u95ee \u00b6 \u4e09\u3001\u8bbf\u95ee\u9891\u7387 \u00b6 1. \u672a\u767b\u5f55\u7528\u6237\u9650\u5236 \u00b6 1.1 \u5168\u5c40\u9650\u5236 \u00b6 1 2 3 4 5 6 7 8 9 # settings.py REST_FRAMEWORK = { 'DEFAULT_THROTTLE_CLASSES' : ( 'rest_framework.throttling.AnonRateThrottle' , ), 'DEFAULT_THROTTLE_RATES' : { 'anon' : '3/m' , } } 1.2 \u5c40\u90e8\u9650\u5236 \u00b6 1 2 3 4 5 REST_FRAMEWORK = { 'DEFAULT_THROTTLE_RATES' : { 'anon' : '3/m' , } } 1 2 3 4 5 6 7 # views.py class TestView ( APIView ): authentication_classes = [] permission_classes = [] throttle_classes = [ AnonRateThrottle ] # \u5c40\u90e8\u4f7f\u7528 def get ( self , request , * args , ** kwargs ): return Response ( 'OK' ) 2. \u767b\u5f55\u7528\u6237\u9650\u5236 \u00b6 \u4f7f\u7528\u524d\u63d0\uff1a\u4f7f\u7528Django\u7684admin 2.1 \u5168\u5c40\u9650\u5236 \u00b6 1 2 3 4 5 6 7 # settings.py 'DEFAULT_THROTTLE_CLASSES' : ( 'rest_framework.throttling.UserRateThrottle' ), 'DEFAULT_THROTTLE_RATES' : { 'user' : '10/m' , } 2.2 \u5c40\u90e8\u9650\u5236 \u00b6 1 2 3 4 5 6 7 # views.py class TestView ( APIView ): authentication_classes = [] permission_classes = [] throttle_classes = [ UserRateThrottle ] # \u5c40\u90e8\u4f7f\u7528 def get ( self , request , * args , ** kwargs ): return Response ( 'OK' )","title":"\u8ba4\u8bc1\u3001\u6743\u9650\u548c\u8bbf\u95ee\u63a7\u5236"},{"location":"programming/python/DjangoRESTframework/%E8%AE%A4%E8%AF%81%E3%80%81%E6%9D%83%E9%99%90%E5%92%8C%E9%A2%91%E7%8E%87/#_1","text":"","title":"\u8ba4\u8bc1\u3001\u6743\u9650\u548c\u8bbf\u95ee\u63a7\u5236"},{"location":"programming/python/DjangoRESTframework/%E8%AE%A4%E8%AF%81%E3%80%81%E6%9D%83%E9%99%90%E5%92%8C%E9%A2%91%E7%8E%87/#_2","text":"\u4f7f\u7528\u65b9\u6cd5\uff1a \u5199\u4e00\u4e2a\u7c7b\uff0c\u7ee7\u627f BaseAuthentication \uff0c\u91cd\u5199 authenticate() \uff0c\u5728\u8fd9\u4e2a\u65b9\u6cd5\u91cc\u5199\u8ba4\u8bc1\u7684\u903b\u8f91\u3002 \u8ba4\u8bc1\u901a\u8fc7\uff0c\u8fd4\u56de\u4e24\u4e2a\u503c\uff0c\u4e00\u4e2a\u503c\u6700\u7ec8\u7ed9\u4e86Requet\u5bf9\u8c61\u7684user\uff0c \u8ba4\u8bc1\u5931\u8d25\uff0c\u629b\u5f02\u5e38\uff1a APIException \u6216\u8005 AuthenticationFailed \u4f7f\u7528 \u5168\u5c40\u4f7f\u7528 \u5c40\u90e8\u4f7f\u7528 \u8ba4\u8bc1\u53ef\u4ee5\u6709\u591a\u4e2a\uff0c\u4ece\u5de6\u5230\u53f3\u4f9d\u6b21\u6267\u884c","title":"\u4e00\u3001\u8ba4\u8bc1"},{"location":"programming/python/DjangoRESTframework/%E8%AE%A4%E8%AF%81%E3%80%81%E6%9D%83%E9%99%90%E5%92%8C%E9%A2%91%E7%8E%87/#1","text":"\u51c6\u5907\u7528\u6237\u6570\u636e 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 # models.py from django.db import models # Create your models here. class Book ( models . Model ): title = models . CharField ( max_length = 32 , verbose_name = \"\u4e66\u540d\" ) price = models . DecimalField ( max_digits = 8 , decimal_places = 2 , verbose_name = \"\u4ef7\u683c\" ) class User ( models . Model ): username = models . CharField ( max_length = 32 ) password = models . CharField ( max_length = 32 ) user_type = models . IntegerField ( choices = (( 0 , '\u8d85\u7ea7\u7528\u6237' ), ( 1 , '\u666e\u901a\u7528\u6237' ))) class UserToken ( models . Model ): token = models . CharField ( max_length = 64 ) user = models . OneToOneField ( to = 'User' )","title":"1. \u51c6\u5907"},{"location":"programming/python/DjangoRESTframework/%E8%AE%A4%E8%AF%81%E3%80%81%E6%9D%83%E9%99%90%E5%92%8C%E9%A2%91%E7%8E%87/#2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 # auth.py from rest_framework.authentication import BaseAuthentication from rest_framework.exceptions import AuthenticationFailed from app.models import UserToken class MyAuthentication ( BaseAuthentication ): def authenticate ( self , request ): # \u8ba4\u8bc1\u903b\u8f91\uff0c\u5982\u679c\u8ba4\u8bc1\u901a\u8fc7\uff0c\u8fd4\u56de\u4e24\u4e2a\u503c # \u5982\u679c\u8ba4\u8bc1\u5931\u8d25\uff0c\u629b\u51faAuthenticationFailed\u5f02\u5e38 token = request . GET . get ( 'token' ) if token : user_token = UserToken . objects . filter ( token = token ) . first () # \u8ba4\u8bc1\u901a\u8fc7 if user_token : return user_token . user , token else : raise AuthenticationFailed ( '\u8ba4\u8bc1\u5931\u8d25' ) else : raise AuthenticationFailed ( '\u8bf7\u6c42\u5730\u5740\u4e2d\u9700\u8981\u643a\u5e26token' )","title":"2. \u81ea\u5b9a\u4e49\u8ba4\u8bc1\u7c7b"},{"location":"programming/python/DjangoRESTframework/%E8%AE%A4%E8%AF%81%E3%80%81%E6%9D%83%E9%99%90%E5%92%8C%E9%A2%91%E7%8E%87/#3","text":"","title":"3. \u4f7f\u7528"},{"location":"programming/python/DjangoRESTframework/%E8%AE%A4%E8%AF%81%E3%80%81%E6%9D%83%E9%99%90%E5%92%8C%E9%A2%91%E7%8E%87/#31","text":"\u5728\u89c6\u56fe\u7c7b\u4e2d\uff0c\u7ed9\u9700\u8981\u8ba4\u8bc1\u7684\u89c6\u56fe\u52a0\u4e0a authentication_classes = [MyAuthentication] 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 from app import models from app.serializers import BookSerializer from rest_framework.viewsets import ModelViewSet from rest_framework.views import APIView from rest_framework.response import Response import uuid from app.auth import MyAuthentication class BooksView ( ModelViewSet ): authentication_classes = [ MyAuthentication ] queryset = models . Book . objects serializer_class = BookSerializer class TestView ( APIView ): authentication_classes = [ MyAuthentication ] def get ( self , request ): return Response ({ 'username' : request . user . username }) class LoginView ( APIView ): def post ( self , request ): username = request . data . get ( 'username' ) password = request . data . get ( 'password' ) user = models . User . objects . filter ( username = username , password = password ) . first () if user : # \u767b\u9646\u6210\u529f,\u751f\u6210\u4e00\u4e2a\u968f\u673a\u5b57\u7b26\u4e32 token = uuid . uuid4 () # \u5b58\u5230UserToken\u8868\u4e2d # update_or_create\u6709\u5c31\u66f4\u65b0\uff0c\u6ca1\u6709\u5c31\u65b0\u589e models . UserToken . objects . update_or_create ( defaults = { 'token' : token }, user = user ) return Response ({ 'status' : 100 , 'msg' : '\u767b\u9646\u6210\u529f' , 'token' : token }) else : return Response ({ 'status' : 101 , 'msg' : '\u7528\u6237\u540d\u6216\u5bc6\u7801\u9519\u8bef' })","title":"3.1 \u5c40\u90e8\u4f7f\u7528"},{"location":"programming/python/DjangoRESTframework/%E8%AE%A4%E8%AF%81%E3%80%81%E6%9D%83%E9%99%90%E5%92%8C%E9%A2%91%E7%8E%87/#32","text":"1 2 3 REST_FRAMEWORK = { \"DEFAULT_AUTHENTICATION_CLASSES\" : [ \"app.auth.MyAuthentication\" , ] }","title":"3.2 \u5168\u5c40\u4f7f\u7528"},{"location":"programming/python/DjangoRESTframework/%E8%AE%A4%E8%AF%81%E3%80%81%E6%9D%83%E9%99%90%E5%92%8C%E9%A2%91%E7%8E%87/#33","text":"\u5728\u89c6\u56fe\u7c7b\u4e2d\u52a0\u4e0a authentication_classes=[] 1 2 3 class LoginView ( APIView ): authentication_classes = [] ...","title":"3.3 \u5c40\u90e8\u7981\u7528"},{"location":"programming/python/DjangoRESTframework/%E8%AE%A4%E8%AF%81%E3%80%81%E6%9D%83%E9%99%90%E5%92%8C%E9%A2%91%E7%8E%87/#4","text":"","title":"4. \u6e90\u7801\u5206\u6790"},{"location":"programming/python/DjangoRESTframework/%E8%AE%A4%E8%AF%81%E3%80%81%E6%9D%83%E9%99%90%E5%92%8C%E9%A2%91%E7%8E%87/#_3","text":"\u4f7f\u7528\u65b9\u6cd5\uff1a \u5199\u4e00\u4e2a\u7c7b\uff0c\u7ee7\u627f BasePermission \uff0c\u91cd\u5199 has_permission \u5982\u679c\u6743\u9650\u901a\u8fc7\uff0c\u5c31\u8fd4\u56deTrue\uff0c\u4e0d\u901a\u8fc7\u5c31\u8fd4\u56deFalse","title":"\u4e8c\u3001\u6743\u9650"},{"location":"programming/python/DjangoRESTframework/%E8%AE%A4%E8%AF%81%E3%80%81%E6%9D%83%E9%99%90%E5%92%8C%E9%A2%91%E7%8E%87/#1_1","text":"","title":"1. \u81ea\u5b9a\u4e49\u6743\u9650"},{"location":"programming/python/DjangoRESTframework/%E8%AE%A4%E8%AF%81%E3%80%81%E6%9D%83%E9%99%90%E5%92%8C%E9%A2%91%E7%8E%87/#1_2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 # auth.py from rest_framework.permissions import BasePermission class UserPermission ( BasePermission ): def has_permission ( self , request , view ): # \u4e0d\u662f\u8d85\u7ea7\u7528\u6237\uff0c\u4e0d\u80fd\u8bbf\u95ee # \u7531\u4e8e\u8ba4\u8bc1\u5df2\u7ecf\u8fc7\u4e86\uff0crequest\u5185\u5c31\u6709user\u5bf9\u8c61\u4e86\uff0c\u5f53\u524d\u767b\u5f55\u7528\u6237 user = request . user # \u5f53\u524d\u767b\u5f55\u7528\u6237 if user . user_type == 0 : return True else : return False","title":"1. \u5199\u4e00\u4e2a\u6743\u9650\u7684\u7c7b"},{"location":"programming/python/DjangoRESTframework/%E8%AE%A4%E8%AF%81%E3%80%81%E6%9D%83%E9%99%90%E5%92%8C%E9%A2%91%E7%8E%87/#2_1","text":"","title":"2. \u4f7f\u7528"},{"location":"programming/python/DjangoRESTframework/%E8%AE%A4%E8%AF%81%E3%80%81%E6%9D%83%E9%99%90%E5%92%8C%E9%A2%91%E7%8E%87/#1_3","text":"\u5728\u89c6\u56fe\u6587\u4ef6\u4e2d\u5bfc\u5165\u81ea\u5b9a\u4e49\u7684\u8ba4\u8bc1\u7c7b\uff0c\u5728\u89c6\u56fe\u7c7b\u4e2d\u52a0\u4e0a permission_classes = [\u81ea\u5b9a\u4e49\u8ba4\u8bc1\u7c7b\u540d] 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 # view.py from app.auth import MyAuthentication , UserPermission class BooksView ( ModelViewSet ): authentication_classes = [ MyAuthentication ] permission_classes = [ UserPermission ] queryset = models . Book . objects serializer_class = BookSerializer class LoginView ( APIView ): ... class TestView ( APIView ): ...","title":"1. \u5c40\u90e8\u4f7f\u7528"},{"location":"programming/python/DjangoRESTframework/%E8%AE%A4%E8%AF%81%E3%80%81%E6%9D%83%E9%99%90%E5%92%8C%E9%A2%91%E7%8E%87/#2_2","text":"1 2 3 4 5 6 7 # settings.py REST_FRAMEWORK = { \"DEFAULT_AUTHENTICATION_CLASSES\" : [ \"app.auth.MyAuthentication\" , ], 'DEFAULT_PERMISSION_CLASSES' : [ # \u52a0\u4e0a\u81ea\u5b9a\u4e49\u7684\u8ba4\u8bc1\u7c7b 'app.auth.UserPermission' , ], }","title":"2. \u5168\u5c40\u4f7f\u7528"},{"location":"programming/python/DjangoRESTframework/%E8%AE%A4%E8%AF%81%E3%80%81%E6%9D%83%E9%99%90%E5%92%8C%E9%A2%91%E7%8E%87/#3_1","text":"1 permission_classes = []","title":"3. \u5c40\u90e8\u7981\u7528"},{"location":"programming/python/DjangoRESTframework/%E8%AE%A4%E8%AF%81%E3%80%81%E6%9D%83%E9%99%90%E5%92%8C%E9%A2%91%E7%8E%87/#2_3","text":"\u4f7f\u7528\u524d\u63d0\uff1a\u7528\u4e86Django\u81ea\u5e26\u7684 auth \u6a21\u5757","title":"2. \u5185\u7f6e\u6743\u9650"},{"location":"programming/python/DjangoRESTframework/%E8%AE%A4%E8%AF%81%E3%80%81%E6%9D%83%E9%99%90%E5%92%8C%E9%A2%91%E7%8E%87/#1_4","text":"","title":"1. \u4f7f\u7528\u6d41\u7a0b"},{"location":"programming/python/DjangoRESTframework/%E8%AE%A4%E8%AF%81%E3%80%81%E6%9D%83%E9%99%90%E5%92%8C%E9%A2%91%E7%8E%87/#1_5","text":"1 python manage . py createsuperuser","title":"1. \u521b\u5efa\u4e00\u4e2a\u8d85\u7ea7\u7ba1\u7406\u5458\u7528\u6237"},{"location":"programming/python/DjangoRESTframework/%E8%AE%A4%E8%AF%81%E3%80%81%E6%9D%83%E9%99%90%E5%92%8C%E9%A2%91%E7%8E%87/#2_4","text":"\u89c6\u56fe\u6587\u4ef6\u4e2d\u5bfc\u5165\u81ea\u5e26\u7684\u8ba4\u8bc1\u7c7b\u548c\u6743\u9650\u7c7b\uff0c\u5e76\u5728\u89c6\u56fe\u4e2d\u4f7f\u7528 1 2 3 4 5 6 7 8 9 10 11 # views.py from rest_framework.authentication import SessionAuthentication from rest_framework.permissions import IsAdminUser class SalaryView ( APIView ): authentication_classes = [ SessionAuthentication , ] permission_classes = [ IsAdminUser , ] # \u6e90\u7801\uff1abool(request.user and request.user.is_staff) def get ( self , request , * args , ** kwargs ): return Response ( '\u7ba1\u7406\u5458\u767b\u5f55\uff0c\u6709\u6743\u9650\u67e5\u770b' )","title":"2. \u5199\u89c6\u56fe\u7c7b"},{"location":"programming/python/DjangoRESTframework/%E8%AE%A4%E8%AF%81%E3%80%81%E6%9D%83%E9%99%90%E5%92%8C%E9%A2%91%E7%8E%87/#3-adminsalaryview","text":"","title":"3. \u7ba1\u7406\u5458\u767b\u5f55\u5230admin\uff0c\u518d\u8bbf\u95eeSalaryView\u5c31\u6709\u6743\u9650\uff0c"},{"location":"programming/python/DjangoRESTframework/%E8%AE%A4%E8%AF%81%E3%80%81%E6%9D%83%E9%99%90%E5%92%8C%E9%A2%91%E7%8E%87/#4-is_staff0","text":"","title":"4. is_staff\u5b57\u6bb5\u503c\u4e3a0\u7684\u6ca1\u6709\u6743\u9650\u8bbf\u95ee"},{"location":"programming/python/DjangoRESTframework/%E8%AE%A4%E8%AF%81%E3%80%81%E6%9D%83%E9%99%90%E5%92%8C%E9%A2%91%E7%8E%87/#_4","text":"","title":"\u4e09\u3001\u8bbf\u95ee\u9891\u7387"},{"location":"programming/python/DjangoRESTframework/%E8%AE%A4%E8%AF%81%E3%80%81%E6%9D%83%E9%99%90%E5%92%8C%E9%A2%91%E7%8E%87/#1_6","text":"","title":"1. \u672a\u767b\u5f55\u7528\u6237\u9650\u5236"},{"location":"programming/python/DjangoRESTframework/%E8%AE%A4%E8%AF%81%E3%80%81%E6%9D%83%E9%99%90%E5%92%8C%E9%A2%91%E7%8E%87/#11","text":"1 2 3 4 5 6 7 8 9 # settings.py REST_FRAMEWORK = { 'DEFAULT_THROTTLE_CLASSES' : ( 'rest_framework.throttling.AnonRateThrottle' , ), 'DEFAULT_THROTTLE_RATES' : { 'anon' : '3/m' , } }","title":"1.1 \u5168\u5c40\u9650\u5236"},{"location":"programming/python/DjangoRESTframework/%E8%AE%A4%E8%AF%81%E3%80%81%E6%9D%83%E9%99%90%E5%92%8C%E9%A2%91%E7%8E%87/#12","text":"1 2 3 4 5 REST_FRAMEWORK = { 'DEFAULT_THROTTLE_RATES' : { 'anon' : '3/m' , } } 1 2 3 4 5 6 7 # views.py class TestView ( APIView ): authentication_classes = [] permission_classes = [] throttle_classes = [ AnonRateThrottle ] # \u5c40\u90e8\u4f7f\u7528 def get ( self , request , * args , ** kwargs ): return Response ( 'OK' )","title":"1.2 \u5c40\u90e8\u9650\u5236"},{"location":"programming/python/DjangoRESTframework/%E8%AE%A4%E8%AF%81%E3%80%81%E6%9D%83%E9%99%90%E5%92%8C%E9%A2%91%E7%8E%87/#2_5","text":"\u4f7f\u7528\u524d\u63d0\uff1a\u4f7f\u7528Django\u7684admin","title":"2. \u767b\u5f55\u7528\u6237\u9650\u5236"},{"location":"programming/python/DjangoRESTframework/%E8%AE%A4%E8%AF%81%E3%80%81%E6%9D%83%E9%99%90%E5%92%8C%E9%A2%91%E7%8E%87/#21","text":"1 2 3 4 5 6 7 # settings.py 'DEFAULT_THROTTLE_CLASSES' : ( 'rest_framework.throttling.UserRateThrottle' ), 'DEFAULT_THROTTLE_RATES' : { 'user' : '10/m' , }","title":"2.1 \u5168\u5c40\u9650\u5236"},{"location":"programming/python/DjangoRESTframework/%E8%AE%A4%E8%AF%81%E3%80%81%E6%9D%83%E9%99%90%E5%92%8C%E9%A2%91%E7%8E%87/#22","text":"1 2 3 4 5 6 7 # views.py class TestView ( APIView ): authentication_classes = [] permission_classes = [] throttle_classes = [ UserRateThrottle ] # \u5c40\u90e8\u4f7f\u7528 def get ( self , request , * args , ** kwargs ): return Response ( 'OK' )","title":"2.2 \u5c40\u90e8\u9650\u5236"},{"location":"programming/python/DjangoRESTframework/%E8%AF%B7%E6%B1%82%E5%92%8C%E5%93%8D%E5%BA%94/","text":"\u8bf7\u6c42\u548c\u54cd\u5e94 \u00b6 1. Request \u00b6 REST framework \u4f20\u5165\u89c6\u56fe\u7684request\u5bf9\u8c61\u4e0d\u518d\u662fDjango\u9ed8\u8ba4\u7684HttpRequest\u5bf9\u8c61\uff0c\u800c\u662fREST framework\u63d0\u4f9b\u7684\u6269\u5c55\u4e86HttpRequest\u7c7b\u7684 Request \u7c7b\u7684\u5bf9\u8c61\u3002 REST framework \u63d0\u4f9b\u4e86 Parser \u89e3\u6790\u5668\uff0c\u5728\u63a5\u6536\u5230\u8bf7\u6c42\u540e\u4f1a\u81ea\u52a8\u6839\u636eContent-Type\u6307\u660e\u7684\u8bf7\u6c42\u6570\u636e\u7c7b\u578b\uff08\u5982JSON\u3001\u8868\u5355\u7b49\uff09\u5c06\u8bf7\u6c42\u6570\u636e\u8fdb\u884cparse\u89e3\u6790\uff0c\u89e3\u6790\u4e3a\u7c7b\u5b57\u5178[QueryDict]\u5bf9\u8c61\u4fdd\u5b58\u5230 Request \u5bf9\u8c61\u4e2d\u3002 Request\u5bf9\u8c61\u7684\u6570\u636e\u662f\u81ea\u52a8\u6839\u636e\u524d\u7aef\u53d1\u9001\u6570\u636e\u7684\u683c\u5f0f\u8fdb\u884c\u89e3\u6790\u4e4b\u540e\u7684\u7ed3\u679c\u3002 \u65e0\u8bba\u524d\u7aef\u53d1\u9001\u7684\u54ea\u79cd\u683c\u5f0f\u7684\u6570\u636e\uff0c\u6211\u4eec\u90fd\u53ef\u4ee5\u4ee5\u7edf\u4e00\u7684\u65b9\u5f0f\u8bfb\u53d6\u6570\u636e\u3002 1.1 \u5e38\u7528\u5c5e\u6027 \u00b6 1. data \u00b6 request.data \u8fd4\u56de\u89e3\u6790\u4e4b\u540e\u7684\u8bf7\u6c42\u4f53\u6570\u636e\u3002\u7c7b\u4f3c\u4e8eDjango\u4e2d\u6807\u51c6\u7684 request.POST \u548c request.FILES \u5c5e\u6027\uff0c\u4f46\u63d0\u4f9b\u5982\u4e0b\u7279\u6027\uff1a \u5305\u542b\u4e86\u89e3\u6790\u4e4b\u540e\u7684\u6587\u4ef6\u548c\u975e\u6587\u4ef6\u6570\u636e \u5305\u542b\u4e86\u5bf9POST\u3001PUT\u3001PATCH\u8bf7\u6c42\u65b9\u5f0f\u89e3\u6790\u540e\u7684\u6570\u636e \u5229\u7528\u4e86REST framework\u7684parsers\u89e3\u6790\u5668\uff0c\u4e0d\u4ec5\u652f\u6301\u8868\u5355\u7c7b\u578b\u6570\u636e\uff0c\u4e5f\u652f\u6301JSON\u6570\u636e 2. query_params \u00b6 request.query_params \u4e0eDjango\u6807\u51c6\u7684 request.GET \u76f8\u540c\uff0c\u53ea\u662f\u66f4\u6362\u4e86\u66f4\u6b63\u786e\u7684\u540d\u79f0\u800c\u5df2\u3002 2. Response \u00b6 REST framework\u63d0\u4f9b\u4e86\u4e00\u4e2a\u54cd\u5e94\u7c7b Response \uff0c\u4f7f\u7528\u8be5\u7c7b\u6784\u9020\u54cd\u5e94\u5bf9\u8c61\u65f6\uff0c\u54cd\u5e94\u7684\u5177\u4f53\u6570\u636e\u5185\u5bb9\u4f1a\u88ab\u8f6c\u6362\uff08render\u6e32\u67d3\uff09\u6210\u7b26\u5408\u524d\u7aef\u9700\u6c42\u7684\u7c7b\u578b\u3002 REST framework\u63d0\u4f9b\u4e86 Renderer \u6e32\u67d3\u5668\uff0c\u7528\u6765\u6839\u636e\u8bf7\u6c42\u5934\u4e2d\u7684 Accept \uff08\u63a5\u6536\u6570\u636e\u7c7b\u578b\u58f0\u660e\uff09\u6765\u81ea\u52a8\u8f6c\u6362\u54cd\u5e94\u6570\u636e\u5230\u5bf9\u5e94\u683c\u5f0f\u3002\u5982\u679c\u524d\u7aef\u8bf7\u6c42\u4e2d\u672a\u8fdb\u884cAccept\u58f0\u660e\uff0c\u5219\u4f1a\u91c7\u7528\u9ed8\u8ba4\u65b9\u5f0f\u5904\u7406\u54cd\u5e94\u6570\u636e\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u914d\u7f6e\u6765\u4fee\u6539\u9ed8\u8ba4\u54cd\u5e94\u683c\u5f0f\u3002 \u53ef\u4ee5\u5728 rest_framework.settings \u67e5\u627e\u6240\u6709\u7684drf\u9ed8\u8ba4\u914d\u7f6e\u9879 1 2 3 4 5 6 REST_FRAMEWORK = { 'DEFAULT_RENDERER_CLASSES' : ( # \u9ed8\u8ba4\u54cd\u5e94\u6e32\u67d3\u7c7b 'rest_framework.renderers.JSONRenderer' , # json\u6e32\u67d3\u5668 'rest_framework.renderers.BrowsableAPIRenderer' , # \u6d4f\u89c8API\u6e32\u67d3\u5668 ) } 2.1 \u6784\u9020\u65b9\u5f0f \u00b6 1 Response ( data , status = None , template_name = None , headers = None , content_type = None ) data \u6570\u636e\u662frender\u5904\u7406\u4e4b\u540e\u7684\u6570\u636e\uff0c\u53ea\u9700\u4f20\u9012python\u7684\u5185\u5efa\u7c7b\u578b\u6570\u636e\u5373\u53ef\uff0cREST framework\u4f1a\u4f7f\u7528 renderer \u6e32\u67d3\u5668\u5904\u7406 data \u3002 data \u4e0d\u80fd\u662f\u590d\u6742\u7ed3\u6784\u7684\u6570\u636e\uff0c\u5982Django\u7684\u6a21\u578b\u7c7b\u5bf9\u8c61\uff0c\u5bf9\u4e8e\u8fd9\u6837\u7684\u6570\u636e\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 Serializer \u5e8f\u5217\u5316\u5668\u5e8f\u5217\u5316\u5904\u7406\u540e\uff08\u8f6c\u4e3a\u4e86Python\u5b57\u5178\u7c7b\u578b\uff09\u518d\u4f20\u9012\u7ed9 data \u53c2\u6570\u3002 \u53c2\u6570\u8bf4\u660e\uff1a data : \u4e3a\u54cd\u5e94\u51c6\u5907\u7684\u5e8f\u5217\u5316\u5904\u7406\u540e\u7684\u6570\u636e\uff1b status : \u72b6\u6001\u7801\uff0c\u9ed8\u8ba4200\uff1b template_name : \u6a21\u677f\u540d\u79f0\uff0c\u5982\u679c\u4f7f\u7528 HTMLRenderer \u65f6\u9700\u6307\u660e\uff1b headers : \u7528\u4e8e\u5b58\u653e\u54cd\u5e94\u5934\u4fe1\u606f\u7684\u5b57\u5178\uff1b content_type : \u54cd\u5e94\u6570\u636e\u7684Content-Type\uff0c\u901a\u5e38\u6b64\u53c2\u6570\u65e0\u9700\u4f20\u9012\uff0cREST framework\u4f1a\u6839\u636e\u524d\u7aef\u6240\u9700\u7c7b\u578b\u6570\u636e\u6765\u8bbe\u7f6e\u8be5\u53c2\u6570\u3002 2.2 \u5e38\u7528\u5c5e\u6027 \u00b6 1. data \u00b6 \u4f20\u7ed9response\u5bf9\u8c61\u7684\u5e8f\u5217\u5316\u540e\uff0c\u4f46\u5c1a\u672arender\u5904\u7406\u7684\u6570\u636e 2. status_code \u00b6 \u72b6\u6001\u7801\u7684\u6570\u5b57 3 .content \u00b6 \u7ecf\u8fc7render\u5904\u7406\u540e\u7684\u54cd\u5e94\u6570\u636e 2.3 \u72b6\u6001\u7801 \u00b6 \u4e3a\u4e86\u65b9\u4fbf\u8bbe\u7f6e\u72b6\u6001\u7801\uff0cREST framewrok\u5728 rest_framework.status \u6a21\u5757\u4e2d\u63d0\u4f9b\u4e86\u5e38\u7528\u72b6\u6001\u7801\u5e38\u91cf\u3002","title":"\u8bf7\u6c42\u548c\u54cd\u5e94"},{"location":"programming/python/DjangoRESTframework/%E8%AF%B7%E6%B1%82%E5%92%8C%E5%93%8D%E5%BA%94/#_1","text":"","title":"\u8bf7\u6c42\u548c\u54cd\u5e94"},{"location":"programming/python/DjangoRESTframework/%E8%AF%B7%E6%B1%82%E5%92%8C%E5%93%8D%E5%BA%94/#1-request","text":"REST framework \u4f20\u5165\u89c6\u56fe\u7684request\u5bf9\u8c61\u4e0d\u518d\u662fDjango\u9ed8\u8ba4\u7684HttpRequest\u5bf9\u8c61\uff0c\u800c\u662fREST framework\u63d0\u4f9b\u7684\u6269\u5c55\u4e86HttpRequest\u7c7b\u7684 Request \u7c7b\u7684\u5bf9\u8c61\u3002 REST framework \u63d0\u4f9b\u4e86 Parser \u89e3\u6790\u5668\uff0c\u5728\u63a5\u6536\u5230\u8bf7\u6c42\u540e\u4f1a\u81ea\u52a8\u6839\u636eContent-Type\u6307\u660e\u7684\u8bf7\u6c42\u6570\u636e\u7c7b\u578b\uff08\u5982JSON\u3001\u8868\u5355\u7b49\uff09\u5c06\u8bf7\u6c42\u6570\u636e\u8fdb\u884cparse\u89e3\u6790\uff0c\u89e3\u6790\u4e3a\u7c7b\u5b57\u5178[QueryDict]\u5bf9\u8c61\u4fdd\u5b58\u5230 Request \u5bf9\u8c61\u4e2d\u3002 Request\u5bf9\u8c61\u7684\u6570\u636e\u662f\u81ea\u52a8\u6839\u636e\u524d\u7aef\u53d1\u9001\u6570\u636e\u7684\u683c\u5f0f\u8fdb\u884c\u89e3\u6790\u4e4b\u540e\u7684\u7ed3\u679c\u3002 \u65e0\u8bba\u524d\u7aef\u53d1\u9001\u7684\u54ea\u79cd\u683c\u5f0f\u7684\u6570\u636e\uff0c\u6211\u4eec\u90fd\u53ef\u4ee5\u4ee5\u7edf\u4e00\u7684\u65b9\u5f0f\u8bfb\u53d6\u6570\u636e\u3002","title":"1. Request"},{"location":"programming/python/DjangoRESTframework/%E8%AF%B7%E6%B1%82%E5%92%8C%E5%93%8D%E5%BA%94/#11","text":"","title":"1.1 \u5e38\u7528\u5c5e\u6027"},{"location":"programming/python/DjangoRESTframework/%E8%AF%B7%E6%B1%82%E5%92%8C%E5%93%8D%E5%BA%94/#1data","text":"request.data \u8fd4\u56de\u89e3\u6790\u4e4b\u540e\u7684\u8bf7\u6c42\u4f53\u6570\u636e\u3002\u7c7b\u4f3c\u4e8eDjango\u4e2d\u6807\u51c6\u7684 request.POST \u548c request.FILES \u5c5e\u6027\uff0c\u4f46\u63d0\u4f9b\u5982\u4e0b\u7279\u6027\uff1a \u5305\u542b\u4e86\u89e3\u6790\u4e4b\u540e\u7684\u6587\u4ef6\u548c\u975e\u6587\u4ef6\u6570\u636e \u5305\u542b\u4e86\u5bf9POST\u3001PUT\u3001PATCH\u8bf7\u6c42\u65b9\u5f0f\u89e3\u6790\u540e\u7684\u6570\u636e \u5229\u7528\u4e86REST framework\u7684parsers\u89e3\u6790\u5668\uff0c\u4e0d\u4ec5\u652f\u6301\u8868\u5355\u7c7b\u578b\u6570\u636e\uff0c\u4e5f\u652f\u6301JSON\u6570\u636e","title":"1.data"},{"location":"programming/python/DjangoRESTframework/%E8%AF%B7%E6%B1%82%E5%92%8C%E5%93%8D%E5%BA%94/#2-query_params","text":"request.query_params \u4e0eDjango\u6807\u51c6\u7684 request.GET \u76f8\u540c\uff0c\u53ea\u662f\u66f4\u6362\u4e86\u66f4\u6b63\u786e\u7684\u540d\u79f0\u800c\u5df2\u3002","title":"2. query_params"},{"location":"programming/python/DjangoRESTframework/%E8%AF%B7%E6%B1%82%E5%92%8C%E5%93%8D%E5%BA%94/#2-response","text":"REST framework\u63d0\u4f9b\u4e86\u4e00\u4e2a\u54cd\u5e94\u7c7b Response \uff0c\u4f7f\u7528\u8be5\u7c7b\u6784\u9020\u54cd\u5e94\u5bf9\u8c61\u65f6\uff0c\u54cd\u5e94\u7684\u5177\u4f53\u6570\u636e\u5185\u5bb9\u4f1a\u88ab\u8f6c\u6362\uff08render\u6e32\u67d3\uff09\u6210\u7b26\u5408\u524d\u7aef\u9700\u6c42\u7684\u7c7b\u578b\u3002 REST framework\u63d0\u4f9b\u4e86 Renderer \u6e32\u67d3\u5668\uff0c\u7528\u6765\u6839\u636e\u8bf7\u6c42\u5934\u4e2d\u7684 Accept \uff08\u63a5\u6536\u6570\u636e\u7c7b\u578b\u58f0\u660e\uff09\u6765\u81ea\u52a8\u8f6c\u6362\u54cd\u5e94\u6570\u636e\u5230\u5bf9\u5e94\u683c\u5f0f\u3002\u5982\u679c\u524d\u7aef\u8bf7\u6c42\u4e2d\u672a\u8fdb\u884cAccept\u58f0\u660e\uff0c\u5219\u4f1a\u91c7\u7528\u9ed8\u8ba4\u65b9\u5f0f\u5904\u7406\u54cd\u5e94\u6570\u636e\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u914d\u7f6e\u6765\u4fee\u6539\u9ed8\u8ba4\u54cd\u5e94\u683c\u5f0f\u3002 \u53ef\u4ee5\u5728 rest_framework.settings \u67e5\u627e\u6240\u6709\u7684drf\u9ed8\u8ba4\u914d\u7f6e\u9879 1 2 3 4 5 6 REST_FRAMEWORK = { 'DEFAULT_RENDERER_CLASSES' : ( # \u9ed8\u8ba4\u54cd\u5e94\u6e32\u67d3\u7c7b 'rest_framework.renderers.JSONRenderer' , # json\u6e32\u67d3\u5668 'rest_framework.renderers.BrowsableAPIRenderer' , # \u6d4f\u89c8API\u6e32\u67d3\u5668 ) }","title":"2. Response"},{"location":"programming/python/DjangoRESTframework/%E8%AF%B7%E6%B1%82%E5%92%8C%E5%93%8D%E5%BA%94/#21","text":"1 Response ( data , status = None , template_name = None , headers = None , content_type = None ) data \u6570\u636e\u662frender\u5904\u7406\u4e4b\u540e\u7684\u6570\u636e\uff0c\u53ea\u9700\u4f20\u9012python\u7684\u5185\u5efa\u7c7b\u578b\u6570\u636e\u5373\u53ef\uff0cREST framework\u4f1a\u4f7f\u7528 renderer \u6e32\u67d3\u5668\u5904\u7406 data \u3002 data \u4e0d\u80fd\u662f\u590d\u6742\u7ed3\u6784\u7684\u6570\u636e\uff0c\u5982Django\u7684\u6a21\u578b\u7c7b\u5bf9\u8c61\uff0c\u5bf9\u4e8e\u8fd9\u6837\u7684\u6570\u636e\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528 Serializer \u5e8f\u5217\u5316\u5668\u5e8f\u5217\u5316\u5904\u7406\u540e\uff08\u8f6c\u4e3a\u4e86Python\u5b57\u5178\u7c7b\u578b\uff09\u518d\u4f20\u9012\u7ed9 data \u53c2\u6570\u3002 \u53c2\u6570\u8bf4\u660e\uff1a data : \u4e3a\u54cd\u5e94\u51c6\u5907\u7684\u5e8f\u5217\u5316\u5904\u7406\u540e\u7684\u6570\u636e\uff1b status : \u72b6\u6001\u7801\uff0c\u9ed8\u8ba4200\uff1b template_name : \u6a21\u677f\u540d\u79f0\uff0c\u5982\u679c\u4f7f\u7528 HTMLRenderer \u65f6\u9700\u6307\u660e\uff1b headers : \u7528\u4e8e\u5b58\u653e\u54cd\u5e94\u5934\u4fe1\u606f\u7684\u5b57\u5178\uff1b content_type : \u54cd\u5e94\u6570\u636e\u7684Content-Type\uff0c\u901a\u5e38\u6b64\u53c2\u6570\u65e0\u9700\u4f20\u9012\uff0cREST framework\u4f1a\u6839\u636e\u524d\u7aef\u6240\u9700\u7c7b\u578b\u6570\u636e\u6765\u8bbe\u7f6e\u8be5\u53c2\u6570\u3002","title":"2.1 \u6784\u9020\u65b9\u5f0f"},{"location":"programming/python/DjangoRESTframework/%E8%AF%B7%E6%B1%82%E5%92%8C%E5%93%8D%E5%BA%94/#22","text":"","title":"2.2 \u5e38\u7528\u5c5e\u6027"},{"location":"programming/python/DjangoRESTframework/%E8%AF%B7%E6%B1%82%E5%92%8C%E5%93%8D%E5%BA%94/#1-data","text":"\u4f20\u7ed9response\u5bf9\u8c61\u7684\u5e8f\u5217\u5316\u540e\uff0c\u4f46\u5c1a\u672arender\u5904\u7406\u7684\u6570\u636e","title":"1. data"},{"location":"programming/python/DjangoRESTframework/%E8%AF%B7%E6%B1%82%E5%92%8C%E5%93%8D%E5%BA%94/#2-status_code","text":"\u72b6\u6001\u7801\u7684\u6570\u5b57","title":"2. status_code"},{"location":"programming/python/DjangoRESTframework/%E8%AF%B7%E6%B1%82%E5%92%8C%E5%93%8D%E5%BA%94/#3-content","text":"\u7ecf\u8fc7render\u5904\u7406\u540e\u7684\u54cd\u5e94\u6570\u636e","title":"3 .content"},{"location":"programming/python/DjangoRESTframework/%E8%AF%B7%E6%B1%82%E5%92%8C%E5%93%8D%E5%BA%94/#23","text":"\u4e3a\u4e86\u65b9\u4fbf\u8bbe\u7f6e\u72b6\u6001\u7801\uff0cREST framewrok\u5728 rest_framework.status \u6a21\u5757\u4e2d\u63d0\u4f9b\u4e86\u5e38\u7528\u72b6\u6001\u7801\u5e38\u91cf\u3002","title":"2.3 \u72b6\u6001\u7801"},{"location":"programming/python/DjangoRESTframework/%E8%B7%AF%E7%94%B1/","text":"\u8def\u7531 \u00b6 \u4e00\u3001\u81ea\u52a8\u751f\u6210\u8def\u7531 \u00b6 1. \u4f7f\u7528\u6b65\u9aa4 \u00b6 \u5728 view.py \u4e2d\u5bfc\u5165 routers \u6a21\u5757\uff0c\u8be5\u6a21\u5757\u4e2d\u6709\u4e24\u4e2a\u7c7b DefaultRouter \u548c SimpleRouter \u5b9e\u4f8b\u5316\u5176\u4e2d\u4e00\u4e2a\u5f97\u5230\u4e00\u4e2a\u5bf9\u8c61 \u6ce8\u518c\u89c6\u56fe \u5c06\u81ea\u52a8\u751f\u6210\u7684\u8def\u7531\uff0c\u52a0\u5165\u5230\u539f\u8def\u7531\u4e2d 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 # urls.py from django.conf.urls import url from django.contrib import admin from app import views from rest_framework import routers router = routers . DefaultRouter () # router.register('\u524d\u7f00','\u7ee7\u627f\u81eaModelViewSet\u89c6\u56fe\u7c7b','\u522b\u540d') router . register ( 'books' , views . BooksView ) urlpatterns = [ url ( r '^admin/' , admin . site . urls ), ] urlpatterns += router . urls print ( router . urls ) 2. SimpleRouter \u548c DefaultRouter \u7684\u533a\u522b \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 # SimpleRouter [ < RegexURLPattern book - list ^ books / $ > \uff0c < RegexURLPattern book - detail ^ books / ( ? P < pk > [ ^/. ] + ) / $ > ] # DefaultRouter [ < RegexURLPattern book - list ^ books / $ > , < RegexURLPattern book - detail ^ books / ( ? P < pk > [ ^/. ] + ) / $ > , # \u6bd4SimpleRouter\u591a\u4e86\u56db\u4e2a < RegexURLPattern book - list ^ books \\ . ( ? P < format > [ a - z0 - 9 ] + ) / ?$ > , < RegexURLPattern book - detail ^ books / ( ? P < pk > [ ^/. ] + ) \\ . ( ? P < format > [ a - z0 - 9 ] + ) / ?$ > , < RegexURLPattern api - root ^ $ > , < RegexURLPattern api - root ^ \\ . ( ? P < format > [ a - z0 - 9 ] + ) / ?$ > ] \u4e8c\u3001 action \u7684\u7528\u6cd5 \u00b6 \u4e3a\u4e86\u7ed9\u7ee7\u627f\u81ea ModelViewSet \u7684\u89c6\u56fe\u7c7b\u4e2d\u5b9a\u4e49\u7684\u51fd\u6570\u4e5f\u6dfb\u52a0\u8def\u7531\u3002 action \u662f\u4e2a\u88c5\u9970\u5668\uff0c\u653e\u5728\u88ab\u88c5\u9970\u7684\u51fd\u6570\u4e0a\u65b9\uff0c\u6709\u4e24\u4e2a\u53c2\u6570 1 2 1. method\uff1a\u8bf7\u6c42\u65b9\u5f0f 2. detail\uff1a\u5e03\u5c14\u503c\uff0c\u662f\u5426\u5e26pk 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 from rest_framework.decorators import action class BooksView ( ModelViewSet ): queryset = Book . objects . all () serializer_class = BookSerializer # methods\u7b2c\u4e00\u4e2a\u53c2\u6570\uff0c\u4f20\u4e00\u4e2a\u5217\u8868\uff0c\u5217\u8868\u4e2d\u653e\u8bf7\u6c42\u65b9\u5f0f\uff0c # ^books/get_1/$ [name='book-get-1'] \u5f53\u5411\u8fd9\u4e2a\u5730\u5740\u53d1\u9001get\u8bf7\u6c42\uff0c\u4f1a\u6267\u884c\u4e0b\u9762\u7684\u51fd\u6570 # detail\uff1a\u5e03\u5c14\u7c7b\u578b \u5982\u679c\u662fTrue\uff0c\u751f\u6210\u5e26pk\u7684\u5730\u5740\uff0c\u5426\u5219\u751f\u6210\u4e0d\u5e26pk\u7684\u5730\u5740 #\u751f\u6210\u8def\u7531\uff1a ^books/(?P<pk>[^/.]+)/get_1/$ [name='book-get-1'] @action ( methods = [ 'GET' , 'POST' ], detail = True ) def get_1 ( self , request , pk ): print ( pk ) book = self . get_queryset ()[: 2 ] # \u4ece0\u5f00\u59cb\u622a\u53d6\u4e00\u6761 ser = self . get_serializer ( book , many = True ) return Response ( ser . data )","title":"\u8def\u7531"},{"location":"programming/python/DjangoRESTframework/%E8%B7%AF%E7%94%B1/#_1","text":"","title":"\u8def\u7531"},{"location":"programming/python/DjangoRESTframework/%E8%B7%AF%E7%94%B1/#_2","text":"","title":"\u4e00\u3001\u81ea\u52a8\u751f\u6210\u8def\u7531"},{"location":"programming/python/DjangoRESTframework/%E8%B7%AF%E7%94%B1/#1","text":"\u5728 view.py \u4e2d\u5bfc\u5165 routers \u6a21\u5757\uff0c\u8be5\u6a21\u5757\u4e2d\u6709\u4e24\u4e2a\u7c7b DefaultRouter \u548c SimpleRouter \u5b9e\u4f8b\u5316\u5176\u4e2d\u4e00\u4e2a\u5f97\u5230\u4e00\u4e2a\u5bf9\u8c61 \u6ce8\u518c\u89c6\u56fe \u5c06\u81ea\u52a8\u751f\u6210\u7684\u8def\u7531\uff0c\u52a0\u5165\u5230\u539f\u8def\u7531\u4e2d 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 # urls.py from django.conf.urls import url from django.contrib import admin from app import views from rest_framework import routers router = routers . DefaultRouter () # router.register('\u524d\u7f00','\u7ee7\u627f\u81eaModelViewSet\u89c6\u56fe\u7c7b','\u522b\u540d') router . register ( 'books' , views . BooksView ) urlpatterns = [ url ( r '^admin/' , admin . site . urls ), ] urlpatterns += router . urls print ( router . urls )","title":"1. \u4f7f\u7528\u6b65\u9aa4"},{"location":"programming/python/DjangoRESTframework/%E8%B7%AF%E7%94%B1/#2-simplerouterdefaultrouter","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 # SimpleRouter [ < RegexURLPattern book - list ^ books / $ > \uff0c < RegexURLPattern book - detail ^ books / ( ? P < pk > [ ^/. ] + ) / $ > ] # DefaultRouter [ < RegexURLPattern book - list ^ books / $ > , < RegexURLPattern book - detail ^ books / ( ? P < pk > [ ^/. ] + ) / $ > , # \u6bd4SimpleRouter\u591a\u4e86\u56db\u4e2a < RegexURLPattern book - list ^ books \\ . ( ? P < format > [ a - z0 - 9 ] + ) / ?$ > , < RegexURLPattern book - detail ^ books / ( ? P < pk > [ ^/. ] + ) \\ . ( ? P < format > [ a - z0 - 9 ] + ) / ?$ > , < RegexURLPattern api - root ^ $ > , < RegexURLPattern api - root ^ \\ . ( ? P < format > [ a - z0 - 9 ] + ) / ?$ > ]","title":"2. SimpleRouter\u548cDefaultRouter\u7684\u533a\u522b"},{"location":"programming/python/DjangoRESTframework/%E8%B7%AF%E7%94%B1/#action","text":"\u4e3a\u4e86\u7ed9\u7ee7\u627f\u81ea ModelViewSet \u7684\u89c6\u56fe\u7c7b\u4e2d\u5b9a\u4e49\u7684\u51fd\u6570\u4e5f\u6dfb\u52a0\u8def\u7531\u3002 action \u662f\u4e2a\u88c5\u9970\u5668\uff0c\u653e\u5728\u88ab\u88c5\u9970\u7684\u51fd\u6570\u4e0a\u65b9\uff0c\u6709\u4e24\u4e2a\u53c2\u6570 1 2 1. method\uff1a\u8bf7\u6c42\u65b9\u5f0f 2. detail\uff1a\u5e03\u5c14\u503c\uff0c\u662f\u5426\u5e26pk 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 from rest_framework.decorators import action class BooksView ( ModelViewSet ): queryset = Book . objects . all () serializer_class = BookSerializer # methods\u7b2c\u4e00\u4e2a\u53c2\u6570\uff0c\u4f20\u4e00\u4e2a\u5217\u8868\uff0c\u5217\u8868\u4e2d\u653e\u8bf7\u6c42\u65b9\u5f0f\uff0c # ^books/get_1/$ [name='book-get-1'] \u5f53\u5411\u8fd9\u4e2a\u5730\u5740\u53d1\u9001get\u8bf7\u6c42\uff0c\u4f1a\u6267\u884c\u4e0b\u9762\u7684\u51fd\u6570 # detail\uff1a\u5e03\u5c14\u7c7b\u578b \u5982\u679c\u662fTrue\uff0c\u751f\u6210\u5e26pk\u7684\u5730\u5740\uff0c\u5426\u5219\u751f\u6210\u4e0d\u5e26pk\u7684\u5730\u5740 #\u751f\u6210\u8def\u7531\uff1a ^books/(?P<pk>[^/.]+)/get_1/$ [name='book-get-1'] @action ( methods = [ 'GET' , 'POST' ], detail = True ) def get_1 ( self , request , pk ): print ( pk ) book = self . get_queryset ()[: 2 ] # \u4ece0\u5f00\u59cb\u622a\u53d6\u4e00\u6761 ser = self . get_serializer ( book , many = True ) return Response ( ser . data )","title":"\u4e8c\u3001action\u7684\u7528\u6cd5"},{"location":"programming/python/DjangoRESTframework/%E8%BF%87%E6%BB%A4%E3%80%81%E6%8E%92%E5%BA%8F%E3%80%81%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/","text":"\u8fc7\u6ee4\u3001\u6392\u5e8f\u548c\u5f02\u5e38\u5904\u7406 \u00b6 \u4e00\u3001\u8fc7\u6ee4 \u00b6 1. \u57fa\u672c\u4f7f\u7528 \u00b6 1.1 \u5b89\u88c5 \u00b6 1 pip3 install django-filter 1.2 \u6ce8\u518c \u00b6 1 2 3 4 5 # settings.py INSTALLED_APPS = [ ... 'django_filters' ] 1.3 \u5168\u5c40\u914d\u7f6e \u00b6 1 2 3 4 # settings.py REST_FRAMEWORK = { 'DEFAULT_FILTER_BACKENDS' : ( 'django_filters.rest_framework.DjangoFilterBackend' ,) } 1.4 \u89c6\u56fe\u7c7b\u4e2d\u6dfb\u52a0\u8fc7\u6ee4\u5b57\u6bb5 \u00b6 1 2 3 4 class BooksView ( ListAPIView ): queryset = models . Book . objects . all () serializer_class = BookSerializer filter_fields = ( 'price' ,) # \u914d\u7f6e\u53ef\u4ee5\u6309\u7167\u54ea\u4e2a\u5b57\u6bb5\u6765\u8fc7\u6ee4 \u4e8c\u3001\u6392\u5e8f \u00b6 1. \u57fa\u672c\u4f7f\u7528 \u00b6 \u5c40\u90e8\u4f7f\u7528\uff1a 1 2 3 4 5 6 from rest_framework.filters import OrderingFilter class BooksView ( ListAPIView ): queryset = models . Book . objects . all () serializer_class = BookSerializer filter_backends = [ OrderingFilter ] ordering_fields = ( 'id' , 'price' ) \u8bbf\u95ee\uff1a http://127.0.0.1:8000/books/?ordering=price \u4e09\u3001\u5f02\u5e38\u5904\u7406 \u00b6 1. \u57fa\u672c\u4f7f\u7528 \u00b6 1. \u914d\u7f6e \u00b6 1 2 3 4 # settings.py REST_FRAMEWORK = { 'EXCEPTION_HANDLER' : 'app.utils.my_exception_handler' , } 2. \u5b9a\u4e49\u5f02\u5e38\u5904\u7406 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 from rest_framework.views import exception_handler from rest_framework.response import Response from rest_framework import status def my_exception_handler ( exc , context ): response = exception_handler ( exc , context ) # \u4e24\u79cd\u60c5\u51b5: # 1. drf\u6ca1\u6709\u5904\u7406,\u8fd4\u56deNone # 2. response\u5bf9\u8c61\uff0cdjango\u5904\u7406\u4e86\uff0c\u4f46\u662f\u5904\u7406\u7684\u4e0d\u7b26\u5408\u9879\u76ee\u7684\u8981\u6c42 if not response : if isinstance ( exc , ZeroDivisionError ): return Response ( data = { 'status' : 70003 , 'msg' : \"\u9664\u4ee50\u7684\u9519\u8bef\" + str ( exc )}, status = status . HTTP_400_BAD_REQUEST ) return Response ( data = { 'status' : 30002 , 'msg' : str ( exc )}, status = status . HTTP_400_BAD_REQUEST ) else : # return response return Response ( data = { 'status' : 40012 , 'msg' : response . data . get ( 'detail' )}, status = status . HTTP_400_BAD_REQUEST )","title":"\u8fc7\u6ee4\u3001\u6392\u5e8f\u548c\u5f02\u5e38\u5904\u7406"},{"location":"programming/python/DjangoRESTframework/%E8%BF%87%E6%BB%A4%E3%80%81%E6%8E%92%E5%BA%8F%E3%80%81%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/#_1","text":"","title":"\u8fc7\u6ee4\u3001\u6392\u5e8f\u548c\u5f02\u5e38\u5904\u7406"},{"location":"programming/python/DjangoRESTframework/%E8%BF%87%E6%BB%A4%E3%80%81%E6%8E%92%E5%BA%8F%E3%80%81%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/#_2","text":"","title":"\u4e00\u3001\u8fc7\u6ee4"},{"location":"programming/python/DjangoRESTframework/%E8%BF%87%E6%BB%A4%E3%80%81%E6%8E%92%E5%BA%8F%E3%80%81%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/#1","text":"","title":"1. \u57fa\u672c\u4f7f\u7528"},{"location":"programming/python/DjangoRESTframework/%E8%BF%87%E6%BB%A4%E3%80%81%E6%8E%92%E5%BA%8F%E3%80%81%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/#11","text":"1 pip3 install django-filter","title":"1.1 \u5b89\u88c5"},{"location":"programming/python/DjangoRESTframework/%E8%BF%87%E6%BB%A4%E3%80%81%E6%8E%92%E5%BA%8F%E3%80%81%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/#12","text":"1 2 3 4 5 # settings.py INSTALLED_APPS = [ ... 'django_filters' ]","title":"1.2 \u6ce8\u518c"},{"location":"programming/python/DjangoRESTframework/%E8%BF%87%E6%BB%A4%E3%80%81%E6%8E%92%E5%BA%8F%E3%80%81%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/#13","text":"1 2 3 4 # settings.py REST_FRAMEWORK = { 'DEFAULT_FILTER_BACKENDS' : ( 'django_filters.rest_framework.DjangoFilterBackend' ,) }","title":"1.3 \u5168\u5c40\u914d\u7f6e"},{"location":"programming/python/DjangoRESTframework/%E8%BF%87%E6%BB%A4%E3%80%81%E6%8E%92%E5%BA%8F%E3%80%81%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/#14","text":"1 2 3 4 class BooksView ( ListAPIView ): queryset = models . Book . objects . all () serializer_class = BookSerializer filter_fields = ( 'price' ,) # \u914d\u7f6e\u53ef\u4ee5\u6309\u7167\u54ea\u4e2a\u5b57\u6bb5\u6765\u8fc7\u6ee4","title":"1.4 \u89c6\u56fe\u7c7b\u4e2d\u6dfb\u52a0\u8fc7\u6ee4\u5b57\u6bb5"},{"location":"programming/python/DjangoRESTframework/%E8%BF%87%E6%BB%A4%E3%80%81%E6%8E%92%E5%BA%8F%E3%80%81%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/#_3","text":"","title":"\u4e8c\u3001\u6392\u5e8f"},{"location":"programming/python/DjangoRESTframework/%E8%BF%87%E6%BB%A4%E3%80%81%E6%8E%92%E5%BA%8F%E3%80%81%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/#1_1","text":"\u5c40\u90e8\u4f7f\u7528\uff1a 1 2 3 4 5 6 from rest_framework.filters import OrderingFilter class BooksView ( ListAPIView ): queryset = models . Book . objects . all () serializer_class = BookSerializer filter_backends = [ OrderingFilter ] ordering_fields = ( 'id' , 'price' ) \u8bbf\u95ee\uff1a http://127.0.0.1:8000/books/?ordering=price","title":"1. \u57fa\u672c\u4f7f\u7528"},{"location":"programming/python/DjangoRESTframework/%E8%BF%87%E6%BB%A4%E3%80%81%E6%8E%92%E5%BA%8F%E3%80%81%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/#_4","text":"","title":"\u4e09\u3001\u5f02\u5e38\u5904\u7406"},{"location":"programming/python/DjangoRESTframework/%E8%BF%87%E6%BB%A4%E3%80%81%E6%8E%92%E5%BA%8F%E3%80%81%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/#1_2","text":"","title":"1. \u57fa\u672c\u4f7f\u7528"},{"location":"programming/python/DjangoRESTframework/%E8%BF%87%E6%BB%A4%E3%80%81%E6%8E%92%E5%BA%8F%E3%80%81%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/#1_3","text":"1 2 3 4 # settings.py REST_FRAMEWORK = { 'EXCEPTION_HANDLER' : 'app.utils.my_exception_handler' , }","title":"1. \u914d\u7f6e"},{"location":"programming/python/DjangoRESTframework/%E8%BF%87%E6%BB%A4%E3%80%81%E6%8E%92%E5%BA%8F%E3%80%81%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86/#2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 from rest_framework.views import exception_handler from rest_framework.response import Response from rest_framework import status def my_exception_handler ( exc , context ): response = exception_handler ( exc , context ) # \u4e24\u79cd\u60c5\u51b5: # 1. drf\u6ca1\u6709\u5904\u7406,\u8fd4\u56deNone # 2. response\u5bf9\u8c61\uff0cdjango\u5904\u7406\u4e86\uff0c\u4f46\u662f\u5904\u7406\u7684\u4e0d\u7b26\u5408\u9879\u76ee\u7684\u8981\u6c42 if not response : if isinstance ( exc , ZeroDivisionError ): return Response ( data = { 'status' : 70003 , 'msg' : \"\u9664\u4ee50\u7684\u9519\u8bef\" + str ( exc )}, status = status . HTTP_400_BAD_REQUEST ) return Response ( data = { 'status' : 30002 , 'msg' : str ( exc )}, status = status . HTTP_400_BAD_REQUEST ) else : # return response return Response ( data = { 'status' : 40012 , 'msg' : response . data . get ( 'detail' )}, status = status . HTTP_400_BAD_REQUEST )","title":"2. \u5b9a\u4e49\u5f02\u5e38\u5904\u7406"},{"location":"programming/python/Flask/blueprint/","text":"\u84dd\u56fe \u00b6","title":"\u84dd\u56fe"},{"location":"programming/python/Flask/blueprint/#_1","text":"","title":"\u84dd\u56fe"},{"location":"programming/python/Flask/configure/","text":"\u914d\u7f6e\u6587\u4ef6 \u00b6 \u65b9\u5f0f\u4e00 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 from flask import Flask app = Flask ( __name__ ) # \u914d\u7f6e\u65b9\u5f0f\u4e00 app . config [ 'debug' ] = True @app.route ( '/' ) def hello_world (): return 'Hello, World!' if __name__ == '__main__' : app . run () \u65b9\u5f0f\u4e8c \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 from flask import Flask app = Flask ( __name__ ) # \u4ece\u5916\u90e8\u6587\u4ef6\u5bfc\u5165 app . config . from_pyfile ( 'settings.py' ) @app.route ( '/' ) def hello_world (): return 'Hello, World!' if __name__ == '__main__' : app . run () 1 2 # filename: settings.py debug = True \u65b9\u5f0f\u4e09 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 from flask import Flask app = Flask ( __name__ ) app . config . from_object ( 'settings.DevelopmentConfig' ) @app.route ( '/' ) def hello_world (): return 'Hello, World!' if __name__ == '__main__' : app . run () 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 # filename: settings.py class Config ( object ): DEBUG = False TESTING = False DATABASE_URI = 'sqlite:///:memory:' class ProductionConfig ( Config ): DATABASE_URI = 'mysql://user@localhost/foo' class DevelopmentConfig ( Config ): DEBUG = True class TestingConfig ( Config ): TESTING = True","title":"\u914d\u7f6e\u6587\u4ef6"},{"location":"programming/python/Flask/configure/#_1","text":"","title":"\u914d\u7f6e\u6587\u4ef6"},{"location":"programming/python/Flask/configure/#_2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 from flask import Flask app = Flask ( __name__ ) # \u914d\u7f6e\u65b9\u5f0f\u4e00 app . config [ 'debug' ] = True @app.route ( '/' ) def hello_world (): return 'Hello, World!' if __name__ == '__main__' : app . run ()","title":"\u65b9\u5f0f\u4e00"},{"location":"programming/python/Flask/configure/#_3","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 from flask import Flask app = Flask ( __name__ ) # \u4ece\u5916\u90e8\u6587\u4ef6\u5bfc\u5165 app . config . from_pyfile ( 'settings.py' ) @app.route ( '/' ) def hello_world (): return 'Hello, World!' if __name__ == '__main__' : app . run () 1 2 # filename: settings.py debug = True","title":"\u65b9\u5f0f\u4e8c"},{"location":"programming/python/Flask/configure/#_4","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 from flask import Flask app = Flask ( __name__ ) app . config . from_object ( 'settings.DevelopmentConfig' ) @app.route ( '/' ) def hello_world (): return 'Hello, World!' if __name__ == '__main__' : app . run () 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 # filename: settings.py class Config ( object ): DEBUG = False TESTING = False DATABASE_URI = 'sqlite:///:memory:' class ProductionConfig ( Config ): DATABASE_URI = 'mysql://user@localhost/foo' class DevelopmentConfig ( Config ): DEBUG = True class TestingConfig ( Config ): TESTING = True","title":"\u65b9\u5f0f\u4e09"},{"location":"programming/python/Flask/flashing/","text":"","title":"Flashing"},{"location":"programming/python/Flask/install/","text":"\u7b80\u4ecb\u4e0e\u5b89\u88c5 \u00b6 \u4e00\u3001\u7b80\u4ecb \u00b6 \u5b98\u65b9\u6587\u6863\uff1a https://flask.palletsprojects.com/ \u76f8\u6bd4\u4e8eDjango\u8fd9\u79cd\u5927\u800c\u5168\u7684\u6846\u67b6\uff0cFlask\u77ed\u5c0f\u7cbe\u608d\uff0c\u6709\u5f88\u5f3a\u53ef\u6269\u5c55\u6027\u4ee5\u53ca\u4e30\u5bcc\u7684\u7b2c\u4e09\u65b9\u7ec4\u4ef6\u3002 1 2 3 4 5 6 7 8 $ pip install flask $ pipdeptree -p flask Flask == 1 .1.2 - click [ required: > = 5 .1, installed: 7 .0 ] - itsdangerous [ required: > = 0 .24, installed: 1 .1.0 ] - Jinja2 [ required: > = 2 .10.1, installed: 2 .10.3 ] - MarkupSafe [ required: > = 0 .23, installed: 1 .1.1 ] - Werkzeug [ required: > = 0 .15, installed: 1 .0.1 ] \u5404\u7ec4\u4ef6\u7684\u4f5c\u7528\uff1a Werkzeug \u7528\u4e8e\u5b9e\u73b0 WSGI \uff0c\u5e94\u7528\u548c\u670d\u52a1\u4e4b\u95f4\u7684\u6807\u51c6 Python \u63a5\u53e3\u3002 Jinja \u7528\u4e8e\u6e32\u67d3\u9875\u9762\u7684\u6a21\u677f\u8bed\u8a00\u3002 MarkupSafe \u4e0e Jinja \u5171\u7528\uff0c\u5728\u6e32\u67d3\u9875\u9762\u65f6\u7528\u4e8e\u907f\u514d\u4e0d\u53ef\u4fe1\u7684\u8f93\u5165\uff0c\u9632\u6b62\u6ce8\u5165\u653b\u51fb\u3002 ItsDangerous \u4fdd\u8bc1\u6570\u636e\u5b8c\u6574\u6027\u7684\u5b89\u5168\u6807\u5fd7\u6570\u636e\uff0c\u7528\u4e8e\u4fdd\u62a4 Flask \u7684 session cookie. Click \u662f\u4e00\u4e2a\u547d\u4ee4\u884c\u5e94\u7528\u7684\u6846\u67b6\u3002\u7528\u4e8e\u63d0\u4f9b flask \u547d\u4ee4\uff0c\u5e76\u5141\u8bb8\u6dfb\u52a0\u81ea\u5b9a\u4e49\u7ba1\u7406\u547d\u4ee4\u3002 1 2 3 4 5 6 7 8 9 10 11 from werkzeug.serving import run_simple from werkzeug.wrappers import Response , Request @Request.application def index ( request ): return Response ( \"Hello World!\" ) if __name__ == '__main__' : run_simple ( 'localhost' , 8000 , index ) \u4e8c\u3001\u7b80\u5355\u5b9e\u7528 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 from flask import Flask app = Flask ( __name__ ) # app\u662f\u4e00\u4e2aFlask\u7c7b\u7684\u5bf9\u8c61 @app.route ( '/' ) def hello_world (): return 'Hello, World!' if __name__ == '__main__' : app . run ()","title":"\u7b80\u4ecb\u4e0e\u5b89\u88c5"},{"location":"programming/python/Flask/install/#_1","text":"","title":"\u7b80\u4ecb\u4e0e\u5b89\u88c5"},{"location":"programming/python/Flask/install/#_2","text":"\u5b98\u65b9\u6587\u6863\uff1a https://flask.palletsprojects.com/ \u76f8\u6bd4\u4e8eDjango\u8fd9\u79cd\u5927\u800c\u5168\u7684\u6846\u67b6\uff0cFlask\u77ed\u5c0f\u7cbe\u608d\uff0c\u6709\u5f88\u5f3a\u53ef\u6269\u5c55\u6027\u4ee5\u53ca\u4e30\u5bcc\u7684\u7b2c\u4e09\u65b9\u7ec4\u4ef6\u3002 1 2 3 4 5 6 7 8 $ pip install flask $ pipdeptree -p flask Flask == 1 .1.2 - click [ required: > = 5 .1, installed: 7 .0 ] - itsdangerous [ required: > = 0 .24, installed: 1 .1.0 ] - Jinja2 [ required: > = 2 .10.1, installed: 2 .10.3 ] - MarkupSafe [ required: > = 0 .23, installed: 1 .1.1 ] - Werkzeug [ required: > = 0 .15, installed: 1 .0.1 ] \u5404\u7ec4\u4ef6\u7684\u4f5c\u7528\uff1a Werkzeug \u7528\u4e8e\u5b9e\u73b0 WSGI \uff0c\u5e94\u7528\u548c\u670d\u52a1\u4e4b\u95f4\u7684\u6807\u51c6 Python \u63a5\u53e3\u3002 Jinja \u7528\u4e8e\u6e32\u67d3\u9875\u9762\u7684\u6a21\u677f\u8bed\u8a00\u3002 MarkupSafe \u4e0e Jinja \u5171\u7528\uff0c\u5728\u6e32\u67d3\u9875\u9762\u65f6\u7528\u4e8e\u907f\u514d\u4e0d\u53ef\u4fe1\u7684\u8f93\u5165\uff0c\u9632\u6b62\u6ce8\u5165\u653b\u51fb\u3002 ItsDangerous \u4fdd\u8bc1\u6570\u636e\u5b8c\u6574\u6027\u7684\u5b89\u5168\u6807\u5fd7\u6570\u636e\uff0c\u7528\u4e8e\u4fdd\u62a4 Flask \u7684 session cookie. Click \u662f\u4e00\u4e2a\u547d\u4ee4\u884c\u5e94\u7528\u7684\u6846\u67b6\u3002\u7528\u4e8e\u63d0\u4f9b flask \u547d\u4ee4\uff0c\u5e76\u5141\u8bb8\u6dfb\u52a0\u81ea\u5b9a\u4e49\u7ba1\u7406\u547d\u4ee4\u3002 1 2 3 4 5 6 7 8 9 10 11 from werkzeug.serving import run_simple from werkzeug.wrappers import Response , Request @Request.application def index ( request ): return Response ( \"Hello World!\" ) if __name__ == '__main__' : run_simple ( 'localhost' , 8000 , index )","title":"\u4e00\u3001\u7b80\u4ecb"},{"location":"programming/python/Flask/install/#_3","text":"1 2 3 4 5 6 7 8 9 10 11 12 from flask import Flask app = Flask ( __name__ ) # app\u662f\u4e00\u4e2aFlask\u7c7b\u7684\u5bf9\u8c61 @app.route ( '/' ) def hello_world (): return 'Hello, World!' if __name__ == '__main__' : app . run ()","title":"\u4e8c\u3001\u7b80\u5355\u5b9e\u7528"},{"location":"programming/python/Flask/request/","text":"\u8bf7\u6c42 \u00b6 \u8bf7\u6c42\u6269\u5c55 \u00b6 @app.before_request \u53ef\u4ee5\u6709\u8fd4\u56de 1 2 func ( * args , ** kwargs ) pass 1 2 3 # \u8bbe\u7f6e\u767d\u540d\u5355 if request . path == '/login' : return None \u53ef\u4ee5\u53e0\u52a0\u591a\u4e2a\uff0c\u6267\u884c\u987a\u5e8f\u6309\u4ee3\u7801\u987a\u5e8f\u6267\u884c @app.before_first_request 2. @app.after_request 1 2 3 func ( response ): pass return response \u53ef\u4ee5\u53e0\u52a0\u591a\u4e2a\uff0c\u6267\u884c\u987a\u5e8f\u6309\u4ee3\u7801\u987a\u5e8f\u5012\u5e8f\u6267\u884c\u3002 \u8bf7\u6c42\u62e6\u622a\u540e\u6240\u6709\u7684response\u90fd\u4f1a\u6267\u884c\u3002 \u5b9a\u5236404 1 2 3 @app.errorhander ( 404 ) def error_404 ( arg ): return \"404\u4e86\u3002\u3002\u3002\"","title":"\u8bf7\u6c42"},{"location":"programming/python/Flask/request/#_1","text":"","title":"\u8bf7\u6c42"},{"location":"programming/python/Flask/request/#_2","text":"@app.before_request \u53ef\u4ee5\u6709\u8fd4\u56de 1 2 func ( * args , ** kwargs ) pass 1 2 3 # \u8bbe\u7f6e\u767d\u540d\u5355 if request . path == '/login' : return None \u53ef\u4ee5\u53e0\u52a0\u591a\u4e2a\uff0c\u6267\u884c\u987a\u5e8f\u6309\u4ee3\u7801\u987a\u5e8f\u6267\u884c @app.before_first_request 2. @app.after_request 1 2 3 func ( response ): pass return response \u53ef\u4ee5\u53e0\u52a0\u591a\u4e2a\uff0c\u6267\u884c\u987a\u5e8f\u6309\u4ee3\u7801\u987a\u5e8f\u5012\u5e8f\u6267\u884c\u3002 \u8bf7\u6c42\u62e6\u622a\u540e\u6240\u6709\u7684response\u90fd\u4f1a\u6267\u884c\u3002 \u5b9a\u5236404 1 2 3 @app.errorhander ( 404 ) def error_404 ( arg ): return \"404\u4e86\u3002\u3002\u3002\"","title":"\u8bf7\u6c42\u6269\u5c55"},{"location":"programming/python/Flask/route/","text":"\u8def\u7531 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 from flask import Flask app = Flask ( __name__ ) @app.route ( '/' , methods = [ 'GET' , 'POST' ], endpoint = 'root' ) def hello_world (): return 'Hello, World!' if __name__ == '__main__' : app . run () 1 2 3 4 5 6 7 8 9 10 11 12 13 14 \u2460 @app.route ( '/' , methods = [ 'GET' , 'POST' ], endpoint = 'root' ) # route\u6e90\u7801 def route ( self , rule , ** options ): # rule = '/' # options = {methods=['GET', 'POST'], endpoint='root'} def decorator ( f ): endpoint = options . pop ( \"endpoint\" , None ) self . add_url_rule ( rule , endpoint , f , ** options ) # \u6838\u5fc3 return f return decorator # decorator = app.route('/', methods=['GET', 'POST'], endpoint='root') \u2461 @decorator decorator ( index ) 1 2 3 4 5 6 7 8 9 10 11 12 13 from flask import Flask app = Flask ( __name__ ) def login (): return 'Login' app . add_url_rule ( '/login' , 'lgn' , login , methods = [ 'GET' , 'POST' ]) if __name__ == '__main__' : app . run () \u8def\u7531\u672c\u8d28\u662f\u901a\u8fc7add_url_rule\u6765\u5b9e\u73b0\u7684\u3002 CBV 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 from flask import Flask , views app = Flask ( __name__ ) def auth ( func ): def inner ( * args , ** kwargs ): result = func ( * args , ** kwargs ) return result return inner class IndexView ( views . MethodView ): methods = [ 'GET' , 'POST' ] decorators = [ auth , ] def get ( self ): return 'Index GET' def post ( self ): return 'Index POST' app . add_url_rule ( '/index' , view_func = IndexView . as_view ( name = 'index' )) if __name__ == '__main__' : app . run () 1 2 3 4 5 6 7 add_url_rule ( options ) \u53c2\u6570\uff1a https : // werkzeug . palletsprojects . com / en / 1.0 . x / routing / #werkzeug.routing.Rule defaults subdomain strict_slashes redirect_to \u81ea\u5b9a\u4e49\u8f6c\u6362\u5668 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 from flask import Flask , views from werkzeug.routing import BaseConverter app = Flask ( __name__ ) # 1.\u81ea\u5b9a\u4e49\u7c7b,\u7ee7\u627f\u81eaBaseConverter class RegexConverter ( BaseConverter ): def __init__ ( self , map , regex ): super ( RegexConverter , self ) . __init__ ( map ) self . regex = regex def to_python ( self , value ): \"\"\" \u8def\u7531\u5339\u914d\u6210\u529f\u540e\u4f20\u9012\u7ed9\u89c6\u56fe\u51fd\u6570\u4e2d\u53c2\u6570\u7684\u503c :param value: :return: \"\"\" return int ( value ) def to_url ( self , value ): \"\"\" \u4f7f\u7528url_for\u53cd\u5411\u751f\u6210URL\u65f6\uff0c\u4f20\u9012\u7684\u53c2\u6570\u7ecf\u8fc7\u8be5\u65b9\u6cd5\u5904\u7406\uff0c\u53cd\u4e4b\u7684\u503c\u7528\u4e8e\u751f\u6210URL\u4e2d\u7684\u53c2\u6570 :param value: :return: \"\"\" val = super ( RegexConverter , self ) . to_url ( value ) return val # 2.\u5c06\u81ea\u5b9a\u4e49\u8f6c\u6362\u5668\u7c7b,\u6dfb\u52a0\u5230\u9ed8\u8ba4\u7684\u8f6c\u6362\u5217\u8868\u4e2d app . url_map . converters [ 'regex' ] = RegexConverter @app.route ( '/index/<regex(\"\\d+\"):uid>' ) def index ( uid ): return \"Hello World! %s \" % uid if __name__ == '__main__' : app . run ()","title":"\u8def\u7531"},{"location":"programming/python/Flask/route/#_1","text":"1 2 3 4 5 6 7 8 9 10 11 12 from flask import Flask app = Flask ( __name__ ) @app.route ( '/' , methods = [ 'GET' , 'POST' ], endpoint = 'root' ) def hello_world (): return 'Hello, World!' if __name__ == '__main__' : app . run () 1 2 3 4 5 6 7 8 9 10 11 12 13 14 \u2460 @app.route ( '/' , methods = [ 'GET' , 'POST' ], endpoint = 'root' ) # route\u6e90\u7801 def route ( self , rule , ** options ): # rule = '/' # options = {methods=['GET', 'POST'], endpoint='root'} def decorator ( f ): endpoint = options . pop ( \"endpoint\" , None ) self . add_url_rule ( rule , endpoint , f , ** options ) # \u6838\u5fc3 return f return decorator # decorator = app.route('/', methods=['GET', 'POST'], endpoint='root') \u2461 @decorator decorator ( index ) 1 2 3 4 5 6 7 8 9 10 11 12 13 from flask import Flask app = Flask ( __name__ ) def login (): return 'Login' app . add_url_rule ( '/login' , 'lgn' , login , methods = [ 'GET' , 'POST' ]) if __name__ == '__main__' : app . run () \u8def\u7531\u672c\u8d28\u662f\u901a\u8fc7add_url_rule\u6765\u5b9e\u73b0\u7684\u3002 CBV 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 from flask import Flask , views app = Flask ( __name__ ) def auth ( func ): def inner ( * args , ** kwargs ): result = func ( * args , ** kwargs ) return result return inner class IndexView ( views . MethodView ): methods = [ 'GET' , 'POST' ] decorators = [ auth , ] def get ( self ): return 'Index GET' def post ( self ): return 'Index POST' app . add_url_rule ( '/index' , view_func = IndexView . as_view ( name = 'index' )) if __name__ == '__main__' : app . run () 1 2 3 4 5 6 7 add_url_rule ( options ) \u53c2\u6570\uff1a https : // werkzeug . palletsprojects . com / en / 1.0 . x / routing / #werkzeug.routing.Rule defaults subdomain strict_slashes redirect_to \u81ea\u5b9a\u4e49\u8f6c\u6362\u5668 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 from flask import Flask , views from werkzeug.routing import BaseConverter app = Flask ( __name__ ) # 1.\u81ea\u5b9a\u4e49\u7c7b,\u7ee7\u627f\u81eaBaseConverter class RegexConverter ( BaseConverter ): def __init__ ( self , map , regex ): super ( RegexConverter , self ) . __init__ ( map ) self . regex = regex def to_python ( self , value ): \"\"\" \u8def\u7531\u5339\u914d\u6210\u529f\u540e\u4f20\u9012\u7ed9\u89c6\u56fe\u51fd\u6570\u4e2d\u53c2\u6570\u7684\u503c :param value: :return: \"\"\" return int ( value ) def to_url ( self , value ): \"\"\" \u4f7f\u7528url_for\u53cd\u5411\u751f\u6210URL\u65f6\uff0c\u4f20\u9012\u7684\u53c2\u6570\u7ecf\u8fc7\u8be5\u65b9\u6cd5\u5904\u7406\uff0c\u53cd\u4e4b\u7684\u503c\u7528\u4e8e\u751f\u6210URL\u4e2d\u7684\u53c2\u6570 :param value: :return: \"\"\" val = super ( RegexConverter , self ) . to_url ( value ) return val # 2.\u5c06\u81ea\u5b9a\u4e49\u8f6c\u6362\u5668\u7c7b,\u6dfb\u52a0\u5230\u9ed8\u8ba4\u7684\u8f6c\u6362\u5217\u8868\u4e2d app . url_map . converters [ 'regex' ] = RegexConverter @app.route ( '/index/<regex(\"\\d+\"):uid>' ) def index ( uid ): return \"Hello World! %s \" % uid if __name__ == '__main__' : app . run ()","title":"\u8def\u7531"},{"location":"programming/python/Flask/session/","text":"","title":"Session"},{"location":"programming/python/Flask/template/","text":"\u6a21\u677f\u4e2d\u4f7f\u7528\u51fd\u6570 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 from flask import Flask , render_template_string app = Flask ( __name__ ) def say_hello ( name ): return \"Hello %s \" % name @app.route ( '/' ) def index (): return render_template_string ( \"<h1> {{ func('\u5f20\u4e09') }} </h1>\" , func = say_hello ) if __name__ == '__main__' : app . run () 1 2 3 4 # \u6a21\u677f\u4e2d\u5b9a\u5236\u65b9\u6cd5 @app.template_global () @app.template_filter ()","title":"Template"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/01-python%E7%AE%80%E4%BB%8B/","text":"Python\u7b80\u4ecb \u00b6 Python \u662f\u8457\u540d\u7684\u201c\u9f9f\u53d4\u201dGuido van Rossum\u5728 1989 \u5e74\u5723\u8bde\u8282\u671f\u95f4\uff0c\u4e3a\u4e86\u6253\u53d1\u65e0\u804a\u7684\u5723\u8bde\u8282\u800c\u7f16\u5199\u7684\u4e00\u4e2a\u7f16\u7a0b\u8bed\u8a00\u3002 Python\u662f\u4e00\u79cd\u52a8\u6001\u7c7b\u578b\uff08\u81ea\u52a8\u8ddf\u8e2a\u7c7b\u578b\u800c\u4e0d\u9700\u8981\u58f0\u660e\uff09\u7684\uff0c\u5f3a\u7c7b\u578b\uff08\u53ea\u80fd\u5bf9\u4e00\u4e2a\u5bf9\u8c61\u8fdb\u884c\u9002\u5408\u8be5\u5bf9\u8c61\u7684\u6709\u6548\u64cd\u4f5c\uff09\u8bed\u8a00\u3002python\u4e2d\u4e00\u5207\u7686\u5bf9\u8c61\u3002 \u4e00\u3001Python\u7b80\u4ecb \u00b6 1. Python\u89e3\u91ca\u5668 \u00b6 \u5728windows\u5b89\u88c5\u7684Python\u8f6f\u4ef6\u5305\u5c31\u662f\u4e00\u4e2a\u89e3\u91ca\u5668\uff0c\u89e3\u91ca\u5668\u662f\u4ee3\u7801\u4e0e\u8ba1\u7b97\u673a\u4e4b\u95f4\u7684\u8f6f\u4ef6\u903b\u8f91\u5c42\u3002\u5f53\u6211\u4eec\u5199\u4e86\u4e00\u6bb5python\u7a0b\u5e8f\uff0cPython\u89e3\u91ca\u5668\u4f1a\u8bfb\u53d6\u7a0b\u5e8f\uff0c\u5e76\u6309\u7167\u5176\u4e2d\u7684\u547d\u4ee4\u6267\u884c\u3002Python\u5b89\u88c5\u540e\u4f1a\u751f\u6210\u4e00\u4e9b\u7ec4\u4ef6\uff0c\u81f3\u5c11\u5305\u62ec\u4e00\u4e2a\u89e3\u91ca\u5668\u548c\u4e00\u5957\u652f\u6301\u5e93\u3002 2. Python\u7684\u4e3b\u6d41\u5b9e\u73b0 \u00b6 CPython\uff1a\u6807\u51c6Python\uff0c\u7531ANSI C\u8bed\u8a00\u7f16\u5199 JPython\uff1a\u57fa\u4e8eJava\u7684Python IronPython\uff1a\u57fa\u4e8e.NET\u7684Python Stackless\uff1a\u6ce8\u91cd\u5e76\u53d1\u7684Python PyPy\uff1a\u6ce8\u91cd\u901f\u5ea6\u7684Python\uff0cCPython\u6807\u51c6\u7684\u53e6\u4e00\u4e2a\u5b9e\u73b0 3. \u51bb\u7ed3\u4e8c\u8fdb\u5236\u6587\u4ef6 \u00b6 \u51bb\u7ed3\u4e8c\u8fdb\u5236\u6587\u4ef6\u53ef\u4ee5\u5c06\u7a0b\u5e8f\u6587\u4ef6\u7684\u5b57\u8282\u7801\u3001PVM\uff08\u89e3\u91ca\u5668\uff09\u4ee5\u53ca\u4efb\u4f55\u7a0b\u5e8f\u6240\u9700\u8981\u7684Python\u652f\u6301\u6587\u4ef6\u6346\u7ed1\u5728\u4e00\u8d77\u5f62\u6210\u4e00\u4e2a\u5355\u72ec\u7684\u53ef\u6267\u884c\u7684\u4e8c\u8fdb\u5236\u7a0b\u5e8f\uff08\u5982windows\u4e0b\u7684exe\uff09\u3002 py2exe \u5728Windows\u4f7f\u7528 PyInstaller \u5728Linux\u548cMac OS X\u4f7f\u7528 py2app \u5728Mac OS X\u4f7f\u7528 4.python\u7a0b\u5e8f\u7684\u6267\u884c \u00b6 \u7b2c\u4e00\u6b65\uff1apython\u5185\u90e8\u4f1a\u5c06\u6e90\u4ee3\u7801\u7f16\u8bd1\u6210\u5b57\u8282\u7801\uff0c\u8fd9\u4e9b\u5b57\u8282\u7801\u88ab\u4fdd\u5b58 __pycache__ \u7684\u76ee\u5f55\u4e0b\u4ee5 .pyc \u7ed3\u5c3e\u7684\u6587\u4ef6\u4e2d\uff08\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5b57\u8282\u7801\u53ea\u9488\u5bf9\u88ab\u5bfc\u5165\u7684\u6587\u4ef6\u800c\u751f\u6210\uff09\uff0c\u6587\u4ef6\u540d\u8fd8\u5305\u542b\u4e86python\u89e3\u91ca\u5668\u7684\u7248\u672c\u4fe1\u606f\uff0c\u6bd4\u5982: hello.cpython-36.pyc \u3002\u8fd9\u6837\u7684\u5904\u7406\u662f\u5bf9\u542f\u52a8\u901f\u5ea6\uff08\u4e25\u683c\u6765\u8bf4\u662f\u5bf9\u5bfc\u5165\uff09\u7684\u4e00\u79cd\u4f18\u5316\uff0c\u5982\u679c\u4e0b\u4e00\u6b21\u8fd0\u884c\u7a0b\u5e8f\u65f6\uff0c\u6e90\u6587\u4ef6\u548cpython\u89e3\u91ca\u5668\u7684\u7248\u672c\u90fd\u6ca1\u6709\u53d8\u5316\uff0cpython\u5c31\u662f\u8df3\u8fc7\u7f16\u8bd1\u8fd9\u4e2a\u6b65\u9aa4\uff0c\u76f4\u63a5\u52a0\u8f7d.pyc\u6587\u4ef6\u3002 \u7b2c\u4e8c\u6b65\uff1a\u4e00\u65e6\u7a0b\u5e8f\u7f16\u8bd1\u6210\u5b57\u8282\u7801\uff08\u6216\u5b57\u8282\u7801\u4ece\u5df2\u7ecf\u5b58\u5728\u7684.pyc\u6587\u4ef6\u4e2d\u8f7d\u5165\uff09\uff0c\u4e4b\u540e\u7684\u5b57\u8282\u7801\u53d1\u9001\u5230Python\u865a\u62df\u673a\uff08Python Virtual Machine\uff09\u4e2d\u6765\u6267\u884c 5. Python\u7684\u4f18\u7f3a\u70b9 \u00b6 Python\u4f18\u70b9\uff1a \u4e30\u5bcc\u7684\u5185\u7f6e\u5e93\u548c\u7b2c\u4e09\u65b9\u5e93 \u5b66\u4e60\u66f2\u7ebf\u4f4e\uff0c\u5bb9\u6613\u4e0a\u624b \u652f\u6301\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u548c\u51fd\u6570\u5f0f\u7f16\u7a0b Python\u7684\u7f3a\u70b9\uff1a \u4ee3\u7801\u4e0d\u80fd\u52a0\u5bc6 \u5728\u73b0\u6709\u7684\u5b9e\u73b0\u65b9\u5f0f\u4e0b\uff0c\u4e0eC\u548cC++\u8fd9\u7c7b\u5b8c\u5168\u7f16\u8bd1\u5e76\u4e14\u8f83\u5e95\u5c42\u7684\u8bed\u8a00\u76f8\u6bd4\uff0cPython\u7684\u6267\u884c\u901f\u5ea6\u8fd8\u4e0d\u591f\u5feb\u3002 \u4e8c\u3001 Python\u57fa\u7840\u77e5\u8bc6\u70b9 \u00b6 1. Python\u7684\u7f16\u7801\u65b9\u5f0f \u00b6 python3\u9ed8\u8ba4\u4f7f\u7528 utf-8 python2\u9ed8\u8ba4\u4f7f\u7528ASCII\uff0c\u53ef\u4ee5\u5728\u9996\u884c\u58f0\u660e\u7f16\u7801\u65b9\u5f0f 1 # -*- encoding:utf-8 -*- 2. \u53d8\u91cf \u00b6 python\u53d8\u91cf\u4e0d\u9700\u8981\u63d0\u524d\u58f0\u660e\uff0c\u5f53\u7ed9\u4e00\u4e2a\u53d8\u91cf\u8d4b\u503c\u7684\u65f6\u5019\u5c31\u521b\u5efa\u4e86\u5b83\uff0c\u53ef\u80fd\u8d4b\u7684\u662f\u4efb\u4f55\u7c7b\u578b\u7684\u5bf9\u8c61\uff0c\u5728\u4f7f\u7528\u53d8\u91cf\u7684\u503c\u524d\u5fc5\u987b\u5bf9\u5176\u8fdb\u884c\u8d4b\u503c\u3002 \u53d8\u91cf\u5c31\u662f\u7528\u6765\u4ee3\u6307\u67d0\u4e2a\u4e1c\u897f\u7684\u540d\u5b57\u3002 1 x = 100 \u5728\u64cd\u4f5c\u7b26\u4e24\u8fb9\u52a0\u4e0a\u7a7a\u683c\u4f1a\u8ba9\u4ee3\u7801\u66f4\u5bb9\u6613\u9605\u8bfb 1. \u53d8\u91cf\u7684\u547d\u540d\u89c4\u5219 \u00b6 \u53d8\u91cf\u540d\u53ea\u80fd\u5305\u542b\u5b57\u6bcd\u3001\u6570\u5b57\u548c\u4e0b\u5212\u7ebf\uff0c\u4e0d\u80fd\u4ee5\u6570\u5b57\u5f00\u5934 \u53d8\u91cf\u540d\u4e0d\u80fd\u5305\u542b\u7a7a\u683c \u4e0d\u8981\u5c06python\u5173\u952e\u5b57\u548c\u51fd\u6570\u540d\u4f5c\u4e3a\u53d8\u91cf\u540d \u53d8\u91cf\u540d\u5e94\u8be5\u7b80\u77ed\u4e14\u5177\u6709\u63cf\u8ff0\u6027 \u614e\u7528\u5c0f\u5199\u5b57\u6bcd l \u548c\u5927\u5199\u5b57\u6bcd O 1 2 3 4 5 6 7 # python \u4fdd\u7559\u5b57 >>> import keyword >>> keyword . kwlist [ 'False' , 'None' , 'True' , 'and' , 'as' , 'assert' , 'break' , 'class' , 'continue' , 'def' , 'del' , 'elif' , 'else' , 'except' , 'finally' , 'for' , 'from' , 'global' , 'if' , 'import' , 'in' , 'is' , 'lambda' , 'nonlocal' , 'not' , 'or' , 'pass' , 'raise' , 'return' , 'try' , 'while' , 'with' , 'yield' ] >>> import sys >>> sys . version '3.6.8 (tags/v3.6.8:3c6b436a57, Dec 24 2018, 00:16:47) [MSC v.1916 64 bit (AMD64)]' 2. \u5f15\u7528 \u00b6 \u5728Python\u4e2d\uff0c\u4ece\u53d8\u91cf\u5230\u5bf9\u8c61\u7684\u8fde\u63a5\u79f0\u4f5c\u5f15\u7528\u3002 \u53d8\u91cf\u662f\u4e00\u4e2a\u7cfb\u7edf\u8868\u7684\u5165\u53e3\uff0c\u5305\u542b\u4e86\u6307\u5411\u5bf9\u8c61\u7684\u8fde\u63a5 \u5bf9\u8c61\u662f\u88ab\u5206\u914d\u5230\u7684\u4e00\u5757\u5185\u5b58\uff0c\u6709\u8db3\u591f\u7684\u7a7a\u95f4\u53bb\u8868\u793a\u5b83\u4eec\u6240\u4ee3\u8868\u7684\u503c \u5f15\u7528\u662f\u81ea\u52a8\u5f62\u6210\u7684\u4ece\u53d8\u91cf\u5230\u5bf9\u8c61\u7684\u6307\u9488 3. \u53d8\u91cf\u7684\u547d\u540d\u98ce\u683c \u00b6 \u9a7c\u5cf0\u547d\u540d\u6cd5\uff1a \u7c7b\u540d\u3001Type \u53d8\u91cf\u3001\u5f02\u5e38 exception \u540d\u63a8\u8350\u4f7f\u7528 \u86c7\u5f62\u547d\u540d\u6cd5\uff1a \u5305\u540d\u3001\u6a21\u5757\u540d\u3001\u65b9\u6cd5\u540d\u548c\u666e\u901a\u53d8\u91cf\u540d\u63a8\u8350\u4f7f\u7528 snake_case 3. \u6ce8\u91ca \u00b6 3.1 \u5355\u884c\u6ce8\u91ca \u00b6 1 # \u8fd9\u662f\u4e00\u4e2a\u6ce8\u91ca\u884c 3.2 \u591a\u884c\u6ce8\u91ca \u00b6 python\u4e2d\u6ca1\u6709\u591a\u884c\u6ce8\u91ca\u7684\u8bed\u6cd5\uff0c\u591a\u884c\u6ce8\u91ca\u5c31\u662f\u5728\u6bcf\u4e00\u884c\u524d\u9762\u52a0 # \uff0c\u4f46\u662f\u53ef\u4ee5\u4e09\u5f15\u53f7\u7684\u65b9\u5f0f\u6ce8\u91ca(\u8fd9\u5e76\u4e0d\u662f\u771f\u6b63\u610f\u4e49\u4e0a\u7684\u6ce8\u91ca\uff0cpython\u89e3\u91ca\u5668\u8fd8\u662f\u4f1a\u8bfb\u53d6\u91cc\u9762\u7684\u5185\u5bb9)\u3002 1 2 3 4 5 6 7 ''' \u6ce8\u91ca\u5185\u5bb9 ''' # \u6216 \"\"\" \u6ce8\u91ca\u5185\u5bb9 \"\"\" 4. \u6838\u5fc3\u6570\u636e\u7c7b\u578b \u00b6 \u5bf9\u8c61\u7c7b\u578b \u5b57\u9762\u91cf/\u6784\u9020\u793a\u4f8b \u6570\u5b57 123,3.14,3+4j,0b111,Decimal(),Fraction() \u5b57\u7b26\u4e32 'spam',\"Bob's\",b'a\\x01c' \u5217\u8868 [1,[2,3],4],list(range(10)) \u5b57\u5178 {'name':'Kobe','age':41},dict(hours=10) \u5143\u7ec4 (1,'B'),tuple('span'),namedtuple \u6587\u4ef6 open('file','wb') \u96c6\u5408 set('abc'),{'a', 'b', ''c'} \u5176\u4ed6\u6838\u5fc3\u7c7b\u578b \u7c7b\u578b\u3001None\u3001\u5e03\u5c14\u578b \u7a0b\u5e8f\u5355\u5143\u7c7b\u578b \u51fd\u6570\u3001\u6a21\u5757\u3001\u7c7b Python\u5b9e\u73b0\u76f8\u5173\u7c7b\u578b \u5df2\u7f16\u8bd1\u4ee3\u7801\u3001\u8c03\u7528\u6808\u8ddf\u8e2a 5. \u8f93\u5165\u4e0e\u8f93\u51fa \u00b6 1 2 3 4 # \u8f93\u5165 name = input ( \"please input your name: \" ) # \u8f93\u51fa print ( name ) 6. \u8fd0\u7b97\u7b26 \u00b6 6.1 \u7b97\u6570\u8fd0\u7b97\u7b26 \u00b6 \u8fd0\u7b97\u7b26 \u63cf\u8ff0 + \u52a0 - \u51cf * \u4e58 / \u9664 // \u53d6\u6574\u9664 % \u53d6\u4f59 ** \u5e42 6.2 \u6bd4\u8f83\u8fd0\u7b97\u7b26 \u00b6 \u6bd4\u8f83\u8fd0\u7b97\u7b26 \u63cf\u8ff0 == \u7b49\u4e8e != \u4e0d\u7b49\u4e8e > \u5927\u4e8e >= \u5927\u4e8e\u7b49\u4e8e < \u5c0f\u4e8e <= \u5c0f\u4e8e\u7b49\u4e8e 6.3 \u8d4b\u503c\u8fd0\u7b97\u7b26 \u00b6 6.3.1 \u589e\u91cf\u8d4b\u503c \u00b6 \u8d4b\u503c\u8fd0\u7b97\u7b26 \u63cf\u8ff0 = \u7b80\u5355\u8d4b\u503c += \u52a0\u6cd5\u8d4b\u503c -= \u51cf\u6cd5\u8d4b\u503c *= \u4e58\u6cd5\u8d4b\u503c /= \u9664\u6cd5\u8d4b\u503c //= \u53d6\u6574\u9664\u8d4b\u503c %= \u53d6\u4f59\u8d4b\u503c **= \u5e42\u8d4b\u503c 6.3.2 \u94fe\u5f0f\u8d4b\u503c \u00b6 1 2 3 4 >>> x = y = z = 100 >>> x , y , z ( 100 , 100 , 100 ) # \u4e09\u4e2a\u53d8\u91cf\u6307\u5411\u5185\u5b58\u4e2d\u7684\u540c\u4e00\u4e2a\u5bf9\u8c61 6.3.3 \u4ea4\u53c9\u8d4b\u503c \u00b6 1 2 3 4 5 >>> n = 2 >>> m = 3 >>> n , m = m , n >>> n , m ( 3 , 2 ) 6.3.4 \u89e3\u538b\u8d4b\u503c\uff08\u89e3\u5305\uff09 \u00b6 1 2 3 4 5 6 7 8 >>> p = [ 'Tom' , 18 ] >>> name , age = p >>> name , age ( 'Tom' , 18 ) >>> name 'Tom' >>> age 18 \u661f\u53f7\u8868\u8fbe\u5f0f 1 2 3 4 5 6 7 8 >>> record = ( 'Dave' , 'dave@example.com' , '773-555-1212' , '847-555-1212' ) >>> name , email , * phone_numbers = record >>> name 'Dave' >>> email 'dave@example.com' >>> phone_numbers [ '773-555-1212' , '847-555-1212' ] \u89e3\u538b\u8d4b\u503c\u53ef\u4ee5\u7528\u5728\u4efb\u4f55\u53ef\u8fed\u4ee3\u5bf9\u8c61\u4e0a\u9762\uff08\u5217\u8868\uff0c\u5143\u7ec4\uff0c\u5b57\u7b26\u4e32\uff0c\u6587\u4ef6\u5bf9\u8c61\uff0c\u8fed\u4ee3\u5668\u548c\u751f\u6210\u5668\uff09\u3002 6.4 \u903b\u8f91\u8fd0\u7b97\u7b26 \u00b6 \u903b\u8f91\u7b97\u6cd5 \u63cf\u8ff0 and \u903b\u8f91\u4e0e or \u903b\u8f91\u6216 not \u53d6\u53cd \u4f18\u5148\u7ea7not>and>or 6.5 \u6210\u5458\u8fd0\u7b97\u7b26 \u00b6 \u6210\u5458\u8fd0\u7b97\u7b26 \u63cf\u8ff0 in \u5305\u542b not in \u4e0d\u5305\u542b 1 2 3 4 >>> not 1 in [ 2 , 3 , 4 ] True >>> 1 not in [ 2 , 3 , 4 ] # \u63a8\u8350\u4f7f\u7528not in True 6.6 \u8eab\u4efd\u8fd0\u7b97\u7b26 \u00b6 \u8eab\u4efd\u8fd0\u7b97\u7b26 \u63cf\u8ff0 is \u4e24\u4e2a\u5bf9\u8c61id\u76f8\u540c\u8fd4\u56deTrue is not \u4e24\u4e2a\u5bf9\u8c61id\u4e0d\u76f8\u540c\u8fd4\u56deTrue == \u53cc\u7b49\u53f7\u6bd4\u8f83\u7684\u662f\u503c\u662f\u5426\u76f8\u7b49\uff0c\u800c is \u6bd4\u8f83\u7684\u662fid\u662f\u5426\u76f8\u7b49\u3002id\u4e0d\u540c\u7684\u60c5\u51b5\u4e0b\uff0c\u503c\u6709\u53ef\u80fd\u76f8\u540c\uff08\u5373\u4e24\u5757\u4e0d\u540c\u7684\u5185\u5b58\u7a7a\u95f4\u91cc\u53ef\u4ee5\u5b58\u76f8\u540c\u7684\u503c\uff09\uff0cid\u76f8\u540c\u7684\u60c5\u51b5\u4e0b\uff0c\u503c\u4e00\u5b9a\u76f8\u540c \u3002 7. \u4ee3\u7801\u5757\u5206\u9694\u7b26 \u00b6 python\u4ee5\u884c\u7f29\u8fdb\u68c0\u6d4b\u5757\u7684\u8fb9\u754c\u3002 \u4e09\u3001\u5783\u573e\u56de\u6536\u673a\u5236 \u00b6 1. \u5f15\u7528\u8ba1\u6570 \u00b6 2. \u6807\u8bb0-\u6e05\u9664 \u00b6 3. \u5206\u4ee3\u56de\u6536 \u00b6","title":"python\u7b80\u4ecb"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/01-python%E7%AE%80%E4%BB%8B/#python","text":"Python \u662f\u8457\u540d\u7684\u201c\u9f9f\u53d4\u201dGuido van Rossum\u5728 1989 \u5e74\u5723\u8bde\u8282\u671f\u95f4\uff0c\u4e3a\u4e86\u6253\u53d1\u65e0\u804a\u7684\u5723\u8bde\u8282\u800c\u7f16\u5199\u7684\u4e00\u4e2a\u7f16\u7a0b\u8bed\u8a00\u3002 Python\u662f\u4e00\u79cd\u52a8\u6001\u7c7b\u578b\uff08\u81ea\u52a8\u8ddf\u8e2a\u7c7b\u578b\u800c\u4e0d\u9700\u8981\u58f0\u660e\uff09\u7684\uff0c\u5f3a\u7c7b\u578b\uff08\u53ea\u80fd\u5bf9\u4e00\u4e2a\u5bf9\u8c61\u8fdb\u884c\u9002\u5408\u8be5\u5bf9\u8c61\u7684\u6709\u6548\u64cd\u4f5c\uff09\u8bed\u8a00\u3002python\u4e2d\u4e00\u5207\u7686\u5bf9\u8c61\u3002","title":"Python\u7b80\u4ecb"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/01-python%E7%AE%80%E4%BB%8B/#python_1","text":"","title":"\u4e00\u3001Python\u7b80\u4ecb"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/01-python%E7%AE%80%E4%BB%8B/#1-python","text":"\u5728windows\u5b89\u88c5\u7684Python\u8f6f\u4ef6\u5305\u5c31\u662f\u4e00\u4e2a\u89e3\u91ca\u5668\uff0c\u89e3\u91ca\u5668\u662f\u4ee3\u7801\u4e0e\u8ba1\u7b97\u673a\u4e4b\u95f4\u7684\u8f6f\u4ef6\u903b\u8f91\u5c42\u3002\u5f53\u6211\u4eec\u5199\u4e86\u4e00\u6bb5python\u7a0b\u5e8f\uff0cPython\u89e3\u91ca\u5668\u4f1a\u8bfb\u53d6\u7a0b\u5e8f\uff0c\u5e76\u6309\u7167\u5176\u4e2d\u7684\u547d\u4ee4\u6267\u884c\u3002Python\u5b89\u88c5\u540e\u4f1a\u751f\u6210\u4e00\u4e9b\u7ec4\u4ef6\uff0c\u81f3\u5c11\u5305\u62ec\u4e00\u4e2a\u89e3\u91ca\u5668\u548c\u4e00\u5957\u652f\u6301\u5e93\u3002","title":"1. Python\u89e3\u91ca\u5668"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/01-python%E7%AE%80%E4%BB%8B/#2-python","text":"CPython\uff1a\u6807\u51c6Python\uff0c\u7531ANSI C\u8bed\u8a00\u7f16\u5199 JPython\uff1a\u57fa\u4e8eJava\u7684Python IronPython\uff1a\u57fa\u4e8e.NET\u7684Python Stackless\uff1a\u6ce8\u91cd\u5e76\u53d1\u7684Python PyPy\uff1a\u6ce8\u91cd\u901f\u5ea6\u7684Python\uff0cCPython\u6807\u51c6\u7684\u53e6\u4e00\u4e2a\u5b9e\u73b0","title":"2. Python\u7684\u4e3b\u6d41\u5b9e\u73b0"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/01-python%E7%AE%80%E4%BB%8B/#3","text":"\u51bb\u7ed3\u4e8c\u8fdb\u5236\u6587\u4ef6\u53ef\u4ee5\u5c06\u7a0b\u5e8f\u6587\u4ef6\u7684\u5b57\u8282\u7801\u3001PVM\uff08\u89e3\u91ca\u5668\uff09\u4ee5\u53ca\u4efb\u4f55\u7a0b\u5e8f\u6240\u9700\u8981\u7684Python\u652f\u6301\u6587\u4ef6\u6346\u7ed1\u5728\u4e00\u8d77\u5f62\u6210\u4e00\u4e2a\u5355\u72ec\u7684\u53ef\u6267\u884c\u7684\u4e8c\u8fdb\u5236\u7a0b\u5e8f\uff08\u5982windows\u4e0b\u7684exe\uff09\u3002 py2exe \u5728Windows\u4f7f\u7528 PyInstaller \u5728Linux\u548cMac OS X\u4f7f\u7528 py2app \u5728Mac OS X\u4f7f\u7528","title":"3. \u51bb\u7ed3\u4e8c\u8fdb\u5236\u6587\u4ef6"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/01-python%E7%AE%80%E4%BB%8B/#4python","text":"\u7b2c\u4e00\u6b65\uff1apython\u5185\u90e8\u4f1a\u5c06\u6e90\u4ee3\u7801\u7f16\u8bd1\u6210\u5b57\u8282\u7801\uff0c\u8fd9\u4e9b\u5b57\u8282\u7801\u88ab\u4fdd\u5b58 __pycache__ \u7684\u76ee\u5f55\u4e0b\u4ee5 .pyc \u7ed3\u5c3e\u7684\u6587\u4ef6\u4e2d\uff08\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5b57\u8282\u7801\u53ea\u9488\u5bf9\u88ab\u5bfc\u5165\u7684\u6587\u4ef6\u800c\u751f\u6210\uff09\uff0c\u6587\u4ef6\u540d\u8fd8\u5305\u542b\u4e86python\u89e3\u91ca\u5668\u7684\u7248\u672c\u4fe1\u606f\uff0c\u6bd4\u5982: hello.cpython-36.pyc \u3002\u8fd9\u6837\u7684\u5904\u7406\u662f\u5bf9\u542f\u52a8\u901f\u5ea6\uff08\u4e25\u683c\u6765\u8bf4\u662f\u5bf9\u5bfc\u5165\uff09\u7684\u4e00\u79cd\u4f18\u5316\uff0c\u5982\u679c\u4e0b\u4e00\u6b21\u8fd0\u884c\u7a0b\u5e8f\u65f6\uff0c\u6e90\u6587\u4ef6\u548cpython\u89e3\u91ca\u5668\u7684\u7248\u672c\u90fd\u6ca1\u6709\u53d8\u5316\uff0cpython\u5c31\u662f\u8df3\u8fc7\u7f16\u8bd1\u8fd9\u4e2a\u6b65\u9aa4\uff0c\u76f4\u63a5\u52a0\u8f7d.pyc\u6587\u4ef6\u3002 \u7b2c\u4e8c\u6b65\uff1a\u4e00\u65e6\u7a0b\u5e8f\u7f16\u8bd1\u6210\u5b57\u8282\u7801\uff08\u6216\u5b57\u8282\u7801\u4ece\u5df2\u7ecf\u5b58\u5728\u7684.pyc\u6587\u4ef6\u4e2d\u8f7d\u5165\uff09\uff0c\u4e4b\u540e\u7684\u5b57\u8282\u7801\u53d1\u9001\u5230Python\u865a\u62df\u673a\uff08Python Virtual Machine\uff09\u4e2d\u6765\u6267\u884c","title":"4.python\u7a0b\u5e8f\u7684\u6267\u884c"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/01-python%E7%AE%80%E4%BB%8B/#5-python","text":"Python\u4f18\u70b9\uff1a \u4e30\u5bcc\u7684\u5185\u7f6e\u5e93\u548c\u7b2c\u4e09\u65b9\u5e93 \u5b66\u4e60\u66f2\u7ebf\u4f4e\uff0c\u5bb9\u6613\u4e0a\u624b \u652f\u6301\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u548c\u51fd\u6570\u5f0f\u7f16\u7a0b Python\u7684\u7f3a\u70b9\uff1a \u4ee3\u7801\u4e0d\u80fd\u52a0\u5bc6 \u5728\u73b0\u6709\u7684\u5b9e\u73b0\u65b9\u5f0f\u4e0b\uff0c\u4e0eC\u548cC++\u8fd9\u7c7b\u5b8c\u5168\u7f16\u8bd1\u5e76\u4e14\u8f83\u5e95\u5c42\u7684\u8bed\u8a00\u76f8\u6bd4\uff0cPython\u7684\u6267\u884c\u901f\u5ea6\u8fd8\u4e0d\u591f\u5feb\u3002","title":"5. Python\u7684\u4f18\u7f3a\u70b9"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/01-python%E7%AE%80%E4%BB%8B/#python_2","text":"","title":"\u4e8c\u3001 Python\u57fa\u7840\u77e5\u8bc6\u70b9"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/01-python%E7%AE%80%E4%BB%8B/#1-python_1","text":"python3\u9ed8\u8ba4\u4f7f\u7528 utf-8 python2\u9ed8\u8ba4\u4f7f\u7528ASCII\uff0c\u53ef\u4ee5\u5728\u9996\u884c\u58f0\u660e\u7f16\u7801\u65b9\u5f0f 1 # -*- encoding:utf-8 -*-","title":"1. Python\u7684\u7f16\u7801\u65b9\u5f0f"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/01-python%E7%AE%80%E4%BB%8B/#2","text":"python\u53d8\u91cf\u4e0d\u9700\u8981\u63d0\u524d\u58f0\u660e\uff0c\u5f53\u7ed9\u4e00\u4e2a\u53d8\u91cf\u8d4b\u503c\u7684\u65f6\u5019\u5c31\u521b\u5efa\u4e86\u5b83\uff0c\u53ef\u80fd\u8d4b\u7684\u662f\u4efb\u4f55\u7c7b\u578b\u7684\u5bf9\u8c61\uff0c\u5728\u4f7f\u7528\u53d8\u91cf\u7684\u503c\u524d\u5fc5\u987b\u5bf9\u5176\u8fdb\u884c\u8d4b\u503c\u3002 \u53d8\u91cf\u5c31\u662f\u7528\u6765\u4ee3\u6307\u67d0\u4e2a\u4e1c\u897f\u7684\u540d\u5b57\u3002 1 x = 100 \u5728\u64cd\u4f5c\u7b26\u4e24\u8fb9\u52a0\u4e0a\u7a7a\u683c\u4f1a\u8ba9\u4ee3\u7801\u66f4\u5bb9\u6613\u9605\u8bfb","title":"2. \u53d8\u91cf"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/01-python%E7%AE%80%E4%BB%8B/#1","text":"\u53d8\u91cf\u540d\u53ea\u80fd\u5305\u542b\u5b57\u6bcd\u3001\u6570\u5b57\u548c\u4e0b\u5212\u7ebf\uff0c\u4e0d\u80fd\u4ee5\u6570\u5b57\u5f00\u5934 \u53d8\u91cf\u540d\u4e0d\u80fd\u5305\u542b\u7a7a\u683c \u4e0d\u8981\u5c06python\u5173\u952e\u5b57\u548c\u51fd\u6570\u540d\u4f5c\u4e3a\u53d8\u91cf\u540d \u53d8\u91cf\u540d\u5e94\u8be5\u7b80\u77ed\u4e14\u5177\u6709\u63cf\u8ff0\u6027 \u614e\u7528\u5c0f\u5199\u5b57\u6bcd l \u548c\u5927\u5199\u5b57\u6bcd O 1 2 3 4 5 6 7 # python \u4fdd\u7559\u5b57 >>> import keyword >>> keyword . kwlist [ 'False' , 'None' , 'True' , 'and' , 'as' , 'assert' , 'break' , 'class' , 'continue' , 'def' , 'del' , 'elif' , 'else' , 'except' , 'finally' , 'for' , 'from' , 'global' , 'if' , 'import' , 'in' , 'is' , 'lambda' , 'nonlocal' , 'not' , 'or' , 'pass' , 'raise' , 'return' , 'try' , 'while' , 'with' , 'yield' ] >>> import sys >>> sys . version '3.6.8 (tags/v3.6.8:3c6b436a57, Dec 24 2018, 00:16:47) [MSC v.1916 64 bit (AMD64)]'","title":"1. \u53d8\u91cf\u7684\u547d\u540d\u89c4\u5219"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/01-python%E7%AE%80%E4%BB%8B/#2_1","text":"\u5728Python\u4e2d\uff0c\u4ece\u53d8\u91cf\u5230\u5bf9\u8c61\u7684\u8fde\u63a5\u79f0\u4f5c\u5f15\u7528\u3002 \u53d8\u91cf\u662f\u4e00\u4e2a\u7cfb\u7edf\u8868\u7684\u5165\u53e3\uff0c\u5305\u542b\u4e86\u6307\u5411\u5bf9\u8c61\u7684\u8fde\u63a5 \u5bf9\u8c61\u662f\u88ab\u5206\u914d\u5230\u7684\u4e00\u5757\u5185\u5b58\uff0c\u6709\u8db3\u591f\u7684\u7a7a\u95f4\u53bb\u8868\u793a\u5b83\u4eec\u6240\u4ee3\u8868\u7684\u503c \u5f15\u7528\u662f\u81ea\u52a8\u5f62\u6210\u7684\u4ece\u53d8\u91cf\u5230\u5bf9\u8c61\u7684\u6307\u9488","title":"2. \u5f15\u7528"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/01-python%E7%AE%80%E4%BB%8B/#3_1","text":"\u9a7c\u5cf0\u547d\u540d\u6cd5\uff1a \u7c7b\u540d\u3001Type \u53d8\u91cf\u3001\u5f02\u5e38 exception \u540d\u63a8\u8350\u4f7f\u7528 \u86c7\u5f62\u547d\u540d\u6cd5\uff1a \u5305\u540d\u3001\u6a21\u5757\u540d\u3001\u65b9\u6cd5\u540d\u548c\u666e\u901a\u53d8\u91cf\u540d\u63a8\u8350\u4f7f\u7528 snake_case","title":"3. \u53d8\u91cf\u7684\u547d\u540d\u98ce\u683c"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/01-python%E7%AE%80%E4%BB%8B/#3_2","text":"","title":"3. \u6ce8\u91ca"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/01-python%E7%AE%80%E4%BB%8B/#31","text":"1 # \u8fd9\u662f\u4e00\u4e2a\u6ce8\u91ca\u884c","title":"3.1 \u5355\u884c\u6ce8\u91ca"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/01-python%E7%AE%80%E4%BB%8B/#32","text":"python\u4e2d\u6ca1\u6709\u591a\u884c\u6ce8\u91ca\u7684\u8bed\u6cd5\uff0c\u591a\u884c\u6ce8\u91ca\u5c31\u662f\u5728\u6bcf\u4e00\u884c\u524d\u9762\u52a0 # \uff0c\u4f46\u662f\u53ef\u4ee5\u4e09\u5f15\u53f7\u7684\u65b9\u5f0f\u6ce8\u91ca(\u8fd9\u5e76\u4e0d\u662f\u771f\u6b63\u610f\u4e49\u4e0a\u7684\u6ce8\u91ca\uff0cpython\u89e3\u91ca\u5668\u8fd8\u662f\u4f1a\u8bfb\u53d6\u91cc\u9762\u7684\u5185\u5bb9)\u3002 1 2 3 4 5 6 7 ''' \u6ce8\u91ca\u5185\u5bb9 ''' # \u6216 \"\"\" \u6ce8\u91ca\u5185\u5bb9 \"\"\"","title":"3.2 \u591a\u884c\u6ce8\u91ca"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/01-python%E7%AE%80%E4%BB%8B/#4","text":"\u5bf9\u8c61\u7c7b\u578b \u5b57\u9762\u91cf/\u6784\u9020\u793a\u4f8b \u6570\u5b57 123,3.14,3+4j,0b111,Decimal(),Fraction() \u5b57\u7b26\u4e32 'spam',\"Bob's\",b'a\\x01c' \u5217\u8868 [1,[2,3],4],list(range(10)) \u5b57\u5178 {'name':'Kobe','age':41},dict(hours=10) \u5143\u7ec4 (1,'B'),tuple('span'),namedtuple \u6587\u4ef6 open('file','wb') \u96c6\u5408 set('abc'),{'a', 'b', ''c'} \u5176\u4ed6\u6838\u5fc3\u7c7b\u578b \u7c7b\u578b\u3001None\u3001\u5e03\u5c14\u578b \u7a0b\u5e8f\u5355\u5143\u7c7b\u578b \u51fd\u6570\u3001\u6a21\u5757\u3001\u7c7b Python\u5b9e\u73b0\u76f8\u5173\u7c7b\u578b \u5df2\u7f16\u8bd1\u4ee3\u7801\u3001\u8c03\u7528\u6808\u8ddf\u8e2a","title":"4. \u6838\u5fc3\u6570\u636e\u7c7b\u578b"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/01-python%E7%AE%80%E4%BB%8B/#5","text":"1 2 3 4 # \u8f93\u5165 name = input ( \"please input your name: \" ) # \u8f93\u51fa print ( name )","title":"5. \u8f93\u5165\u4e0e\u8f93\u51fa"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/01-python%E7%AE%80%E4%BB%8B/#6","text":"","title":"6. \u8fd0\u7b97\u7b26"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/01-python%E7%AE%80%E4%BB%8B/#61","text":"\u8fd0\u7b97\u7b26 \u63cf\u8ff0 + \u52a0 - \u51cf * \u4e58 / \u9664 // \u53d6\u6574\u9664 % \u53d6\u4f59 ** \u5e42","title":"6.1 \u7b97\u6570\u8fd0\u7b97\u7b26"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/01-python%E7%AE%80%E4%BB%8B/#62","text":"\u6bd4\u8f83\u8fd0\u7b97\u7b26 \u63cf\u8ff0 == \u7b49\u4e8e != \u4e0d\u7b49\u4e8e > \u5927\u4e8e >= \u5927\u4e8e\u7b49\u4e8e < \u5c0f\u4e8e <= \u5c0f\u4e8e\u7b49\u4e8e","title":"6.2 \u6bd4\u8f83\u8fd0\u7b97\u7b26"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/01-python%E7%AE%80%E4%BB%8B/#63","text":"","title":"6.3 \u8d4b\u503c\u8fd0\u7b97\u7b26"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/01-python%E7%AE%80%E4%BB%8B/#631","text":"\u8d4b\u503c\u8fd0\u7b97\u7b26 \u63cf\u8ff0 = \u7b80\u5355\u8d4b\u503c += \u52a0\u6cd5\u8d4b\u503c -= \u51cf\u6cd5\u8d4b\u503c *= \u4e58\u6cd5\u8d4b\u503c /= \u9664\u6cd5\u8d4b\u503c //= \u53d6\u6574\u9664\u8d4b\u503c %= \u53d6\u4f59\u8d4b\u503c **= \u5e42\u8d4b\u503c","title":"6.3.1 \u589e\u91cf\u8d4b\u503c"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/01-python%E7%AE%80%E4%BB%8B/#632","text":"1 2 3 4 >>> x = y = z = 100 >>> x , y , z ( 100 , 100 , 100 ) # \u4e09\u4e2a\u53d8\u91cf\u6307\u5411\u5185\u5b58\u4e2d\u7684\u540c\u4e00\u4e2a\u5bf9\u8c61","title":"6.3.2 \u94fe\u5f0f\u8d4b\u503c"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/01-python%E7%AE%80%E4%BB%8B/#633","text":"1 2 3 4 5 >>> n = 2 >>> m = 3 >>> n , m = m , n >>> n , m ( 3 , 2 )","title":"6.3.3 \u4ea4\u53c9\u8d4b\u503c"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/01-python%E7%AE%80%E4%BB%8B/#634","text":"1 2 3 4 5 6 7 8 >>> p = [ 'Tom' , 18 ] >>> name , age = p >>> name , age ( 'Tom' , 18 ) >>> name 'Tom' >>> age 18 \u661f\u53f7\u8868\u8fbe\u5f0f 1 2 3 4 5 6 7 8 >>> record = ( 'Dave' , 'dave@example.com' , '773-555-1212' , '847-555-1212' ) >>> name , email , * phone_numbers = record >>> name 'Dave' >>> email 'dave@example.com' >>> phone_numbers [ '773-555-1212' , '847-555-1212' ] \u89e3\u538b\u8d4b\u503c\u53ef\u4ee5\u7528\u5728\u4efb\u4f55\u53ef\u8fed\u4ee3\u5bf9\u8c61\u4e0a\u9762\uff08\u5217\u8868\uff0c\u5143\u7ec4\uff0c\u5b57\u7b26\u4e32\uff0c\u6587\u4ef6\u5bf9\u8c61\uff0c\u8fed\u4ee3\u5668\u548c\u751f\u6210\u5668\uff09\u3002","title":"6.3.4 \u89e3\u538b\u8d4b\u503c\uff08\u89e3\u5305\uff09"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/01-python%E7%AE%80%E4%BB%8B/#64","text":"\u903b\u8f91\u7b97\u6cd5 \u63cf\u8ff0 and \u903b\u8f91\u4e0e or \u903b\u8f91\u6216 not \u53d6\u53cd \u4f18\u5148\u7ea7not>and>or","title":"6.4 \u903b\u8f91\u8fd0\u7b97\u7b26"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/01-python%E7%AE%80%E4%BB%8B/#65","text":"\u6210\u5458\u8fd0\u7b97\u7b26 \u63cf\u8ff0 in \u5305\u542b not in \u4e0d\u5305\u542b 1 2 3 4 >>> not 1 in [ 2 , 3 , 4 ] True >>> 1 not in [ 2 , 3 , 4 ] # \u63a8\u8350\u4f7f\u7528not in True","title":"6.5 \u6210\u5458\u8fd0\u7b97\u7b26"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/01-python%E7%AE%80%E4%BB%8B/#66","text":"\u8eab\u4efd\u8fd0\u7b97\u7b26 \u63cf\u8ff0 is \u4e24\u4e2a\u5bf9\u8c61id\u76f8\u540c\u8fd4\u56deTrue is not \u4e24\u4e2a\u5bf9\u8c61id\u4e0d\u76f8\u540c\u8fd4\u56deTrue == \u53cc\u7b49\u53f7\u6bd4\u8f83\u7684\u662f\u503c\u662f\u5426\u76f8\u7b49\uff0c\u800c is \u6bd4\u8f83\u7684\u662fid\u662f\u5426\u76f8\u7b49\u3002id\u4e0d\u540c\u7684\u60c5\u51b5\u4e0b\uff0c\u503c\u6709\u53ef\u80fd\u76f8\u540c\uff08\u5373\u4e24\u5757\u4e0d\u540c\u7684\u5185\u5b58\u7a7a\u95f4\u91cc\u53ef\u4ee5\u5b58\u76f8\u540c\u7684\u503c\uff09\uff0cid\u76f8\u540c\u7684\u60c5\u51b5\u4e0b\uff0c\u503c\u4e00\u5b9a\u76f8\u540c \u3002","title":"6.6 \u8eab\u4efd\u8fd0\u7b97\u7b26"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/01-python%E7%AE%80%E4%BB%8B/#7","text":"python\u4ee5\u884c\u7f29\u8fdb\u68c0\u6d4b\u5757\u7684\u8fb9\u754c\u3002","title":"7. \u4ee3\u7801\u5757\u5206\u9694\u7b26"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/01-python%E7%AE%80%E4%BB%8B/#_1","text":"","title":"\u4e09\u3001\u5783\u573e\u56de\u6536\u673a\u5236"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/01-python%E7%AE%80%E4%BB%8B/#1_1","text":"","title":"1. \u5f15\u7528\u8ba1\u6570"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/01-python%E7%AE%80%E4%BB%8B/#2-","text":"","title":"2. \u6807\u8bb0-\u6e05\u9664"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/01-python%E7%AE%80%E4%BB%8B/#3_3","text":"","title":"3. \u5206\u4ee3\u56de\u6536"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/01-%E5%86%85%E7%BD%AE%E6%A8%A1%E5%9D%97/","text":"Python\u5e38\u7528\u57fa\u7840\u6a21\u5757 \u00b6 \u4e00\u3001os\u6a21\u5757 \u00b6 os\u6a21\u5757\u662f\u4e0e\u64cd\u4f5c\u7cfb\u7edf\u4ea4\u4e92\u7684\u4e00\u4e2a\u63a5\u53e3 1. \u6587\u4ef6\u4e0e\u76ee\u5f55 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 os . makedirs ( 'dirname1/dirname2' ) #\u53ef\u751f\u6210\u591a\u5c42\u9012\u5f52\u76ee\u5f55 os . removedirs ( 'dirname1' ) #\u82e5\u76ee\u5f55\u4e3a\u7a7a\uff0c\u5219\u5220\u9664\uff0c\u5e76\u9012\u5f52\u5230\u4e0a\u4e00\u7ea7\u76ee\u5f55\uff0c\u5982\u82e5\u4e5f\u4e3a\u7a7a\uff0c\u5219\u5220\u9664\uff0c\u4f9d\u6b64\u7c7b\u63a8 os . mkdir ( 'dirname' ) #\u751f\u6210\u5355\u7ea7\u76ee\u5f55\uff1b\u76f8\u5f53\u4e8eshell\u4e2dmkdir dirname os . rmdir ( 'dirname' ) #\u5220\u9664\u5355\u7ea7\u7a7a\u76ee\u5f55\uff0c\u82e5\u76ee\u5f55\u4e0d\u4e3a\u7a7a\u5219\u65e0\u6cd5\u5220\u9664\uff0c\u62a5\u9519\uff1b\u76f8\u5f53\u4e8eshell\u4e2drmdir dirname os . listdir ( 'dirname' ) #\u5217\u51fa\u6307\u5b9a\u76ee\u5f55\u4e0b\u7684\u6240\u6709\u6587\u4ef6\u548c\u5b50\u76ee\u5f55\uff0c\u5305\u62ec\u9690\u85cf\u6587\u4ef6\uff0c\u5e76\u4ee5\u5217\u8868\u65b9\u5f0f\u6253\u5370 os . remove () #\u5220\u9664\u4e00\u4e2a\u6587\u4ef6 os . rename ( \"oldname\" , \"newname\" ) #\u91cd\u547d\u540d\u6587\u4ef6/\u76ee\u5f55 os . system ( \"bash command\" ) #\u8fd0\u884cshell\u547d\u4ee4\uff0c\u76f4\u63a5\u663e\u793a os . popen ( \"bash command\" ) . read () #\u8fd0\u884cshell\u547d\u4ee4\uff0c\u83b7\u53d6\u6267\u884c\u7ed3\u679c os . getcwd () #\u83b7\u53d6\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\uff0c\u5373\u5f53\u524dpython\u811a\u672c\u5de5\u4f5c\u7684\u76ee\u5f55\u8def\u5f84 os . chdir ( \"dirname\" ) #\u6539\u53d8\u5f53\u524d\u811a\u672c\u5de5\u4f5c\u76ee\u5f55\uff1b\u76f8\u5f53\u4e8eshell\u4e0bcd 2. os.path \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 os . path . abspath ( path ) #\u8fd4\u56depath\u89c4\u8303\u5316\u7684\u7edd\u5bf9\u8def\u5f84 os . path . split ( path ) #\u5c06path\u5206\u5272\u6210\u76ee\u5f55\u548c\u6587\u4ef6\u540d\u4e8c\u5143\u7ec4\u8fd4\u56de os . path . dirname ( path ) #\u8fd4\u56depath\u7684\u76ee\u5f55\u3002\u5176\u5b9e\u5c31\u662fos.path.split(path)\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20 os . path . basename ( path ) #\u8fd4\u56depath\u6700\u540e\u7684\u6587\u4ef6\u540d\u3002\u5982\u4f55path\u4ee5\uff0f\u6216\\\u7ed3\u5c3e\uff0c\u90a3\u4e48\u5c31\u4f1a\u8fd4\u56de\u7a7a\u503c\u3002\u5373os.path.split(path)\u7684\u7b2c\u4e8c\u4e2a\u5143\u7d20 os . path . exists ( path ) #\u5982\u679cpath\u5b58\u5728\uff0c\u8fd4\u56deTrue\uff1b\u5982\u679cpath\u4e0d\u5b58\u5728\uff0c\u8fd4\u56deFalse os . path . isabs ( path ) #\u5982\u679cpath\u662f\u7edd\u5bf9\u8def\u5f84\uff0c\u8fd4\u56deTrue os . path . isfile ( path ) #\u5982\u679cpath\u662f\u4e00\u4e2a\u5b58\u5728\u7684\u6587\u4ef6\uff0c\u8fd4\u56deTrue\u3002\u5426\u5219\u8fd4\u56deFalse os . path . isdir ( path ) #\u5982\u679cpath\u662f\u4e00\u4e2a\u5b58\u5728\u7684\u76ee\u5f55\uff0c\u5219\u8fd4\u56deTrue\u3002\u5426\u5219\u8fd4\u56deFalse os . path . join ( path1 [, path2 [, ... ]]) #\u5c06\u591a\u4e2a\u8def\u5f84\u7ec4\u5408\u540e\u8fd4\u56de\uff0c\u7b2c\u4e00\u4e2a\u7edd\u5bf9\u8def\u5f84\u4e4b\u524d\u7684\u53c2\u6570\u5c06\u88ab\u5ffd\u7565 os . path . getatime ( path ) #\u8fd4\u56depath\u6240\u6307\u5411\u7684\u6587\u4ef6\u6216\u8005\u76ee\u5f55\u7684\u6700\u540e\u8bbf\u95ee\u65f6\u95f4 os . path . getmtime ( path ) #\u8fd4\u56depath\u6240\u6307\u5411\u7684\u6587\u4ef6\u6216\u8005\u76ee\u5f55\u7684\u6700\u540e\u4fee\u6539\u65f6\u95f4 os . path . getsize ( path ) #\u8fd4\u56depath\u7684\u5927\u5c0f 3. os.stat('path/filename') \u00b6 \u83b7\u53d6\u6587\u4ef6/\u76ee\u5f55\u4fe1\u606f \u7684\u7ed3\u6784\u8bf4\u660e 1 2 3 4 5 6 7 8 9 10 11 12 stat \u7ed3\u6784: st_mode: inode \u4fdd\u62a4\u6a21\u5f0f st_ino: inode \u8282\u70b9\u53f7\u3002 st_dev: inode \u9a7b\u7559\u7684\u8bbe\u5907\u3002 st_nlink: inode \u7684\u94fe\u63a5\u6570\u3002 st_uid: \u6240\u6709\u8005\u7684\u7528\u6237ID\u3002 st_gid: \u6240\u6709\u8005\u7684\u7ec4ID\u3002 st_size: \u666e\u901a\u6587\u4ef6\u4ee5\u5b57\u8282\u4e3a\u5355\u4f4d\u7684\u5927\u5c0f\uff1b\u5305\u542b\u7b49\u5f85\u67d0\u4e9b\u7279\u6b8a\u6587\u4ef6\u7684\u6570\u636e\u3002 st_atime: \u4e0a\u6b21\u8bbf\u95ee\u7684\u65f6\u95f4\u3002 st_mtime: \u6700\u540e\u4e00\u6b21\u4fee\u6539\u7684\u65f6\u95f4\u3002 st_ctime: \u7531\u64cd\u4f5c\u7cfb\u7edf\u62a5\u544a\u7684\"ctime\"\u3002\u5728\u67d0\u4e9b\u7cfb\u7edf\u4e0a\uff08\u5982Unix\uff09\u662f\u6700\u65b0\u7684\u5143\u6570\u636e\u66f4\u6539\u7684\u65f6\u95f4\uff0c\u5728\u5176\u5b83\u7cfb\u7edf\u4e0a\uff08\u5982Windows\uff09\u662f\u521b\u5efa\u65f6\u95f4\uff08\u8be6\u7ec6\u4fe1\u606f\u53c2\u89c1\u5e73\u53f0\u7684\u6587\u6863\uff09\u3002 4. os\u6a21\u5757\u7684\u5c5e\u6027 \u00b6 1 2 3 4 os . sep #\u8f93\u51fa\u64cd\u4f5c\u7cfb\u7edf\u7279\u5b9a\u7684\u8def\u5f84\u5206\u9694\u7b26\uff0cwin\u4e0b\u4e3a\"\\\\\",Linux\u4e0b\u4e3a\"/\" os . linesep #\u8f93\u51fa\u5f53\u524d\u5e73\u53f0\u4f7f\u7528\u7684\u884c\u7ec8\u6b62\u7b26\uff0cwin\u4e0b\u4e3a\"\\r\\n\",Linux\u4e0b\u4e3a\"\\n\" os . pathsep #\u8f93\u51fa\u7528\u4e8e\u5206\u5272\u6587\u4ef6\u8def\u5f84\u7684\u5b57\u7b26\u4e32 win\u4e0b\u4e3a;,Linux\u4e0b\u4e3a: os . name #\u8f93\u51fa\u5b57\u7b26\u4e32\u6307\u793a\u5f53\u524d\u4f7f\u7528\u5e73\u53f0\u3002win->'nt'; Linux->'posix' \u4e8c\u3001sys\u6a21\u5757 \u00b6 sys\u6a21\u5757\u662f\u4e0epython\u89e3\u91ca\u5668\u4ea4\u4e92\u7684\u4e00\u4e2a\u63a5\u53e3 1 2 3 4 5 sys . argv #\u547d\u4ee4\u884c\u53c2\u6570List\uff0c\u7b2c\u4e00\u4e2a\u5143\u7d20\u662f\u7a0b\u5e8f\u672c\u8eab\u8def\u5f84 sys . exit ( n ) #\u9000\u51fa\u7a0b\u5e8f\uff0c\u6b63\u5e38\u9000\u51fa\u65f6exit(0),\u9519\u8bef\u9000\u51fasys.exit(1) sys . version #\u83b7\u53d6Python\u89e3\u91ca\u7a0b\u5e8f\u7684\u7248\u672c\u4fe1\u606f sys . path #\u8fd4\u56de\u6a21\u5757\u7684\u641c\u7d22\u8def\u5f84\uff0c\u521d\u59cb\u5316\u65f6\u4f7f\u7528PYTHONPATH\u73af\u5883\u53d8\u91cf\u7684\u503c sys . platform #\u8fd4\u56de\u64cd\u4f5c\u7cfb\u7edf\u5e73\u53f0\u540d\u79f0 \u4e09\u3001\u65f6\u95f4\u6a21\u5757 \u00b6 \u8868\u793a\u65f6\u95f4\u7684\u4e09\u79cd\u65b9\u5f0f :\u65f6\u95f4\u6233\u3001\u5143\u7ec4(struct_time)\u3001\u683c\u5f0f\u5316\u7684\u65f6\u95f4\u5b57\u7b26\u4e32 1 \u65f6\u95f4\u6233(timestamp) \uff1a\u901a\u5e38\u6765\u8bf4\uff0c\u65f6\u95f4\u6233\u8868\u793a\u7684\u662f\u4ece1970\u5e741\u67081\u65e500:00:00\u5f00\u59cb\u6309\u79d2\u8ba1\u7b97\u7684\u504f\u79fb\u91cf\u3002 2 \u683c\u5f0f\u5316\u7684\u65f6\u95f4\u5b57\u7b26\u4e32(Format String)\uff1a \u20181999-12-06\u2019 \u683c\u5f0f \u8bf4\u660e %m \u6708\u4efd\uff0801-12\uff09 %d \u6708\u5185\u4e2d\u7684\u4e00\u5929\uff080-31\uff09 %H 24\u5c0f\u65f6\u5236\u5c0f\u65f6\u6570\uff080-23\uff09 %I 12\u5c0f\u65f6\u5236\u5c0f\u65f6\u6570\uff0801-12\uff09 %M \u5206\u949f\u6570\uff0800=59\uff09 %S \u79d2\uff0800-59\uff09 %a \u672c\u5730\u7b80\u5316\u661f\u671f\u540d\u79f0 %A \u672c\u5730\u5b8c\u6574\u661f\u671f\u540d\u79f0 %b \u672c\u5730\u7b80\u5316\u7684\u6708\u4efd\u540d\u79f0 %B \u672c\u5730\u5b8c\u6574\u7684\u6708\u4efd\u540d\u79f0 %c \u672c\u5730\u76f8\u5e94\u7684\u65e5\u671f\u8868\u793a\u548c\u65f6\u95f4\u8868\u793a %j \u5e74\u5185\u7684\u4e00\u5929\uff08001-366\uff09 %p \u672c\u5730A.M.\u6216P.M.\u7684\u7b49\u4ef7\u7b26 %U \u4e00\u5e74\u4e2d\u7684\u661f\u671f\u6570\uff0800-53\uff09\u661f\u671f\u5929\u4e3a\u661f\u671f\u7684\u5f00\u59cb %w \u661f\u671f\uff080-6\uff09\uff0c\u661f\u671f\u5929\u4e3a\u661f\u671f\u7684\u5f00\u59cb %W \u4e00\u5e74\u4e2d\u7684\u661f\u671f\u6570\uff0800-53\uff09\u661f\u671f\u4e00\u4e3a\u661f\u671f\u7684\u5f00\u59cb %x \u672c\u5730\u76f8\u5e94\u7684\u65e5\u671f\u8868\u793a %X \u672c\u5730\u76f8\u5e94\u7684\u65f6\u95f4\u8868\u793a %Z \u5f53\u524d\u65f6\u533a\u7684\u540d\u79f0 %% %\u53f7\u672c\u8eab 3 \u5143\u7ec4(struct_time) \uff1astruct_time\u5143\u7ec4\u5171\u67099\u4e2a\u5143\u7d20\u5171\u4e5d\u4e2a\u5143\u7d20:(\u5e74\uff0c\u6708\uff0c\u65e5\uff0c\u65f6\uff0c\u5206\uff0c\u79d2\uff0c\u4e00\u5e74\u4e2d\u7b2c\u51e0\u5468\uff0c\u4e00\u5e74\u4e2d\u7b2c\u51e0\u5929\u7b49\uff09 \u7d22\u5f15\uff08Index\uff09 \u5c5e\u6027\uff08Attribute\uff09 \u503c\uff08Values\uff09 0 tm_year\uff08\u5e74\uff09 \u6bd4\u59822011 1 tm_mon\uff08\u6708\uff09 1 - 12 2 tm_mday\uff08\u65e5\uff09 1 - 31 3 tm_hour\uff08\u65f6\uff09 0 - 23 4 tm_min\uff08\u5206\uff09 0 - 59 5 tm_sec\uff08\u79d2\uff09 0 - 60 6 tm_wday\uff08weekday\uff09 0 - 6\uff080\u8868\u793a\u5468\u4e00\uff09 7 tm_yday\uff08\u4e00\u5e74\u4e2d\u7684\u7b2c\u51e0\u5929\uff09 1 - 366 8 tm_isdst\uff08\u662f\u5426\u662f\u590f\u4ee4\u65f6\uff09 \u9ed8\u8ba4\u4e3a0 1.time \u00b6 1 2 3 4 5 6 7 8 9 10 >>> import time # 1.\u65f6\u95f4\u6233 >>> time . time () 1580712170.377099 # 2.\u65f6\u95f4\u5b57\u7b26\u4e32 >>> time . strftime ( \"%Y-%m- %d %H:%M:%S\" ) '2020-02-03 14:43:38' # 3.\u65f6\u95f4\u5143\u7ec4 >>> time . localtime () time . struct_time ( tm_year = 2020 , tm_mon = 2 , tm_mday = 3 , tm_hour = 14 , tm_min = 43 , tm_sec = 52 , tm_wday = 0 , tm_yday = 34 , tm_isdst = 0 ) \u65f6\u95f4\u683c\u5f0f\u8f6c\u6362 1. \u65f6\u95f4\u6233\u4e0e\u7ed3\u6784\u5316\u65f6\u95f4 \u00b6 1 2 3 4 5 6 # UTC\u65f6\u95f4\uff0c\u4e0e\u82f1\u56fd\u4f26\u6566\u5f53\u5730\u65f6\u95f4\u4e00\u81f4 >>> time . gmtime () time . struct_time ( tm_year = 2020 , tm_mon = 2 , tm_mday = 3 , tm_hour = 7 , tm_min = 6 , tm_sec = 4 , tm_wday = 0 , tm_yday = 34 , tm_isdst = 0 ) # \u5f53\u5730\u65f6\u95f4 >>> time . localtime () time . struct_time ( tm_year = 2020 , tm_mon = 2 , tm_mday = 3 , tm_hour = 15 , tm_min = 6 , tm_sec = 25 , tm_wday = 0 , tm_yday = 34 , tm_isdst = 0 ) 1.1 \u65f6\u95f4\u6233-->\u7ed3\u6784\u5316\u65f6\u95f4 1 2 3 >>> import time >>> time . localtime ( 1580713662 ) time . struct_time ( tm_year = 2020 , tm_mon = 2 , tm_mday = 3 , tm_hour = 15 , tm_min = 7 , tm_sec = 42 , tm_wday = 0 , tm_yday = 34 , tm_isdst = 0 ) 1.2 \u7ed3\u6784\u5316\u65f6\u95f4-->\u65f6\u95f4\u6233 1 2 3 4 >>> import time >>> time_tuple = time . localtime ( 1500000000 ) >>> time . mktime ( time_tuple ) 1500000000.0 2. \u7ed3\u6784\u5316\u65f6\u95f4\u4e0e\u5b57\u7b26\u4e32\u65f6\u95f4 \u00b6 2.1 \u7ed3\u6784\u5316\u65f6\u95f4-->\u5b57\u7b26\u4e32\u65f6\u95f4 1 2 3 4 5 6 7 8 9 10 # 1.time.strftime(\"\u683c\u5f0f\u5b9a\u4e49\",\"\u7ed3\u6784\u5316\u65f6\u95f4\") \u7ed3\u6784\u5316\u65f6\u95f4\u53c2\u6570\u82e5\u4e0d\u4f20\uff0c\u5219\u663e\u793a\u5f53\u524d\u65f6\u95f4 >>> time . strftime ( \"%Y-%m- %d %X \" ) '2017-07-24 14:55:36' >>> time . strftime ( \"%Y-%m- %d \" , time . localtime ( 1500000000 )) '2017-07-14' # 2.time.asctime(\u7ed3\u6784\u5316\u65f6\u95f4) \u5982\u679c\u4e0d\u4f20\u53c2\u6570\uff0c\u76f4\u63a5\u8fd4\u56de\u5f53\u524d\u65f6\u95f4\u7684\u683c\u5f0f\u5316\u4e32 >>> time . asctime ( time . localtime ( 1500000000 )) 'Fri Jul 14 10:40:00 2017' >>> time . asctime () 'Mon Feb 3 15:46:50 2020' 2.2 \u5b57\u7b26\u4e32\u65f6\u95f4-->\u7ed3\u6784\u5316\u65f6\u95f4 1 2 3 4 5 #time.strptime(\u65f6\u95f4\u5b57\u7b26\u4e32,\u5b57\u7b26\u4e32\u5bf9\u5e94\u683c\u5f0f) >>> time . strptime ( \"2017-03-16\" , \"%Y-%m- %d \" ) time . struct_time ( tm_year = 2017 , tm_mon = 3 , tm_mday = 16 , tm_hour = 0 , tm_min = 0 , tm_sec = 0 , tm_wday = 3 , tm_yday = 75 , tm_isdst =- 1 ) >>> time . strptime ( \"07/24/2017\" , \"%m/ %d /%Y\" ) time . struct_time ( tm_year = 2017 , tm_mon = 7 , tm_mday = 24 , tm_hour = 0 , tm_min = 0 , tm_sec = 0 , tm_wday = 0 , tm_yday = 205 , tm_isdst =- 1 ) 3. \u65f6\u95f4\u6233\u4e0e\u5b57\u7b26\u4e32\u65f6\u95f4 \u00b6 1 2 3 4 5 # time.ctime(\u65f6\u95f4\u6233) \u5982\u679c\u4e0d\u4f20\u53c2\u6570\uff0c\u76f4\u63a5\u8fd4\u56de\u5f53\u524d\u65f6\u95f4\u7684\u683c\u5f0f\u5316\u4e32 >>> time . ctime () 'Mon Feb 3 15:48:36 2020' >>> time . ctime ( 1500000000 ) 'Fri Jul 14 10:40:00 2017' \u8ba1\u7b97\u65f6\u95f4\u5dee 1 2 3 4 5 6 7 8 9 >>> import time >>> true_time = time . mktime ( time . strptime ( '2017-09-11 08:30:00' , '%Y-%m- %d %H:%M:%S' )) >>> time_now = time . mktime ( time . strptime ( '2017-09-12 11:00:00' , '%Y-%m- %d %H:%M:%S' )) >>> dif_time = time_now - true_time >>> struct_time = time . gmtime ( dif_time ) >>> print ( '\u8fc7\u53bb\u4e86 %d \u5e74 %d \u6708 %d \u5929 %d \u5c0f\u65f6 %d \u5206\u949f %d \u79d2' % ( struct_time . tm_year - 1970 , struct_time . tm_mon - 1 , ... struct_time . tm_mday - 1 , struct_time . tm_hour , ... struct_time . tm_min , struct_time . tm_sec )) \u8fc7\u53bb\u4e86 0 \u5e74 0 \u6708 1 \u5929 2 \u5c0f\u65f6 30 \u5206\u949f 0 \u79d2 2. datetime \u00b6 datatime\u6a21\u5757\u91cd\u65b0\u5c01\u88c5\u4e86time\u6a21\u5757\uff0c\u63d0\u4f9b\u4e86date,time,datetime,timedelta,tzinfo\u4e94\u4e2a\u7c7b 1. date\u7c7b \u00b6 1. \u9759\u6001\u65b9\u6cd5\u548c\u5b57\u6bb5 \u00b6 1 2 3 4 5 6 7 8 9 10 # date\u5bf9\u8c61\u591a\u80fd\u8868\u793a\u7684\u6700\u5927\u65e5\u671f print ( datetime . date . max ) # 9999-12-31 # date\u5bf9\u8c61\u591a\u80fd\u8868\u793a\u7684\u6700\u5c0f\u65e5\u671f print ( datetime . date . min ) # 0001-01-01 # date\u5bf9\u8c61\u8868\u793a\u65e5\u671f\u7684\u6700\u5c0f\u5355\u4f4d print ( datetime . date . resolution ) # 1 day, 0:00:00 # \u8fd4\u56de\u4e00\u4e2a\u8868\u793a\u5f53\u524d\u672c\u5730\u65e5\u671f\u7684date\u5bf9\u8c61\uff1b print ( datetime . date . today ()) # 2020-03-12 # \u6839\u636e\u7ed9\u5b9a\u7684\u65f6\u95f4\u622e\uff0c\u8fd4\u56de\u4e00\u4e2adate\u5bf9\u8c61 print ( datetime . date . fromtimestamp ( time . time ())) # 2020-03-12 2. \u5bf9\u8c61\u7684\u5c5e\u6027\u548c\u65b9\u6cd5 \u00b6 1\u3001 date\u5bf9\u8c61\u7684\u5c5e\u6027 1 2 3 4 5 d = datetime . date ( 2020 , 3 , 13 ) print ( d . year ) # 2020 print ( d . month ) # 3 print ( d . day ) # 13 2\u3001 date\u5bf9\u8c61\u7684\u65b9\u6cd5 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 d = datetime . date ( 2020 , 3 , 13 ) # \u751f\u6210\u4e00\u4e2a\u65b0\u7684\u65e5\u671f\u5bf9\u8c61\uff0c\u7528\u53c2\u6570\u6307\u5b9a\u7684\u5e74\uff0c\u6708\uff0c\u65e5\u4ee3\u66ff\u539f\u6709\u5bf9\u8c61\u4e2d\u7684\u5c5e\u6027\u3002\uff08\u539f\u6709\u5bf9\u8c61\u4ecd\u4fdd\u6301\u4e0d\u53d8\uff09 d2 = d . replace ( 2020 , 3 , 12 ) print ( d2 . day ) # 12 # \u8fd4\u56de\u65e5\u671f\u5bf9\u5e94\u7684time.struct_time\u5bf9\u8c61 print ( d . timetuple ()) # time.struct_time(tm_year=2020, tm_mon=3, tm_mday=13, tm_hour=0, tm_min=0, tm_sec=0, tm_wday=4, tm_yday=73, tm_isdst=-1) # \u8fd4\u56de\u4e00\u5468\u4e2d\u7684\u7b2c\u51e0\u5929\uff0c\u5982\u679c\u662f\u661f\u671f\u4e00\uff0c\u8fd4\u56de0 print ( d . weekday ()) # 4 # \u8fd4\u56de\u4e00\u5468\u4e2d\u7684\u7b2c\u51e0\u5929\uff0c\u5982\u679c\u662f\u661f\u671f\u4e00\uff0c\u8fd4\u56de1 print ( d . isoweekday ()) # 5 # \u8fd4\u56de\u4e00\u4e2a\u5143\u7ec4,\u683c\u5f0f\u5982(year\uff0cmonth\uff0cday) print ( d . isocalendar ()) # (2020, 11, 5) # \u8fd4\u56de\u683c\u5f0f\u5982'YYYY-MM-DD\u2019\u7684\u5b57\u7b26\u4e32 print ( d . isoformat ()) # 2020-03-13 # \u683c\u5f0f\u5316\u8f93\u51fa\u65f6\u95f4 print ( d . strftime ( '%Y-%m- %d ' )) 2. time\u7c7b\u7684\u5c5e\u6027 \u00b6 1. time\u7c7b\u5c5e\u6027 \u00b6 1 2 3 4 5 6 7 t = datetime . time ( 10 , 30 , 25 ) # time\u7c7b\u80fd\u8868\u793a\u7684\u6700\u5c0f\u65f6\u95f4 print ( datetime . time . min ) # 00:00:00 # time\u7c7b\u80fd\u8868\u793a\u7684\u6700\u5927\u65f6\u95f4 print ( datetime . time . max ) # 23:59:59.999999 # \u65f6\u95f4\u7684\u6700\u5c0f\u5355\u4f4d print ( datetime . time . resolution ) # 0:00:00.000001 2. time\u5bf9\u8c61\u7684\u5c5e\u6027\u548c\u65b9\u6cd5 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 t = datetime . time ( 10 , 30 , 25 ) # time\u5bf9\u8c61\u7684\u5c5e\u6027 print ( t . hour ) # 10 print ( t . minute ) # 30 print ( t . second ) # 25 print ( t . microsecond ) # 0 t = datetime . time ( 10 , 30 , 25 ) # \u8fd4\u56de\u578b\u5982\"HH:MM:SS\"\u683c\u5f0f\u7684\u5b57\u7b26\u4e32 print ( t . isoformat ()) # 10:30:25 # \u683c\u5f0f\u5316\u65f6\u95f4 print ( t . strftime ( \"%H:%M:%S\" )) # 10:30:25 3. datetime\u7c7b \u00b6 1. datetime \u65b9\u6cd5\u548c\u5c5e\u6027 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 # \u8fd4\u56de\u8868\u793a\u5f53\u524d\u65f6\u95f4\u7684datetime\u5bf9\u8c61 now = datetime . datetime . today () print ( now ) # 2020-03-13 23:00:09.199437 print ( type ( now )) # <class 'datetime.datetime'> # \u83b7\u53d6\u5f53\u524d\u4e16\u754c\u65f6\u95f4 print ( datetime . datetime . utcnow ()) # 2020-03-13 15:59:36.123860 # \u5f53\u524d\u672c\u5730\u65f6\u95f4\u7684datetime\u5bf9\u8c61 now = datetime . datetime . now () print ( now ) # 2020-03-13 23:02:27.245569 # \u8fd4\u56de\u7ed3\u6784\u5316\u65f6\u95f4 print ( now . timetuple ()) # time.struct_time(tm_year=2020, tm_mon=3, tm_mday=13, tm_hour=23, tm_min=38, tm_sec=3, tm_wday=4, tm_yday=73, tm_isdst=-1) # \u8fd4\u56de\u661f\u671f\u51e0 print ( now . weekday ()) # 4 # \u8fd4\u56de\u65f6\u95f4\u5143\u7ec4 print ( now . isocalendar ()) # (2020, 11, 5) # \u8fd4\u56de'YYYY-MM-DD HH:MM:SS.mmmmmm'\u683c\u5f0f\u7684\u65f6\u95f4 print ( now . isoformat ()) # 2020-03-13T23:45:03.656919 # \u683c\u5f0f\u5316\u65f6\u95f4 print ( now . strftime ( \"%Y-%m- %d %H:%M:%S\" )) # 2020-03-13 23:50:55 print ( now . ctime ()) # Fri Mar 13 23:51:20 2020 datetime.now() 1 2 3 4 5 6 # \u83b7\u53d6\u5f53\u524d\u672c\u5730\u65f6\u95f4 >>> datetime . now () datetime . datetime ( 2020 , 2 , 3 , 16 , 11 , 20 , 441441 ) # \u83b7\u53d6\u5f53\u524d\u4e16\u754c\u65f6\u95f4 >>> datetime . utcnow () datetime . datetime ( 2020 , 2 , 3 , 8 , 11 , 32 , 641304 ) \u56db\u3001re\u6a21\u5757 \u00b6 \u6b63\u5219\u8868\u8fbe\u5f0f\u662f\u5305\u542b\u6587\u672c\u548c\u7279\u6b8a\u5b57\u7b26\u7684\u5b57\u7b26\u4e32\uff0c\u8be5\u5b57\u7b26\u4e32\u63cf\u8ff0\u4e00\u4e2a\u53ef\u4ee5\u8bc6\u522b\u5404\u79cd\u5b57\u7b26\u4e32\u7684\u6a21\u5f0f\u3002Python \u901a\u8fc7\u6807\u51c6\u5e93\u4e2d\u7684 re \u6a21\u5757\u6765\u652f\u6301\u6b63\u5219\u8868\u8fbe\u5f0f\u3002 \u6a21\u5f0f\u5339\u914d\uff1a \u641c\u7d22\uff08search\uff09\uff1a\u5728\u5b57\u7b26\u4e32\u4efb\u610f\u90e8\u5206\u4e2d\u641c\u7d22\u5339\u914d\u7684\u6a21\u5f0f \u5339\u914d\uff08match\uff09\uff1a\u5224\u65ad\u4e00\u4e2a\u5b57\u7b26\u4e32\u80fd\u5426\u4ece\u8d77\u59cb\u5904\u5168\u90e8\u6216\u90e8\u5206\u5730\u5339\u914d\u67d0\u4e2a\u6a21\u5f0f 1. \u6b63\u5219\u57fa\u7840 \u00b6 \u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u5355\u5b57\u7b26\u5339\u914d\uff08\u7279\u6b8a\u5b57\u7b26\uff09 \u5b57\u7b26 \u63cf\u8ff0 . \u5339\u914d\u4efb\u610f\u4e00\u4e2a\u5b57\u7b26\uff08\u9664\u4e86\\n\uff09 [] \u5339\u914d[]\u5217\u4e3e\u7684\u5b57\u7b26 \\d \u5339\u914d\u6570\u5b57\uff0c\u5373[0-9] \\D \u5339\u914d\u975e\u6570\u5b57\uff0c\u5373[^0-9] \\s \u5339\u914d\u7a7a\u767d\u3001\u5373\u7a7a\u683c\u3001tab \\S \u5339\u914d\u975e\u7a7a\u767d \\w \u5339\u914d\u5355\u8bcd\u5b57\u7b26\uff0c\u5373a-z\u3001A-Z\u30010-9\u3001_ \\W \u5339\u914d\u975e\u5355\u8bcd\u5b57\u7b26 \u8868\u793a\u6570\u91cf \u5b57\u7b26 \u529f\u80fd * \u5339\u914d\u524d\u4e00\u4e2a\u5b57\u7b26\u51fa\u73b00\u6b21\u6216\u8005\u65e0\u9650\u6b21\uff0c\u5373\u53ef\u6709\u53ef\u65e0 + \u5339\u914d\u524d\u4e00\u4e2a\u5b57\u7b26\u51fa\u73b01\u6b21\u6216\u8005\u65e0\u9650\u6b21\uff0c\u5373\u81f3\u5c11\u67091\u6b21 ? \u5339\u914d\u524d\u4e00\u4e2a\u5b57\u7b26\u51fa\u73b01\u6b21\u6216\u80050\u6b21\uff0c\u5373\u8981\u4e48\u67091\u6b21\uff0c\u8981\u4e48\u6ca1\u6709 {m} \u5339\u914d\u524d\u4e00\u4e2a\u5b57\u7b26\u51fa\u73b0m\u6b21 {m,} \u5339\u914d\u524d\u4e00\u4e2a\u5b57\u7b26\u81f3\u5c11\u51fa\u73b0m\u6b21 {m,n} \u5339\u914d\u524d\u4e00\u4e2a\u5b57\u7b26\u51fa\u73b0m\u6b21\u5230n\u6b21 \u5339\u914d\u8fb9\u754c \u5b57\u7b26 \u529f\u80fd ^ \u5339\u914d\u5b57\u7b26\u4e32\u5f00\u5934 $ \u5339\u914d\u5b57\u7b26\u4e32\u7ed3\u5c3e \\b \u5339\u914d\u4e00\u4e2a\u5355\u8bcd\u7684\u8fb9\u754c \\a \u5339\u914d\u975e\u5355\u8bcd\u7684\u8fb9\u754c \u5339\u914d\u5206\u7ec4 \u5b57\u7b26 \u529f\u80fd | \u5339\u914d\u5de6\u53f3\u4efb\u610f\u4e00\u4e2a\u8868\u8fbe\u5f0f (ab) \u5c06\u62ec\u53f7\u4e2d\u5b57\u7b26\u4f5c\u4e3a\u4e00\u4e2a\u5206\u7ec4 \\num \u5f15\u7528\u5206\u7ec4num\u5339\u914d\u5230\u7684\u5b57\u7b26\u4e32 (?P<name>) \u5206\u7ec4\u8d77\u522b\u540d (?P=name) \u5f15\u7528\u522b\u540d\u4e3aname\u5206\u7ec4\u5339\u914d\u5230\u7684\u5b57\u7b26\u4e32 2. python\u4e2d\u6b63\u5219\u4f7f\u7528 \u00b6 1. match \u00b6 \u4ece\u5b57\u7b26\u4e32\u7684\u8d77\u59cb\u90e8\u5206\u5bf9\u6a21\u5f0f\u8fdb\u884c\u5339\u914d\u3002\u5982\u679c\u5339\u914d\u6210\u529f\uff0c\u5c31\u8fd4\u56de\u4e00\u4e2a\u5339\u914d\u5bf9\u8c61\uff1b\u5982\u679c\u5339\u914d\u5931\u8d25\uff0c\u5c31\u8fd4\u56de None. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 # 1. \u5206\u7ec4 >>> import re >>> re . match ( r \"<h1>(.*)</h1>\" , \"<h1>\u5185\u5bb9</h1>\" ) < _sre . SRE_Match object ; span = ( 0 , 11 ), match = '<h1>\u5185\u5bb9</h1>' > >>> res = re . match ( r \"<h1>(.*)</h1>\" , \"<h1>\u5185\u5bb9</h1>\" ) >>> res . group ( 1 ) '\u5185\u5bb9' # 2. \u5f15\u7528\u5206\u7ec4 >>> res = re . match ( r \"<(.+)><(.+)>.+</\\2></\\1>\" , \"<html><h1>hello</h1></html>\" ) >>> res < _sre . SRE_Match object ; span = ( 0 , 27 ), match = '<html><h1>hello</h1></html>' > \u3001 # 3. \u5206\u7ec4\u8d77\u522b\u540d >>> res = re . match ( r \"<(?P<html>.+)><(?P<head>.+)>.+</(?P=head)></(?P=html)>\" , \"<html><h1>hello</h1></html>\" ) >>> res < _sre . SRE_Match object ; span = ( 0 , 27 ), match = '<html><h1>hello</h1></html>' > 2. search \u00b6 \u5728\u4efb\u610f\u4f4d\u7f6e\u5bf9\u7ed9\u5b9a\u6b63\u5219\u8868\u8fbe\u5f0f\u6a21\u5f0f\u641c\u7d22\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u5339\u914d\u60c5\u51b5\u3002\u5982\u679c\u641c\u7d22\u5230\u6210\u529f\u7684\u5339\u914d\uff0c\u5c31\u4f1a\u8fd4\u56de\u4e00\u4e2a\u5339\u914d\u5bf9\u8c61\uff1b\u5426\u5219\uff0c\u8fd4\u56de None\u3002\uff08\u5982\u679c\u627e\u52301\u4e2a\u5c31\u4e0d\u518d\u5411\u540e\u5339\u914d\uff09 1 2 3 4 5 6 >>> res = re . search ( r \"hello\" , \"<html><h1>hello</h1></html>\" ) >>> res < _sre . SRE_Match object ; span = ( 10 , 15 ), match = 'hello' > >>> res = re . match ( r \"hello\" , \"<html><h1>hello</h1></html>\" ) >>> res >>> 3. findall \u00b6 \u67e5\u8be2\u5b57\u7b26\u4e32\u4e2d\u67d0\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f\u6a21\u5f0f\u5168\u90e8\u7684\u975e\u91cd\u590d\u51fa\u73b0\u60c5\u51b5\u3002\u679c findall()\u6ca1\u6709\u627e\u5230\u5339\u914d\u7684\u90e8\u5206\uff0c\u5c31\u8fd4\u56de\u4e00\u4e2a\u7a7a\u5217\u8868\uff0c\u4f46\u5982\u679c\u5339\u914d\u6210\u529f\uff0c\u5217\u8868\u5c06\u5305\u542b\u6240\u6709\u6210\u529f\u7684\u5339\u914d\u90e8\u5206\u3002\uff08\u4ece\u5de6\u5411\u53f3\u6309\u51fa\u73b0\u987a\u5e8f\u6392\u5217\uff09 1 2 3 >>> res = re . findall ( r \"hello\" , \"<html><h1>hello</h1><h2>hello world</h2></html>\" ) >>> res [ 'hello' , 'hello' ] 4. sub \u00b6 \u5c06\u5339\u914d\u5230\u7684\u6570\u636e\u8fdb\u884c\u66ff\u6362 1 \u66ff\u6362\u7684\u90e8\u5206\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32 1 2 3 # \u66ff\u6362\u7684\u90e8\u5206\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32 >>> re . sub ( r \"java\" , \"python\" , \"I love java\" ) 'I love python' 2 \u66ff\u6362\u7684\u90e8\u5206\u662f\u4e00\u4e2a\u51fd\u6570 1 2 3 4 5 6 7 # \u66ff\u6362\u7684\u90e8\u5206\u662f\u4e00\u4e2a\u51fd\u6570 >>> def replace ( result ): ... res = int ( result . group ()) + 1 ... return str ( res ) ... >>> re . sub ( r \"\\d+\" , replace , \"cnt=5\" ) 'cnt=6' 5. split \u00b6 \u6839\u636e\u5339\u914d\u8fdb\u884c\u5206\u5272\u5b57\u7b26\u4e32\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a\u5217\u8868 1 2 >>> re . split ( r \",\" , \"python,java,php\" ) [ 'python' , 'java' , 'php' ] 3. \u8d2a\u5a6a\u6a21\u5f0f\u4e0e\u975e\u8d2a\u5a6a\u6a21\u5f0f \u00b6 \u8d2a\u5a6a\u5339\u914d\uff1a\u5728\u6ee1\u8db3\u5339\u914d\u65f6\uff0c\u5339\u914d\u5c3d\u53ef\u80fd\u957f\u7684\u5b57\u7b26\u4e32\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u91c7\u7528\u8d2a\u5a6a\u5339\u914d 1 2 3 4 5 6 7 8 9 10 >>> s = \"this is a number 123-456-789\" >>> r . group () 'this is a number 123-456-789' # \u8d2a\u5a6a\u6a21\u5f0f >>> r . groups () ( 'this is a number 12' , '3-456-789' ) # \u52a0?\u5173\u95ed\u8d2a\u5a6a\u6a21\u5f0f >>> r = re . match ( r \"(.+?)(\\d+-\\d+-\\d+)\" , s ) >>> r . groups () ( 'this is a number ' , '123-456-789' ) \u51e0\u4e2a\u5e38\u7528\u7684\u975e\u8d2a\u5a6a\u5339\u914dPattern *? \u91cd\u590d\u4efb\u610f\u6b21\uff0c\u4f46\u5c3d\u53ef\u80fd\u5c11\u91cd\u590d +? \u91cd\u590d1\u6b21\u6216\u66f4\u591a\u6b21\uff0c\u4f46\u5c3d\u53ef\u80fd\u5c11\u91cd\u590d ?? \u91cd\u590d0\u6b21\u62161\u6b21\uff0c\u4f46\u5c3d\u53ef\u80fd\u5c11\u91cd\u590d {n,m}? \u91cd\u590dn\u5230m\u6b21\uff0c\u4f46\u5c3d\u53ef\u80fd\u5c11\u91cd\u590d {n,}? \u91cd\u590dn\u6b21\u4ee5\u4e0a\uff0c\u4f46\u5c3d\u53ef\u80fd\u5c11\u91cd\u590d .*?x \u53d6\u524d\u9762\u4efb\u610f\u957f\u5ea6\u7684\u5b57\u7b26\uff0c\u76f4\u5230\u4e00\u4e2ax\u51fa\u73b0 \u4e94\u3001collection\u6a21\u5757 \u00b6 \u5728\u5185\u7f6e\u6570\u636e\u7c7b\u578b\uff08dict\u3001list\u3001set\u3001tuple\uff09\u7684\u57fa\u7840\u4e0a\uff0ccollections\u6a21\u5757\u8fd8\u63d0\u4f9b\u4e86\u51e0\u4e2a\u989d\u5916\u7684\u6570\u636e\u7c7b\u578b\uff1aCounter\u3001deque\u3001defaultdict\u3001namedtuple\u548cOrderedDict\u7b49\u3002 namedtuple: \u751f\u6210\u53ef\u4ee5\u4f7f\u7528\u540d\u5b57\u6765\u8bbf\u95ee\u5143\u7d20\u5185\u5bb9\u7684tuple deque: \u53cc\u7aef\u961f\u5217\uff0c\u53ef\u4ee5\u5feb\u901f\u7684\u4ece\u53e6\u5916\u4e00\u4fa7\u8ffd\u52a0\u548c\u63a8\u51fa\u5bf9\u8c61 Counter: \u8ba1\u6570\u5668\uff0c\u4e3b\u8981\u7528\u6765\u8ba1\u6570 OrderedDict: \u6709\u5e8f\u5b57\u5178\uff0cpython3.6\u540e\u81ea\u52a8\u6709\u5e8f defaultdict: \u5e26\u6709\u9ed8\u8ba4\u503c\u7684\u5b57\u5178 1. namedtuple \u00b6 1 2 3 4 5 >>> from collections import namedtuple >>> Point = namedtuple ( 'Point' , [ 'x' , 'y' ]) >>> p = Point ( 1 , 2 ) >>> p . x >>> p . y 2. deque \u00b6 \u4f7f\u7528list\u5b58\u50a8\u6570\u636e\u65f6\uff0c\u6309\u7d22\u5f15\u8bbf\u95ee\u5143\u7d20\u5f88\u5feb\uff0c\u4f46\u662f\u63d2\u5165\u548c\u5220\u9664\u5143\u7d20\u5c31\u5f88\u6162\u4e86\uff0c\u56e0\u4e3alist\u662f\u7ebf\u6027\u5b58\u50a8\uff0c\u6570\u636e\u91cf\u5927\u7684\u65f6\u5019\uff0c\u63d2\u5165\u548c\u5220\u9664\u6548\u7387\u5f88\u4f4e\u3002 deque\u662f\u4e3a\u4e86\u9ad8\u6548\u5b9e\u73b0\u63d2\u5165\u548c\u5220\u9664\u64cd\u4f5c\u7684\u53cc\u5411\u5217\u8868\uff0c\u9002\u5408\u7528\u4e8e\u961f\u5217\u548c\u6808\uff1a 1 2 3 4 5 6 >>> from collections import deque >>> q = deque ([ 'a' , 'b' , 'c' ]) >>> q . append ( 'x' ) >>> q . appendleft ( 'y' ) >>> q deque ([ 'y' , 'a' , 'b' , 'c' , 'x' ]) 3. OrderedDict \u00b6 \u4f7f\u7528dict\u65f6\uff0cKey\u662f\u65e0\u5e8f\u7684\u3002\u5728\u5bf9dict\u505a\u8fed\u4ee3\u65f6\uff0c\u6211\u4eec\u65e0\u6cd5\u786e\u5b9aKey\u7684\u987a\u5e8f\u3002 \u5982\u679c\u8981\u4fdd\u6301Key\u7684\u987a\u5e8f\uff0c\u53ef\u4ee5\u7528 OrderedDict \uff1a 1 2 3 4 5 6 7 >>> from collections import OrderedDict >>> d = dict ([( 'a' , 1 ), ( 'b' , 2 ), ( 'c' , 3 )]) >>> d # dict\u7684Key\u662f\u65e0\u5e8f\u7684 { 'a' : 1 , 'c' : 3 , 'b' : 2 } >>> od = OrderedDict ([( 'a' , 1 ), ( 'b' , 2 ), ( 'c' , 3 )]) >>> od # OrderedDict\u7684Key\u662f\u6709\u5e8f\u7684 OrderedDict ([( 'a' , 1 ), ( 'b' , 2 ), ( 'c' , 3 )]) \u516d\u3001random\u6a21\u5757 \u00b6 \u65b9\u6cd5 \u529f\u80fd random.random() \u83b7\u53d6[0.0,1.0)]\u8303\u56f4\u5185\u7684\u6d6e\u70b9\u6570 random.ranint(a,b) \u83b7\u53d6[a,b)\u8303\u56f4\u5185\u7684\u4e00\u4e2a\u6574\u6570 random.uniform(a,b) \u83b7\u53d6[a,b)\u8303\u56f4\u5185\u7684\u4e00\u4e2a\u6d6e\u70b9\u6570 random.shuffle(x) \u628a\u53c2\u6570\u6307\u5b9a\u7684\u6570\u636e\u4e2d\u7684\u5143\u7d20\u6253\u4e71\uff0c\u53c2\u6570\u5fc5\u987b\u662f\u4e00\u4e2a\u53ef\u53d8\u7684\u6570\u636e\u7c7b\u578b random.sample(x,k) \u4ecex\u4e2d\u968f\u673a\u62bd\u53d6k\u4e2a\u6570\u636e \u4e03\u3001shutil\u6a21\u5757 \u00b6 1. \u62f7\u8d1d\u6587\u4ef6 \u00b6 1 shutil . copy2 ( 'src' , 'dest' ) 2. \u62f7\u8d1d\u76ee\u5f55 \u00b6 1 shutil . copytree ( \"\u539f\u76ee\u5f55\" , \"\u65b0\u76ee\u5f55\" , ignore = shutil . ignore_patterns ( \"*.pyc\" )) 3. \u5220\u9664\u76ee\u5f55 \u00b6 1 shutil . rmtree ( \"temp\" , ignore_errors = True ) 4. \u79fb\u52a8\u6587\u4ef6/\u76ee\u5f55 \u00b6 1 shutil . move ( \"src\" , \"dest\" , copy_function = shutil . copy2 ) 5. \u83b7\u53d6\u78c1\u76d8\u4f7f\u7528\u7a7a\u95f4 \u00b6 1 2 total , used , free = shutil . disk_usage ( \".\" ) print ( \"\u5f53\u524d\u78c1\u76d8\u5171: %i GB, \u5df2\u4f7f\u7528: %i GB, \u5269\u4f59: %i GB\" % ( total / 1073741824 , used / 1073741824 , free / 1073741824 )) 6. \u538b\u7f29\u6587\u4ef6 \u00b6 1 shutil . make_archive ( '\u538b\u7f29\u6587\u4ef6\u5939\u7684\u540d\u5b57' , 'zip' , '\u5f85\u538b\u7f29\u7684\u6587\u4ef6\u5939\u8def\u5f84' ) 7. \u89e3\u538b\u6587\u4ef6 \u00b6 1 shutil . unpack_archive ( 'zip\u6587\u4ef6\u7684\u8def\u5f84.zip' \uff0c '\u89e3\u538b\u5230\u76ee\u7684\u6587\u4ef6\u5939\u8def\u5f84' ) \u516b\u3001argparse\u6a21\u5757 \u00b6 1 2 3 import argparse parser = argparse . ArgumentParser () parser . parse_args () \u8fd0\u884c\u7ed3\u679c 1 2 3 4 5 $ python3 test.py --help usage: test.py [ -h ] optional arguments: -h, --help show this help message and exit 1. \u4f4d\u7f6e\u53c2\u6570 \u00b6 1 2 3 4 5 import argparse parser = argparse . ArgumentParser () parser . add_argument ( \"address\" , help = \"host ip address\" ) # address \u5c31\u662f\u4f4d\u7f6e\u53c2\u6570\uff0c\u76f8\u5f53\u4e8e\u4e00\u4e2a\u53d8\u91cf\uff0c\u5728\u547d\u4ee4\u4e2d\u5c5e\u4e8e\u7684\u53c2\u6570\u4f1a\u4fdd\u5b58\u5728\u8fd9\u4e2a\"\u53d8\u91cf\u4e2d\" args = parser . parse_args () print ( args . address ) # \u6253\u5370\u53c2\u6570 1 2 3 4 5 6 7 8 9 10 11 $ python3 test.py --help usage: test.py [ -h ] address positional arguments: # \u4f4d\u7f6e\u53c2\u6570 address host ip address optional arguments: -h, --help show this help message and exit $ python3 test.py 127 .0.0.1 127 .0.0.1 2. \u53ef\u9009\u53c2\u6570 \u00b6 2.1 \u957f\u9009\u9879 \u00b6 1 2 3 4 5 6 7 import argparse parser = argparse . ArgumentParser () parser . add_argument ( \"--install\" , help = \"install service\" ) args = parser . parse_args () print ( args . install ) # \u6253\u5370\u53c2\u6570\u7684\u503c\uff0c \u53c2\u6570\u540e\u9762\u5fc5\u987b\u6709\u4e00\u4e2a\u503c # \u5982\u679c\u4e0d\u9700\u8981\u503c # parser.add_argument(\"--install\", help=\"install service\", action=\"store_true\") 1 2 3 4 5 6 7 8 9 $ python3 test.py --help usage: test.py [ -h ] [ --install INSTALL ] optional arguments: -h, --help show this help message and exit --install INSTALL install service $ python3 test.py --install http http 2.2 \u77ed\u9009\u9879 \u00b6 1 2 3 4 5 import argparse parser = argparse . ArgumentParser () parser . add_argument ( \"-i\" , \"--install\" , help = \"install service\" ) args = parser . parse_args () print ( args . install ) 1 2 3 4 5 6 7 8 9 10 11 $ python3 test.py --help usage: test.py [ -h ] [ -i INSTALL ] optional arguments: -h, --help show this help message and exit -i INSTALL, --install INSTALL install service $ python3 test.py -i http http $ python3 test.py --install http http 2.3 \u51b2\u7a81\u9009\u9879 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 import argparse parser = argparse . ArgumentParser ( description = \"upgrade or rollback service\" ) group = parser . add_mutually_exclusive_group () group . add_argument ( \"-u\" , \"--upgrade\" , help = \"upgrade service\" , metavar = \"service\" ) group . add_argument ( \"-r\" , \"--rollback\" , help = \"rollback service\" , metavar = \"service\" ) args = parser . parse_args () def upgrade ( service ): print ( \"upgrade {0}\" . format ( service )) def rollback ( service ): print ( \"rollback {0}\" . format ( service )) if args . upgrade : upgrade ( args . upgrade ) if args . rollback : rollback ( args . rollback ) 1 2 3 4 5 6 7 8 9 10 11 $ python3 test.py --help usage: test.py [ -h ] [ -u service | -r service ] upgrade or rollback service optional arguments: -h, --help show this help message and exit -u service, --upgrade service upgrade service -r service, --rollback service rollback service \u4e5d\u3001\u5e8f\u5217\u5316 \u00b6 \u628a\u4e00\u4e2a\u6570\u636e\u7c7b\u578b\u8f6c\u6362\u6210\u5b57\u7b26\u4e32\u3001bytes\u7c7b\u578b\u7684\u8fc7\u7a0b\u3002 \u5e94\u7528\u573a\u666f\uff1a \u628a\u4e00\u4e2a\u6570\u636e\u7c7b\u578b\u5b58\u50a8\u5230\u6587\u4ef6\u4e2d\u7684\u65f6\u5019 \u628a\u4e00\u4e2a\u6570\u636e\u7c7b\u578b\u901a\u8fc7\u7f51\u7edc\u4f20\u8f93\u7684\u65f6\u5019 1. json\u6a21\u5757 \u00b6 JSON(JavaScript Object Notation) json\u7684\u4f18\u70b9\uff1a \u6240\u6709\u7684\u8bed\u8a00\u90fd\u901a\u7528 json\u7684\u7f3a\u70b9\uff1a \u53ea\u652f\u6301\u975e\u5e38\u5c11\u7684\u6570\u636e\u7c7b\u578b \u5bf9\u6570\u636e\u7c7b\u578b\u7684\u7ea6\u675f\u5f88\u82db\u523b \u5b57\u5178\u7684key\u5fc5\u987b\u662f\u5b57\u7b26\u4e32 \u53ea\u652f\u6301\u6570\u5b57\u3001\u5b57\u7b26\u4e32\u3001\u5217\u8868\u3001\u5b57\u5178 json\u51fd\u6570 \u51fd\u6570 \u63cf\u8ff0 json.dumps \u5c06 Python \u5bf9\u8c61\u7f16\u7801\u6210 JSON \u5b57\u7b26\u4e32 json.loads \u5c06\u5df2\u7f16\u7801\u7684 JSON \u5b57\u7b26\u4e32\u89e3\u7801\u4e3a Python \u5bf9\u8c61 json.dump \u5c06 Python \u5bf9\u8c61\u7f16\u7801\u4fdd\u5b58\u5230\u6587\u4ef6\u4e2d json.load \u4ece\u6587\u4ef6\u4e2d\u5c06\u5df2\u7f16\u7801\u7684 JSON \u5b57\u7b26\u4e32\u89e3\u7801\u4e3a Python \u5bf9\u8c61\uff0c\u53ea\u80fdload\u4e00\u6b21 \u5e38\u7528\u7684\u53c2\u6570 1 2 3 4 sort_keys = True \u6309 ASCII\u6392\u5e8f indent = 4 \u7f29\u8fdb separators = ( ',' , ':' ) ensure_ascii = False 1.1 dumps\u548cloads \u00b6 1 2 3 4 5 6 7 8 9 10 import json users = { \"username\" : '\u5f20\u4e09' , \"password\" : '123456' } res = json . dumps ( users , ensure_ascii = False ) print ( res , type ( res )) user1 = json . loads ( res ) print ( user1 , type ( user1 )) # \u6267\u884c\u7ed3\u679c { \"username\" : \"\u5f20\u4e09\" , \"password\" : \"123456\" } < class ' str '> { 'username' : '\u5f20\u4e09' , 'password' : '123456' } < class ' dict '> 1.2 dump\u548cload \u00b6 1 2 3 4 5 6 7 8 9 import json users = { \"username\" : '\u5f20\u4e09' , \"password\" : '123456' } with open ( 'user.txt' , 'w' ) as f : json . dump ( users , f , ensure_ascii = False ) with open ( 'user.txt' , 'r' ) as f : user = json . load ( f ) print ( user ) 2. pickle \u00b6 \u53ef\u4ee5\u5b58\u50a8\u7684\u6570\u636e\u7c7b\u578b \u6240\u6709python\u652f\u6301\u7684\u539f\u751f\u7c7b\u578b\uff1a\u5e03\u5c14\u503c\uff0c\u6574\u6570\uff0c\u6d6e\u70b9\u6570\uff0c\u590d\u6570\uff0c\u5b57\u7b26\u4e32\uff0c\u5b57\u8282\uff0cNone\u3002 \u7531\u4efb\u4f55\u539f\u751f\u7c7b\u578b\u7ec4\u6210\u7684\u5217\u8868\uff0c\u5143\u7ec4\uff0c\u5b57\u5178\u548c\u96c6\u5408\u3002 \u51fd\u6570\uff0c\u7c7b\uff0c\u7c7b\u7684\u5b9e\u4f8b","title":"\u5185\u7f6e\u6a21\u5757"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/01-%E5%86%85%E7%BD%AE%E6%A8%A1%E5%9D%97/#python","text":"","title":"Python\u5e38\u7528\u57fa\u7840\u6a21\u5757"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/01-%E5%86%85%E7%BD%AE%E6%A8%A1%E5%9D%97/#os","text":"os\u6a21\u5757\u662f\u4e0e\u64cd\u4f5c\u7cfb\u7edf\u4ea4\u4e92\u7684\u4e00\u4e2a\u63a5\u53e3","title":"\u4e00\u3001os\u6a21\u5757"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/01-%E5%86%85%E7%BD%AE%E6%A8%A1%E5%9D%97/#1","text":"1 2 3 4 5 6 7 8 9 10 11 12 os . makedirs ( 'dirname1/dirname2' ) #\u53ef\u751f\u6210\u591a\u5c42\u9012\u5f52\u76ee\u5f55 os . removedirs ( 'dirname1' ) #\u82e5\u76ee\u5f55\u4e3a\u7a7a\uff0c\u5219\u5220\u9664\uff0c\u5e76\u9012\u5f52\u5230\u4e0a\u4e00\u7ea7\u76ee\u5f55\uff0c\u5982\u82e5\u4e5f\u4e3a\u7a7a\uff0c\u5219\u5220\u9664\uff0c\u4f9d\u6b64\u7c7b\u63a8 os . mkdir ( 'dirname' ) #\u751f\u6210\u5355\u7ea7\u76ee\u5f55\uff1b\u76f8\u5f53\u4e8eshell\u4e2dmkdir dirname os . rmdir ( 'dirname' ) #\u5220\u9664\u5355\u7ea7\u7a7a\u76ee\u5f55\uff0c\u82e5\u76ee\u5f55\u4e0d\u4e3a\u7a7a\u5219\u65e0\u6cd5\u5220\u9664\uff0c\u62a5\u9519\uff1b\u76f8\u5f53\u4e8eshell\u4e2drmdir dirname os . listdir ( 'dirname' ) #\u5217\u51fa\u6307\u5b9a\u76ee\u5f55\u4e0b\u7684\u6240\u6709\u6587\u4ef6\u548c\u5b50\u76ee\u5f55\uff0c\u5305\u62ec\u9690\u85cf\u6587\u4ef6\uff0c\u5e76\u4ee5\u5217\u8868\u65b9\u5f0f\u6253\u5370 os . remove () #\u5220\u9664\u4e00\u4e2a\u6587\u4ef6 os . rename ( \"oldname\" , \"newname\" ) #\u91cd\u547d\u540d\u6587\u4ef6/\u76ee\u5f55 os . system ( \"bash command\" ) #\u8fd0\u884cshell\u547d\u4ee4\uff0c\u76f4\u63a5\u663e\u793a os . popen ( \"bash command\" ) . read () #\u8fd0\u884cshell\u547d\u4ee4\uff0c\u83b7\u53d6\u6267\u884c\u7ed3\u679c os . getcwd () #\u83b7\u53d6\u5f53\u524d\u5de5\u4f5c\u76ee\u5f55\uff0c\u5373\u5f53\u524dpython\u811a\u672c\u5de5\u4f5c\u7684\u76ee\u5f55\u8def\u5f84 os . chdir ( \"dirname\" ) #\u6539\u53d8\u5f53\u524d\u811a\u672c\u5de5\u4f5c\u76ee\u5f55\uff1b\u76f8\u5f53\u4e8eshell\u4e0bcd","title":"1. \u6587\u4ef6\u4e0e\u76ee\u5f55"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/01-%E5%86%85%E7%BD%AE%E6%A8%A1%E5%9D%97/#2-ospath","text":"1 2 3 4 5 6 7 8 9 10 11 12 os . path . abspath ( path ) #\u8fd4\u56depath\u89c4\u8303\u5316\u7684\u7edd\u5bf9\u8def\u5f84 os . path . split ( path ) #\u5c06path\u5206\u5272\u6210\u76ee\u5f55\u548c\u6587\u4ef6\u540d\u4e8c\u5143\u7ec4\u8fd4\u56de os . path . dirname ( path ) #\u8fd4\u56depath\u7684\u76ee\u5f55\u3002\u5176\u5b9e\u5c31\u662fos.path.split(path)\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20 os . path . basename ( path ) #\u8fd4\u56depath\u6700\u540e\u7684\u6587\u4ef6\u540d\u3002\u5982\u4f55path\u4ee5\uff0f\u6216\\\u7ed3\u5c3e\uff0c\u90a3\u4e48\u5c31\u4f1a\u8fd4\u56de\u7a7a\u503c\u3002\u5373os.path.split(path)\u7684\u7b2c\u4e8c\u4e2a\u5143\u7d20 os . path . exists ( path ) #\u5982\u679cpath\u5b58\u5728\uff0c\u8fd4\u56deTrue\uff1b\u5982\u679cpath\u4e0d\u5b58\u5728\uff0c\u8fd4\u56deFalse os . path . isabs ( path ) #\u5982\u679cpath\u662f\u7edd\u5bf9\u8def\u5f84\uff0c\u8fd4\u56deTrue os . path . isfile ( path ) #\u5982\u679cpath\u662f\u4e00\u4e2a\u5b58\u5728\u7684\u6587\u4ef6\uff0c\u8fd4\u56deTrue\u3002\u5426\u5219\u8fd4\u56deFalse os . path . isdir ( path ) #\u5982\u679cpath\u662f\u4e00\u4e2a\u5b58\u5728\u7684\u76ee\u5f55\uff0c\u5219\u8fd4\u56deTrue\u3002\u5426\u5219\u8fd4\u56deFalse os . path . join ( path1 [, path2 [, ... ]]) #\u5c06\u591a\u4e2a\u8def\u5f84\u7ec4\u5408\u540e\u8fd4\u56de\uff0c\u7b2c\u4e00\u4e2a\u7edd\u5bf9\u8def\u5f84\u4e4b\u524d\u7684\u53c2\u6570\u5c06\u88ab\u5ffd\u7565 os . path . getatime ( path ) #\u8fd4\u56depath\u6240\u6307\u5411\u7684\u6587\u4ef6\u6216\u8005\u76ee\u5f55\u7684\u6700\u540e\u8bbf\u95ee\u65f6\u95f4 os . path . getmtime ( path ) #\u8fd4\u56depath\u6240\u6307\u5411\u7684\u6587\u4ef6\u6216\u8005\u76ee\u5f55\u7684\u6700\u540e\u4fee\u6539\u65f6\u95f4 os . path . getsize ( path ) #\u8fd4\u56depath\u7684\u5927\u5c0f","title":"2. os.path"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/01-%E5%86%85%E7%BD%AE%E6%A8%A1%E5%9D%97/#3-osstatpathfilename","text":"\u83b7\u53d6\u6587\u4ef6/\u76ee\u5f55\u4fe1\u606f \u7684\u7ed3\u6784\u8bf4\u660e 1 2 3 4 5 6 7 8 9 10 11 12 stat \u7ed3\u6784: st_mode: inode \u4fdd\u62a4\u6a21\u5f0f st_ino: inode \u8282\u70b9\u53f7\u3002 st_dev: inode \u9a7b\u7559\u7684\u8bbe\u5907\u3002 st_nlink: inode \u7684\u94fe\u63a5\u6570\u3002 st_uid: \u6240\u6709\u8005\u7684\u7528\u6237ID\u3002 st_gid: \u6240\u6709\u8005\u7684\u7ec4ID\u3002 st_size: \u666e\u901a\u6587\u4ef6\u4ee5\u5b57\u8282\u4e3a\u5355\u4f4d\u7684\u5927\u5c0f\uff1b\u5305\u542b\u7b49\u5f85\u67d0\u4e9b\u7279\u6b8a\u6587\u4ef6\u7684\u6570\u636e\u3002 st_atime: \u4e0a\u6b21\u8bbf\u95ee\u7684\u65f6\u95f4\u3002 st_mtime: \u6700\u540e\u4e00\u6b21\u4fee\u6539\u7684\u65f6\u95f4\u3002 st_ctime: \u7531\u64cd\u4f5c\u7cfb\u7edf\u62a5\u544a\u7684\"ctime\"\u3002\u5728\u67d0\u4e9b\u7cfb\u7edf\u4e0a\uff08\u5982Unix\uff09\u662f\u6700\u65b0\u7684\u5143\u6570\u636e\u66f4\u6539\u7684\u65f6\u95f4\uff0c\u5728\u5176\u5b83\u7cfb\u7edf\u4e0a\uff08\u5982Windows\uff09\u662f\u521b\u5efa\u65f6\u95f4\uff08\u8be6\u7ec6\u4fe1\u606f\u53c2\u89c1\u5e73\u53f0\u7684\u6587\u6863\uff09\u3002","title":"3. os.stat('path/filename')"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/01-%E5%86%85%E7%BD%AE%E6%A8%A1%E5%9D%97/#4-os","text":"1 2 3 4 os . sep #\u8f93\u51fa\u64cd\u4f5c\u7cfb\u7edf\u7279\u5b9a\u7684\u8def\u5f84\u5206\u9694\u7b26\uff0cwin\u4e0b\u4e3a\"\\\\\",Linux\u4e0b\u4e3a\"/\" os . linesep #\u8f93\u51fa\u5f53\u524d\u5e73\u53f0\u4f7f\u7528\u7684\u884c\u7ec8\u6b62\u7b26\uff0cwin\u4e0b\u4e3a\"\\r\\n\",Linux\u4e0b\u4e3a\"\\n\" os . pathsep #\u8f93\u51fa\u7528\u4e8e\u5206\u5272\u6587\u4ef6\u8def\u5f84\u7684\u5b57\u7b26\u4e32 win\u4e0b\u4e3a;,Linux\u4e0b\u4e3a: os . name #\u8f93\u51fa\u5b57\u7b26\u4e32\u6307\u793a\u5f53\u524d\u4f7f\u7528\u5e73\u53f0\u3002win->'nt'; Linux->'posix'","title":"4. os\u6a21\u5757\u7684\u5c5e\u6027"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/01-%E5%86%85%E7%BD%AE%E6%A8%A1%E5%9D%97/#sys","text":"sys\u6a21\u5757\u662f\u4e0epython\u89e3\u91ca\u5668\u4ea4\u4e92\u7684\u4e00\u4e2a\u63a5\u53e3 1 2 3 4 5 sys . argv #\u547d\u4ee4\u884c\u53c2\u6570List\uff0c\u7b2c\u4e00\u4e2a\u5143\u7d20\u662f\u7a0b\u5e8f\u672c\u8eab\u8def\u5f84 sys . exit ( n ) #\u9000\u51fa\u7a0b\u5e8f\uff0c\u6b63\u5e38\u9000\u51fa\u65f6exit(0),\u9519\u8bef\u9000\u51fasys.exit(1) sys . version #\u83b7\u53d6Python\u89e3\u91ca\u7a0b\u5e8f\u7684\u7248\u672c\u4fe1\u606f sys . path #\u8fd4\u56de\u6a21\u5757\u7684\u641c\u7d22\u8def\u5f84\uff0c\u521d\u59cb\u5316\u65f6\u4f7f\u7528PYTHONPATH\u73af\u5883\u53d8\u91cf\u7684\u503c sys . platform #\u8fd4\u56de\u64cd\u4f5c\u7cfb\u7edf\u5e73\u53f0\u540d\u79f0","title":"\u4e8c\u3001sys\u6a21\u5757"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/01-%E5%86%85%E7%BD%AE%E6%A8%A1%E5%9D%97/#_1","text":"\u8868\u793a\u65f6\u95f4\u7684\u4e09\u79cd\u65b9\u5f0f :\u65f6\u95f4\u6233\u3001\u5143\u7ec4(struct_time)\u3001\u683c\u5f0f\u5316\u7684\u65f6\u95f4\u5b57\u7b26\u4e32 1 \u65f6\u95f4\u6233(timestamp) \uff1a\u901a\u5e38\u6765\u8bf4\uff0c\u65f6\u95f4\u6233\u8868\u793a\u7684\u662f\u4ece1970\u5e741\u67081\u65e500:00:00\u5f00\u59cb\u6309\u79d2\u8ba1\u7b97\u7684\u504f\u79fb\u91cf\u3002 2 \u683c\u5f0f\u5316\u7684\u65f6\u95f4\u5b57\u7b26\u4e32(Format String)\uff1a \u20181999-12-06\u2019 \u683c\u5f0f \u8bf4\u660e %m \u6708\u4efd\uff0801-12\uff09 %d \u6708\u5185\u4e2d\u7684\u4e00\u5929\uff080-31\uff09 %H 24\u5c0f\u65f6\u5236\u5c0f\u65f6\u6570\uff080-23\uff09 %I 12\u5c0f\u65f6\u5236\u5c0f\u65f6\u6570\uff0801-12\uff09 %M \u5206\u949f\u6570\uff0800=59\uff09 %S \u79d2\uff0800-59\uff09 %a \u672c\u5730\u7b80\u5316\u661f\u671f\u540d\u79f0 %A \u672c\u5730\u5b8c\u6574\u661f\u671f\u540d\u79f0 %b \u672c\u5730\u7b80\u5316\u7684\u6708\u4efd\u540d\u79f0 %B \u672c\u5730\u5b8c\u6574\u7684\u6708\u4efd\u540d\u79f0 %c \u672c\u5730\u76f8\u5e94\u7684\u65e5\u671f\u8868\u793a\u548c\u65f6\u95f4\u8868\u793a %j \u5e74\u5185\u7684\u4e00\u5929\uff08001-366\uff09 %p \u672c\u5730A.M.\u6216P.M.\u7684\u7b49\u4ef7\u7b26 %U \u4e00\u5e74\u4e2d\u7684\u661f\u671f\u6570\uff0800-53\uff09\u661f\u671f\u5929\u4e3a\u661f\u671f\u7684\u5f00\u59cb %w \u661f\u671f\uff080-6\uff09\uff0c\u661f\u671f\u5929\u4e3a\u661f\u671f\u7684\u5f00\u59cb %W \u4e00\u5e74\u4e2d\u7684\u661f\u671f\u6570\uff0800-53\uff09\u661f\u671f\u4e00\u4e3a\u661f\u671f\u7684\u5f00\u59cb %x \u672c\u5730\u76f8\u5e94\u7684\u65e5\u671f\u8868\u793a %X \u672c\u5730\u76f8\u5e94\u7684\u65f6\u95f4\u8868\u793a %Z \u5f53\u524d\u65f6\u533a\u7684\u540d\u79f0 %% %\u53f7\u672c\u8eab 3 \u5143\u7ec4(struct_time) \uff1astruct_time\u5143\u7ec4\u5171\u67099\u4e2a\u5143\u7d20\u5171\u4e5d\u4e2a\u5143\u7d20:(\u5e74\uff0c\u6708\uff0c\u65e5\uff0c\u65f6\uff0c\u5206\uff0c\u79d2\uff0c\u4e00\u5e74\u4e2d\u7b2c\u51e0\u5468\uff0c\u4e00\u5e74\u4e2d\u7b2c\u51e0\u5929\u7b49\uff09 \u7d22\u5f15\uff08Index\uff09 \u5c5e\u6027\uff08Attribute\uff09 \u503c\uff08Values\uff09 0 tm_year\uff08\u5e74\uff09 \u6bd4\u59822011 1 tm_mon\uff08\u6708\uff09 1 - 12 2 tm_mday\uff08\u65e5\uff09 1 - 31 3 tm_hour\uff08\u65f6\uff09 0 - 23 4 tm_min\uff08\u5206\uff09 0 - 59 5 tm_sec\uff08\u79d2\uff09 0 - 60 6 tm_wday\uff08weekday\uff09 0 - 6\uff080\u8868\u793a\u5468\u4e00\uff09 7 tm_yday\uff08\u4e00\u5e74\u4e2d\u7684\u7b2c\u51e0\u5929\uff09 1 - 366 8 tm_isdst\uff08\u662f\u5426\u662f\u590f\u4ee4\u65f6\uff09 \u9ed8\u8ba4\u4e3a0","title":"\u4e09\u3001\u65f6\u95f4\u6a21\u5757"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/01-%E5%86%85%E7%BD%AE%E6%A8%A1%E5%9D%97/#1time","text":"1 2 3 4 5 6 7 8 9 10 >>> import time # 1.\u65f6\u95f4\u6233 >>> time . time () 1580712170.377099 # 2.\u65f6\u95f4\u5b57\u7b26\u4e32 >>> time . strftime ( \"%Y-%m- %d %H:%M:%S\" ) '2020-02-03 14:43:38' # 3.\u65f6\u95f4\u5143\u7ec4 >>> time . localtime () time . struct_time ( tm_year = 2020 , tm_mon = 2 , tm_mday = 3 , tm_hour = 14 , tm_min = 43 , tm_sec = 52 , tm_wday = 0 , tm_yday = 34 , tm_isdst = 0 ) \u65f6\u95f4\u683c\u5f0f\u8f6c\u6362","title":"1.time"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/01-%E5%86%85%E7%BD%AE%E6%A8%A1%E5%9D%97/#1_1","text":"1 2 3 4 5 6 # UTC\u65f6\u95f4\uff0c\u4e0e\u82f1\u56fd\u4f26\u6566\u5f53\u5730\u65f6\u95f4\u4e00\u81f4 >>> time . gmtime () time . struct_time ( tm_year = 2020 , tm_mon = 2 , tm_mday = 3 , tm_hour = 7 , tm_min = 6 , tm_sec = 4 , tm_wday = 0 , tm_yday = 34 , tm_isdst = 0 ) # \u5f53\u5730\u65f6\u95f4 >>> time . localtime () time . struct_time ( tm_year = 2020 , tm_mon = 2 , tm_mday = 3 , tm_hour = 15 , tm_min = 6 , tm_sec = 25 , tm_wday = 0 , tm_yday = 34 , tm_isdst = 0 ) 1.1 \u65f6\u95f4\u6233-->\u7ed3\u6784\u5316\u65f6\u95f4 1 2 3 >>> import time >>> time . localtime ( 1580713662 ) time . struct_time ( tm_year = 2020 , tm_mon = 2 , tm_mday = 3 , tm_hour = 15 , tm_min = 7 , tm_sec = 42 , tm_wday = 0 , tm_yday = 34 , tm_isdst = 0 ) 1.2 \u7ed3\u6784\u5316\u65f6\u95f4-->\u65f6\u95f4\u6233 1 2 3 4 >>> import time >>> time_tuple = time . localtime ( 1500000000 ) >>> time . mktime ( time_tuple ) 1500000000.0","title":"1. \u65f6\u95f4\u6233\u4e0e\u7ed3\u6784\u5316\u65f6\u95f4"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/01-%E5%86%85%E7%BD%AE%E6%A8%A1%E5%9D%97/#2","text":"2.1 \u7ed3\u6784\u5316\u65f6\u95f4-->\u5b57\u7b26\u4e32\u65f6\u95f4 1 2 3 4 5 6 7 8 9 10 # 1.time.strftime(\"\u683c\u5f0f\u5b9a\u4e49\",\"\u7ed3\u6784\u5316\u65f6\u95f4\") \u7ed3\u6784\u5316\u65f6\u95f4\u53c2\u6570\u82e5\u4e0d\u4f20\uff0c\u5219\u663e\u793a\u5f53\u524d\u65f6\u95f4 >>> time . strftime ( \"%Y-%m- %d %X \" ) '2017-07-24 14:55:36' >>> time . strftime ( \"%Y-%m- %d \" , time . localtime ( 1500000000 )) '2017-07-14' # 2.time.asctime(\u7ed3\u6784\u5316\u65f6\u95f4) \u5982\u679c\u4e0d\u4f20\u53c2\u6570\uff0c\u76f4\u63a5\u8fd4\u56de\u5f53\u524d\u65f6\u95f4\u7684\u683c\u5f0f\u5316\u4e32 >>> time . asctime ( time . localtime ( 1500000000 )) 'Fri Jul 14 10:40:00 2017' >>> time . asctime () 'Mon Feb 3 15:46:50 2020' 2.2 \u5b57\u7b26\u4e32\u65f6\u95f4-->\u7ed3\u6784\u5316\u65f6\u95f4 1 2 3 4 5 #time.strptime(\u65f6\u95f4\u5b57\u7b26\u4e32,\u5b57\u7b26\u4e32\u5bf9\u5e94\u683c\u5f0f) >>> time . strptime ( \"2017-03-16\" , \"%Y-%m- %d \" ) time . struct_time ( tm_year = 2017 , tm_mon = 3 , tm_mday = 16 , tm_hour = 0 , tm_min = 0 , tm_sec = 0 , tm_wday = 3 , tm_yday = 75 , tm_isdst =- 1 ) >>> time . strptime ( \"07/24/2017\" , \"%m/ %d /%Y\" ) time . struct_time ( tm_year = 2017 , tm_mon = 7 , tm_mday = 24 , tm_hour = 0 , tm_min = 0 , tm_sec = 0 , tm_wday = 0 , tm_yday = 205 , tm_isdst =- 1 )","title":"2. \u7ed3\u6784\u5316\u65f6\u95f4\u4e0e\u5b57\u7b26\u4e32\u65f6\u95f4"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/01-%E5%86%85%E7%BD%AE%E6%A8%A1%E5%9D%97/#3","text":"1 2 3 4 5 # time.ctime(\u65f6\u95f4\u6233) \u5982\u679c\u4e0d\u4f20\u53c2\u6570\uff0c\u76f4\u63a5\u8fd4\u56de\u5f53\u524d\u65f6\u95f4\u7684\u683c\u5f0f\u5316\u4e32 >>> time . ctime () 'Mon Feb 3 15:48:36 2020' >>> time . ctime ( 1500000000 ) 'Fri Jul 14 10:40:00 2017' \u8ba1\u7b97\u65f6\u95f4\u5dee 1 2 3 4 5 6 7 8 9 >>> import time >>> true_time = time . mktime ( time . strptime ( '2017-09-11 08:30:00' , '%Y-%m- %d %H:%M:%S' )) >>> time_now = time . mktime ( time . strptime ( '2017-09-12 11:00:00' , '%Y-%m- %d %H:%M:%S' )) >>> dif_time = time_now - true_time >>> struct_time = time . gmtime ( dif_time ) >>> print ( '\u8fc7\u53bb\u4e86 %d \u5e74 %d \u6708 %d \u5929 %d \u5c0f\u65f6 %d \u5206\u949f %d \u79d2' % ( struct_time . tm_year - 1970 , struct_time . tm_mon - 1 , ... struct_time . tm_mday - 1 , struct_time . tm_hour , ... struct_time . tm_min , struct_time . tm_sec )) \u8fc7\u53bb\u4e86 0 \u5e74 0 \u6708 1 \u5929 2 \u5c0f\u65f6 30 \u5206\u949f 0 \u79d2","title":"3. \u65f6\u95f4\u6233\u4e0e\u5b57\u7b26\u4e32\u65f6\u95f4"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/01-%E5%86%85%E7%BD%AE%E6%A8%A1%E5%9D%97/#2-datetime","text":"datatime\u6a21\u5757\u91cd\u65b0\u5c01\u88c5\u4e86time\u6a21\u5757\uff0c\u63d0\u4f9b\u4e86date,time,datetime,timedelta,tzinfo\u4e94\u4e2a\u7c7b","title":"2. datetime"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/01-%E5%86%85%E7%BD%AE%E6%A8%A1%E5%9D%97/#1-date","text":"","title":"1. date\u7c7b"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/01-%E5%86%85%E7%BD%AE%E6%A8%A1%E5%9D%97/#1_2","text":"1 2 3 4 5 6 7 8 9 10 # date\u5bf9\u8c61\u591a\u80fd\u8868\u793a\u7684\u6700\u5927\u65e5\u671f print ( datetime . date . max ) # 9999-12-31 # date\u5bf9\u8c61\u591a\u80fd\u8868\u793a\u7684\u6700\u5c0f\u65e5\u671f print ( datetime . date . min ) # 0001-01-01 # date\u5bf9\u8c61\u8868\u793a\u65e5\u671f\u7684\u6700\u5c0f\u5355\u4f4d print ( datetime . date . resolution ) # 1 day, 0:00:00 # \u8fd4\u56de\u4e00\u4e2a\u8868\u793a\u5f53\u524d\u672c\u5730\u65e5\u671f\u7684date\u5bf9\u8c61\uff1b print ( datetime . date . today ()) # 2020-03-12 # \u6839\u636e\u7ed9\u5b9a\u7684\u65f6\u95f4\u622e\uff0c\u8fd4\u56de\u4e00\u4e2adate\u5bf9\u8c61 print ( datetime . date . fromtimestamp ( time . time ())) # 2020-03-12","title":"1. \u9759\u6001\u65b9\u6cd5\u548c\u5b57\u6bb5"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/01-%E5%86%85%E7%BD%AE%E6%A8%A1%E5%9D%97/#2_1","text":"1\u3001 date\u5bf9\u8c61\u7684\u5c5e\u6027 1 2 3 4 5 d = datetime . date ( 2020 , 3 , 13 ) print ( d . year ) # 2020 print ( d . month ) # 3 print ( d . day ) # 13 2\u3001 date\u5bf9\u8c61\u7684\u65b9\u6cd5 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 d = datetime . date ( 2020 , 3 , 13 ) # \u751f\u6210\u4e00\u4e2a\u65b0\u7684\u65e5\u671f\u5bf9\u8c61\uff0c\u7528\u53c2\u6570\u6307\u5b9a\u7684\u5e74\uff0c\u6708\uff0c\u65e5\u4ee3\u66ff\u539f\u6709\u5bf9\u8c61\u4e2d\u7684\u5c5e\u6027\u3002\uff08\u539f\u6709\u5bf9\u8c61\u4ecd\u4fdd\u6301\u4e0d\u53d8\uff09 d2 = d . replace ( 2020 , 3 , 12 ) print ( d2 . day ) # 12 # \u8fd4\u56de\u65e5\u671f\u5bf9\u5e94\u7684time.struct_time\u5bf9\u8c61 print ( d . timetuple ()) # time.struct_time(tm_year=2020, tm_mon=3, tm_mday=13, tm_hour=0, tm_min=0, tm_sec=0, tm_wday=4, tm_yday=73, tm_isdst=-1) # \u8fd4\u56de\u4e00\u5468\u4e2d\u7684\u7b2c\u51e0\u5929\uff0c\u5982\u679c\u662f\u661f\u671f\u4e00\uff0c\u8fd4\u56de0 print ( d . weekday ()) # 4 # \u8fd4\u56de\u4e00\u5468\u4e2d\u7684\u7b2c\u51e0\u5929\uff0c\u5982\u679c\u662f\u661f\u671f\u4e00\uff0c\u8fd4\u56de1 print ( d . isoweekday ()) # 5 # \u8fd4\u56de\u4e00\u4e2a\u5143\u7ec4,\u683c\u5f0f\u5982(year\uff0cmonth\uff0cday) print ( d . isocalendar ()) # (2020, 11, 5) # \u8fd4\u56de\u683c\u5f0f\u5982'YYYY-MM-DD\u2019\u7684\u5b57\u7b26\u4e32 print ( d . isoformat ()) # 2020-03-13 # \u683c\u5f0f\u5316\u8f93\u51fa\u65f6\u95f4 print ( d . strftime ( '%Y-%m- %d ' ))","title":"2. \u5bf9\u8c61\u7684\u5c5e\u6027\u548c\u65b9\u6cd5"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/01-%E5%86%85%E7%BD%AE%E6%A8%A1%E5%9D%97/#2-time","text":"","title":"2. time\u7c7b\u7684\u5c5e\u6027"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/01-%E5%86%85%E7%BD%AE%E6%A8%A1%E5%9D%97/#1-time","text":"1 2 3 4 5 6 7 t = datetime . time ( 10 , 30 , 25 ) # time\u7c7b\u80fd\u8868\u793a\u7684\u6700\u5c0f\u65f6\u95f4 print ( datetime . time . min ) # 00:00:00 # time\u7c7b\u80fd\u8868\u793a\u7684\u6700\u5927\u65f6\u95f4 print ( datetime . time . max ) # 23:59:59.999999 # \u65f6\u95f4\u7684\u6700\u5c0f\u5355\u4f4d print ( datetime . time . resolution ) # 0:00:00.000001","title":"1. time\u7c7b\u5c5e\u6027"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/01-%E5%86%85%E7%BD%AE%E6%A8%A1%E5%9D%97/#2-time_1","text":"1 2 3 4 5 6 7 8 9 10 11 12 t = datetime . time ( 10 , 30 , 25 ) # time\u5bf9\u8c61\u7684\u5c5e\u6027 print ( t . hour ) # 10 print ( t . minute ) # 30 print ( t . second ) # 25 print ( t . microsecond ) # 0 t = datetime . time ( 10 , 30 , 25 ) # \u8fd4\u56de\u578b\u5982\"HH:MM:SS\"\u683c\u5f0f\u7684\u5b57\u7b26\u4e32 print ( t . isoformat ()) # 10:30:25 # \u683c\u5f0f\u5316\u65f6\u95f4 print ( t . strftime ( \"%H:%M:%S\" )) # 10:30:25","title":"2. time\u5bf9\u8c61\u7684\u5c5e\u6027\u548c\u65b9\u6cd5"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/01-%E5%86%85%E7%BD%AE%E6%A8%A1%E5%9D%97/#3-datetime","text":"","title":"3. datetime\u7c7b"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/01-%E5%86%85%E7%BD%AE%E6%A8%A1%E5%9D%97/#1-datetime","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 # \u8fd4\u56de\u8868\u793a\u5f53\u524d\u65f6\u95f4\u7684datetime\u5bf9\u8c61 now = datetime . datetime . today () print ( now ) # 2020-03-13 23:00:09.199437 print ( type ( now )) # <class 'datetime.datetime'> # \u83b7\u53d6\u5f53\u524d\u4e16\u754c\u65f6\u95f4 print ( datetime . datetime . utcnow ()) # 2020-03-13 15:59:36.123860 # \u5f53\u524d\u672c\u5730\u65f6\u95f4\u7684datetime\u5bf9\u8c61 now = datetime . datetime . now () print ( now ) # 2020-03-13 23:02:27.245569 # \u8fd4\u56de\u7ed3\u6784\u5316\u65f6\u95f4 print ( now . timetuple ()) # time.struct_time(tm_year=2020, tm_mon=3, tm_mday=13, tm_hour=23, tm_min=38, tm_sec=3, tm_wday=4, tm_yday=73, tm_isdst=-1) # \u8fd4\u56de\u661f\u671f\u51e0 print ( now . weekday ()) # 4 # \u8fd4\u56de\u65f6\u95f4\u5143\u7ec4 print ( now . isocalendar ()) # (2020, 11, 5) # \u8fd4\u56de'YYYY-MM-DD HH:MM:SS.mmmmmm'\u683c\u5f0f\u7684\u65f6\u95f4 print ( now . isoformat ()) # 2020-03-13T23:45:03.656919 # \u683c\u5f0f\u5316\u65f6\u95f4 print ( now . strftime ( \"%Y-%m- %d %H:%M:%S\" )) # 2020-03-13 23:50:55 print ( now . ctime ()) # Fri Mar 13 23:51:20 2020 datetime.now() 1 2 3 4 5 6 # \u83b7\u53d6\u5f53\u524d\u672c\u5730\u65f6\u95f4 >>> datetime . now () datetime . datetime ( 2020 , 2 , 3 , 16 , 11 , 20 , 441441 ) # \u83b7\u53d6\u5f53\u524d\u4e16\u754c\u65f6\u95f4 >>> datetime . utcnow () datetime . datetime ( 2020 , 2 , 3 , 8 , 11 , 32 , 641304 )","title":"1. datetime \u65b9\u6cd5\u548c\u5c5e\u6027"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/01-%E5%86%85%E7%BD%AE%E6%A8%A1%E5%9D%97/#re","text":"\u6b63\u5219\u8868\u8fbe\u5f0f\u662f\u5305\u542b\u6587\u672c\u548c\u7279\u6b8a\u5b57\u7b26\u7684\u5b57\u7b26\u4e32\uff0c\u8be5\u5b57\u7b26\u4e32\u63cf\u8ff0\u4e00\u4e2a\u53ef\u4ee5\u8bc6\u522b\u5404\u79cd\u5b57\u7b26\u4e32\u7684\u6a21\u5f0f\u3002Python \u901a\u8fc7\u6807\u51c6\u5e93\u4e2d\u7684 re \u6a21\u5757\u6765\u652f\u6301\u6b63\u5219\u8868\u8fbe\u5f0f\u3002 \u6a21\u5f0f\u5339\u914d\uff1a \u641c\u7d22\uff08search\uff09\uff1a\u5728\u5b57\u7b26\u4e32\u4efb\u610f\u90e8\u5206\u4e2d\u641c\u7d22\u5339\u914d\u7684\u6a21\u5f0f \u5339\u914d\uff08match\uff09\uff1a\u5224\u65ad\u4e00\u4e2a\u5b57\u7b26\u4e32\u80fd\u5426\u4ece\u8d77\u59cb\u5904\u5168\u90e8\u6216\u90e8\u5206\u5730\u5339\u914d\u67d0\u4e2a\u6a21\u5f0f","title":"\u56db\u3001re\u6a21\u5757"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/01-%E5%86%85%E7%BD%AE%E6%A8%A1%E5%9D%97/#1_3","text":"\u6b63\u5219\u8868\u8fbe\u5f0f\u7684\u5355\u5b57\u7b26\u5339\u914d\uff08\u7279\u6b8a\u5b57\u7b26\uff09 \u5b57\u7b26 \u63cf\u8ff0 . \u5339\u914d\u4efb\u610f\u4e00\u4e2a\u5b57\u7b26\uff08\u9664\u4e86\\n\uff09 [] \u5339\u914d[]\u5217\u4e3e\u7684\u5b57\u7b26 \\d \u5339\u914d\u6570\u5b57\uff0c\u5373[0-9] \\D \u5339\u914d\u975e\u6570\u5b57\uff0c\u5373[^0-9] \\s \u5339\u914d\u7a7a\u767d\u3001\u5373\u7a7a\u683c\u3001tab \\S \u5339\u914d\u975e\u7a7a\u767d \\w \u5339\u914d\u5355\u8bcd\u5b57\u7b26\uff0c\u5373a-z\u3001A-Z\u30010-9\u3001_ \\W \u5339\u914d\u975e\u5355\u8bcd\u5b57\u7b26 \u8868\u793a\u6570\u91cf \u5b57\u7b26 \u529f\u80fd * \u5339\u914d\u524d\u4e00\u4e2a\u5b57\u7b26\u51fa\u73b00\u6b21\u6216\u8005\u65e0\u9650\u6b21\uff0c\u5373\u53ef\u6709\u53ef\u65e0 + \u5339\u914d\u524d\u4e00\u4e2a\u5b57\u7b26\u51fa\u73b01\u6b21\u6216\u8005\u65e0\u9650\u6b21\uff0c\u5373\u81f3\u5c11\u67091\u6b21 ? \u5339\u914d\u524d\u4e00\u4e2a\u5b57\u7b26\u51fa\u73b01\u6b21\u6216\u80050\u6b21\uff0c\u5373\u8981\u4e48\u67091\u6b21\uff0c\u8981\u4e48\u6ca1\u6709 {m} \u5339\u914d\u524d\u4e00\u4e2a\u5b57\u7b26\u51fa\u73b0m\u6b21 {m,} \u5339\u914d\u524d\u4e00\u4e2a\u5b57\u7b26\u81f3\u5c11\u51fa\u73b0m\u6b21 {m,n} \u5339\u914d\u524d\u4e00\u4e2a\u5b57\u7b26\u51fa\u73b0m\u6b21\u5230n\u6b21 \u5339\u914d\u8fb9\u754c \u5b57\u7b26 \u529f\u80fd ^ \u5339\u914d\u5b57\u7b26\u4e32\u5f00\u5934 $ \u5339\u914d\u5b57\u7b26\u4e32\u7ed3\u5c3e \\b \u5339\u914d\u4e00\u4e2a\u5355\u8bcd\u7684\u8fb9\u754c \\a \u5339\u914d\u975e\u5355\u8bcd\u7684\u8fb9\u754c \u5339\u914d\u5206\u7ec4 \u5b57\u7b26 \u529f\u80fd | \u5339\u914d\u5de6\u53f3\u4efb\u610f\u4e00\u4e2a\u8868\u8fbe\u5f0f (ab) \u5c06\u62ec\u53f7\u4e2d\u5b57\u7b26\u4f5c\u4e3a\u4e00\u4e2a\u5206\u7ec4 \\num \u5f15\u7528\u5206\u7ec4num\u5339\u914d\u5230\u7684\u5b57\u7b26\u4e32 (?P<name>) \u5206\u7ec4\u8d77\u522b\u540d (?P=name) \u5f15\u7528\u522b\u540d\u4e3aname\u5206\u7ec4\u5339\u914d\u5230\u7684\u5b57\u7b26\u4e32","title":"1. \u6b63\u5219\u57fa\u7840"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/01-%E5%86%85%E7%BD%AE%E6%A8%A1%E5%9D%97/#2-python","text":"","title":"2. python\u4e2d\u6b63\u5219\u4f7f\u7528"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/01-%E5%86%85%E7%BD%AE%E6%A8%A1%E5%9D%97/#1-match","text":"\u4ece\u5b57\u7b26\u4e32\u7684\u8d77\u59cb\u90e8\u5206\u5bf9\u6a21\u5f0f\u8fdb\u884c\u5339\u914d\u3002\u5982\u679c\u5339\u914d\u6210\u529f\uff0c\u5c31\u8fd4\u56de\u4e00\u4e2a\u5339\u914d\u5bf9\u8c61\uff1b\u5982\u679c\u5339\u914d\u5931\u8d25\uff0c\u5c31\u8fd4\u56de None. 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 # 1. \u5206\u7ec4 >>> import re >>> re . match ( r \"<h1>(.*)</h1>\" , \"<h1>\u5185\u5bb9</h1>\" ) < _sre . SRE_Match object ; span = ( 0 , 11 ), match = '<h1>\u5185\u5bb9</h1>' > >>> res = re . match ( r \"<h1>(.*)</h1>\" , \"<h1>\u5185\u5bb9</h1>\" ) >>> res . group ( 1 ) '\u5185\u5bb9' # 2. \u5f15\u7528\u5206\u7ec4 >>> res = re . match ( r \"<(.+)><(.+)>.+</\\2></\\1>\" , \"<html><h1>hello</h1></html>\" ) >>> res < _sre . SRE_Match object ; span = ( 0 , 27 ), match = '<html><h1>hello</h1></html>' > \u3001 # 3. \u5206\u7ec4\u8d77\u522b\u540d >>> res = re . match ( r \"<(?P<html>.+)><(?P<head>.+)>.+</(?P=head)></(?P=html)>\" , \"<html><h1>hello</h1></html>\" ) >>> res < _sre . SRE_Match object ; span = ( 0 , 27 ), match = '<html><h1>hello</h1></html>' >","title":"1. match"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/01-%E5%86%85%E7%BD%AE%E6%A8%A1%E5%9D%97/#2-search","text":"\u5728\u4efb\u610f\u4f4d\u7f6e\u5bf9\u7ed9\u5b9a\u6b63\u5219\u8868\u8fbe\u5f0f\u6a21\u5f0f\u641c\u7d22\u7b2c\u4e00\u6b21\u51fa\u73b0\u7684\u5339\u914d\u60c5\u51b5\u3002\u5982\u679c\u641c\u7d22\u5230\u6210\u529f\u7684\u5339\u914d\uff0c\u5c31\u4f1a\u8fd4\u56de\u4e00\u4e2a\u5339\u914d\u5bf9\u8c61\uff1b\u5426\u5219\uff0c\u8fd4\u56de None\u3002\uff08\u5982\u679c\u627e\u52301\u4e2a\u5c31\u4e0d\u518d\u5411\u540e\u5339\u914d\uff09 1 2 3 4 5 6 >>> res = re . search ( r \"hello\" , \"<html><h1>hello</h1></html>\" ) >>> res < _sre . SRE_Match object ; span = ( 10 , 15 ), match = 'hello' > >>> res = re . match ( r \"hello\" , \"<html><h1>hello</h1></html>\" ) >>> res >>>","title":"2. search"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/01-%E5%86%85%E7%BD%AE%E6%A8%A1%E5%9D%97/#3-findall","text":"\u67e5\u8be2\u5b57\u7b26\u4e32\u4e2d\u67d0\u4e2a\u6b63\u5219\u8868\u8fbe\u5f0f\u6a21\u5f0f\u5168\u90e8\u7684\u975e\u91cd\u590d\u51fa\u73b0\u60c5\u51b5\u3002\u679c findall()\u6ca1\u6709\u627e\u5230\u5339\u914d\u7684\u90e8\u5206\uff0c\u5c31\u8fd4\u56de\u4e00\u4e2a\u7a7a\u5217\u8868\uff0c\u4f46\u5982\u679c\u5339\u914d\u6210\u529f\uff0c\u5217\u8868\u5c06\u5305\u542b\u6240\u6709\u6210\u529f\u7684\u5339\u914d\u90e8\u5206\u3002\uff08\u4ece\u5de6\u5411\u53f3\u6309\u51fa\u73b0\u987a\u5e8f\u6392\u5217\uff09 1 2 3 >>> res = re . findall ( r \"hello\" , \"<html><h1>hello</h1><h2>hello world</h2></html>\" ) >>> res [ 'hello' , 'hello' ]","title":"3. findall"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/01-%E5%86%85%E7%BD%AE%E6%A8%A1%E5%9D%97/#4-sub","text":"\u5c06\u5339\u914d\u5230\u7684\u6570\u636e\u8fdb\u884c\u66ff\u6362 1 \u66ff\u6362\u7684\u90e8\u5206\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32 1 2 3 # \u66ff\u6362\u7684\u90e8\u5206\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32 >>> re . sub ( r \"java\" , \"python\" , \"I love java\" ) 'I love python' 2 \u66ff\u6362\u7684\u90e8\u5206\u662f\u4e00\u4e2a\u51fd\u6570 1 2 3 4 5 6 7 # \u66ff\u6362\u7684\u90e8\u5206\u662f\u4e00\u4e2a\u51fd\u6570 >>> def replace ( result ): ... res = int ( result . group ()) + 1 ... return str ( res ) ... >>> re . sub ( r \"\\d+\" , replace , \"cnt=5\" ) 'cnt=6'","title":"4. sub"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/01-%E5%86%85%E7%BD%AE%E6%A8%A1%E5%9D%97/#5-split","text":"\u6839\u636e\u5339\u914d\u8fdb\u884c\u5206\u5272\u5b57\u7b26\u4e32\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a\u5217\u8868 1 2 >>> re . split ( r \",\" , \"python,java,php\" ) [ 'python' , 'java' , 'php' ]","title":"5. split"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/01-%E5%86%85%E7%BD%AE%E6%A8%A1%E5%9D%97/#3_1","text":"\u8d2a\u5a6a\u5339\u914d\uff1a\u5728\u6ee1\u8db3\u5339\u914d\u65f6\uff0c\u5339\u914d\u5c3d\u53ef\u80fd\u957f\u7684\u5b57\u7b26\u4e32\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u91c7\u7528\u8d2a\u5a6a\u5339\u914d 1 2 3 4 5 6 7 8 9 10 >>> s = \"this is a number 123-456-789\" >>> r . group () 'this is a number 123-456-789' # \u8d2a\u5a6a\u6a21\u5f0f >>> r . groups () ( 'this is a number 12' , '3-456-789' ) # \u52a0?\u5173\u95ed\u8d2a\u5a6a\u6a21\u5f0f >>> r = re . match ( r \"(.+?)(\\d+-\\d+-\\d+)\" , s ) >>> r . groups () ( 'this is a number ' , '123-456-789' ) \u51e0\u4e2a\u5e38\u7528\u7684\u975e\u8d2a\u5a6a\u5339\u914dPattern *? \u91cd\u590d\u4efb\u610f\u6b21\uff0c\u4f46\u5c3d\u53ef\u80fd\u5c11\u91cd\u590d +? \u91cd\u590d1\u6b21\u6216\u66f4\u591a\u6b21\uff0c\u4f46\u5c3d\u53ef\u80fd\u5c11\u91cd\u590d ?? \u91cd\u590d0\u6b21\u62161\u6b21\uff0c\u4f46\u5c3d\u53ef\u80fd\u5c11\u91cd\u590d {n,m}? \u91cd\u590dn\u5230m\u6b21\uff0c\u4f46\u5c3d\u53ef\u80fd\u5c11\u91cd\u590d {n,}? \u91cd\u590dn\u6b21\u4ee5\u4e0a\uff0c\u4f46\u5c3d\u53ef\u80fd\u5c11\u91cd\u590d .*?x \u53d6\u524d\u9762\u4efb\u610f\u957f\u5ea6\u7684\u5b57\u7b26\uff0c\u76f4\u5230\u4e00\u4e2ax\u51fa\u73b0","title":"3. \u8d2a\u5a6a\u6a21\u5f0f\u4e0e\u975e\u8d2a\u5a6a\u6a21\u5f0f"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/01-%E5%86%85%E7%BD%AE%E6%A8%A1%E5%9D%97/#collection","text":"\u5728\u5185\u7f6e\u6570\u636e\u7c7b\u578b\uff08dict\u3001list\u3001set\u3001tuple\uff09\u7684\u57fa\u7840\u4e0a\uff0ccollections\u6a21\u5757\u8fd8\u63d0\u4f9b\u4e86\u51e0\u4e2a\u989d\u5916\u7684\u6570\u636e\u7c7b\u578b\uff1aCounter\u3001deque\u3001defaultdict\u3001namedtuple\u548cOrderedDict\u7b49\u3002 namedtuple: \u751f\u6210\u53ef\u4ee5\u4f7f\u7528\u540d\u5b57\u6765\u8bbf\u95ee\u5143\u7d20\u5185\u5bb9\u7684tuple deque: \u53cc\u7aef\u961f\u5217\uff0c\u53ef\u4ee5\u5feb\u901f\u7684\u4ece\u53e6\u5916\u4e00\u4fa7\u8ffd\u52a0\u548c\u63a8\u51fa\u5bf9\u8c61 Counter: \u8ba1\u6570\u5668\uff0c\u4e3b\u8981\u7528\u6765\u8ba1\u6570 OrderedDict: \u6709\u5e8f\u5b57\u5178\uff0cpython3.6\u540e\u81ea\u52a8\u6709\u5e8f defaultdict: \u5e26\u6709\u9ed8\u8ba4\u503c\u7684\u5b57\u5178","title":"\u4e94\u3001collection\u6a21\u5757"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/01-%E5%86%85%E7%BD%AE%E6%A8%A1%E5%9D%97/#1-namedtuple","text":"1 2 3 4 5 >>> from collections import namedtuple >>> Point = namedtuple ( 'Point' , [ 'x' , 'y' ]) >>> p = Point ( 1 , 2 ) >>> p . x >>> p . y","title":"1. namedtuple"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/01-%E5%86%85%E7%BD%AE%E6%A8%A1%E5%9D%97/#2-deque","text":"\u4f7f\u7528list\u5b58\u50a8\u6570\u636e\u65f6\uff0c\u6309\u7d22\u5f15\u8bbf\u95ee\u5143\u7d20\u5f88\u5feb\uff0c\u4f46\u662f\u63d2\u5165\u548c\u5220\u9664\u5143\u7d20\u5c31\u5f88\u6162\u4e86\uff0c\u56e0\u4e3alist\u662f\u7ebf\u6027\u5b58\u50a8\uff0c\u6570\u636e\u91cf\u5927\u7684\u65f6\u5019\uff0c\u63d2\u5165\u548c\u5220\u9664\u6548\u7387\u5f88\u4f4e\u3002 deque\u662f\u4e3a\u4e86\u9ad8\u6548\u5b9e\u73b0\u63d2\u5165\u548c\u5220\u9664\u64cd\u4f5c\u7684\u53cc\u5411\u5217\u8868\uff0c\u9002\u5408\u7528\u4e8e\u961f\u5217\u548c\u6808\uff1a 1 2 3 4 5 6 >>> from collections import deque >>> q = deque ([ 'a' , 'b' , 'c' ]) >>> q . append ( 'x' ) >>> q . appendleft ( 'y' ) >>> q deque ([ 'y' , 'a' , 'b' , 'c' , 'x' ])","title":"2. deque"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/01-%E5%86%85%E7%BD%AE%E6%A8%A1%E5%9D%97/#3-ordereddict","text":"\u4f7f\u7528dict\u65f6\uff0cKey\u662f\u65e0\u5e8f\u7684\u3002\u5728\u5bf9dict\u505a\u8fed\u4ee3\u65f6\uff0c\u6211\u4eec\u65e0\u6cd5\u786e\u5b9aKey\u7684\u987a\u5e8f\u3002 \u5982\u679c\u8981\u4fdd\u6301Key\u7684\u987a\u5e8f\uff0c\u53ef\u4ee5\u7528 OrderedDict \uff1a 1 2 3 4 5 6 7 >>> from collections import OrderedDict >>> d = dict ([( 'a' , 1 ), ( 'b' , 2 ), ( 'c' , 3 )]) >>> d # dict\u7684Key\u662f\u65e0\u5e8f\u7684 { 'a' : 1 , 'c' : 3 , 'b' : 2 } >>> od = OrderedDict ([( 'a' , 1 ), ( 'b' , 2 ), ( 'c' , 3 )]) >>> od # OrderedDict\u7684Key\u662f\u6709\u5e8f\u7684 OrderedDict ([( 'a' , 1 ), ( 'b' , 2 ), ( 'c' , 3 )])","title":"3. OrderedDict"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/01-%E5%86%85%E7%BD%AE%E6%A8%A1%E5%9D%97/#random","text":"\u65b9\u6cd5 \u529f\u80fd random.random() \u83b7\u53d6[0.0,1.0)]\u8303\u56f4\u5185\u7684\u6d6e\u70b9\u6570 random.ranint(a,b) \u83b7\u53d6[a,b)\u8303\u56f4\u5185\u7684\u4e00\u4e2a\u6574\u6570 random.uniform(a,b) \u83b7\u53d6[a,b)\u8303\u56f4\u5185\u7684\u4e00\u4e2a\u6d6e\u70b9\u6570 random.shuffle(x) \u628a\u53c2\u6570\u6307\u5b9a\u7684\u6570\u636e\u4e2d\u7684\u5143\u7d20\u6253\u4e71\uff0c\u53c2\u6570\u5fc5\u987b\u662f\u4e00\u4e2a\u53ef\u53d8\u7684\u6570\u636e\u7c7b\u578b random.sample(x,k) \u4ecex\u4e2d\u968f\u673a\u62bd\u53d6k\u4e2a\u6570\u636e","title":"\u516d\u3001random\u6a21\u5757"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/01-%E5%86%85%E7%BD%AE%E6%A8%A1%E5%9D%97/#shutil","text":"","title":"\u4e03\u3001shutil\u6a21\u5757"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/01-%E5%86%85%E7%BD%AE%E6%A8%A1%E5%9D%97/#1_4","text":"1 shutil . copy2 ( 'src' , 'dest' )","title":"1. \u62f7\u8d1d\u6587\u4ef6"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/01-%E5%86%85%E7%BD%AE%E6%A8%A1%E5%9D%97/#2_2","text":"1 shutil . copytree ( \"\u539f\u76ee\u5f55\" , \"\u65b0\u76ee\u5f55\" , ignore = shutil . ignore_patterns ( \"*.pyc\" ))","title":"2. \u62f7\u8d1d\u76ee\u5f55"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/01-%E5%86%85%E7%BD%AE%E6%A8%A1%E5%9D%97/#3_2","text":"1 shutil . rmtree ( \"temp\" , ignore_errors = True )","title":"3. \u5220\u9664\u76ee\u5f55"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/01-%E5%86%85%E7%BD%AE%E6%A8%A1%E5%9D%97/#4","text":"1 shutil . move ( \"src\" , \"dest\" , copy_function = shutil . copy2 )","title":"4. \u79fb\u52a8\u6587\u4ef6/\u76ee\u5f55"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/01-%E5%86%85%E7%BD%AE%E6%A8%A1%E5%9D%97/#5","text":"1 2 total , used , free = shutil . disk_usage ( \".\" ) print ( \"\u5f53\u524d\u78c1\u76d8\u5171: %i GB, \u5df2\u4f7f\u7528: %i GB, \u5269\u4f59: %i GB\" % ( total / 1073741824 , used / 1073741824 , free / 1073741824 ))","title":"5. \u83b7\u53d6\u78c1\u76d8\u4f7f\u7528\u7a7a\u95f4"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/01-%E5%86%85%E7%BD%AE%E6%A8%A1%E5%9D%97/#6","text":"1 shutil . make_archive ( '\u538b\u7f29\u6587\u4ef6\u5939\u7684\u540d\u5b57' , 'zip' , '\u5f85\u538b\u7f29\u7684\u6587\u4ef6\u5939\u8def\u5f84' )","title":"6. \u538b\u7f29\u6587\u4ef6"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/01-%E5%86%85%E7%BD%AE%E6%A8%A1%E5%9D%97/#7","text":"1 shutil . unpack_archive ( 'zip\u6587\u4ef6\u7684\u8def\u5f84.zip' \uff0c '\u89e3\u538b\u5230\u76ee\u7684\u6587\u4ef6\u5939\u8def\u5f84' )","title":"7. \u89e3\u538b\u6587\u4ef6"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/01-%E5%86%85%E7%BD%AE%E6%A8%A1%E5%9D%97/#argparse","text":"1 2 3 import argparse parser = argparse . ArgumentParser () parser . parse_args () \u8fd0\u884c\u7ed3\u679c 1 2 3 4 5 $ python3 test.py --help usage: test.py [ -h ] optional arguments: -h, --help show this help message and exit","title":"\u516b\u3001argparse\u6a21\u5757"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/01-%E5%86%85%E7%BD%AE%E6%A8%A1%E5%9D%97/#1_5","text":"1 2 3 4 5 import argparse parser = argparse . ArgumentParser () parser . add_argument ( \"address\" , help = \"host ip address\" ) # address \u5c31\u662f\u4f4d\u7f6e\u53c2\u6570\uff0c\u76f8\u5f53\u4e8e\u4e00\u4e2a\u53d8\u91cf\uff0c\u5728\u547d\u4ee4\u4e2d\u5c5e\u4e8e\u7684\u53c2\u6570\u4f1a\u4fdd\u5b58\u5728\u8fd9\u4e2a\"\u53d8\u91cf\u4e2d\" args = parser . parse_args () print ( args . address ) # \u6253\u5370\u53c2\u6570 1 2 3 4 5 6 7 8 9 10 11 $ python3 test.py --help usage: test.py [ -h ] address positional arguments: # \u4f4d\u7f6e\u53c2\u6570 address host ip address optional arguments: -h, --help show this help message and exit $ python3 test.py 127 .0.0.1 127 .0.0.1","title":"1. \u4f4d\u7f6e\u53c2\u6570"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/01-%E5%86%85%E7%BD%AE%E6%A8%A1%E5%9D%97/#2_3","text":"","title":"2. \u53ef\u9009\u53c2\u6570"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/01-%E5%86%85%E7%BD%AE%E6%A8%A1%E5%9D%97/#21","text":"1 2 3 4 5 6 7 import argparse parser = argparse . ArgumentParser () parser . add_argument ( \"--install\" , help = \"install service\" ) args = parser . parse_args () print ( args . install ) # \u6253\u5370\u53c2\u6570\u7684\u503c\uff0c \u53c2\u6570\u540e\u9762\u5fc5\u987b\u6709\u4e00\u4e2a\u503c # \u5982\u679c\u4e0d\u9700\u8981\u503c # parser.add_argument(\"--install\", help=\"install service\", action=\"store_true\") 1 2 3 4 5 6 7 8 9 $ python3 test.py --help usage: test.py [ -h ] [ --install INSTALL ] optional arguments: -h, --help show this help message and exit --install INSTALL install service $ python3 test.py --install http http","title":"2.1 \u957f\u9009\u9879"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/01-%E5%86%85%E7%BD%AE%E6%A8%A1%E5%9D%97/#22","text":"1 2 3 4 5 import argparse parser = argparse . ArgumentParser () parser . add_argument ( \"-i\" , \"--install\" , help = \"install service\" ) args = parser . parse_args () print ( args . install ) 1 2 3 4 5 6 7 8 9 10 11 $ python3 test.py --help usage: test.py [ -h ] [ -i INSTALL ] optional arguments: -h, --help show this help message and exit -i INSTALL, --install INSTALL install service $ python3 test.py -i http http $ python3 test.py --install http http","title":"2.2 \u77ed\u9009\u9879"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/01-%E5%86%85%E7%BD%AE%E6%A8%A1%E5%9D%97/#23","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 import argparse parser = argparse . ArgumentParser ( description = \"upgrade or rollback service\" ) group = parser . add_mutually_exclusive_group () group . add_argument ( \"-u\" , \"--upgrade\" , help = \"upgrade service\" , metavar = \"service\" ) group . add_argument ( \"-r\" , \"--rollback\" , help = \"rollback service\" , metavar = \"service\" ) args = parser . parse_args () def upgrade ( service ): print ( \"upgrade {0}\" . format ( service )) def rollback ( service ): print ( \"rollback {0}\" . format ( service )) if args . upgrade : upgrade ( args . upgrade ) if args . rollback : rollback ( args . rollback ) 1 2 3 4 5 6 7 8 9 10 11 $ python3 test.py --help usage: test.py [ -h ] [ -u service | -r service ] upgrade or rollback service optional arguments: -h, --help show this help message and exit -u service, --upgrade service upgrade service -r service, --rollback service rollback service","title":"2.3 \u51b2\u7a81\u9009\u9879"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/01-%E5%86%85%E7%BD%AE%E6%A8%A1%E5%9D%97/#_2","text":"\u628a\u4e00\u4e2a\u6570\u636e\u7c7b\u578b\u8f6c\u6362\u6210\u5b57\u7b26\u4e32\u3001bytes\u7c7b\u578b\u7684\u8fc7\u7a0b\u3002 \u5e94\u7528\u573a\u666f\uff1a \u628a\u4e00\u4e2a\u6570\u636e\u7c7b\u578b\u5b58\u50a8\u5230\u6587\u4ef6\u4e2d\u7684\u65f6\u5019 \u628a\u4e00\u4e2a\u6570\u636e\u7c7b\u578b\u901a\u8fc7\u7f51\u7edc\u4f20\u8f93\u7684\u65f6\u5019","title":"\u4e5d\u3001\u5e8f\u5217\u5316"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/01-%E5%86%85%E7%BD%AE%E6%A8%A1%E5%9D%97/#1-json","text":"JSON(JavaScript Object Notation) json\u7684\u4f18\u70b9\uff1a \u6240\u6709\u7684\u8bed\u8a00\u90fd\u901a\u7528 json\u7684\u7f3a\u70b9\uff1a \u53ea\u652f\u6301\u975e\u5e38\u5c11\u7684\u6570\u636e\u7c7b\u578b \u5bf9\u6570\u636e\u7c7b\u578b\u7684\u7ea6\u675f\u5f88\u82db\u523b \u5b57\u5178\u7684key\u5fc5\u987b\u662f\u5b57\u7b26\u4e32 \u53ea\u652f\u6301\u6570\u5b57\u3001\u5b57\u7b26\u4e32\u3001\u5217\u8868\u3001\u5b57\u5178 json\u51fd\u6570 \u51fd\u6570 \u63cf\u8ff0 json.dumps \u5c06 Python \u5bf9\u8c61\u7f16\u7801\u6210 JSON \u5b57\u7b26\u4e32 json.loads \u5c06\u5df2\u7f16\u7801\u7684 JSON \u5b57\u7b26\u4e32\u89e3\u7801\u4e3a Python \u5bf9\u8c61 json.dump \u5c06 Python \u5bf9\u8c61\u7f16\u7801\u4fdd\u5b58\u5230\u6587\u4ef6\u4e2d json.load \u4ece\u6587\u4ef6\u4e2d\u5c06\u5df2\u7f16\u7801\u7684 JSON \u5b57\u7b26\u4e32\u89e3\u7801\u4e3a Python \u5bf9\u8c61\uff0c\u53ea\u80fdload\u4e00\u6b21 \u5e38\u7528\u7684\u53c2\u6570 1 2 3 4 sort_keys = True \u6309 ASCII\u6392\u5e8f indent = 4 \u7f29\u8fdb separators = ( ',' , ':' ) ensure_ascii = False","title":"1. json\u6a21\u5757"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/01-%E5%86%85%E7%BD%AE%E6%A8%A1%E5%9D%97/#11-dumpsloads","text":"1 2 3 4 5 6 7 8 9 10 import json users = { \"username\" : '\u5f20\u4e09' , \"password\" : '123456' } res = json . dumps ( users , ensure_ascii = False ) print ( res , type ( res )) user1 = json . loads ( res ) print ( user1 , type ( user1 )) # \u6267\u884c\u7ed3\u679c { \"username\" : \"\u5f20\u4e09\" , \"password\" : \"123456\" } < class ' str '> { 'username' : '\u5f20\u4e09' , 'password' : '123456' } < class ' dict '>","title":"1.1 dumps\u548cloads"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/01-%E5%86%85%E7%BD%AE%E6%A8%A1%E5%9D%97/#12-dumpload","text":"1 2 3 4 5 6 7 8 9 import json users = { \"username\" : '\u5f20\u4e09' , \"password\" : '123456' } with open ( 'user.txt' , 'w' ) as f : json . dump ( users , f , ensure_ascii = False ) with open ( 'user.txt' , 'r' ) as f : user = json . load ( f ) print ( user )","title":"1.2 dump\u548cload"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/01-%E5%86%85%E7%BD%AE%E6%A8%A1%E5%9D%97/#2-pickle","text":"\u53ef\u4ee5\u5b58\u50a8\u7684\u6570\u636e\u7c7b\u578b \u6240\u6709python\u652f\u6301\u7684\u539f\u751f\u7c7b\u578b\uff1a\u5e03\u5c14\u503c\uff0c\u6574\u6570\uff0c\u6d6e\u70b9\u6570\uff0c\u590d\u6570\uff0c\u5b57\u7b26\u4e32\uff0c\u5b57\u8282\uff0cNone\u3002 \u7531\u4efb\u4f55\u539f\u751f\u7c7b\u578b\u7ec4\u6210\u7684\u5217\u8868\uff0c\u5143\u7ec4\uff0c\u5b57\u5178\u548c\u96c6\u5408\u3002 \u51fd\u6570\uff0c\u7c7b\uff0c\u7c7b\u7684\u5b9e\u4f8b","title":"2. pickle"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/","text":"\u57fa\u672c\u6570\u636e\u7c7b\u578b \u00b6 \u4e00\u3001\u6570\u503c \u00b6 1. \u6570\u503c\u7c7b\u578b \u00b6 python\u6570\u503c\u7c7b\u578b \u6574\u6570 \u6d6e\u70b9\u6570 \u590d\u6570 \u5c0f\u6570 \u5206\u6570 \u96c6\u5408 \u5e03\u5c14\u503c True \u548c False \u5185\u7f6e\u51fd\u6570\u548c\u6a21\u5757\uff1around\u3001math\u3001random 2. \u6570\u503c\u8fd0\u7b97 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 >>> print ( 2 + 3 ) # \u52a0\u6cd5 5 >>> print ( 8 - 3 ) # \u51cf\u6cd5 5 >>> print ( 2 * 3 ) # \u4e58\u6cd5 6 >>> print ( 5 / 3 ) # \u771f\u9664 1.6666666666666667 >>> print ( 5 // 3 ) # \u5411\u4e0b\u53d6\u6574\u9664\u6cd5\uff0c\u622a\u9664\u6389\u4f59\u6570 1 >>> print ( 5 ** 2 ) # \u5e42\u8fd0\u7b97 25 >>> print ( 5 % 2 ) # \u53d6\u4f59 1 3. \u8fdb\u5236 \u00b6 3.1 \u8fdb\u5236\u8868\u793a \u00b6 1 2 3 4 5 6 >>> 0b11111111 # \u4e8c\u8fdb\u5236 255 >>> 0 o377 # \u516b\u8fdb\u5236 255 >>> 0xFF # \u5341\u516d\u8fdb\u5236 255 3.2 \u8fdb\u5236\u8f6c\u6362 \u00b6 1 2 3 4 5 6 >>> bin ( 255 ) # \u5341\u8fdb\u5236\u8f6c\u4e8c\u8fdb\u5236 '0b11111111' >>> oct ( 255 ) # \u5341\u8fdb\u5236\u8f6c\u516b\u8fdb\u5236 '0o377' >>> hex ( 255 ) # \u5341\u8fdb\u5236\u8f6c\u5341\u516d\u8fdb\u5236 '0xff' 4. \u5c0f\u6570 \u00b6 1 2 3 # \u5728Windows\u5e73\u53f0Python 3.6.8\u4e2d\u8ba1\u7b97\u7684\u7ed3\u679c\uff0c\u6d6e\u70b9\u6570\u7684\u7ed3\u679c\u5e76\u4e0d\u7cbe\u786e >>> print ( 0.1 + 0.1 + 0.1 - 0 , 3 ) 0.30000000000000004 3 \u5982\u679c\u8981\u7cbe\u786e\u8ba1\u7b97\u5c0f\u6570\uff0c\u9700\u8981\u4f7f\u7528\u5c0f\u6570\u5bf9\u8c61 1 2 3 4 5 6 >>> from decimal import Decimal >>> print ( Decimal ( '0.1' ) + Decimal ( '0.1' ) + Decimal ( '0.1' ) - Decimal ( '0.3' )) 0.0 # \u6ce8\u610f*:\u8981\u5728\u5c0f\u6570\u4e0a\u52a0\u5f15\u53f7\uff0c\u5426\u5219\u8f93\u51fa\u7684\u7ed3\u679c\u662f\u4e0b\u9762\u7684\u503c # >>> print(Decimal(0.1) + Decimal(0.1) + Decimal(0.1) - Decimal(0.3)) # 2.775557561565156540423631668E-17 5. \u5206\u6570 \u00b6 1 2 3 4 >>> from fractions import Fraction >>> x = Fraction ( 6 , 8 ) >>> print ( x ) 3 / 4 6. \u6574\u6570\u6d6e\u70b9\u6570\u88c5\u6362 \u00b6 1 2 3 4 >>> int ( 3.14 ) 3 >>> float ( 3 ) 3.0 \u4e8c\u3001Python\u5b57\u7b26\u4e32 \u00b6 \u5b57\u7b26\u4e32\u5c31\u662f\u4e00\u7cfb\u5217\u5b57\u7b26\uff0c\u5728Python\u4e2d\uff0c\u7528\u5f15\u53f7\u62ec\u8d77\u6765\u7684\u90fd\u662f\u5b57\u7b26\u4e32\uff0c\u5f15\u53f7\u53ef\u4ee5\u662f\u5355\u5f15\u53f7('string')\u4e5f\u53ef\u4ee5\u662f\u53cc\u5f15\u53f7(\"string\") 1. \u5b57\u7b26\u4e32\u7684\u7279\u70b9 \u00b6 \u5b57\u7b26\u4e32\u662f\u5355\u4e2a\u5b57\u7b26\u7684\u5b57\u7b26\u4e32\u5e8f\u5217\uff0c\u662f\u6709\u5e8f\u7684 \u4e0d\u53ef\u53d8\u6027\uff0c\u4e0d\u53ef\u4ee5\u5bf9\u539f\u59cb\u7684\u5b57\u7b26\u4e32\u8fdb\u884c\u6539\u53d8\u3002 2. \u5b57\u7b26\u4e32\u64cd\u4f5c \u00b6 2.1 \u7d22\u5f15 \u00b6 \u5b57\u7b26\u4e32\u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26\u4e0b\u6807\u4e3a0\u3002 1 string = \"Life is short, You need Python\" \u6b63\u7d22\u5f15 1 2 3 In [ 1 ]: string = \"Life is short, You need Python\" In [ 2 ]: string [ 2 ] Out [ 2 ]: 'f' \u8d1f\u7d22\u5f15 1 2 3 In [ 1 ]: string = \"Life is short, You need Python\" In [ 2 ]: string [ - 6 ] Out [ 2 ]: 'P' 2.2 \u5207\u7247 \u00b6 \u5207\u7247\u7684\u683c\u5f0f: string[start,end] 1 2 3 4 In [ 1 ]: string = \"Life is short, You need Python\" # \u8303\u56f4\u662f[5,7)\u4e0d\u5305\u542b\u7d22\u5f15\u4e3a7\u7684\u5b57\u7b26 In [ 2 ]: string [ 5 : 7 ] Out [ 3 ]: 'is' \u5f53\u7b2c\u4e00\u4e2a\u7d22\u5f15\u503c\u7f3a\u7701\u65f6\uff0c\u4ece0\u5f00\u59cb\u3002 1 2 3 4 In [ 1 ]: string = \"Life is short, You need Python\" In [ 6 ]: string [: 7 ] Out [ 6 ]: 'Life is' \u5207\u7247\u52a0\u6b65\u957f 1 2 3 4 In [ 1 ]: s = '1234567890' In [ 2 ]: s [ 2 : 8 : 2 ] Out [ 2 ]: '357' 2.3 \u62fc\u63a5 \u00b6 1 2 3 4 >>> s1 = 'hello ' >>> s2 = 'world' >>> s1 + s2 'hello world' 2.4 \u91cd\u590d \u00b6 1 2 >>> print ( \"hello\" * 5 ) hellohellohellohellohello 2.5 \u957f\u5ea6 \u00b6 1 2 >>> len ( 'hello' ) 5 3. \u5b57\u7b26\u4e32\u65b9\u6cd5 \u00b6 3.1 \u5b57\u7b26\u4e32\u5927\u5c0f\u5199\u8f6c\u6362 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 >>> # \u5b57\u7b26\u4e32\u9996\u5b57\u7b26\u5927\u5199 ... print ( \"hello world\" . capitalize ()) Hello world >>> # \u5927\u5c0f\u5199\u7ffb\u8f6c ... print ( \"hello WORLD\" . swapcase ()) HELLO world >>> # \u5c06\u5b57\u7b26\u4e32\u53d8\u4e3a\u6807\u9898 ... print ( \"hello WORLD\" . title ()) Hello World >>> # \u5c06\u5b57\u7b26\u4e32\u8f6c\u4e3a\u5927\u5199 ... print ( \"hello world\" . upper ()) HELLO WORLD >>> # \u628a\u5b57\u7b26\u4e32\u8f6c\u4e3a\u5c0f\u5199 ... print ( \"HELLO WORLD\" . lower ()) hello world >>> # \u7ffb\u8f6c\u5b57\u7b26\u4e32\u4e2d\u7684\u5927\u5c0f\u5199 ... print ( \"hello WORLD\" . swapcase ()) HELLO world 3.2 \u5b57\u7b26\u4e32\u5206\u5272 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 >>> # \u4ee5\u67d0\u4e2a\u5143\u7d20\u4e3a\u5206\u5272\u70b9\uff0c\u5c06\u5b57\u7b26\u4e32\u5206\u4e3a3\u90e8\u5206,\u4ece\u5de6\u5f80\u53f3\u627e\u5230\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u4e3a\u5206\u5272\u70b9 ... print ( 'helloworld' . partition ( 'o' )) ( 'hell' , 'o' , 'world' ) >>> # \u4ee5\u67d0\u4e2a\u5143\u7d20\u4e3a\u5206\u5272\u70b9\uff0c\u5c06\u5b57\u7b26\u4e32\u5206\u4e3a3\u90e8\u5206\uff0c\u4ece\u53f3\u5f80\u5de6\u627e\u5230\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u4e3a\u5206\u5272\u70b9 ... print ( 'helloworld' . rpartition ( 'o' )) ( 'hellow' , 'o' , 'rld' ) >>> # \u66ff\u6362\u539f\u5b57\u7b26\u4e32\u4e2d\u7684\u5143\u7d20,\u9ed8\u8ba4\u5168\u90e8\u66ff\u6362\uff0c\u53ef\u4ee5\u6307\u5b9a\u66ff\u6362\u51e0\u4e2a\uff08\u4ece\u5de6\u5f80\u53f3\u6570\uff09 ... print ( \"hello world\" . replace ( 'o' , 'a' , 1 )) hella world >>> # \u4ee5\u67d0\u4e2a\u5143\u7d20\u4e3a\u5206\u5272\u70b9\uff0c\u5c06\u5b57\u7b26\u4e32\u5206\u5272,\u4ece\u5de6\u5f80\u53f3\u5206\u5272n\u6b21 ... print ( \"hello world\" . split ( 'o' , 1 )) [ 'hell' , ' world' ] >>> # \u4ee5\u67d0\u4e2a\u5143\u7d20\u4e3a\u5206\u5272\u70b9\uff0c\u5c06\u5b57\u7b26\u4e32\u5206\u5272,\u4ece\u53f3\u5f80\u5de6\u5206\u5272n\u6b21 ... print ( \"hello world\" . rsplit ( 'o' , 1 )) [ 'hello w' , 'rld' ] >>> # \u6309\u7167\u884c('\\r', '\\r\\n', \\n')\u5206\u9694\uff0c\u8fd4\u56de\u4e00\u4e2a\u5305\u542b\u5404\u884c\u4f5c\u4e3a\u5143\u7d20\u7684\u5217\u8868\uff0c\u5982\u679c\u53c2\u6570 keepends \u4e3a False\uff0c\u4e0d\u5305\u542b\u6362\u884c\u7b26\uff0c\u5982\u679c\u4e3a True\uff0c\u5219\u4fdd\u7559\u6362\u884c\u7b26\u3002 ... print ( 'hello \\n world' . splitlines ( True )) [ 'hello \\n ' , 'world' ] 3.3 \u5b57\u7b26\u4e32\u67e5\u627e \u00b6 1 2 3 4 5 6 7 8 9 >>> # \u7edf\u8ba1\u67d0\u4e2a\u5b57\u7b26\u4e32\u4ece\u7d22\u5f15n\u5230y\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u7f3a\u7701\u4e3a\u5728\u6574\u4e2a\u5b57\u7b26\u4e32\u4e2d\u67e5\u627e ... print ( \"hello world\" . count ( 'o' , 7 , 10 )) >>> # \u5728\u7d22\u5f15[n , y)\u4e4b\u95f4\u67e5\u627e\u5143\u7d20\uff0c\u7f3a\u7701\u4e3a[:]\u8fd4\u56de\u5143\u7d20\u7684\u7d22\u5f15\uff0c\u5982\u679c\u6ca1\u627e\u5230\u8fd4\u56de-1 ... print ( \"hello world\" . find ( 'e' )) >>> print ( \"hello world\" . find ( 'o' , 0 , 2 )) - 1 >>> # \u5728[n, y)\u4e4b\u95f4\u627e\u5143\u7d20\u7684\u7d22\u5f15\u503c\uff0c\u6ca1\u627e\u5230\u4f1a\u62a5\u9519 ... print ( \"hello world\" . index ( 'o' )) >>> print ( \"hello world\" . index ( 'e' , 0 , 5 )) 3.4 \u5b57\u7b26\u4e32\u5224\u65ad \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 >>> # \u5224\u65ad\u5b57\u7b26\u4e32\u662f\u5426\u4ee5\u67d0\u4e2a\u5143\u7d20\u5f00\u59cb ... print ( 'helloworld' . startswith ( 'h' )) True >>> # \u5224\u65ad\u5b57\u7b26\u4e32\u7684\u7684\u4ece[n\uff0cy)\u7684\u7d22\u5f15\u4e4b\u95f4\u662f\u5426\u4ee5\u67d0\u4e2a\u5b57\u7b26\u7ed3\u5c3e,\u8fd4\u56de\u503c\u4e3a\u5e03\u5c14\u503c ... print ( \"hello world\" . endswith ( 'e' , 0 , 2 )) True >>> # \u5224\u65ad\u662f\u5426\u662f\u53ea\u6709\u6570\u5b57\u6216\u5b57\u6bcd ... print ( 'abc123' . isalnum ()) True >>> # \u5224\u65ad\u662f\u5426\u53ea\u542b\u6709\u5b57\u6bcd ... print ( 'abc' . isalpha ()) True >>> # \u5224\u65ad\u5b57\u6bcd\u662f\u5426\u90fd\u662f\u5c0f\u5199 ... print ( \"Hello\" . islower ()) False >>> # \u5224\u65ad\u5b57\u7b26\u662f\u4e0d\u662f\u7a7a\u683c ... print ( \" \" . isspace ()) True >>> # \u5224\u65ad\u662f\u4e0d\u662f\u5b57\u7b26\u4e32\u662f\u4e0d\u662f\u6807\u9898(\u5355\u8bcd\u9996\u5b57\u6bcd\u662f\u4e0d\u662f\u5927\u5199) ... print ( \"Hello World\" . istitle ()) True 3.5 \u5b57\u7b26\u4e32\u683c\u5f0f\u5316 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 >>> # \u5b57\u7b26\u4e32\u5c45\u4e2d\uff0c\u89c4\u5b9a\u5b57\u7b26\u4e32\u7684\u603b\u957f\u5ea6\uff0c\u4e0d\u591f\u7528\u5176\u4ed6\u5b57\u7b26\u8865\u9f50\uff0c\u9ed8\u8ba4\u662f\u7a7a\u683c ... print ( \"hello world\" . center ( 20 , \"#\" )) ####hello world##### >>> # \u628a\u5b57\u7b26\u4e32\u4e2d\u7684\\t\u66ff\u6362\u4e3an\u4e2a\u7a7a\u683c ... print ( \"hello \\t world\" . expandtabs ( tabsize = 20 )) hello world >>> print ( '#' . join ( \"hello world\" )) h #e#l#l#o# #w#o#r#l#d >>> # \u89c4\u5b9a\u8f93\u51fa\u5b57\u7b26\u7684\u957f\u5ea6\uff0c\u5e76\u4e14\u5de6\u5bf9\u9f50,\u4e0d\u8db3\u90e8\u5206\u7528\u6307\u5b9a\u5b57\u7b26\u8865\u9f50 ... print ( \"hello world\" . ljust ( 20 , \"#\" )) hello world ######### >>> # \u89c4\u5b9a\u8f93\u51fa\u5b57\u7b26\u7684\u957f\u5ea6\uff0c\u5e76\u4e14\u53f3\u5bf9\u9f50,\u4e0d\u8db3\u90e8\u5206\u7528\u6307\u5b9a\u5b57\u7b26\u8865\u9f50 ... print ( \"hello world\" . rjust ( 20 , \"#\" )) #########hello world >>> # \u53bb\u9664\u5b57\u7b26\u4e32\u5de6\u8fb9\u7684\u7684\u7a7a\u683c ... print ( ' hello' . lstrip ()) hello >>> # \u53bb\u9664\u5b57\u7b26\u4e32\u53f3\u8fb9\u7684\u7684\u7a7a\u683c ... print ( 'hello ' . rstrip ()) hello >>> # \u53bb\u9664\u5b57\u7b26\u4e32\u4e24\u8fb9\u7684\u7684\u7a7a\u683c ... print ( ' hello ' . strip ()) hello >>> # \u6307\u5b9a\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\uff0c\u4e0d\u591f\u5728\u524d\u9762\u88650 ... print ( \"123\" . zfill ( 5 )) >>> # \u5b57\u7b26\u4e32\u7684\u62fc\u63a5 ... print ( 'hello ' + 'world' ) hello world >>> # \u5b57\u7b26\u4e32\u91cd\u590d ... print ( 'hello ' * 3 ) hello hello hello 3.6 \u5b57\u7b26\u4e32\u7684\u8d4b\u503c \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 >>> s = 'hello world' # \u5355\u5f15\u53f7 >>> print ( s ) hello world >>> s = \"hello world\" # \u53cc\u5f15\u53f7 >>> print ( s ) hello world >>> s = \"\"\"hello # \u4e09\u5f15\u53f7 ... world ... !!!\"\"\" >>> print ( s ) hello world !!! >>> s = 'hello \\t world' # \u8f6c\u4e49\u5e8f\u5217 >>> print ( s ) hello world >>> s = r 'hello\\tworld' # \u539f\u59cb\u5b57\u7b26\u4e32\uff0c\u4e0d\u8fdb\u884c\u8f6c\u4e49 >>> print ( s ) hello \\ tworld 3.7 \u5b57\u7b26\u4e32\u8f6c\u6362 \u00b6 1 2 3 4 5 6 7 8 9 10 >>> x = 123 >>> x = str ( x ) # \u628a\u4e00\u4e32\u5b57\u7b26\u8f6c\u4e3a\u5b57\u7b26\u4e32 >>> print ( x ) 123 >>> print ( type ( x )) < class ' str '> >>> print ( chr ( 65 )) # ASCII\u503c\u8f6c\u5b57\u7b26 A >>> print ( ord ( 'B' )) # \u5b57\u7b26\u8f6cASCII\u503c 66 4. \u5b57\u7b26\u4e32\u683c\u5f0f\u5316 \u00b6 4.1 \u683c\u5f0f\u5316\u8868\u8fbe\u5f0f \u00b6 4.1.1 \u57fa\u4e8eC\u8bed\u8a00\u7684 printf \u6a21\u578b \u00b6 1 2 3 >>> name = \"Kobe\" >>> print ( ' %s is %d years old.' % ( name , 41 )) Kobe is 41 years old . 4.1.2 \u57fa\u4e8e\u5b57\u5178\u7684\u683c\u5f0f\u5316\u8868\u8fbe\u5f0f \u00b6 1 2 >>> print ( ' %(name)s is %(age)d years old.' % { 'name' : 'Kobe' , 'age' : 41 }) Kobe is 41 years old . 4.2 \u683c\u5f0f\u5316\u65b9\u6cd5\u8c03\u7528 \u00b6 4.2.1 \u901a\u8fc7\u76f8\u5bf9\u4f4d\u7f6e\u66ff\u6362\u76ee\u6807 \u00b6 1 2 >>> print ( '{} is {} years old.' . format ( 'Kobe' , 41 )) Kobe is 41 years old . 4.2.2 \u901a\u8fc7\u4f4d\u7f6e\u66ff\u6362\u76ee\u6807 \u00b6 1 2 3 4 >>> print ( '{0} is {1} years old.' . format ( 'Kobe' , 41 )) Kobe is 41 years old . >>> print ( '{1} is {0} years old.' . format ( 41 , 'Kobe' )) Kobe is 41 years old . 4.2.3 \u901a\u8fc7\u5173\u952e\u5b57\u66ff\u6362\u76ee\u6807 \u00b6 1 2 >>> print ( '{name} is {age} years old.' . format ( name = 'Kobe' , age = 41 )) Kobe is 41 years old . \u4e09\u3001\u5217\u8868 \u00b6 1. \u5217\u8868\u7684\u7279\u70b9 \u00b6 \u4efb\u610f\u7c7b\u578b\u7684\u5bf9\u8c61\u7684\u4f4d\u7f6e\u76f8\u5173\u7684\u6709\u5e8f\u96c6\u5408 \u5927\u5c0f\u53ef\u53d8\uff0c\u53ef\u4ee5\u4fee\u6539 \u652f\u6301\u4efb\u610f\u5d4c\u5957 2. \u5217\u8868\u64cd\u4f5c \u00b6 2.1 \u8ba1\u7b97\u5217\u8868\u957f\u5ea6 \u00b6 1 2 3 >>> l = [ 'Tom' , 'Bob' , 123 ,[ 'boy' , 'girl' ]] >>> len ( l ) 4 2.2 \u5217\u8868\u62fc\u63a5 \u00b6 1 2 >>> [ 1 , 2 , 3 ] + [ 4 , 5 , 6 ] [ 1 , 2 , 3 , 4 , 5 , 6 ] 2.3 \u5217\u8868\u91cd\u590d \u00b6 1 2 >>> [ 'hello' ] * 3 [ 'hello' , 'hello' , 'hello' ] 3. \u5217\u8868\u7d22\u5f15 \u00b6 1 2 3 4 5 6 >>> l [ - 1 ] # \u8d1f\u7d22\u5f15 [ 'boy' , 'girl' ] >>> l [ 2 ] # \u6b63\u7d22\u5f15 123 >>> l [ 3 ][ 1 ] # \u4e24\u6b21\u7d22\u5f15 'girl' 4. \u5217\u8868\u5207\u7247 \u00b6 1 2 3 4 5 6 7 8 >>> l [:] [ 'Tom' , 'Bob' , 123 , [ 'boy' , 'girl' ]] >>> l [ 1 : 3 ] [ 'Bob' , 123 ] >>> l [ - 2 : - 1 ] [ 123 ] >>> l [ - 2 :] [ 123 , [ 'boy' , 'girl' ]] 5. \u5217\u8868\u65b9\u6cd5 \u00b6 5.1 \u6dfb\u52a0 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 # \u5728\u5c3e\u90e8\u63d2\u5165\u4e00\u9879 >>> l = [ '\u5218\u5907' , '\u5173\u7fbd' , '\u5f20\u98de' ] >>> l . append ( '\u8bf8\u845b\u4eae' ) >>> l [ '\u5218\u5907' , '\u5173\u7fbd' , '\u5f20\u98de' , '\u8bf8\u845b\u4eae' ] # \u628a\u4e00\u4e2a\u5217\u8868\u6dfb\u52a0\u5230\u53e6\u4e00\u4e2a\u5217\u8868\u672b\u5c3e >>> L1 = [ '\u5218\u5907' , '\u5173\u7fbd' , '\u5f20\u98de' ] >>> L2 = [ '\u59dc\u7ef4' , '\u8bf8\u845b\u4eae' ] >>> L1 . extend ( L2 ) >>> L1 [ '\u5218\u5907' , '\u5173\u7fbd' , '\u5f20\u98de' , '\u59dc\u7ef4' , '\u8bf8\u845b\u4eae' ] # \u5728\u6307\u5b9a\u7d22\u5f15\u4f4d\u7f6e\u63d2\u5165\u5143\u7d20 >>> l [ '\u5218\u5907' , '\u5173\u7fbd' , '\u5f20\u98de' ] >>> l . insert ( 1 , '\u9a6c\u8d85' ) >>> l [ '\u5218\u5907' , '\u9a6c\u8d85' , '\u5173\u7fbd' , '\u5f20\u98de' ] 5.2 \u5220\u9664 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 # \u5220\u9664\u6240\u6709\u5143\u7d20 >>> l . clear () >>> l [] # \u6839\u636e\u7d22\u5f15\u5220\u9664\u5143\u7d20\u5e76\u6253\u5370\u5220\u9664\u7684\u5143\u7d20 >>> l [ '\u5218\u5907' , '\u9a6c\u8d85' , '\u5173\u7fbd' , '\u5f20\u98de' ] >>> l . pop () # \u65e0\u53c2\u6570\u5220\u9664\u6700\u540e\u4e00\u4e2a '\u5f20\u98de' >>> l [ '\u5218\u5907' , '\u9a6c\u8d85' , '\u5173\u7fbd' ] >>> l . pop ( 1 ) # \u6307\u5b9a\u7d22\u5f15\u5220\u9664 '\u9a6c\u8d85' >>> l [ '\u5218\u5907' , '\u5173\u7fbd' ] # \u5220\u9664\u6307\u5b9a\u5143\u7d20 >>> l = [ '\u5218\u5907' , '\u5173\u7fbd' , '\u5f20\u98de' ] >>> l . remove ( \"\u5173\u7fbd\" ) >>> l [ '\u5218\u5907' , '\u5f20\u98de' ] # \u4f7f\u7528del\u8bed\u53e5\u5220\u9664\u6307\u5b9a\u5143\u7d20 >>> l = [ '\u5218\u5907' , '\u5173\u7fbd' , '\u5f20\u98de' ] >>> del l [ 1 ] >>> l [ '\u5218\u5907' , '\u5f20\u98de' ] 5.3.\u62f7\u8d1d \u00b6 1 2 3 >>> l1 = l . copy () >>> l1 [ '\u5218\u5907' , '\u5173\u7fbd' , '\u5f20\u98de' ] 5.4 \u67e5\u627e \u00b6 1 2 3 4 5 6 7 8 9 10 # \u7edf\u8ba1\u67d0\u4e2a\u5143\u7d20\u51fa\u73b0\u7684\u6b21\u6570 >>> l . count ( '\u5173\u7fbd' ) # \u67e5\u627e[a,b)\u4e4b\u95f4\u67d0\u5143\u7d20\u7684\u7d22\u5f15\u503c >>> L1 [ '\u5218\u5907' , '\u5173\u7fbd' , '\u5f20\u98de' , '\u59dc\u7ef4' , '\u8bf8\u845b\u4eae' ] >>> L1 . index ( '\u5173\u7fbd' ) >>> L1 . index ( '\u5173\u7fbd' , 2 , 4 ) Traceback ( most recent call last ): File \"<stdin>\" , line 1 , in < module > ValueError : '\u5173\u7fbd' is not in list 5.4 \u6392\u5e8f \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 # \u5012\u5e8f >>> l = [ 'b' , 'B' , 'a' , 'h' ] >>> l . reverse () >>> l [ 'h' , 'a' , 'B' , 'b' ] # \u5347\u5e8f >>> l . sort () >>> l [ 'B' , 'a' , 'b' , 'h' ] # \u964d\u5e8f >>> l . sort ( reverse = True ) >>> l [ 'h' , 'b' , 'a' , 'B' ] \u56db\u3001\u5143\u7ec4 \u00b6 1. \u5143\u7ec4\u7684\u7279\u70b9 \u00b6 \u4e0d\u53ef\u53d8\u6027 \u652f\u6301\u5d4c\u5957 2. \u5143\u7ec4\u64cd\u4f5c \u00b6 2.1 \u8ba1\u7b97\u5143\u7ec4\u957f\u5ea6 \u00b6 1 2 3 >>> t = ( 1 , 2 ) >>> len ( t ) 2 2.2 \u5217\u8868\u62fc\u63a5 \u00b6 1 2 >>> ( 1 , 2 ) + ( 3 , 4 ) ( 1 , 2 , 3 , 4 ) 2.3 \u5217\u8868\u91cd\u590d \u00b6 1 2 >>> ( 1 , 2 ) * 3 ( 1 , 2 , 1 , 2 , 1 , 2 ) 3. \u5143\u7ec4\u7684\u65b9\u6cd5 \u00b6 1 2 3 4 >>> t . count ( 1 ) 1 >>> t . index ( 1 ) 0 \u5143\u7ec4\u7684\u7279\u6b8a\u8bed\u6cd5 \u5b9a\u4e49\u53ea\u6709\u4e00\u4e2a\u5143\u7d20\u7684\u5143\u7ec4 1 x = ( 40 ,) \u521b\u5efa\u5143\u7d20\u5143\u7d20\u7684\u5706\u62ec\u53f7\u53ef\u4ee5\u7701\u7565 1 2 3 >>> T = 'name' , 'age' >>> T ( 'name' , 'age' ) \u4e94\u3001\u5b57\u5178 \u00b6 1. \u5b57\u5178\u7684\u7279\u70b9 \u00b6 \u901a\u8fc7\u952e\u6765\u5b58\u50a8\u5bf9\u8c61 \u65e0\u5e8f\u7684\u96c6\u5408 \u53ef\u53d8\u6027 \u901a\u8fc7\u6563\u5217\u8868\u5b9e\u73b0 2. \u5b57\u5178\u7684\u521b\u5efa \u00b6 2.1 \u65b9\u6cd5\u4e00\uff1a\u5148\u521b\u5efa\u518d\u8d4b\u503c \u00b6 1 2 3 4 5 >>> person = {} >>> person [ 'name' ] = 'Bob' >>> person [ 'job' ] = 'dev' >>> person { 'name' : 'Bob' , 'job' : 'dev' } 2.2 \u65b9\u6cd5\u4e8c\uff1a\u521b\u5efa\u65f6\u540c\u65f6\u8d4b\u503c \u00b6 1 2 3 4 5 6 7 >>> d = { 'name' : 'Tom' , 'job' : 'IT' } >>> d { 'job' : 'IT' , 'name' : 'Tom' } >>> d [ 'age' ] = 18 >>> d [ 'sex' ] = 'boy' >>> d { 'job' : 'IT' , 'sex' : 'boy' , 'name' : 'Tom' , 'age' : 18 } 2.3 \u65b9\u6cd5\u4e09\uff1a\u901a\u8fc7 dict \u51fd\u6570\u521b\u5efa \u00b6 1 2 3 4 5 6 7 8 # \u4f20\u9012\u952e\u503c >>> D = dict ( name = 'Bob' , job = 'dev' ) >>> D { 'name' : 'Bob' , 'job' : 'dev' } # \u4f7f\u7528zip >>> D = dict ( zip ([ \"name\" , \"job\" ], [ \"Bob\" , \"dev\" ])) >>> D { 'name' : 'Bob' , 'job' : 'dev' } 3. \u5b57\u5178\u7d22\u5f15 \u00b6 1 2 3 4 5 >>> d = { 'name' : 'Tom' , 'job' : 'IT' } >>> d { 'name' : 'Tom' , 'job' : 'IT' } >>> d [ 'name' ] 'Tom' 4. \u952e\u7684\u6392\u5e8f \u00b6 1 2 3 4 5 6 7 8 9 10 11 >>> d . keys () dict_keys ([ 'name' , 'job' ]) >>> list ( d . keys ()) [ 'name' , 'job' ] >>> Ks = list ( d . keys ()) >>> Ks . sort () >>> for k in Ks : ... print ( k , '-->' , d [ k ]) ... job --> IT name --> Tom 5. \u5224\u65ad\u4e00\u4e2a\u952e\u662f\u5426\u5b58\u5728 \u00b6 1 2 3 4 5 >>> d { 'name' : 'Tom' , 'job' : 'IT' } # \u5224\u65ad\u4e00\u4e2a\u952e\u662f\u5426\u5b58\u5728 >>> 'name' in d True 6. \u5b57\u5178\u7684\u65b9\u6cd5 \u00b6 6.1 \u5220\u9664 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 # \u6e05\u7a7a\u5b57\u5178 clear >>> d = { 'name' : 'Tom' , 'job' : 'IT' } >>> d . clear () >>> d {} # \u5220\u9664\u6307\u5b9a\u952e pop >>> d . pop ( 'sex' , 'not find' ) 'not find' >>> d . pop ( 'name' ) 'Tom' # \u968f\u673a\u5220\u9664\u952e\u503c\u5bf9\uff0c\u5b57\u5178\u4e3a\u7a7a\u65f6\u62a5\u9519 >>> d . popitem () ( 'job' , 'IT' ) >>> d . popitem () ( 'name' , 'Tom' ) >>> >>> d . popitem () Traceback ( most recent call last ): File \"<stdin>\" , line 1 , in < module > KeyError : 'popitem(): dictionary is empty' 6.2 \u62f7\u8d1d \u00b6 1 2 3 4 >>> d = { 'name' : 'Tom' , 'job' : 'IT' } >>> D = d . copy () >>> D { 'name' : 'Tom' , 'job' : 'IT' } 6.3 \u521b\u5efa \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 >>> l = [ 'name' , 'age' ] >>> d = {} >>> d . fromkeys ( l , 'abc' ) { 'age' : 'abc' , 'name' : 'abc' } # \u5982\u679c\u952e\u4e0d\u5b58\u5728\u6dfb\u52a0\u4e00\u4e2a\uff0c\u5982\u679c\u5b58\u5728\u4e0d\u505a\u66f4\u6539 >>> d . setdefault ( 'sex' , 'boy' ) 'boy' >>> d { 'job' : 'IT' , 'sex' : 'boy' , 'name' : 'Tom' } >>> d . setdefault ( 'sex' , 'girl' ) 'boy' >>> d { 'job' : 'IT' , 'sex' : 'boy' , 'name' : 'Tom' } # \u5408\u5e76\u5b57\u5178\uff0c\u628a\u4e00\u4e2a\u5b57\u5178\u52a0\u5230\u53e6\u4e00\u4e2a\u5b57\u5178 >>> d1 = { 'name' : 'Tom' , 'job' : 'IT' } >>> d2 = { 'sex' : 'boy' } >>> d1 . update ( d2 ) >>> d1 { 'job' : 'IT' , 'sex' : 'boy' , 'name' : 'Tom' } 6.4 \u67e5\u627e \u00b6 1 2 3 4 5 6 # \u6839\u636e\u952e\u67e5\u627e\u503c >>> d = { 'name' : 'Tom' , 'job' : 'IT' } >>> d . get ( 'name' ) 'Tom' >>> d . get ( 'sex' , 'not find' ) 'not find' 6.5 \u904d\u5386\u5b57\u5178 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 >>> d . items () dict_items ([( 'job' , 'IT' ), ( 'name' , 'Tom' )]) >>> for k , v in d . items (): ... print ( k , v ) ... job IT name Tom >>> for k in d . items (): ... print ( k ) ... ( 'job' , 'IT' ) ( 'name' , 'Tom' ) \u516d\u3001\u96c6\u5408 \u00b6 1. \u96c6\u5408\u7684\u7279\u70b9 \u00b6 \u65e0\u5e8f \u552f\u4e00 \u4e0d\u53ef\u53d8 \u96c6\u5408\u4e2d\u7684\u5143\u7d20\u4e0d\u53ef\u53d8 2. \u96c6\u5408\u7684\u4f5c\u7528 \u00b6 \u5217\u8868\u53bb\u91cd \u5173\u7cfb\u6d4b\u8bd5\uff1a\u4ea4\u96c6\u3001\u5e76\u96c6\u3001\u5dee\u96c6 3. \u96c6\u5408\u521b\u5efa \u00b6 1 2 3 set1 = set ({ 1 , 3 , 5 }) # \u7b2c\u4e00\u79cd\u65b9\u6cd5 set2 = { 1 , 3 , 5 } # \u7b2c\u4e8c\u79cd\u65b9\u6cd5 set3 = set () # \u7a7a\u96c6\u5408 4. \u96c6\u5408\u64cd\u4f5c \u00b6 4.1 \u589e \u00b6 1 2 3 4 5 6 7 8 >>> set1 = set ({ 1 , 3 , 5 }) >>> set1 . add ( 7 ) >>> set1 { 1 , 3 , 5 , 7 } # \u8fed\u4ee3\u589e\u52a0 >>> set1 . update ( 'abc' ) >>> set1 { 1 , 3 , 5 , 7 , 'a' , 'b' , 'c' } 4.1 \u5220\u9664 \u00b6 1 2 3 4 5 6 7 8 9 10 11 # \u6309\u7167\u5143\u7d20\u5220\u9664 >>> set1 . remove ( 'c' ) >>> set1 { 1 , 3 , 5 , 7 , 'a' , 'b' } # \u968f\u673a\u5220\u9664 >>> set1 . pop () 1 # \u60c5\u51b5\u5217\u8868 >>> set1 . clear () >>> set1 set () 5. \u5173\u7cfb\u6d4b\u8bd5 \u00b6 5.1 \u4ea4\u96c6 \u00b6 1 2 3 4 5 6 >>> set1 = { 1 , 3 , 5 , 7 , 8 } >>> set2 = { 2 , 3 , 6 , 7 , 8 } >>> set1 & set2 { 8 , 3 , 7 } >>> set1 . intersection ( set2 ) { 8 , 3 , 7 } 5.2 \u5e76\u96c6 \u00b6 1 2 3 4 5 6 >>> set1 = { 1 , 3 , 5 , 7 , 8 } >>> set2 = { 2 , 3 , 6 , 7 , 8 } >>> set1 | set2 { 1 , 2 , 3 , 5 , 6 , 7 , 8 } >>> set1 . union ( set2 ) { 1 , 2 , 3 , 5 , 6 , 7 , 8 } 5.3 \u5dee\u96c6 \u00b6 1 2 3 4 5 6 >>> set1 = { 1 , 3 , 5 , 7 , 8 } >>> set2 = { 2 , 3 , 6 , 7 , 8 } >>> set1 - set2 { 1 , 5 } >>> set1 . difference ( set2 ) { 1 , 5 } 5.4 \u53cd\u4ea4\u96c6 \u00b6 1 2 3 4 >>> set1 ^ set2 { 1 , 2 , 5 , 6 } >>> set1 . symmetric_difference ( set2 ) { 1 , 2 , 5 , 6 } 5.5 \u5b50\u96c6\u4e0e\u8d85\u96c6 \u00b6 1 2 3 4 5 6 7 8 9 10 >>> set1 = { 1 , 2 } >>> set2 = { 1 , 2 , 3 } >>> set1 < set2 True >>> set1 > set2 False >>> set1 . issubset ( set2 ) True >>> set1 . issuperset ( set2 ) False","title":"\u57fa\u672c\u6570\u636e\u7c7b\u578b"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#_1","text":"","title":"\u57fa\u672c\u6570\u636e\u7c7b\u578b"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#_2","text":"","title":"\u4e00\u3001\u6570\u503c"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#1","text":"python\u6570\u503c\u7c7b\u578b \u6574\u6570 \u6d6e\u70b9\u6570 \u590d\u6570 \u5c0f\u6570 \u5206\u6570 \u96c6\u5408 \u5e03\u5c14\u503c True \u548c False \u5185\u7f6e\u51fd\u6570\u548c\u6a21\u5757\uff1around\u3001math\u3001random","title":"1. \u6570\u503c\u7c7b\u578b"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 >>> print ( 2 + 3 ) # \u52a0\u6cd5 5 >>> print ( 8 - 3 ) # \u51cf\u6cd5 5 >>> print ( 2 * 3 ) # \u4e58\u6cd5 6 >>> print ( 5 / 3 ) # \u771f\u9664 1.6666666666666667 >>> print ( 5 // 3 ) # \u5411\u4e0b\u53d6\u6574\u9664\u6cd5\uff0c\u622a\u9664\u6389\u4f59\u6570 1 >>> print ( 5 ** 2 ) # \u5e42\u8fd0\u7b97 25 >>> print ( 5 % 2 ) # \u53d6\u4f59 1","title":"2. \u6570\u503c\u8fd0\u7b97"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#3","text":"","title":"3. \u8fdb\u5236"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#31","text":"1 2 3 4 5 6 >>> 0b11111111 # \u4e8c\u8fdb\u5236 255 >>> 0 o377 # \u516b\u8fdb\u5236 255 >>> 0xFF # \u5341\u516d\u8fdb\u5236 255","title":"3.1 \u8fdb\u5236\u8868\u793a"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#32","text":"1 2 3 4 5 6 >>> bin ( 255 ) # \u5341\u8fdb\u5236\u8f6c\u4e8c\u8fdb\u5236 '0b11111111' >>> oct ( 255 ) # \u5341\u8fdb\u5236\u8f6c\u516b\u8fdb\u5236 '0o377' >>> hex ( 255 ) # \u5341\u8fdb\u5236\u8f6c\u5341\u516d\u8fdb\u5236 '0xff'","title":"3.2 \u8fdb\u5236\u8f6c\u6362"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#4","text":"1 2 3 # \u5728Windows\u5e73\u53f0Python 3.6.8\u4e2d\u8ba1\u7b97\u7684\u7ed3\u679c\uff0c\u6d6e\u70b9\u6570\u7684\u7ed3\u679c\u5e76\u4e0d\u7cbe\u786e >>> print ( 0.1 + 0.1 + 0.1 - 0 , 3 ) 0.30000000000000004 3 \u5982\u679c\u8981\u7cbe\u786e\u8ba1\u7b97\u5c0f\u6570\uff0c\u9700\u8981\u4f7f\u7528\u5c0f\u6570\u5bf9\u8c61 1 2 3 4 5 6 >>> from decimal import Decimal >>> print ( Decimal ( '0.1' ) + Decimal ( '0.1' ) + Decimal ( '0.1' ) - Decimal ( '0.3' )) 0.0 # \u6ce8\u610f*:\u8981\u5728\u5c0f\u6570\u4e0a\u52a0\u5f15\u53f7\uff0c\u5426\u5219\u8f93\u51fa\u7684\u7ed3\u679c\u662f\u4e0b\u9762\u7684\u503c # >>> print(Decimal(0.1) + Decimal(0.1) + Decimal(0.1) - Decimal(0.3)) # 2.775557561565156540423631668E-17","title":"4. \u5c0f\u6570"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#5","text":"1 2 3 4 >>> from fractions import Fraction >>> x = Fraction ( 6 , 8 ) >>> print ( x ) 3 / 4","title":"5. \u5206\u6570"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#6","text":"1 2 3 4 >>> int ( 3.14 ) 3 >>> float ( 3 ) 3.0","title":"6. \u6574\u6570\u6d6e\u70b9\u6570\u88c5\u6362"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#python","text":"\u5b57\u7b26\u4e32\u5c31\u662f\u4e00\u7cfb\u5217\u5b57\u7b26\uff0c\u5728Python\u4e2d\uff0c\u7528\u5f15\u53f7\u62ec\u8d77\u6765\u7684\u90fd\u662f\u5b57\u7b26\u4e32\uff0c\u5f15\u53f7\u53ef\u4ee5\u662f\u5355\u5f15\u53f7('string')\u4e5f\u53ef\u4ee5\u662f\u53cc\u5f15\u53f7(\"string\")","title":"\u4e8c\u3001Python\u5b57\u7b26\u4e32"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#1_1","text":"\u5b57\u7b26\u4e32\u662f\u5355\u4e2a\u5b57\u7b26\u7684\u5b57\u7b26\u4e32\u5e8f\u5217\uff0c\u662f\u6709\u5e8f\u7684 \u4e0d\u53ef\u53d8\u6027\uff0c\u4e0d\u53ef\u4ee5\u5bf9\u539f\u59cb\u7684\u5b57\u7b26\u4e32\u8fdb\u884c\u6539\u53d8\u3002","title":"1. \u5b57\u7b26\u4e32\u7684\u7279\u70b9"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#2_1","text":"","title":"2. \u5b57\u7b26\u4e32\u64cd\u4f5c"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#21","text":"\u5b57\u7b26\u4e32\u7684\u7b2c\u4e00\u4e2a\u5b57\u7b26\u4e0b\u6807\u4e3a0\u3002 1 string = \"Life is short, You need Python\" \u6b63\u7d22\u5f15 1 2 3 In [ 1 ]: string = \"Life is short, You need Python\" In [ 2 ]: string [ 2 ] Out [ 2 ]: 'f' \u8d1f\u7d22\u5f15 1 2 3 In [ 1 ]: string = \"Life is short, You need Python\" In [ 2 ]: string [ - 6 ] Out [ 2 ]: 'P'","title":"2.1 \u7d22\u5f15"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#22","text":"\u5207\u7247\u7684\u683c\u5f0f: string[start,end] 1 2 3 4 In [ 1 ]: string = \"Life is short, You need Python\" # \u8303\u56f4\u662f[5,7)\u4e0d\u5305\u542b\u7d22\u5f15\u4e3a7\u7684\u5b57\u7b26 In [ 2 ]: string [ 5 : 7 ] Out [ 3 ]: 'is' \u5f53\u7b2c\u4e00\u4e2a\u7d22\u5f15\u503c\u7f3a\u7701\u65f6\uff0c\u4ece0\u5f00\u59cb\u3002 1 2 3 4 In [ 1 ]: string = \"Life is short, You need Python\" In [ 6 ]: string [: 7 ] Out [ 6 ]: 'Life is' \u5207\u7247\u52a0\u6b65\u957f 1 2 3 4 In [ 1 ]: s = '1234567890' In [ 2 ]: s [ 2 : 8 : 2 ] Out [ 2 ]: '357'","title":"2.2 \u5207\u7247"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#23","text":"1 2 3 4 >>> s1 = 'hello ' >>> s2 = 'world' >>> s1 + s2 'hello world'","title":"2.3 \u62fc\u63a5"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#24","text":"1 2 >>> print ( \"hello\" * 5 ) hellohellohellohellohello","title":"2.4 \u91cd\u590d"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#25","text":"1 2 >>> len ( 'hello' ) 5","title":"2.5 \u957f\u5ea6"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#3_1","text":"","title":"3. \u5b57\u7b26\u4e32\u65b9\u6cd5"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#31_1","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 >>> # \u5b57\u7b26\u4e32\u9996\u5b57\u7b26\u5927\u5199 ... print ( \"hello world\" . capitalize ()) Hello world >>> # \u5927\u5c0f\u5199\u7ffb\u8f6c ... print ( \"hello WORLD\" . swapcase ()) HELLO world >>> # \u5c06\u5b57\u7b26\u4e32\u53d8\u4e3a\u6807\u9898 ... print ( \"hello WORLD\" . title ()) Hello World >>> # \u5c06\u5b57\u7b26\u4e32\u8f6c\u4e3a\u5927\u5199 ... print ( \"hello world\" . upper ()) HELLO WORLD >>> # \u628a\u5b57\u7b26\u4e32\u8f6c\u4e3a\u5c0f\u5199 ... print ( \"HELLO WORLD\" . lower ()) hello world >>> # \u7ffb\u8f6c\u5b57\u7b26\u4e32\u4e2d\u7684\u5927\u5c0f\u5199 ... print ( \"hello WORLD\" . swapcase ()) HELLO world","title":"3.1 \u5b57\u7b26\u4e32\u5927\u5c0f\u5199\u8f6c\u6362"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#32_1","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 >>> # \u4ee5\u67d0\u4e2a\u5143\u7d20\u4e3a\u5206\u5272\u70b9\uff0c\u5c06\u5b57\u7b26\u4e32\u5206\u4e3a3\u90e8\u5206,\u4ece\u5de6\u5f80\u53f3\u627e\u5230\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u4e3a\u5206\u5272\u70b9 ... print ( 'helloworld' . partition ( 'o' )) ( 'hell' , 'o' , 'world' ) >>> # \u4ee5\u67d0\u4e2a\u5143\u7d20\u4e3a\u5206\u5272\u70b9\uff0c\u5c06\u5b57\u7b26\u4e32\u5206\u4e3a3\u90e8\u5206\uff0c\u4ece\u53f3\u5f80\u5de6\u627e\u5230\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u4e3a\u5206\u5272\u70b9 ... print ( 'helloworld' . rpartition ( 'o' )) ( 'hellow' , 'o' , 'rld' ) >>> # \u66ff\u6362\u539f\u5b57\u7b26\u4e32\u4e2d\u7684\u5143\u7d20,\u9ed8\u8ba4\u5168\u90e8\u66ff\u6362\uff0c\u53ef\u4ee5\u6307\u5b9a\u66ff\u6362\u51e0\u4e2a\uff08\u4ece\u5de6\u5f80\u53f3\u6570\uff09 ... print ( \"hello world\" . replace ( 'o' , 'a' , 1 )) hella world >>> # \u4ee5\u67d0\u4e2a\u5143\u7d20\u4e3a\u5206\u5272\u70b9\uff0c\u5c06\u5b57\u7b26\u4e32\u5206\u5272,\u4ece\u5de6\u5f80\u53f3\u5206\u5272n\u6b21 ... print ( \"hello world\" . split ( 'o' , 1 )) [ 'hell' , ' world' ] >>> # \u4ee5\u67d0\u4e2a\u5143\u7d20\u4e3a\u5206\u5272\u70b9\uff0c\u5c06\u5b57\u7b26\u4e32\u5206\u5272,\u4ece\u53f3\u5f80\u5de6\u5206\u5272n\u6b21 ... print ( \"hello world\" . rsplit ( 'o' , 1 )) [ 'hello w' , 'rld' ] >>> # \u6309\u7167\u884c('\\r', '\\r\\n', \\n')\u5206\u9694\uff0c\u8fd4\u56de\u4e00\u4e2a\u5305\u542b\u5404\u884c\u4f5c\u4e3a\u5143\u7d20\u7684\u5217\u8868\uff0c\u5982\u679c\u53c2\u6570 keepends \u4e3a False\uff0c\u4e0d\u5305\u542b\u6362\u884c\u7b26\uff0c\u5982\u679c\u4e3a True\uff0c\u5219\u4fdd\u7559\u6362\u884c\u7b26\u3002 ... print ( 'hello \\n world' . splitlines ( True )) [ 'hello \\n ' , 'world' ]","title":"3.2 \u5b57\u7b26\u4e32\u5206\u5272"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#33","text":"1 2 3 4 5 6 7 8 9 >>> # \u7edf\u8ba1\u67d0\u4e2a\u5b57\u7b26\u4e32\u4ece\u7d22\u5f15n\u5230y\u51fa\u73b0\u7684\u6b21\u6570\uff0c\u7f3a\u7701\u4e3a\u5728\u6574\u4e2a\u5b57\u7b26\u4e32\u4e2d\u67e5\u627e ... print ( \"hello world\" . count ( 'o' , 7 , 10 )) >>> # \u5728\u7d22\u5f15[n , y)\u4e4b\u95f4\u67e5\u627e\u5143\u7d20\uff0c\u7f3a\u7701\u4e3a[:]\u8fd4\u56de\u5143\u7d20\u7684\u7d22\u5f15\uff0c\u5982\u679c\u6ca1\u627e\u5230\u8fd4\u56de-1 ... print ( \"hello world\" . find ( 'e' )) >>> print ( \"hello world\" . find ( 'o' , 0 , 2 )) - 1 >>> # \u5728[n, y)\u4e4b\u95f4\u627e\u5143\u7d20\u7684\u7d22\u5f15\u503c\uff0c\u6ca1\u627e\u5230\u4f1a\u62a5\u9519 ... print ( \"hello world\" . index ( 'o' )) >>> print ( \"hello world\" . index ( 'e' , 0 , 5 ))","title":"3.3 \u5b57\u7b26\u4e32\u67e5\u627e"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#34","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 >>> # \u5224\u65ad\u5b57\u7b26\u4e32\u662f\u5426\u4ee5\u67d0\u4e2a\u5143\u7d20\u5f00\u59cb ... print ( 'helloworld' . startswith ( 'h' )) True >>> # \u5224\u65ad\u5b57\u7b26\u4e32\u7684\u7684\u4ece[n\uff0cy)\u7684\u7d22\u5f15\u4e4b\u95f4\u662f\u5426\u4ee5\u67d0\u4e2a\u5b57\u7b26\u7ed3\u5c3e,\u8fd4\u56de\u503c\u4e3a\u5e03\u5c14\u503c ... print ( \"hello world\" . endswith ( 'e' , 0 , 2 )) True >>> # \u5224\u65ad\u662f\u5426\u662f\u53ea\u6709\u6570\u5b57\u6216\u5b57\u6bcd ... print ( 'abc123' . isalnum ()) True >>> # \u5224\u65ad\u662f\u5426\u53ea\u542b\u6709\u5b57\u6bcd ... print ( 'abc' . isalpha ()) True >>> # \u5224\u65ad\u5b57\u6bcd\u662f\u5426\u90fd\u662f\u5c0f\u5199 ... print ( \"Hello\" . islower ()) False >>> # \u5224\u65ad\u5b57\u7b26\u662f\u4e0d\u662f\u7a7a\u683c ... print ( \" \" . isspace ()) True >>> # \u5224\u65ad\u662f\u4e0d\u662f\u5b57\u7b26\u4e32\u662f\u4e0d\u662f\u6807\u9898(\u5355\u8bcd\u9996\u5b57\u6bcd\u662f\u4e0d\u662f\u5927\u5199) ... print ( \"Hello World\" . istitle ()) True","title":"3.4 \u5b57\u7b26\u4e32\u5224\u65ad"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#35","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 >>> # \u5b57\u7b26\u4e32\u5c45\u4e2d\uff0c\u89c4\u5b9a\u5b57\u7b26\u4e32\u7684\u603b\u957f\u5ea6\uff0c\u4e0d\u591f\u7528\u5176\u4ed6\u5b57\u7b26\u8865\u9f50\uff0c\u9ed8\u8ba4\u662f\u7a7a\u683c ... print ( \"hello world\" . center ( 20 , \"#\" )) ####hello world##### >>> # \u628a\u5b57\u7b26\u4e32\u4e2d\u7684\\t\u66ff\u6362\u4e3an\u4e2a\u7a7a\u683c ... print ( \"hello \\t world\" . expandtabs ( tabsize = 20 )) hello world >>> print ( '#' . join ( \"hello world\" )) h #e#l#l#o# #w#o#r#l#d >>> # \u89c4\u5b9a\u8f93\u51fa\u5b57\u7b26\u7684\u957f\u5ea6\uff0c\u5e76\u4e14\u5de6\u5bf9\u9f50,\u4e0d\u8db3\u90e8\u5206\u7528\u6307\u5b9a\u5b57\u7b26\u8865\u9f50 ... print ( \"hello world\" . ljust ( 20 , \"#\" )) hello world ######### >>> # \u89c4\u5b9a\u8f93\u51fa\u5b57\u7b26\u7684\u957f\u5ea6\uff0c\u5e76\u4e14\u53f3\u5bf9\u9f50,\u4e0d\u8db3\u90e8\u5206\u7528\u6307\u5b9a\u5b57\u7b26\u8865\u9f50 ... print ( \"hello world\" . rjust ( 20 , \"#\" )) #########hello world >>> # \u53bb\u9664\u5b57\u7b26\u4e32\u5de6\u8fb9\u7684\u7684\u7a7a\u683c ... print ( ' hello' . lstrip ()) hello >>> # \u53bb\u9664\u5b57\u7b26\u4e32\u53f3\u8fb9\u7684\u7684\u7a7a\u683c ... print ( 'hello ' . rstrip ()) hello >>> # \u53bb\u9664\u5b57\u7b26\u4e32\u4e24\u8fb9\u7684\u7684\u7a7a\u683c ... print ( ' hello ' . strip ()) hello >>> # \u6307\u5b9a\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\uff0c\u4e0d\u591f\u5728\u524d\u9762\u88650 ... print ( \"123\" . zfill ( 5 )) >>> # \u5b57\u7b26\u4e32\u7684\u62fc\u63a5 ... print ( 'hello ' + 'world' ) hello world >>> # \u5b57\u7b26\u4e32\u91cd\u590d ... print ( 'hello ' * 3 ) hello hello hello","title":"3.5 \u5b57\u7b26\u4e32\u683c\u5f0f\u5316"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#36","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 >>> s = 'hello world' # \u5355\u5f15\u53f7 >>> print ( s ) hello world >>> s = \"hello world\" # \u53cc\u5f15\u53f7 >>> print ( s ) hello world >>> s = \"\"\"hello # \u4e09\u5f15\u53f7 ... world ... !!!\"\"\" >>> print ( s ) hello world !!! >>> s = 'hello \\t world' # \u8f6c\u4e49\u5e8f\u5217 >>> print ( s ) hello world >>> s = r 'hello\\tworld' # \u539f\u59cb\u5b57\u7b26\u4e32\uff0c\u4e0d\u8fdb\u884c\u8f6c\u4e49 >>> print ( s ) hello \\ tworld","title":"3.6 \u5b57\u7b26\u4e32\u7684\u8d4b\u503c"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#37","text":"1 2 3 4 5 6 7 8 9 10 >>> x = 123 >>> x = str ( x ) # \u628a\u4e00\u4e32\u5b57\u7b26\u8f6c\u4e3a\u5b57\u7b26\u4e32 >>> print ( x ) 123 >>> print ( type ( x )) < class ' str '> >>> print ( chr ( 65 )) # ASCII\u503c\u8f6c\u5b57\u7b26 A >>> print ( ord ( 'B' )) # \u5b57\u7b26\u8f6cASCII\u503c 66","title":"3.7 \u5b57\u7b26\u4e32\u8f6c\u6362"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#4_1","text":"","title":"4. \u5b57\u7b26\u4e32\u683c\u5f0f\u5316"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#41","text":"","title":"4.1 \u683c\u5f0f\u5316\u8868\u8fbe\u5f0f"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#411-cprintf","text":"1 2 3 >>> name = \"Kobe\" >>> print ( ' %s is %d years old.' % ( name , 41 )) Kobe is 41 years old .","title":"4.1.1 \u57fa\u4e8eC\u8bed\u8a00\u7684printf\u6a21\u578b"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#412","text":"1 2 >>> print ( ' %(name)s is %(age)d years old.' % { 'name' : 'Kobe' , 'age' : 41 }) Kobe is 41 years old .","title":"4.1.2 \u57fa\u4e8e\u5b57\u5178\u7684\u683c\u5f0f\u5316\u8868\u8fbe\u5f0f"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#42","text":"","title":"4.2 \u683c\u5f0f\u5316\u65b9\u6cd5\u8c03\u7528"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#421","text":"1 2 >>> print ( '{} is {} years old.' . format ( 'Kobe' , 41 )) Kobe is 41 years old .","title":"4.2.1 \u901a\u8fc7\u76f8\u5bf9\u4f4d\u7f6e\u66ff\u6362\u76ee\u6807"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#422","text":"1 2 3 4 >>> print ( '{0} is {1} years old.' . format ( 'Kobe' , 41 )) Kobe is 41 years old . >>> print ( '{1} is {0} years old.' . format ( 41 , 'Kobe' )) Kobe is 41 years old .","title":"4.2.2 \u901a\u8fc7\u4f4d\u7f6e\u66ff\u6362\u76ee\u6807"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#423","text":"1 2 >>> print ( '{name} is {age} years old.' . format ( name = 'Kobe' , age = 41 )) Kobe is 41 years old .","title":"4.2.3 \u901a\u8fc7\u5173\u952e\u5b57\u66ff\u6362\u76ee\u6807"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#_3","text":"","title":"\u4e09\u3001\u5217\u8868"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#1_2","text":"\u4efb\u610f\u7c7b\u578b\u7684\u5bf9\u8c61\u7684\u4f4d\u7f6e\u76f8\u5173\u7684\u6709\u5e8f\u96c6\u5408 \u5927\u5c0f\u53ef\u53d8\uff0c\u53ef\u4ee5\u4fee\u6539 \u652f\u6301\u4efb\u610f\u5d4c\u5957","title":"1. \u5217\u8868\u7684\u7279\u70b9"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#2_2","text":"","title":"2. \u5217\u8868\u64cd\u4f5c"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#21_1","text":"1 2 3 >>> l = [ 'Tom' , 'Bob' , 123 ,[ 'boy' , 'girl' ]] >>> len ( l ) 4","title":"2.1 \u8ba1\u7b97\u5217\u8868\u957f\u5ea6"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#22_1","text":"1 2 >>> [ 1 , 2 , 3 ] + [ 4 , 5 , 6 ] [ 1 , 2 , 3 , 4 , 5 , 6 ]","title":"2.2 \u5217\u8868\u62fc\u63a5"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#23_1","text":"1 2 >>> [ 'hello' ] * 3 [ 'hello' , 'hello' , 'hello' ]","title":"2.3 \u5217\u8868\u91cd\u590d"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#3_2","text":"1 2 3 4 5 6 >>> l [ - 1 ] # \u8d1f\u7d22\u5f15 [ 'boy' , 'girl' ] >>> l [ 2 ] # \u6b63\u7d22\u5f15 123 >>> l [ 3 ][ 1 ] # \u4e24\u6b21\u7d22\u5f15 'girl'","title":"3. \u5217\u8868\u7d22\u5f15"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#4_2","text":"1 2 3 4 5 6 7 8 >>> l [:] [ 'Tom' , 'Bob' , 123 , [ 'boy' , 'girl' ]] >>> l [ 1 : 3 ] [ 'Bob' , 123 ] >>> l [ - 2 : - 1 ] [ 123 ] >>> l [ - 2 :] [ 123 , [ 'boy' , 'girl' ]]","title":"4. \u5217\u8868\u5207\u7247"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#5_1","text":"","title":"5. \u5217\u8868\u65b9\u6cd5"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#51","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 # \u5728\u5c3e\u90e8\u63d2\u5165\u4e00\u9879 >>> l = [ '\u5218\u5907' , '\u5173\u7fbd' , '\u5f20\u98de' ] >>> l . append ( '\u8bf8\u845b\u4eae' ) >>> l [ '\u5218\u5907' , '\u5173\u7fbd' , '\u5f20\u98de' , '\u8bf8\u845b\u4eae' ] # \u628a\u4e00\u4e2a\u5217\u8868\u6dfb\u52a0\u5230\u53e6\u4e00\u4e2a\u5217\u8868\u672b\u5c3e >>> L1 = [ '\u5218\u5907' , '\u5173\u7fbd' , '\u5f20\u98de' ] >>> L2 = [ '\u59dc\u7ef4' , '\u8bf8\u845b\u4eae' ] >>> L1 . extend ( L2 ) >>> L1 [ '\u5218\u5907' , '\u5173\u7fbd' , '\u5f20\u98de' , '\u59dc\u7ef4' , '\u8bf8\u845b\u4eae' ] # \u5728\u6307\u5b9a\u7d22\u5f15\u4f4d\u7f6e\u63d2\u5165\u5143\u7d20 >>> l [ '\u5218\u5907' , '\u5173\u7fbd' , '\u5f20\u98de' ] >>> l . insert ( 1 , '\u9a6c\u8d85' ) >>> l [ '\u5218\u5907' , '\u9a6c\u8d85' , '\u5173\u7fbd' , '\u5f20\u98de' ]","title":"5.1 \u6dfb\u52a0"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#52","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 # \u5220\u9664\u6240\u6709\u5143\u7d20 >>> l . clear () >>> l [] # \u6839\u636e\u7d22\u5f15\u5220\u9664\u5143\u7d20\u5e76\u6253\u5370\u5220\u9664\u7684\u5143\u7d20 >>> l [ '\u5218\u5907' , '\u9a6c\u8d85' , '\u5173\u7fbd' , '\u5f20\u98de' ] >>> l . pop () # \u65e0\u53c2\u6570\u5220\u9664\u6700\u540e\u4e00\u4e2a '\u5f20\u98de' >>> l [ '\u5218\u5907' , '\u9a6c\u8d85' , '\u5173\u7fbd' ] >>> l . pop ( 1 ) # \u6307\u5b9a\u7d22\u5f15\u5220\u9664 '\u9a6c\u8d85' >>> l [ '\u5218\u5907' , '\u5173\u7fbd' ] # \u5220\u9664\u6307\u5b9a\u5143\u7d20 >>> l = [ '\u5218\u5907' , '\u5173\u7fbd' , '\u5f20\u98de' ] >>> l . remove ( \"\u5173\u7fbd\" ) >>> l [ '\u5218\u5907' , '\u5f20\u98de' ] # \u4f7f\u7528del\u8bed\u53e5\u5220\u9664\u6307\u5b9a\u5143\u7d20 >>> l = [ '\u5218\u5907' , '\u5173\u7fbd' , '\u5f20\u98de' ] >>> del l [ 1 ] >>> l [ '\u5218\u5907' , '\u5f20\u98de' ]","title":"5.2 \u5220\u9664"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#53","text":"1 2 3 >>> l1 = l . copy () >>> l1 [ '\u5218\u5907' , '\u5173\u7fbd' , '\u5f20\u98de' ]","title":"5.3.\u62f7\u8d1d"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#54","text":"1 2 3 4 5 6 7 8 9 10 # \u7edf\u8ba1\u67d0\u4e2a\u5143\u7d20\u51fa\u73b0\u7684\u6b21\u6570 >>> l . count ( '\u5173\u7fbd' ) # \u67e5\u627e[a,b)\u4e4b\u95f4\u67d0\u5143\u7d20\u7684\u7d22\u5f15\u503c >>> L1 [ '\u5218\u5907' , '\u5173\u7fbd' , '\u5f20\u98de' , '\u59dc\u7ef4' , '\u8bf8\u845b\u4eae' ] >>> L1 . index ( '\u5173\u7fbd' ) >>> L1 . index ( '\u5173\u7fbd' , 2 , 4 ) Traceback ( most recent call last ): File \"<stdin>\" , line 1 , in < module > ValueError : '\u5173\u7fbd' is not in list","title":"5.4 \u67e5\u627e"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#54_1","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 # \u5012\u5e8f >>> l = [ 'b' , 'B' , 'a' , 'h' ] >>> l . reverse () >>> l [ 'h' , 'a' , 'B' , 'b' ] # \u5347\u5e8f >>> l . sort () >>> l [ 'B' , 'a' , 'b' , 'h' ] # \u964d\u5e8f >>> l . sort ( reverse = True ) >>> l [ 'h' , 'b' , 'a' , 'B' ]","title":"5.4 \u6392\u5e8f"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#_4","text":"","title":"\u56db\u3001\u5143\u7ec4"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#1_3","text":"\u4e0d\u53ef\u53d8\u6027 \u652f\u6301\u5d4c\u5957","title":"1. \u5143\u7ec4\u7684\u7279\u70b9"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#2_3","text":"","title":"2. \u5143\u7ec4\u64cd\u4f5c"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#21_2","text":"1 2 3 >>> t = ( 1 , 2 ) >>> len ( t ) 2","title":"2.1 \u8ba1\u7b97\u5143\u7ec4\u957f\u5ea6"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#22_2","text":"1 2 >>> ( 1 , 2 ) + ( 3 , 4 ) ( 1 , 2 , 3 , 4 )","title":"2.2 \u5217\u8868\u62fc\u63a5"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#23_2","text":"1 2 >>> ( 1 , 2 ) * 3 ( 1 , 2 , 1 , 2 , 1 , 2 )","title":"2.3 \u5217\u8868\u91cd\u590d"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#3_3","text":"1 2 3 4 >>> t . count ( 1 ) 1 >>> t . index ( 1 ) 0 \u5143\u7ec4\u7684\u7279\u6b8a\u8bed\u6cd5 \u5b9a\u4e49\u53ea\u6709\u4e00\u4e2a\u5143\u7d20\u7684\u5143\u7ec4 1 x = ( 40 ,) \u521b\u5efa\u5143\u7d20\u5143\u7d20\u7684\u5706\u62ec\u53f7\u53ef\u4ee5\u7701\u7565 1 2 3 >>> T = 'name' , 'age' >>> T ( 'name' , 'age' )","title":"3. \u5143\u7ec4\u7684\u65b9\u6cd5"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#_5","text":"","title":"\u4e94\u3001\u5b57\u5178"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#1_4","text":"\u901a\u8fc7\u952e\u6765\u5b58\u50a8\u5bf9\u8c61 \u65e0\u5e8f\u7684\u96c6\u5408 \u53ef\u53d8\u6027 \u901a\u8fc7\u6563\u5217\u8868\u5b9e\u73b0","title":"1. \u5b57\u5178\u7684\u7279\u70b9"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#2_4","text":"","title":"2. \u5b57\u5178\u7684\u521b\u5efa"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#21_3","text":"1 2 3 4 5 >>> person = {} >>> person [ 'name' ] = 'Bob' >>> person [ 'job' ] = 'dev' >>> person { 'name' : 'Bob' , 'job' : 'dev' }","title":"2.1 \u65b9\u6cd5\u4e00\uff1a\u5148\u521b\u5efa\u518d\u8d4b\u503c"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#22_3","text":"1 2 3 4 5 6 7 >>> d = { 'name' : 'Tom' , 'job' : 'IT' } >>> d { 'job' : 'IT' , 'name' : 'Tom' } >>> d [ 'age' ] = 18 >>> d [ 'sex' ] = 'boy' >>> d { 'job' : 'IT' , 'sex' : 'boy' , 'name' : 'Tom' , 'age' : 18 }","title":"2.2 \u65b9\u6cd5\u4e8c\uff1a\u521b\u5efa\u65f6\u540c\u65f6\u8d4b\u503c"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#23-dict","text":"1 2 3 4 5 6 7 8 # \u4f20\u9012\u952e\u503c >>> D = dict ( name = 'Bob' , job = 'dev' ) >>> D { 'name' : 'Bob' , 'job' : 'dev' } # \u4f7f\u7528zip >>> D = dict ( zip ([ \"name\" , \"job\" ], [ \"Bob\" , \"dev\" ])) >>> D { 'name' : 'Bob' , 'job' : 'dev' }","title":"2.3 \u65b9\u6cd5\u4e09\uff1a\u901a\u8fc7dict\u51fd\u6570\u521b\u5efa"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#3_4","text":"1 2 3 4 5 >>> d = { 'name' : 'Tom' , 'job' : 'IT' } >>> d { 'name' : 'Tom' , 'job' : 'IT' } >>> d [ 'name' ] 'Tom'","title":"3. \u5b57\u5178\u7d22\u5f15"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#4_3","text":"1 2 3 4 5 6 7 8 9 10 11 >>> d . keys () dict_keys ([ 'name' , 'job' ]) >>> list ( d . keys ()) [ 'name' , 'job' ] >>> Ks = list ( d . keys ()) >>> Ks . sort () >>> for k in Ks : ... print ( k , '-->' , d [ k ]) ... job --> IT name --> Tom","title":"4. \u952e\u7684\u6392\u5e8f"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#5_2","text":"1 2 3 4 5 >>> d { 'name' : 'Tom' , 'job' : 'IT' } # \u5224\u65ad\u4e00\u4e2a\u952e\u662f\u5426\u5b58\u5728 >>> 'name' in d True","title":"5. \u5224\u65ad\u4e00\u4e2a\u952e\u662f\u5426\u5b58\u5728"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#6_1","text":"","title":"6. \u5b57\u5178\u7684\u65b9\u6cd5"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#61","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 # \u6e05\u7a7a\u5b57\u5178 clear >>> d = { 'name' : 'Tom' , 'job' : 'IT' } >>> d . clear () >>> d {} # \u5220\u9664\u6307\u5b9a\u952e pop >>> d . pop ( 'sex' , 'not find' ) 'not find' >>> d . pop ( 'name' ) 'Tom' # \u968f\u673a\u5220\u9664\u952e\u503c\u5bf9\uff0c\u5b57\u5178\u4e3a\u7a7a\u65f6\u62a5\u9519 >>> d . popitem () ( 'job' , 'IT' ) >>> d . popitem () ( 'name' , 'Tom' ) >>> >>> d . popitem () Traceback ( most recent call last ): File \"<stdin>\" , line 1 , in < module > KeyError : 'popitem(): dictionary is empty'","title":"6.1 \u5220\u9664"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#62","text":"1 2 3 4 >>> d = { 'name' : 'Tom' , 'job' : 'IT' } >>> D = d . copy () >>> D { 'name' : 'Tom' , 'job' : 'IT' }","title":"6.2 \u62f7\u8d1d"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#63","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 >>> l = [ 'name' , 'age' ] >>> d = {} >>> d . fromkeys ( l , 'abc' ) { 'age' : 'abc' , 'name' : 'abc' } # \u5982\u679c\u952e\u4e0d\u5b58\u5728\u6dfb\u52a0\u4e00\u4e2a\uff0c\u5982\u679c\u5b58\u5728\u4e0d\u505a\u66f4\u6539 >>> d . setdefault ( 'sex' , 'boy' ) 'boy' >>> d { 'job' : 'IT' , 'sex' : 'boy' , 'name' : 'Tom' } >>> d . setdefault ( 'sex' , 'girl' ) 'boy' >>> d { 'job' : 'IT' , 'sex' : 'boy' , 'name' : 'Tom' } # \u5408\u5e76\u5b57\u5178\uff0c\u628a\u4e00\u4e2a\u5b57\u5178\u52a0\u5230\u53e6\u4e00\u4e2a\u5b57\u5178 >>> d1 = { 'name' : 'Tom' , 'job' : 'IT' } >>> d2 = { 'sex' : 'boy' } >>> d1 . update ( d2 ) >>> d1 { 'job' : 'IT' , 'sex' : 'boy' , 'name' : 'Tom' }","title":"6.3 \u521b\u5efa"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#64","text":"1 2 3 4 5 6 # \u6839\u636e\u952e\u67e5\u627e\u503c >>> d = { 'name' : 'Tom' , 'job' : 'IT' } >>> d . get ( 'name' ) 'Tom' >>> d . get ( 'sex' , 'not find' ) 'not find'","title":"6.4 \u67e5\u627e"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#65","text":"1 2 3 4 5 6 7 8 9 10 11 12 >>> d . items () dict_items ([( 'job' , 'IT' ), ( 'name' , 'Tom' )]) >>> for k , v in d . items (): ... print ( k , v ) ... job IT name Tom >>> for k in d . items (): ... print ( k ) ... ( 'job' , 'IT' ) ( 'name' , 'Tom' )","title":"6.5 \u904d\u5386\u5b57\u5178"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#_6","text":"","title":"\u516d\u3001\u96c6\u5408"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#1_5","text":"\u65e0\u5e8f \u552f\u4e00 \u4e0d\u53ef\u53d8 \u96c6\u5408\u4e2d\u7684\u5143\u7d20\u4e0d\u53ef\u53d8","title":"1. \u96c6\u5408\u7684\u7279\u70b9"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#2_5","text":"\u5217\u8868\u53bb\u91cd \u5173\u7cfb\u6d4b\u8bd5\uff1a\u4ea4\u96c6\u3001\u5e76\u96c6\u3001\u5dee\u96c6","title":"2. \u96c6\u5408\u7684\u4f5c\u7528"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#3_5","text":"1 2 3 set1 = set ({ 1 , 3 , 5 }) # \u7b2c\u4e00\u79cd\u65b9\u6cd5 set2 = { 1 , 3 , 5 } # \u7b2c\u4e8c\u79cd\u65b9\u6cd5 set3 = set () # \u7a7a\u96c6\u5408","title":"3. \u96c6\u5408\u521b\u5efa"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#4_4","text":"","title":"4. \u96c6\u5408\u64cd\u4f5c"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#41_1","text":"1 2 3 4 5 6 7 8 >>> set1 = set ({ 1 , 3 , 5 }) >>> set1 . add ( 7 ) >>> set1 { 1 , 3 , 5 , 7 } # \u8fed\u4ee3\u589e\u52a0 >>> set1 . update ( 'abc' ) >>> set1 { 1 , 3 , 5 , 7 , 'a' , 'b' , 'c' }","title":"4.1 \u589e"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#41_2","text":"1 2 3 4 5 6 7 8 9 10 11 # \u6309\u7167\u5143\u7d20\u5220\u9664 >>> set1 . remove ( 'c' ) >>> set1 { 1 , 3 , 5 , 7 , 'a' , 'b' } # \u968f\u673a\u5220\u9664 >>> set1 . pop () 1 # \u60c5\u51b5\u5217\u8868 >>> set1 . clear () >>> set1 set ()","title":"4.1 \u5220\u9664"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#5_3","text":"","title":"5. \u5173\u7cfb\u6d4b\u8bd5"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#51_1","text":"1 2 3 4 5 6 >>> set1 = { 1 , 3 , 5 , 7 , 8 } >>> set2 = { 2 , 3 , 6 , 7 , 8 } >>> set1 & set2 { 8 , 3 , 7 } >>> set1 . intersection ( set2 ) { 8 , 3 , 7 }","title":"5.1 \u4ea4\u96c6"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#52_1","text":"1 2 3 4 5 6 >>> set1 = { 1 , 3 , 5 , 7 , 8 } >>> set2 = { 2 , 3 , 6 , 7 , 8 } >>> set1 | set2 { 1 , 2 , 3 , 5 , 6 , 7 , 8 } >>> set1 . union ( set2 ) { 1 , 2 , 3 , 5 , 6 , 7 , 8 }","title":"5.2 \u5e76\u96c6"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#53_1","text":"1 2 3 4 5 6 >>> set1 = { 1 , 3 , 5 , 7 , 8 } >>> set2 = { 2 , 3 , 6 , 7 , 8 } >>> set1 - set2 { 1 , 5 } >>> set1 . difference ( set2 ) { 1 , 5 }","title":"5.3 \u5dee\u96c6"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#54_2","text":"1 2 3 4 >>> set1 ^ set2 { 1 , 2 , 5 , 6 } >>> set1 . symmetric_difference ( set2 ) { 1 , 2 , 5 , 6 }","title":"5.4 \u53cd\u4ea4\u96c6"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%9F%BA%E6%9C%AC%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#55","text":"1 2 3 4 5 6 7 8 9 10 >>> set1 = { 1 , 2 } >>> set2 = { 1 , 2 , 3 } >>> set1 < set2 True >>> set1 > set2 False >>> set1 . issubset ( set2 ) True >>> set1 . issuperset ( set2 ) False","title":"5.5 \u5b50\u96c6\u4e0e\u8d85\u96c6"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/","text":"\u8fdb\u7a0b\u3001\u7ebf\u7a0b\u4e0e\u534f\u7a0b \u00b6 \u4e00\u3001\u57fa\u672c\u6982\u5ff5 \u00b6 1.\u8fdb\u7a0b\u548c\u7ebf\u7a0b \u00b6 1.1 \u8fdb\u7a0b \u00b6 \u8fdb\u7a0b\uff1a\u8fd0\u884c\u4e2d\u7684\u7a0b\u5e8f\u3002\u6bcf\u4e2a\u8fdb\u884c\u62e5\u6709\u81ea\u5df1\u7684\u5730\u5740\u7a7a\u95f4\u3001\u5185\u5b58\u3001\u6570\u636e\u6808\u7b49\u3002\u591a\u8fdb\u7a0b\u4e4b\u95f4\u7684\u6570\u636e\u4e0d\u5171\u4eab\u3002\u8fdb\u7a0b\u4e5f\u53ef\u4ee5\u901a\u8fc7\u6d3e\u751f\uff08fork \u6216 spawn\uff09\u65b0\u7684\u8fdb\u7a0b\u6765\u6267\u884c\u5176\u4ed6\u4efb\u52a1\uff0c\u8fdb\u7a0b\u95f4\u91c7\u7528\u8fdb\u7a0b\u95f4\u901a\u4fe1\uff08IPC\uff0cInter Process communication\uff09\u7684\u65b9\u5f0f\u5171\u4eab\u4fe1\u606f\u3002 \u50f5\u5c38\u8fdb\u7a0b \u5b64\u513f\u8fdb\u7a0b \u5b88\u62a4\u8fdb\u7a0b 1.2 \u7ebf\u7a0b \u00b6 \u5728\u4e00\u4e2a\u4e3b\u8fdb\u7a0b\u6216\u201c\u4e3b\u7ebf\u7a0b\u201d\u4e2d\u5e76\u884c\u8fd0\u884c\u7684\u4e00\u4e9b\u201c\u8ff7\u4f60\u8fdb\u7a0b\u201d\u3002 \u5168\u5c40\u89e3\u91ca\u5668\u9501\uff1a\u5bf9 Python \u865a\u62df\u673a\u7684\u8bbf\u95ee\u662f\u7531\u5168\u5c40\u89e3\u91ca\u5668\u9501\uff08GIL\uff0cglobal interpreter lock\uff09\u63a7\u5236\u7684\u3002\u8fd9\u4e2a\u9501\u5c31\u662f\u7528\u6765\u4fdd\u8bc1\u540c\u65f6\u53ea\u80fd\u6709\u4e00\u4e2a\u7ebf\u7a0b\u8fd0\u884c\u7684\u3002 \u5b88\u62a4\u7ebf\u7a0b\uff1a\u5982\u679c\u628a\u4e00\u4e2a\u7ebf\u7a0b\u8bbe\u7f6e\u4e3a\u5b88\u62a4\u7ebf\u7a0b\uff0c\u5c31\u8868\u793a\u8fd9\u4e2a\u7ebf\u7a0b\u662f\u4e0d\u91cd\u8981\u7684\uff0c\u8fdb\u7a0b\u9000\u51fa\u65f6\u4e0d\u9700\u8981\u7b49\u5f85\u8fd9\u4e2a\u7ebf\u7a0b\u6267\u884c\u5b8c\u6210\u3002 \u6c60\uff1a\u5728\u7a0b\u5e8f\u5f00\u59cb\u4e4b\u524d\u5148\u521b\u5efa\u51e0\u4e2a\u7ebf\u7a0b\u6216\u8fdb\u7a0b\u653e\u5728\u4e00\u4e2a\u6c60\u4e2d\uff0c\u5f00\u597d\u7684\u8fdb\u7a0b\u548c\u7ebf\u7a0b\u4f1a\u4e00\u76f4\u5b58\u5728\u5728\u6c60\u4e2d\uff0c\u53ef\u4ee5\u88ab\u591a\u4e2a\u4efb\u52a1\u53cd\u590d\u5229\u7528\uff0c\u53ef\u4ee5\u51cf\u5c11\u8c03\u5ea6\u5f00\u9500\uff0c\u51cf\u8f7b\u64cd\u4f5c\u7cfb\u7edf\u7684\u8d1f\u62c5\u3002 2. \u540c\u6b65\u548c\u5f02\u6b65 \u00b6 2.1 \u540c\u6b65 \u00b6 2.2 \u5f02\u6b65 \u00b6 3. \u963b\u585e\u548c\u975e\u963b\u585e \u00b6 3.3 \u963b\u585e \u00b6 3.4 \u975e\u963b\u585e \u00b6 \u4e8c\u3001\u591a\u8fdb\u7a0b \u00b6 1. \u5f00\u542f\u5b50\u8fdb\u7a0b \u00b6 1.1 \u65b9\u6cd5\u4e00 \u9762\u5411\u51fd\u6570 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 from multiprocessing import Process import os # \u5b50\u8fdb\u7a0b def func (): print ( 'func: ppid: %s , pid: %s ' % ( os . getppid (), os . getpid ())) if __name__ == '__main__' : print ( 'main: ppid: %s , pid: %s ' % ( os . getppid (), os . getpid ())) # \u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61 p = Process ( target = func ) # \u542f\u52a8\u4e00\u4e2a\u4e3b\u8fdb\u7a0b\uff0c\u5f02\u6b65\u65b9\u5f0f p . start () # \u8f93\u51fa\u7ed3\u679c # main: ppid:19674, pid: 19845 # func: ppid:19845, pid: 19846 1.2 \u65b9\u6cd5\u4e8c \u9762\u5411\u5bf9\u8c61 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 from multiprocessing import Process import os class MyProcess ( Process ): def __init__ ( self , name , age ): super () . __init__ () self . name = name self . age = age def run ( self ): print ( 'func: ppid: %s , pid: %s ' % ( os . getppid (), os . getpid ())) print ( 'func:' , self . name , self . age ) if __name__ == '__main__' : print ( 'main: ppid: %s , pid: %s ' % ( os . getppid (), os . getpid ())) p = MyProcess ( 'Jerry' , 18 ) p . start () 2. \u7b49\u5f85\u5b50\u8fdb\u7a0b\u7ed3\u675f\u540e\u7ee7\u7eed\u6267\u884c join \u00b6 join():\u540c\u6b65\u963b\u585e--\u76f4\u81f3\u542f\u52a8\u7684\u7ebf\u7a0b\u7ec8\u6b62\u4e4b\u524d\u4e00\u76f4\u6302\u8d77\uff1b\u9664\u975e\u7ed9\u51fa\u4e86 timeout\uff08\u79d2\uff09\uff0c\u5426\u5219\u4f1a\u4e00\u76f4\u963b\u585e 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 from multiprocessing import Process import os import time def func (): time . sleep ( 2 ) print ( ' %s func: ppid: %s , pid: %s ' % ( time . strftime ( \"%Y-%m- %d %H:%M:%S\" ), os . getppid (), os . getpid ())) if __name__ == '__main__' : print ( ' %s main: ppid: %s , pid: %s ' % ( time . strftime ( \"%Y-%m- %d %H:%M:%S\" ), os . getppid (), os . getpid ())) p = Process ( target = func ) p . start () p . join () # \u76f4\u81f3\u542f\u52a8\u7684\u7ebf\u7a0b\u7ec8\u6b62\u4e4b\u524d\u4e00\u76f4\u6302\u8d77\uff1b\u9664\u975e\u7ed9\u51fa\u4e86 timeout\uff08\u79d2\uff09\uff0c\u5426\u5219\u4f1a\u4e00\u76f4\u963b\u585e print ( time . strftime ( \"%Y-%m- %d %H:%M:%S\" ), 'end' ) # \u8f93\u51fa\u7ed3\u679c # 2020-02-17 11:38:47 main: ppid:19674, pid: 20103 # 2020-02-17 11:38:49 func: ppid:20103, pid: 20104 # 2020-02-17 11:38:49 end #### \u5982\u679c\u6ca1\u6709join\u8f93\u51fa\u7ed3\u679c #### #2020-02-17 11:38:57 main: ppid:19674, pid: 20115 #2020-02-17 11:38:57 end #2020-02-17 11:38:59 func: ppid:20115, pid: 20116 \u591a\u4e2a\u5b50\u8fdb\u7a0bjoin 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 from multiprocessing import Process import os import time def func ( n ): time . sleep ( 2 ) print ( ' %s func %d : ppid: %s , pid: %s ' % ( time . strftime ( \"%Y-%m- %d %H:%M:%S\" ), n , os . getppid (), os . getpid ())) if __name__ == '__main__' : print ( ' %s main: ppid: %s , pid: %s ' % ( time . strftime ( \"%Y-%m- %d %H:%M:%S\" ), os . getppid (), os . getpid ())) p_list = [] for arg in range ( 1 , 5 ): p = Process ( target = func , args = ( arg ,)) p . start () p_list . append ( p ) for p in p_list : p . join () time . sleep ( 1 ) print ( time . strftime ( \"%Y-%m- %d %H:%M:%S\" ), 'end' ) # \u8f93\u51fa\u7ed3\u679c # 2020-02-17 12:15:53 main: ppid:83012, pid: 79880 # 2020-02-17 12:15:56 func1: ppid:79880, pid: 76312 # 2020-02-17 12:15:56 func2: ppid:79880, pid: 83728 # 2020-02-17 12:15:56 func3: ppid:79880, pid: 72620 # 2020-02-17 12:15:56 func4: ppid:79880, pid: 72696 # 2020-02-17 12:15:57 end 3.\u5176\u4ed6\u5c5e\u6027\u548c\u65b9\u6cd5 \u00b6 \u5c5e\u6027/\u65b9\u6cd5 \u529f\u80fd current_process().pid \u67e5\u770b\u5f53\u524d\u8fdb\u7a0b\u7684\u8fdb\u7a0b\u53f7 p.is_alive() \u5224\u65ad\u5f53\u524d\u8fdb\u7a0b\u662f\u5426\u5b58\u6d3b p.terminate() \u5f3a\u5236\u7ed3\u675f\u4e00\u4e2a\u7a0b\u5e8f 4. \u5b88\u62a4\u8fdb\u7a0b \u00b6 \u5728start\u4e4b\u524d\u8bbe\u7f6e daemon = True \u3002 \u5b88\u62a4\u8fdb\u7a0b\u4f1a\u7b49\u5f85 \u4e3b\u8fdb\u7a0b\u4ee3\u7801 \u7ed3\u675f\u4e4b\u540e\u624d\u7ed3\u675f\u3002\u4e3b\u8fdb\u7a0b\u9700\u8981\u56de\u6536\u5b88\u62a4\u8fdb\u7a0b\u8d44\u6e90\uff0c\u6240\u6709\u4f1a\u6700\u540e\u7ed3\u675f\u3002 \u5982\u679c\u4e3b\u8fdb\u7a0b\u4ee3\u7801\u7ed3\u675f\u4e4b\u540e\u8fd8\u6709\u5176\u4ed6\u5b50\u8fdb\u7a0b\u5728\u8fd0\u884c\uff0c\u5b88\u62a4\u8fdb\u7a0b\u4e0d\u5b88\u62a4 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 from multiprocessing import Process import time def func1 (): while True : print ( 'func1' ) time . sleep ( 1 ) def func2 (): for i in range ( 5 ): print ( 'func2' , i ) time . sleep ( 1 ) if __name__ == '__main__' : p1 = Process ( target = func1 ) p1 . daemon = True # p1\u8bbe\u7f6e\u4e3a\u5b88\u62a4\u8fdb\u7a0b p1 . start () # p1\u542f\u52a8\u65b0\u7684\u8fdb\u7a0b\u5f00\u59cb\u6267\u884c p2 = Process ( target = func2 ) p2 . start () # p2\u542f\u52a8\u65b0\u7684\u8fdb\u7a0b\u5f00\u59cb\u6267\u884c time . sleep ( 3 ) # \u4e3b\u8fdb\u7a0b\u7ee7\u7eed\u6267\u884c\uff0c3\u79d2\u4e4b\u540e\u4e3b\u8fdb\u7a0b\u7684\u4ee3\u7801\u6267\u884c\u5b8c\u6210\uff0cp1\u5b88\u62a4\u8fdb\u7a0b\u968f\u4e4b\u7ed3\u675f\uff0c\u4f46\u662fp2\u8fdb\u7a0b\u4f1a\u7ee7\u7eed\u6267\u884c\uff0c\u76f4\u5230p2\u7ed3\u675f\u4e4b\u540e\uff0c\u811a\u672c\u6267\u884c\u7ed3\u675f\u3002 # \u8f93\u51fa\u7ed3\u679c func1 func2 0 func1 func2 1 func1 func2 2 func2 3 func2 4 5. \u9501 \u00b6 \u4e0d\u4f7f\u7528\u9501\u7684\u60c5\u51b5 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 #!/usr/bin/env python3 # coding:utf-8 from multiprocessing import Process , Lock import time import json import random def search_ticket ( i ): # \u67e5\u8be2\u4f59\u7968 with open ( \"ticket.db\" , 'r' , encoding = 'utf-8' ) as f : ticket = json . load ( f ) print ( '\u7528\u6237 %s \u67e5\u8be2\u4f59\u7968\uff0c\u5f53\u524d\u4f59\u7968\uff1a %s \u5f20.' % ( i , ticket . get ( 'num' )), end = '' ) def buy_ticket ( i ): with open ( \"ticket.db\" , 'r' , encoding = 'utf-8' ) as f : ticket = json . load ( f ) # \u6a21\u62df\u7f51\u7edc\u5ef6\u65f6 time . sleep ( random . randint ( 1 , 3 )) # \u5224\u65ad\u5f53\u524d\u662f\u5426\u6709\u7968 if ticket . get ( 'num' ) > 0 : # \u4fee\u6539\u6570\u636e\u5e93 ticket [ 'num' ] -= 1 # \u5199\u5165\u6570\u636e with open ( 'ticket.db' , mode = 'w' , encoding = 'utf-8' ) as f : json . dump ( ticket , f ) print ( 'user %s \u8d2d\u7968\u6210\u529f!' % i ) else : print ( '\u4f59\u7968\u4e0d\u8db3\uff0c\u8d2d\u7968\u5931\u8d25!' ) def get_ticket ( i ): search_ticket ( i ) buy_ticket ( i ) def create_db (): ticket = { 'num' : 1 } with open ( 'ticket.db' , mode = 'w' , encoding = 'utf-8' ) as f : json . dump ( ticket , f ) if __name__ == '__main__' : create_db () for i in range ( 1 , 11 ): p = Process ( target = get_ticket , args = ( i ,)) p . start () ###################################### \u7528\u6237 3 \u67e5\u8be2\u4f59\u7968\uff0c\u5f53\u524d\u4f59\u7968\uff1a 1 \u5f20 . user3\u8d2d\u7968\u6210\u529f ! \u7528\u6237 4 \u67e5\u8be2\u4f59\u7968\uff0c\u5f53\u524d\u4f59\u7968\uff1a 1 \u5f20 . user4\u8d2d\u7968\u6210\u529f ! \u7528\u6237 6 \u67e5\u8be2\u4f59\u7968\uff0c\u5f53\u524d\u4f59\u7968\uff1a 1 \u5f20 . user6\u8d2d\u7968\u6210\u529f ! \u7528\u6237 10 \u67e5\u8be2\u4f59\u7968\uff0c\u5f53\u524d\u4f59\u7968\uff1a 1 \u5f20 . user10\u8d2d\u7968\u6210\u529f ! \u7528\u6237 5 \u67e5\u8be2\u4f59\u7968\uff0c\u5f53\u524d\u4f59\u7968\uff1a 1 \u5f20 . user5\u8d2d\u7968\u6210\u529f ! \u7528\u6237 7 \u67e5\u8be2\u4f59\u7968\uff0c\u5f53\u524d\u4f59\u7968\uff1a 1 \u5f20 . user7\u8d2d\u7968\u6210\u529f ! \u7528\u6237 1 \u67e5\u8be2\u4f59\u7968\uff0c\u5f53\u524d\u4f59\u7968\uff1a 1 \u5f20 . user1\u8d2d\u7968\u6210\u529f ! \u7528\u6237 2 \u67e5\u8be2\u4f59\u7968\uff0c\u5f53\u524d\u4f59\u7968\uff1a 1 \u5f20 . user2\u8d2d\u7968\u6210\u529f ! \u7528\u6237 9 \u67e5\u8be2\u4f59\u7968\uff0c\u5f53\u524d\u4f59\u7968\uff1a 1 \u5f20 . user9\u8d2d\u7968\u6210\u529f ! \u7528\u6237 8 \u67e5\u8be2\u4f59\u7968\uff0c\u5f53\u524d\u4f59\u7968\uff1a 1 \u5f20 . user8\u8d2d\u7968\u6210\u529f ! \u4e92\u65a5\u9501 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 #!/usr/bin/env python3 # coding:utf-8 from multiprocessing import Process , Lock import time import json import random def search_ticket ( i ): # \u67e5\u8be2\u4f59\u7968 with open ( \"ticket.db\" , 'r' , encoding = 'utf-8' ) as f : ticket = json . load ( f ) print ( '\u7528\u6237 %s \u67e5\u8be2\u4f59\u7968\uff0c\u5f53\u524d\u4f59\u7968\uff1a %s \u5f20.' % ( i , ticket . get ( 'num' )), end = '' ) def buy_ticket ( i ): with open ( \"ticket.db\" , 'r' , encoding = 'utf-8' ) as f : ticket = json . load ( f ) # \u5224\u65ad\u5f53\u524d\u662f\u5426\u6709\u7968 if ticket . get ( 'num' ) > 0 : # \u4fee\u6539\u6570\u636e\u5e93 ticket [ 'num' ] -= 1 # \u6a21\u62df\u7f51\u7edc\u5ef6\u65f6 time . sleep ( random . randint ( 1 , 3 )) # \u5199\u5165\u6570\u636e with open ( 'ticket.db' , mode = 'w' , encoding = 'utf-8' ) as f : json . dump ( ticket , f ) print ( 'user %s \u8d2d\u7968\u6210\u529f!' % i ) else : print ( '\u4f59\u7968\u4e0d\u8db3\uff0c\u8d2d\u7968\u5931\u8d25!' ) def get_ticket ( i , lock ): search_ticket ( i ) #lock.acquire() # \u52a0\u9501 #buy_ticket(i) #lock.release() # \u91ca\u653e\u9501 with lock : # with \u5728\u6267\u884c\u51fd\u6570\u524d\u52a0\u9501\uff0c\u6267\u884c\u51fd\u6570\u540e\u91ca\u653e\u9501\uff0cwith \u53ef\u4ee5\u4fdd\u8bc1\u5728\u51fd\u6570\u6267\u884c\u5931\u8d25\u540e\u91ca\u653e\u9501\u3002 buy_ticket ( i ) def create_db (): ticket = { 'num' : 3 } with open ( 'ticket.db' , mode = 'w' , encoding = 'utf-8' ) as f : json . dump ( ticket , f ) if __name__ == '__main__' : create_db () lock = Lock () for i in range ( 1 , 11 ): p = Process ( target = get_ticket , args = ( i , lock )) p . start () ################################## # \u867d\u7136\u6bcf\u4e2a\u4eba\u90fd\u67e5\u5230\u4f59\u7968\u67093\u5f20\uff0c\u4f46\u53ea\u6709\u4e09\u4e2a\u4eba\u4e70\u7968\u6210\u529f \u7528\u6237 1 \u67e5\u8be2\u4f59\u7968\uff0c\u5f53\u524d\u4f59\u7968\uff1a 3 \u5f20 . user1\u8d2d\u7968\u6210\u529f ! \u7528\u6237 2 \u67e5\u8be2\u4f59\u7968\uff0c\u5f53\u524d\u4f59\u7968\uff1a 3 \u5f20 . user2\u8d2d\u7968\u6210\u529f ! \u7528\u6237 4 \u67e5\u8be2\u4f59\u7968\uff0c\u5f53\u524d\u4f59\u7968\uff1a 3 \u5f20 . user4\u8d2d\u7968\u6210\u529f ! \u7528\u6237 5 \u67e5\u8be2\u4f59\u7968\uff0c\u5f53\u524d\u4f59\u7968\uff1a 3 \u5f20 . \u4f59\u7968\u4e0d\u8db3\uff0c\u8d2d\u7968\u5931\u8d25! \u7528\u6237 7 \u67e5\u8be2\u4f59\u7968\uff0c\u5f53\u524d\u4f59\u7968\uff1a 3 \u5f20 . \u4f59\u7968\u4e0d\u8db3\uff0c\u8d2d\u7968\u5931\u8d25! \u7528\u6237 8 \u67e5\u8be2\u4f59\u7968\uff0c\u5f53\u524d\u4f59\u7968\uff1a 3 \u5f20 . \u4f59\u7968\u4e0d\u8db3\uff0c\u8d2d\u7968\u5931\u8d25! \u7528\u6237 9 \u67e5\u8be2\u4f59\u7968\uff0c\u5f53\u524d\u4f59\u7968\uff1a 3 \u5f20 . \u4f59\u7968\u4e0d\u8db3\uff0c\u8d2d\u7968\u5931\u8d25! \u7528\u6237 3 \u67e5\u8be2\u4f59\u7968\uff0c\u5f53\u524d\u4f59\u7968\uff1a 3 \u5f20 . \u4f59\u7968\u4e0d\u8db3\uff0c\u8d2d\u7968\u5931\u8d25! \u7528\u6237 6 \u67e5\u8be2\u4f59\u7968\uff0c\u5f53\u524d\u4f59\u7968\uff1a 3 \u5f20 . \u4f59\u7968\u4e0d\u8db3\uff0c\u8d2d\u7968\u5931\u8d25! \u7528\u6237 10 \u67e5\u8be2\u4f59\u7968\uff0c\u5f53\u524d\u4f59\u7968\uff1a 3 \u5f20 . \u4f59\u7968\u4e0d\u8db3\uff0c\u8d2d\u7968\u5931\u8d25! \u4e92\u65a5\u9501\u4e0d\u80fdacquire\u591a\u6b21 6. \u8fdb\u7a0b\u95f4\u901a\u4fe1\uff08IPC\uff09 \u00b6 \u57fa\u4e8e\u6587\u4ef6 \u540c\u4e00\u673a\u5668 (socket) \u57fa\u4e8e\u7f51\u7edc \u540c\u4e00\u6216\u4e0d\u540c\u673a\u5668 (memcheck, redis, rabbitmq,kafka) 6.1 Queue \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 from multiprocessing import Queue , Process def foo ( q ): msg = q . get () print ( msg ) def bar ( q ): q . put ( 'hello world!' ) if __name__ == '__main__' : q = Queue () p1 = Process ( target = bar , args = ( q ,)) p1 . start () p2 = Process ( target = foo , args = ( q ,)) p2 . start () \u961f\u5217\u4e2dput\u4e00\u4e2a\uff0cget\u4e00\u4e2a\uff0c\u5982\u679cget\u6570\u91cf\u8d85\u8fc7put\uff0cget\u4f1a\u4e00\u76f4\u7b49\u5f85\u3002 6.2 \u751f\u4ea7\u8005\u6d88\u8d39\u8005\u6a21\u578b \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 from multiprocessing import Process from multiprocessing import Queue import time def comsumor ( q ): print ( '-\u6d88\u8d39\u7b2c %s \u4e2a\u4ea7\u54c1' % q . get ()) def productor ( q , i ): print ( '+\u751f\u4ea7\u7b2c %s \u4e2a\u4ea7\u54c1' % ( i ,)) q . put (( i )) time . sleep ( 0.5 ) if __name__ == '__main__' : q = Queue () for i in range ( 10 ): p = Process ( target = productor , args = ( q , i )) p . start () for i in range ( 10 ): c = Process ( target = comsumor , args = ( q ,)) c . start () 7. \u8fdb\u7a0b\u95f4\u6570\u636e\u5171\u4eab \u00b6 python\u4e2d\u53ef\u4ee5\u901a\u8fc7 Manager \u7c7b\u52a0\u9501\u7684\u65b9\u6cd5\u5b9e\u73b0\u8fdb\u7a0b\u95f4\u7684\u6570\u636e\u5171\u4eab\uff0c\u4f46\u662f\u5e26\u6765\u7684\u6027\u80fd\u4ee3\u4ef7\u5f88\u9ad8\uff0c\u4e0d\u63a8\u8350\u4f7f\u7528\u8fd9\u79cd\u65b9\u6cd5\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 from multiprocessing import Process , Manager , Lock def change_dic ( dic , lock ): with lock : dic [ 'key' ] -= 1 if __name__ == '__main__' : m = Manager () dic = m . dict ({ 'key' : 100 }) lock = Lock () p_l = [] for i in range ( 100 ): p = Process ( target = change_dic , args = ( dic , lock )) p . start () p_l . append ( p ) for p in p_l : p . join () print ( dic ) \u4e09\u3001\u591a\u7ebf\u7a0b \u00b6 1. \u591a\u7ebf\u7a0b \u00b6 \u7ebf\u7a0b\u662f\u80fd\u88ab\u64cd\u4f5c\u7cfb\u7edf\u8c03\u5ea6\u7684\u6700\u5c0f\u5355\u4f4d \u540c\u4e00\u4e2a\u8fdb\u7a0b\u4e2d\u7684\u7ebf\u7a0b\u53ef\u4ee5\u540c\u65f6\u88abCPU\u6267\u884c \u7ebf\u7a0b\u4e4b\u95f4\u6570\u636e\u5171\u4eab \u7ebf\u7a0b\u7684\u5207\u6362\u5f00\u9500\u8f83\u5c0f CPython\u4e2d\u7684\u7ebf\u7a0b\uff1a gc\u5783\u573e\u56de\u6536\uff1a\u5f15\u7528\u8ba1\u6570+\u5206\u4ee3\u56de\u6536 \u5168\u5c40\u89e3\u91ca\u5668\u9501\uff1a\u4e3a\u4e86\u5b8c\u6210gc\u7684\u56de\u6536\u673a\u5236\u3002\u5bfc\u81f4\u4e00\u4e2a\u8fdb\u7a0b\u4e2d\u7684\u591a\u4e2a\u7ebf\u7a0b\u53ea\u6709\u4e00\u4e2a\u7ebf\u7a0b\u88ab\u6267\u884c\u3002 pypy \u4e5f\u4f7f\u7528gc\u56de\u6536\uff0c\u540c\u6837\u4e0d\u80fd\u4f7f\u7528\u591a\u6838\u3002 2.\u5f00\u542f\u7ebf\u7a0b \u00b6 2.1 \u65b9\u6cd5\u4e00 \u9762\u5411\u8fc7\u7a0b \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 from threading import Thread from threading import current_thread # \u5728\u6267\u884c\u7684\u7ebf\u7a0b\u4e2d\u8fd4\u56de\u5f53\u524d\u7ebf\u7a0b\u7684id from threading import enumerate # \u4ee5\u5217\u8868\u7684\u683c\u5f0f\u8fd4\u56de\u5b58\u6d3b\u7684\u7ebf\u7a0b\u5bf9\u8c61 from threading import active_count # \u5f53\u524d\u5b58\u6d3b\u7ebf\u7a0b\u603b\u6570 import time def func ( i ): print ( 'start: %s ,\u7ebf\u7a0bid: %s ' % ( i , current_thread () . ident )) time . sleep ( 1 ) print ( 'end: %s ' % i ) if __name__ == '__main__' : t_l = [] for i in range ( 10 ): t = Thread ( target = func , args = ( i ,)) t . start () t_l . append ( t ) print ( '\u8fdb\u7a0b\u5217\u8868\uff1a' , enumerate ()) print ( '\u5f53\u524d\u5b58\u6d3b\u7684\u8fdb\u7a0b\u6570\uff1a' , active_count ()) for t in t_l : t . join () print ( \"\u6240\u6709\u7ebf\u7a0b\u6267\u884c\u5b8c\u6210\" ) 2.1 \u65b9\u6cd5\u4e8c \u9762\u5411\u8fc7\u7a0b \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 from threading import Thread class MyThread ( Thread ): def __init__ ( self , a ): self . a = a super () . __init__ () def run ( self ): print ( self . ident ) t = MyThread ( 'a' ) t . start () # \u5f00\u542f\u7ebf\u7a0b\uff0c\u7136\u540e\u5728\u7ebf\u7a0b\u4e2d\u6267\u884crun\u65b9\u6cd5\u3002 print ( t . ident ) 3. \u5b88\u62a4\u7ebf\u7a0b \u00b6 \u4e00\u822c\u4e3b\u7ebf\u7a0b\u4f1a\u7b49\u5f85\u5b50\u7ebf\u7a0b\u7ed3\u675f\u4e4b\u540e\u624d\u7ed3\u675f\u3002 \u5b88\u62a4\u7ebf\u7a0b\u968f\u7740\u4e3b\u7ebf\u7a0b\u7684\u7ed3\u675f\u800c\u7ed3\u675f\u3002 \u5b88\u62a4\u7ebf\u7a0b\u4f1a\u5728\u4ee3\u7801\u7ed3\u675f\u4e4b\u540e\u7ee7\u7eed\u5b88\u62a4\u5176\u4ed6\u5b50\u7ebf\u7a0b \u5176\u4ed6\u5b50\u7ebf\u7a0b\u7ed3\u675f-->\u4e3b\u7ebf\u7a0b\u7ed3\u675f--> \u4e3b\u8fdb\u7a0b\u7ed3\u675f-->\u6574\u4e2a\u8fdb\u7a0b\u4e2d\u6240\u6709\u8d44\u6e90\u56de\u6536-->\u5b88\u62a4\u8fdb\u7a0b\u4e5f\u4f1a\u88ab\u56de\u6536 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 from threading import Thread import time def func1 (): while True : print ( '\u6267\u884c\u5b50\u7ebf\u7a0b1...' ) time . sleep ( 1 ) def func2 (): for i in range ( 3 ): print ( '\u6267\u884c\u5b50\u7ebf\u7a0b2...' ) time . sleep ( 1 ) t1 = Thread ( target = func1 ) t1 . daemon = True t1 . start () t2 = Thread ( target = func2 ) t2 . start () # \u8f93\u51fa\u7ed3\u679c \u6267\u884c\u5b50\u7ebf\u7a0b 1. .. \u6267\u884c\u5b50\u7ebf\u7a0b 2. .. \u6267\u884c\u5b50\u7ebf\u7a0b 1. .. \u6267\u884c\u5b50\u7ebf\u7a0b 2. .. \u6267\u884c\u5b50\u7ebf\u7a0b 1. .. \u6267\u884c\u5b50\u7ebf\u7a0b 2. .. \u6267\u884c\u5b50\u7ebf\u7a0b 1. .. \u5b50\u7ebf\u7a0bfunc2\u7ed3\u675f\u4e4b\u540e\uff0c\u4e0d\u7b49\u5f85\u7ebf\u7a0bfunc1\uff0c\u4e3b\u7ebf\u7a0b\u7ed3\u675f\u3002 4. \u9501 \u00b6 4.1 \u7ebf\u7a0b\u9501 \u00b6 \u5f15\u5165\u7ebf\u7a0b\u9501\u7684\u539f\u56e0\uff1a \u5728 += \u3001 -= \u3001 *= \u3001 /= \u8fd0\u7b97\u4e2d\uff0c\u8ba1\u7b97\u548c\u8d4b\u503c\u662f\u4e24\u4e2a\u64cd\u4f5c\uff0c\u5176\u4ed6\u5148\u8ba1\u7b97\u540e\u8d4b\u503c\u7684\u8868\u8fbe\u5f0f\u90fd\u4f1a\u5f15\u8d77\u6570\u636e\u4e0d\u5b89\u5168 if \u3001 while \u5224\u65ad\u540c\u6837\u4f1a\u5f15\u8d77\u6570\u636e\u4e0d\u5b89\u5168 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 from threading import Thread , Lock n = 0 def add ( lock ): for i in range ( 30000 ): global n with lock : n += 1 def sub ( lock ): for i in range ( 30000 ): global n with lock : n -= 1 t_l = [] lock = Lock () for i in range ( 2 ): t1 = Thread ( target = add , args = ( lock ,)) t1 . start () t2 = Thread ( target = sub , args = ( lock ,)) t2 . start () t_l . append ( t1 ) t_l . append ( t2 ) for t in t_l : t . join () print ( n ) 1.\u5c3d\u91cf\u907f\u514d\u64cd\u4f5c\u5168\u5c40\u53d8\u91cf\uff1b2.\u4e0d\u8981\u5728\u7c7b\u91cc\u64cd\u4f5c\u9759\u6001\u53d8\u91cf 4.2 \u9012\u5f52\u9501 \u00b6 \u540c\u4e00\u4e2a\u7ebf\u7a0b\u4e2d\u53ef\u4ee5lock.acquire\u591a\u6b21\uff0c\u540c\u65f6\u9700\u8981lock.release\u591a\u6b21\u624d\u80fd\u91ca\u653e\u9501\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 from threading import Thread , RLock def func ( i , lock ): lock . acquire () lock . acquire () print ( i , 'start sub thread.' ) lock . release () lock . release () if __name__ == \"__main__\" : lock = RLock () for i in range ( 5 ): t = Thread ( target = func , args = ( i , lock )) t . start () \u9012\u5f52\u9501\u7684\u5c42\u7ea7\u8d8a\u591a\u6548\u7387\u8d8a\u4f4e\u3002 4.3 \u6b7b\u9501 \u00b6 \u6709\u591a\u628a\u9501\uff0c\u5e76\u5728\u518d\u591a\u4e2a\u7ebf\u7a0b\u4e2d\u4ea4\u53c9\u4f7f\u7528\u5c31\u4f1a\u4ea7\u751f\u6b7b\u9501\u73b0\u8c61\u3002\u5f53\u4f7f\u7528\u4e92\u65a5\u9501\u51fa\u73b0\u6b7b\u9501\u73b0\u8c61\u65f6\uff0c\u53ef\u4ee5\u628a\u6240\u6709\u7684\u4e92\u65a5\u9501\u90fd\u6539\u6210\u4e00\u628a\u9012\u5f52\u9501\u3002\u4f46\u662f\u6267\u884c\u7684\u6548\u7387\u961f\u964d\u4f4e\u3002 5. \u7ebf\u7a0b\u961f\u5217 \u00b6 5.1 \u5148\u8fdb\u5148\u51fa\u961f\u5217 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 import queue # \u6570\u636e\u4e4b\u95f4\u7ebf\u7a0b\u5b89\u5168\u7684\u961f\u5217\u5bb9\u5668 q = queue . Queue ( 3 ) # \u5148\u8fdb\u5148\u51fa\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u961f\u5217\u5927\u5c0f q . put ( 1 ) print ( q . get ()) # \u5f02\u5e38\u5904\u7406 try : q . get_nowait () except queue . Empty : # \u5f53\u961f\u5217\u4e3a\u7a7a\u65f6\u629b\u51fa\u5f02\u5e38 pass 5.2 \u5148\u8fdb\u540e\u51fa\u961f\u5217 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 from queue import LifoQueue lq = LifoQueue () for i in range ( 3 ): lq . put ( i ) for i in range ( 3 ): print ( lq . get ()) # \u8f93\u51fa\u7ed3\u679c # 2 # 1 # 0 5.3 \u4f18\u5148\u7ea7\u961f\u5217 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 from queue import PriorityQueue pq = PriorityQueue () # (\u4f18\u5148\u7ea7,\u6570\u636e\u5185\u5bb9 ) pq . put (( 8 , \"A\" )) pq . put (( 2 , \"B\" )) print ( pq . get ()) print ( pq . get ()) # \u8f93\u51fa\u7ed3\u679c # (2, 'B') # (8, 'A') \u4f18\u5148\u7ea7\u6839\u636eASCII\u6392\u5e8f \u4e09\u3001\u6c60 \u00b6 1. \u7ebf\u7a0b\u6c60 \u00b6 1 2 3 4 5 6 7 8 9 10 from concurrent.futures import ThreadPoolExecutor , ProcessPoolExecutor from threading import current_thread import time def func ( i ): print ( i , current_thread () . ident ) tp = ThreadPoolExecutor ( 4 ) # \u5b9e\u4f8b\u5316\u7ebf\u7a0b\u6c60\uff0c\u4f20\u5165\u7ebf\u7a0b\u6c60\u4e2d\u7ebf\u7a0b\u6570\u91cf for i in range ( 20 ): tp . submit ( func , i ) 2. \u8fdb\u7a0b\u6c60 \u00b6 2.1.\u521b\u5efa\u7ebf\u7a0b\u6c60 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 from concurrent.futures import ThreadPoolExecutor , ProcessPoolExecutor import os import time import random def func ( i ): print ( 'start: %s %s ' % ( i , os . getpid ())) time . sleep ( random . randint ( 1 , 3 )) print ( 'end: %s %s ' % ( i , os . getpid ())) if __name__ == \"__main__\" : tp = ProcessPoolExecutor ( 4 ) # \u5b9e\u4f8b\u5316\u7ebf\u7a0b\u6c60\uff0c\u4f20\u5165\u7ebf\u7a0b\u6c60\u4e2d\u7ebf\u7a0b\u6570\u91cf for i in range ( 20 ): tp . submit ( func , i ) 2.2 \u4ece\u8fdb\u7a0b\u6c60\u4e2d\u83b7\u53d6\u7ed3\u679c \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 from concurrent.futures import ThreadPoolExecutor , ProcessPoolExecutor import os import time import random def func ( i ): print ( 'start: %s %s ' % ( i , os . getpid ())) time . sleep ( random . randint ( 1 , 3 )) print ( 'end: %s %s ' % ( i , os . getpid ())) return i ** 2 if __name__ == \"__main__\" : tp = ProcessPoolExecutor ( 4 ) future_l = {} for i in range ( 20 ): # \u5f02\u6b65\u975e\u963b\u585e ret = tp . submit ( func , i ) # print(ret.result()) # \u540c\u6b65\u6267\u884c\uff0c\u5982\u679c\u5728\u8fd9\u91cc\u83b7\u53d6\u7ed3\u679c\uff1a\u6267\u884c\u5b8c\u4e00\u4e2a\u8fdb\u7a0b\u7b49\u5f85\u6536\u5230\u7ed3\u679c\u4e4b\u540e\u7ee7\u7eed\u6267\u884c future_l [ i ] = ret for k , v in future_l . items (): # \u540c\u6b65\u83b7\u53d6\u7ed3\u679c print ( k , '-->' , v . result ()) 2.3 \u4f20\u9012\u53c2\u6570 \u00b6 map`\u53ea\u80fd\u4f20\u9012\u7b80\u5355\u53c2\u6570 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 from concurrent.futures import ThreadPoolExecutor , ProcessPoolExecutor import os import time import random def func ( i ): print ( 'start: %s %s ' % ( i , os . getpid ())) time . sleep ( random . randint ( 1 , 3 )) print ( 'end: %s %s ' % ( i , os . getpid ())) return i ** 2 if __name__ == \"__main__\" : tp = ProcessPoolExecutor ( 4 ) # map(\u51fd\u6570,\u53ef\u8fed\u4ee3\u5bf9\u8c61) ret = tp . map ( func , range ( 20 )) for k in ret : print ( k ) 2.4 \u56de\u8c03\u51fd\u6570 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 from concurrent.futures import ThreadPoolExecutor , ProcessPoolExecutor import os import time import random def func ( i ): print ( 'start: %s %s ' % ( i , os . getpid ())) time . sleep ( random . randint ( 1 , 3 )) print ( 'end: %s %s ' % ( i , os . getpid ())) return i ** 2 def get_ret ( ret ): # \u5f02\u6b65\u963b\u585e print ( ret . result ()) if __name__ == \"__main__\" : tp = ProcessPoolExecutor ( 4 ) future_l = {} for i in range ( 20 ): # \u5f02\u6b65\u975e\u963b\u585e ret = tp . submit ( func , i ) # \u56de\u8c03\u51fd\u6570\uff0c\u7ed9ret\u5bf9\u8c61\u7ed1\u5b9a\u4e00\u4e2a\u56de\u8c03\u51fd\u6570\uff0c # \u7b49\u5f85ret\u5bf9\u5e94\u7684\u4efb\u52a1\u6709\u4e86\u7ed3\u679c\u4e4b\u540e\u7acb\u5373\u8c03\u7528get_ret\u51fd\u6570\uff0c\u5c31\u53ef\u4ee5\u5bf9\u7ed3\u679c\u7acb\u5373\u8fdb\u884c\u5904\u7406 ret . add_done_callback ( get_ret ) # \u5f02\u6b65\u963b\u585e \u56db. \u534f\u7a0b \u00b6","title":"\u5e76\u884c\u7f16\u7a0b"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/#_1","text":"","title":"\u8fdb\u7a0b\u3001\u7ebf\u7a0b\u4e0e\u534f\u7a0b"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/#_2","text":"","title":"\u4e00\u3001\u57fa\u672c\u6982\u5ff5"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/#1","text":"","title":"1.\u8fdb\u7a0b\u548c\u7ebf\u7a0b"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/#11","text":"\u8fdb\u7a0b\uff1a\u8fd0\u884c\u4e2d\u7684\u7a0b\u5e8f\u3002\u6bcf\u4e2a\u8fdb\u884c\u62e5\u6709\u81ea\u5df1\u7684\u5730\u5740\u7a7a\u95f4\u3001\u5185\u5b58\u3001\u6570\u636e\u6808\u7b49\u3002\u591a\u8fdb\u7a0b\u4e4b\u95f4\u7684\u6570\u636e\u4e0d\u5171\u4eab\u3002\u8fdb\u7a0b\u4e5f\u53ef\u4ee5\u901a\u8fc7\u6d3e\u751f\uff08fork \u6216 spawn\uff09\u65b0\u7684\u8fdb\u7a0b\u6765\u6267\u884c\u5176\u4ed6\u4efb\u52a1\uff0c\u8fdb\u7a0b\u95f4\u91c7\u7528\u8fdb\u7a0b\u95f4\u901a\u4fe1\uff08IPC\uff0cInter Process communication\uff09\u7684\u65b9\u5f0f\u5171\u4eab\u4fe1\u606f\u3002 \u50f5\u5c38\u8fdb\u7a0b \u5b64\u513f\u8fdb\u7a0b \u5b88\u62a4\u8fdb\u7a0b","title":"1.1 \u8fdb\u7a0b"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/#12","text":"\u5728\u4e00\u4e2a\u4e3b\u8fdb\u7a0b\u6216\u201c\u4e3b\u7ebf\u7a0b\u201d\u4e2d\u5e76\u884c\u8fd0\u884c\u7684\u4e00\u4e9b\u201c\u8ff7\u4f60\u8fdb\u7a0b\u201d\u3002 \u5168\u5c40\u89e3\u91ca\u5668\u9501\uff1a\u5bf9 Python \u865a\u62df\u673a\u7684\u8bbf\u95ee\u662f\u7531\u5168\u5c40\u89e3\u91ca\u5668\u9501\uff08GIL\uff0cglobal interpreter lock\uff09\u63a7\u5236\u7684\u3002\u8fd9\u4e2a\u9501\u5c31\u662f\u7528\u6765\u4fdd\u8bc1\u540c\u65f6\u53ea\u80fd\u6709\u4e00\u4e2a\u7ebf\u7a0b\u8fd0\u884c\u7684\u3002 \u5b88\u62a4\u7ebf\u7a0b\uff1a\u5982\u679c\u628a\u4e00\u4e2a\u7ebf\u7a0b\u8bbe\u7f6e\u4e3a\u5b88\u62a4\u7ebf\u7a0b\uff0c\u5c31\u8868\u793a\u8fd9\u4e2a\u7ebf\u7a0b\u662f\u4e0d\u91cd\u8981\u7684\uff0c\u8fdb\u7a0b\u9000\u51fa\u65f6\u4e0d\u9700\u8981\u7b49\u5f85\u8fd9\u4e2a\u7ebf\u7a0b\u6267\u884c\u5b8c\u6210\u3002 \u6c60\uff1a\u5728\u7a0b\u5e8f\u5f00\u59cb\u4e4b\u524d\u5148\u521b\u5efa\u51e0\u4e2a\u7ebf\u7a0b\u6216\u8fdb\u7a0b\u653e\u5728\u4e00\u4e2a\u6c60\u4e2d\uff0c\u5f00\u597d\u7684\u8fdb\u7a0b\u548c\u7ebf\u7a0b\u4f1a\u4e00\u76f4\u5b58\u5728\u5728\u6c60\u4e2d\uff0c\u53ef\u4ee5\u88ab\u591a\u4e2a\u4efb\u52a1\u53cd\u590d\u5229\u7528\uff0c\u53ef\u4ee5\u51cf\u5c11\u8c03\u5ea6\u5f00\u9500\uff0c\u51cf\u8f7b\u64cd\u4f5c\u7cfb\u7edf\u7684\u8d1f\u62c5\u3002","title":"1.2 \u7ebf\u7a0b"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/#2","text":"","title":"2. \u540c\u6b65\u548c\u5f02\u6b65"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/#21","text":"","title":"2.1 \u540c\u6b65"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/#22","text":"","title":"2.2 \u5f02\u6b65"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/#3","text":"","title":"3. \u963b\u585e\u548c\u975e\u963b\u585e"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/#33","text":"","title":"3.3 \u963b\u585e"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/#34","text":"","title":"3.4 \u975e\u963b\u585e"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/#_3","text":"","title":"\u4e8c\u3001\u591a\u8fdb\u7a0b"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/#1_1","text":"","title":"1. \u5f00\u542f\u5b50\u8fdb\u7a0b"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/#11_1","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 from multiprocessing import Process import os # \u5b50\u8fdb\u7a0b def func (): print ( 'func: ppid: %s , pid: %s ' % ( os . getppid (), os . getpid ())) if __name__ == '__main__' : print ( 'main: ppid: %s , pid: %s ' % ( os . getppid (), os . getpid ())) # \u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61 p = Process ( target = func ) # \u542f\u52a8\u4e00\u4e2a\u4e3b\u8fdb\u7a0b\uff0c\u5f02\u6b65\u65b9\u5f0f p . start () # \u8f93\u51fa\u7ed3\u679c # main: ppid:19674, pid: 19845 # func: ppid:19845, pid: 19846","title":"1.1 \u65b9\u6cd5\u4e00 \u9762\u5411\u51fd\u6570"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/#12_1","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 from multiprocessing import Process import os class MyProcess ( Process ): def __init__ ( self , name , age ): super () . __init__ () self . name = name self . age = age def run ( self ): print ( 'func: ppid: %s , pid: %s ' % ( os . getppid (), os . getpid ())) print ( 'func:' , self . name , self . age ) if __name__ == '__main__' : print ( 'main: ppid: %s , pid: %s ' % ( os . getppid (), os . getpid ())) p = MyProcess ( 'Jerry' , 18 ) p . start ()","title":"1.2 \u65b9\u6cd5\u4e8c \u9762\u5411\u5bf9\u8c61"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/#2-join","text":"join():\u540c\u6b65\u963b\u585e--\u76f4\u81f3\u542f\u52a8\u7684\u7ebf\u7a0b\u7ec8\u6b62\u4e4b\u524d\u4e00\u76f4\u6302\u8d77\uff1b\u9664\u975e\u7ed9\u51fa\u4e86 timeout\uff08\u79d2\uff09\uff0c\u5426\u5219\u4f1a\u4e00\u76f4\u963b\u585e 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 from multiprocessing import Process import os import time def func (): time . sleep ( 2 ) print ( ' %s func: ppid: %s , pid: %s ' % ( time . strftime ( \"%Y-%m- %d %H:%M:%S\" ), os . getppid (), os . getpid ())) if __name__ == '__main__' : print ( ' %s main: ppid: %s , pid: %s ' % ( time . strftime ( \"%Y-%m- %d %H:%M:%S\" ), os . getppid (), os . getpid ())) p = Process ( target = func ) p . start () p . join () # \u76f4\u81f3\u542f\u52a8\u7684\u7ebf\u7a0b\u7ec8\u6b62\u4e4b\u524d\u4e00\u76f4\u6302\u8d77\uff1b\u9664\u975e\u7ed9\u51fa\u4e86 timeout\uff08\u79d2\uff09\uff0c\u5426\u5219\u4f1a\u4e00\u76f4\u963b\u585e print ( time . strftime ( \"%Y-%m- %d %H:%M:%S\" ), 'end' ) # \u8f93\u51fa\u7ed3\u679c # 2020-02-17 11:38:47 main: ppid:19674, pid: 20103 # 2020-02-17 11:38:49 func: ppid:20103, pid: 20104 # 2020-02-17 11:38:49 end #### \u5982\u679c\u6ca1\u6709join\u8f93\u51fa\u7ed3\u679c #### #2020-02-17 11:38:57 main: ppid:19674, pid: 20115 #2020-02-17 11:38:57 end #2020-02-17 11:38:59 func: ppid:20115, pid: 20116 \u591a\u4e2a\u5b50\u8fdb\u7a0bjoin 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 from multiprocessing import Process import os import time def func ( n ): time . sleep ( 2 ) print ( ' %s func %d : ppid: %s , pid: %s ' % ( time . strftime ( \"%Y-%m- %d %H:%M:%S\" ), n , os . getppid (), os . getpid ())) if __name__ == '__main__' : print ( ' %s main: ppid: %s , pid: %s ' % ( time . strftime ( \"%Y-%m- %d %H:%M:%S\" ), os . getppid (), os . getpid ())) p_list = [] for arg in range ( 1 , 5 ): p = Process ( target = func , args = ( arg ,)) p . start () p_list . append ( p ) for p in p_list : p . join () time . sleep ( 1 ) print ( time . strftime ( \"%Y-%m- %d %H:%M:%S\" ), 'end' ) # \u8f93\u51fa\u7ed3\u679c # 2020-02-17 12:15:53 main: ppid:83012, pid: 79880 # 2020-02-17 12:15:56 func1: ppid:79880, pid: 76312 # 2020-02-17 12:15:56 func2: ppid:79880, pid: 83728 # 2020-02-17 12:15:56 func3: ppid:79880, pid: 72620 # 2020-02-17 12:15:56 func4: ppid:79880, pid: 72696 # 2020-02-17 12:15:57 end","title":"2. \u7b49\u5f85\u5b50\u8fdb\u7a0b\u7ed3\u675f\u540e\u7ee7\u7eed\u6267\u884cjoin"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/#3_1","text":"\u5c5e\u6027/\u65b9\u6cd5 \u529f\u80fd current_process().pid \u67e5\u770b\u5f53\u524d\u8fdb\u7a0b\u7684\u8fdb\u7a0b\u53f7 p.is_alive() \u5224\u65ad\u5f53\u524d\u8fdb\u7a0b\u662f\u5426\u5b58\u6d3b p.terminate() \u5f3a\u5236\u7ed3\u675f\u4e00\u4e2a\u7a0b\u5e8f","title":"3.\u5176\u4ed6\u5c5e\u6027\u548c\u65b9\u6cd5"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/#4","text":"\u5728start\u4e4b\u524d\u8bbe\u7f6e daemon = True \u3002 \u5b88\u62a4\u8fdb\u7a0b\u4f1a\u7b49\u5f85 \u4e3b\u8fdb\u7a0b\u4ee3\u7801 \u7ed3\u675f\u4e4b\u540e\u624d\u7ed3\u675f\u3002\u4e3b\u8fdb\u7a0b\u9700\u8981\u56de\u6536\u5b88\u62a4\u8fdb\u7a0b\u8d44\u6e90\uff0c\u6240\u6709\u4f1a\u6700\u540e\u7ed3\u675f\u3002 \u5982\u679c\u4e3b\u8fdb\u7a0b\u4ee3\u7801\u7ed3\u675f\u4e4b\u540e\u8fd8\u6709\u5176\u4ed6\u5b50\u8fdb\u7a0b\u5728\u8fd0\u884c\uff0c\u5b88\u62a4\u8fdb\u7a0b\u4e0d\u5b88\u62a4 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 from multiprocessing import Process import time def func1 (): while True : print ( 'func1' ) time . sleep ( 1 ) def func2 (): for i in range ( 5 ): print ( 'func2' , i ) time . sleep ( 1 ) if __name__ == '__main__' : p1 = Process ( target = func1 ) p1 . daemon = True # p1\u8bbe\u7f6e\u4e3a\u5b88\u62a4\u8fdb\u7a0b p1 . start () # p1\u542f\u52a8\u65b0\u7684\u8fdb\u7a0b\u5f00\u59cb\u6267\u884c p2 = Process ( target = func2 ) p2 . start () # p2\u542f\u52a8\u65b0\u7684\u8fdb\u7a0b\u5f00\u59cb\u6267\u884c time . sleep ( 3 ) # \u4e3b\u8fdb\u7a0b\u7ee7\u7eed\u6267\u884c\uff0c3\u79d2\u4e4b\u540e\u4e3b\u8fdb\u7a0b\u7684\u4ee3\u7801\u6267\u884c\u5b8c\u6210\uff0cp1\u5b88\u62a4\u8fdb\u7a0b\u968f\u4e4b\u7ed3\u675f\uff0c\u4f46\u662fp2\u8fdb\u7a0b\u4f1a\u7ee7\u7eed\u6267\u884c\uff0c\u76f4\u5230p2\u7ed3\u675f\u4e4b\u540e\uff0c\u811a\u672c\u6267\u884c\u7ed3\u675f\u3002 # \u8f93\u51fa\u7ed3\u679c func1 func2 0 func1 func2 1 func1 func2 2 func2 3 func2 4","title":"4. \u5b88\u62a4\u8fdb\u7a0b"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/#5","text":"\u4e0d\u4f7f\u7528\u9501\u7684\u60c5\u51b5 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 #!/usr/bin/env python3 # coding:utf-8 from multiprocessing import Process , Lock import time import json import random def search_ticket ( i ): # \u67e5\u8be2\u4f59\u7968 with open ( \"ticket.db\" , 'r' , encoding = 'utf-8' ) as f : ticket = json . load ( f ) print ( '\u7528\u6237 %s \u67e5\u8be2\u4f59\u7968\uff0c\u5f53\u524d\u4f59\u7968\uff1a %s \u5f20.' % ( i , ticket . get ( 'num' )), end = '' ) def buy_ticket ( i ): with open ( \"ticket.db\" , 'r' , encoding = 'utf-8' ) as f : ticket = json . load ( f ) # \u6a21\u62df\u7f51\u7edc\u5ef6\u65f6 time . sleep ( random . randint ( 1 , 3 )) # \u5224\u65ad\u5f53\u524d\u662f\u5426\u6709\u7968 if ticket . get ( 'num' ) > 0 : # \u4fee\u6539\u6570\u636e\u5e93 ticket [ 'num' ] -= 1 # \u5199\u5165\u6570\u636e with open ( 'ticket.db' , mode = 'w' , encoding = 'utf-8' ) as f : json . dump ( ticket , f ) print ( 'user %s \u8d2d\u7968\u6210\u529f!' % i ) else : print ( '\u4f59\u7968\u4e0d\u8db3\uff0c\u8d2d\u7968\u5931\u8d25!' ) def get_ticket ( i ): search_ticket ( i ) buy_ticket ( i ) def create_db (): ticket = { 'num' : 1 } with open ( 'ticket.db' , mode = 'w' , encoding = 'utf-8' ) as f : json . dump ( ticket , f ) if __name__ == '__main__' : create_db () for i in range ( 1 , 11 ): p = Process ( target = get_ticket , args = ( i ,)) p . start () ###################################### \u7528\u6237 3 \u67e5\u8be2\u4f59\u7968\uff0c\u5f53\u524d\u4f59\u7968\uff1a 1 \u5f20 . user3\u8d2d\u7968\u6210\u529f ! \u7528\u6237 4 \u67e5\u8be2\u4f59\u7968\uff0c\u5f53\u524d\u4f59\u7968\uff1a 1 \u5f20 . user4\u8d2d\u7968\u6210\u529f ! \u7528\u6237 6 \u67e5\u8be2\u4f59\u7968\uff0c\u5f53\u524d\u4f59\u7968\uff1a 1 \u5f20 . user6\u8d2d\u7968\u6210\u529f ! \u7528\u6237 10 \u67e5\u8be2\u4f59\u7968\uff0c\u5f53\u524d\u4f59\u7968\uff1a 1 \u5f20 . user10\u8d2d\u7968\u6210\u529f ! \u7528\u6237 5 \u67e5\u8be2\u4f59\u7968\uff0c\u5f53\u524d\u4f59\u7968\uff1a 1 \u5f20 . user5\u8d2d\u7968\u6210\u529f ! \u7528\u6237 7 \u67e5\u8be2\u4f59\u7968\uff0c\u5f53\u524d\u4f59\u7968\uff1a 1 \u5f20 . user7\u8d2d\u7968\u6210\u529f ! \u7528\u6237 1 \u67e5\u8be2\u4f59\u7968\uff0c\u5f53\u524d\u4f59\u7968\uff1a 1 \u5f20 . user1\u8d2d\u7968\u6210\u529f ! \u7528\u6237 2 \u67e5\u8be2\u4f59\u7968\uff0c\u5f53\u524d\u4f59\u7968\uff1a 1 \u5f20 . user2\u8d2d\u7968\u6210\u529f ! \u7528\u6237 9 \u67e5\u8be2\u4f59\u7968\uff0c\u5f53\u524d\u4f59\u7968\uff1a 1 \u5f20 . user9\u8d2d\u7968\u6210\u529f ! \u7528\u6237 8 \u67e5\u8be2\u4f59\u7968\uff0c\u5f53\u524d\u4f59\u7968\uff1a 1 \u5f20 . user8\u8d2d\u7968\u6210\u529f ! \u4e92\u65a5\u9501 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 #!/usr/bin/env python3 # coding:utf-8 from multiprocessing import Process , Lock import time import json import random def search_ticket ( i ): # \u67e5\u8be2\u4f59\u7968 with open ( \"ticket.db\" , 'r' , encoding = 'utf-8' ) as f : ticket = json . load ( f ) print ( '\u7528\u6237 %s \u67e5\u8be2\u4f59\u7968\uff0c\u5f53\u524d\u4f59\u7968\uff1a %s \u5f20.' % ( i , ticket . get ( 'num' )), end = '' ) def buy_ticket ( i ): with open ( \"ticket.db\" , 'r' , encoding = 'utf-8' ) as f : ticket = json . load ( f ) # \u5224\u65ad\u5f53\u524d\u662f\u5426\u6709\u7968 if ticket . get ( 'num' ) > 0 : # \u4fee\u6539\u6570\u636e\u5e93 ticket [ 'num' ] -= 1 # \u6a21\u62df\u7f51\u7edc\u5ef6\u65f6 time . sleep ( random . randint ( 1 , 3 )) # \u5199\u5165\u6570\u636e with open ( 'ticket.db' , mode = 'w' , encoding = 'utf-8' ) as f : json . dump ( ticket , f ) print ( 'user %s \u8d2d\u7968\u6210\u529f!' % i ) else : print ( '\u4f59\u7968\u4e0d\u8db3\uff0c\u8d2d\u7968\u5931\u8d25!' ) def get_ticket ( i , lock ): search_ticket ( i ) #lock.acquire() # \u52a0\u9501 #buy_ticket(i) #lock.release() # \u91ca\u653e\u9501 with lock : # with \u5728\u6267\u884c\u51fd\u6570\u524d\u52a0\u9501\uff0c\u6267\u884c\u51fd\u6570\u540e\u91ca\u653e\u9501\uff0cwith \u53ef\u4ee5\u4fdd\u8bc1\u5728\u51fd\u6570\u6267\u884c\u5931\u8d25\u540e\u91ca\u653e\u9501\u3002 buy_ticket ( i ) def create_db (): ticket = { 'num' : 3 } with open ( 'ticket.db' , mode = 'w' , encoding = 'utf-8' ) as f : json . dump ( ticket , f ) if __name__ == '__main__' : create_db () lock = Lock () for i in range ( 1 , 11 ): p = Process ( target = get_ticket , args = ( i , lock )) p . start () ################################## # \u867d\u7136\u6bcf\u4e2a\u4eba\u90fd\u67e5\u5230\u4f59\u7968\u67093\u5f20\uff0c\u4f46\u53ea\u6709\u4e09\u4e2a\u4eba\u4e70\u7968\u6210\u529f \u7528\u6237 1 \u67e5\u8be2\u4f59\u7968\uff0c\u5f53\u524d\u4f59\u7968\uff1a 3 \u5f20 . user1\u8d2d\u7968\u6210\u529f ! \u7528\u6237 2 \u67e5\u8be2\u4f59\u7968\uff0c\u5f53\u524d\u4f59\u7968\uff1a 3 \u5f20 . user2\u8d2d\u7968\u6210\u529f ! \u7528\u6237 4 \u67e5\u8be2\u4f59\u7968\uff0c\u5f53\u524d\u4f59\u7968\uff1a 3 \u5f20 . user4\u8d2d\u7968\u6210\u529f ! \u7528\u6237 5 \u67e5\u8be2\u4f59\u7968\uff0c\u5f53\u524d\u4f59\u7968\uff1a 3 \u5f20 . \u4f59\u7968\u4e0d\u8db3\uff0c\u8d2d\u7968\u5931\u8d25! \u7528\u6237 7 \u67e5\u8be2\u4f59\u7968\uff0c\u5f53\u524d\u4f59\u7968\uff1a 3 \u5f20 . \u4f59\u7968\u4e0d\u8db3\uff0c\u8d2d\u7968\u5931\u8d25! \u7528\u6237 8 \u67e5\u8be2\u4f59\u7968\uff0c\u5f53\u524d\u4f59\u7968\uff1a 3 \u5f20 . \u4f59\u7968\u4e0d\u8db3\uff0c\u8d2d\u7968\u5931\u8d25! \u7528\u6237 9 \u67e5\u8be2\u4f59\u7968\uff0c\u5f53\u524d\u4f59\u7968\uff1a 3 \u5f20 . \u4f59\u7968\u4e0d\u8db3\uff0c\u8d2d\u7968\u5931\u8d25! \u7528\u6237 3 \u67e5\u8be2\u4f59\u7968\uff0c\u5f53\u524d\u4f59\u7968\uff1a 3 \u5f20 . \u4f59\u7968\u4e0d\u8db3\uff0c\u8d2d\u7968\u5931\u8d25! \u7528\u6237 6 \u67e5\u8be2\u4f59\u7968\uff0c\u5f53\u524d\u4f59\u7968\uff1a 3 \u5f20 . \u4f59\u7968\u4e0d\u8db3\uff0c\u8d2d\u7968\u5931\u8d25! \u7528\u6237 10 \u67e5\u8be2\u4f59\u7968\uff0c\u5f53\u524d\u4f59\u7968\uff1a 3 \u5f20 . \u4f59\u7968\u4e0d\u8db3\uff0c\u8d2d\u7968\u5931\u8d25! \u4e92\u65a5\u9501\u4e0d\u80fdacquire\u591a\u6b21","title":"5. \u9501"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/#6-ipc","text":"\u57fa\u4e8e\u6587\u4ef6 \u540c\u4e00\u673a\u5668 (socket) \u57fa\u4e8e\u7f51\u7edc \u540c\u4e00\u6216\u4e0d\u540c\u673a\u5668 (memcheck, redis, rabbitmq,kafka)","title":"6. \u8fdb\u7a0b\u95f4\u901a\u4fe1\uff08IPC\uff09"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/#61-queue","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 from multiprocessing import Queue , Process def foo ( q ): msg = q . get () print ( msg ) def bar ( q ): q . put ( 'hello world!' ) if __name__ == '__main__' : q = Queue () p1 = Process ( target = bar , args = ( q ,)) p1 . start () p2 = Process ( target = foo , args = ( q ,)) p2 . start () \u961f\u5217\u4e2dput\u4e00\u4e2a\uff0cget\u4e00\u4e2a\uff0c\u5982\u679cget\u6570\u91cf\u8d85\u8fc7put\uff0cget\u4f1a\u4e00\u76f4\u7b49\u5f85\u3002","title":"6.1 Queue"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/#62","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 from multiprocessing import Process from multiprocessing import Queue import time def comsumor ( q ): print ( '-\u6d88\u8d39\u7b2c %s \u4e2a\u4ea7\u54c1' % q . get ()) def productor ( q , i ): print ( '+\u751f\u4ea7\u7b2c %s \u4e2a\u4ea7\u54c1' % ( i ,)) q . put (( i )) time . sleep ( 0.5 ) if __name__ == '__main__' : q = Queue () for i in range ( 10 ): p = Process ( target = productor , args = ( q , i )) p . start () for i in range ( 10 ): c = Process ( target = comsumor , args = ( q ,)) c . start ()","title":"6.2 \u751f\u4ea7\u8005\u6d88\u8d39\u8005\u6a21\u578b"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/#7","text":"python\u4e2d\u53ef\u4ee5\u901a\u8fc7 Manager \u7c7b\u52a0\u9501\u7684\u65b9\u6cd5\u5b9e\u73b0\u8fdb\u7a0b\u95f4\u7684\u6570\u636e\u5171\u4eab\uff0c\u4f46\u662f\u5e26\u6765\u7684\u6027\u80fd\u4ee3\u4ef7\u5f88\u9ad8\uff0c\u4e0d\u63a8\u8350\u4f7f\u7528\u8fd9\u79cd\u65b9\u6cd5\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 from multiprocessing import Process , Manager , Lock def change_dic ( dic , lock ): with lock : dic [ 'key' ] -= 1 if __name__ == '__main__' : m = Manager () dic = m . dict ({ 'key' : 100 }) lock = Lock () p_l = [] for i in range ( 100 ): p = Process ( target = change_dic , args = ( dic , lock )) p . start () p_l . append ( p ) for p in p_l : p . join () print ( dic )","title":"7. \u8fdb\u7a0b\u95f4\u6570\u636e\u5171\u4eab"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/#_4","text":"","title":"\u4e09\u3001\u591a\u7ebf\u7a0b"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/#1_2","text":"\u7ebf\u7a0b\u662f\u80fd\u88ab\u64cd\u4f5c\u7cfb\u7edf\u8c03\u5ea6\u7684\u6700\u5c0f\u5355\u4f4d \u540c\u4e00\u4e2a\u8fdb\u7a0b\u4e2d\u7684\u7ebf\u7a0b\u53ef\u4ee5\u540c\u65f6\u88abCPU\u6267\u884c \u7ebf\u7a0b\u4e4b\u95f4\u6570\u636e\u5171\u4eab \u7ebf\u7a0b\u7684\u5207\u6362\u5f00\u9500\u8f83\u5c0f CPython\u4e2d\u7684\u7ebf\u7a0b\uff1a gc\u5783\u573e\u56de\u6536\uff1a\u5f15\u7528\u8ba1\u6570+\u5206\u4ee3\u56de\u6536 \u5168\u5c40\u89e3\u91ca\u5668\u9501\uff1a\u4e3a\u4e86\u5b8c\u6210gc\u7684\u56de\u6536\u673a\u5236\u3002\u5bfc\u81f4\u4e00\u4e2a\u8fdb\u7a0b\u4e2d\u7684\u591a\u4e2a\u7ebf\u7a0b\u53ea\u6709\u4e00\u4e2a\u7ebf\u7a0b\u88ab\u6267\u884c\u3002 pypy \u4e5f\u4f7f\u7528gc\u56de\u6536\uff0c\u540c\u6837\u4e0d\u80fd\u4f7f\u7528\u591a\u6838\u3002","title":"1. \u591a\u7ebf\u7a0b"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/#2_1","text":"","title":"2.\u5f00\u542f\u7ebf\u7a0b"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/#21_1","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 from threading import Thread from threading import current_thread # \u5728\u6267\u884c\u7684\u7ebf\u7a0b\u4e2d\u8fd4\u56de\u5f53\u524d\u7ebf\u7a0b\u7684id from threading import enumerate # \u4ee5\u5217\u8868\u7684\u683c\u5f0f\u8fd4\u56de\u5b58\u6d3b\u7684\u7ebf\u7a0b\u5bf9\u8c61 from threading import active_count # \u5f53\u524d\u5b58\u6d3b\u7ebf\u7a0b\u603b\u6570 import time def func ( i ): print ( 'start: %s ,\u7ebf\u7a0bid: %s ' % ( i , current_thread () . ident )) time . sleep ( 1 ) print ( 'end: %s ' % i ) if __name__ == '__main__' : t_l = [] for i in range ( 10 ): t = Thread ( target = func , args = ( i ,)) t . start () t_l . append ( t ) print ( '\u8fdb\u7a0b\u5217\u8868\uff1a' , enumerate ()) print ( '\u5f53\u524d\u5b58\u6d3b\u7684\u8fdb\u7a0b\u6570\uff1a' , active_count ()) for t in t_l : t . join () print ( \"\u6240\u6709\u7ebf\u7a0b\u6267\u884c\u5b8c\u6210\" )","title":"2.1 \u65b9\u6cd5\u4e00 \u9762\u5411\u8fc7\u7a0b"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/#21_2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 from threading import Thread class MyThread ( Thread ): def __init__ ( self , a ): self . a = a super () . __init__ () def run ( self ): print ( self . ident ) t = MyThread ( 'a' ) t . start () # \u5f00\u542f\u7ebf\u7a0b\uff0c\u7136\u540e\u5728\u7ebf\u7a0b\u4e2d\u6267\u884crun\u65b9\u6cd5\u3002 print ( t . ident )","title":"2.1 \u65b9\u6cd5\u4e8c \u9762\u5411\u8fc7\u7a0b"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/#3_2","text":"\u4e00\u822c\u4e3b\u7ebf\u7a0b\u4f1a\u7b49\u5f85\u5b50\u7ebf\u7a0b\u7ed3\u675f\u4e4b\u540e\u624d\u7ed3\u675f\u3002 \u5b88\u62a4\u7ebf\u7a0b\u968f\u7740\u4e3b\u7ebf\u7a0b\u7684\u7ed3\u675f\u800c\u7ed3\u675f\u3002 \u5b88\u62a4\u7ebf\u7a0b\u4f1a\u5728\u4ee3\u7801\u7ed3\u675f\u4e4b\u540e\u7ee7\u7eed\u5b88\u62a4\u5176\u4ed6\u5b50\u7ebf\u7a0b \u5176\u4ed6\u5b50\u7ebf\u7a0b\u7ed3\u675f-->\u4e3b\u7ebf\u7a0b\u7ed3\u675f--> \u4e3b\u8fdb\u7a0b\u7ed3\u675f-->\u6574\u4e2a\u8fdb\u7a0b\u4e2d\u6240\u6709\u8d44\u6e90\u56de\u6536-->\u5b88\u62a4\u8fdb\u7a0b\u4e5f\u4f1a\u88ab\u56de\u6536 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 from threading import Thread import time def func1 (): while True : print ( '\u6267\u884c\u5b50\u7ebf\u7a0b1...' ) time . sleep ( 1 ) def func2 (): for i in range ( 3 ): print ( '\u6267\u884c\u5b50\u7ebf\u7a0b2...' ) time . sleep ( 1 ) t1 = Thread ( target = func1 ) t1 . daemon = True t1 . start () t2 = Thread ( target = func2 ) t2 . start () # \u8f93\u51fa\u7ed3\u679c \u6267\u884c\u5b50\u7ebf\u7a0b 1. .. \u6267\u884c\u5b50\u7ebf\u7a0b 2. .. \u6267\u884c\u5b50\u7ebf\u7a0b 1. .. \u6267\u884c\u5b50\u7ebf\u7a0b 2. .. \u6267\u884c\u5b50\u7ebf\u7a0b 1. .. \u6267\u884c\u5b50\u7ebf\u7a0b 2. .. \u6267\u884c\u5b50\u7ebf\u7a0b 1. .. \u5b50\u7ebf\u7a0bfunc2\u7ed3\u675f\u4e4b\u540e\uff0c\u4e0d\u7b49\u5f85\u7ebf\u7a0bfunc1\uff0c\u4e3b\u7ebf\u7a0b\u7ed3\u675f\u3002","title":"3. \u5b88\u62a4\u7ebf\u7a0b"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/#4_1","text":"","title":"4. \u9501"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/#41","text":"\u5f15\u5165\u7ebf\u7a0b\u9501\u7684\u539f\u56e0\uff1a \u5728 += \u3001 -= \u3001 *= \u3001 /= \u8fd0\u7b97\u4e2d\uff0c\u8ba1\u7b97\u548c\u8d4b\u503c\u662f\u4e24\u4e2a\u64cd\u4f5c\uff0c\u5176\u4ed6\u5148\u8ba1\u7b97\u540e\u8d4b\u503c\u7684\u8868\u8fbe\u5f0f\u90fd\u4f1a\u5f15\u8d77\u6570\u636e\u4e0d\u5b89\u5168 if \u3001 while \u5224\u65ad\u540c\u6837\u4f1a\u5f15\u8d77\u6570\u636e\u4e0d\u5b89\u5168 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 from threading import Thread , Lock n = 0 def add ( lock ): for i in range ( 30000 ): global n with lock : n += 1 def sub ( lock ): for i in range ( 30000 ): global n with lock : n -= 1 t_l = [] lock = Lock () for i in range ( 2 ): t1 = Thread ( target = add , args = ( lock ,)) t1 . start () t2 = Thread ( target = sub , args = ( lock ,)) t2 . start () t_l . append ( t1 ) t_l . append ( t2 ) for t in t_l : t . join () print ( n ) 1.\u5c3d\u91cf\u907f\u514d\u64cd\u4f5c\u5168\u5c40\u53d8\u91cf\uff1b2.\u4e0d\u8981\u5728\u7c7b\u91cc\u64cd\u4f5c\u9759\u6001\u53d8\u91cf","title":"4.1 \u7ebf\u7a0b\u9501"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/#42","text":"\u540c\u4e00\u4e2a\u7ebf\u7a0b\u4e2d\u53ef\u4ee5lock.acquire\u591a\u6b21\uff0c\u540c\u65f6\u9700\u8981lock.release\u591a\u6b21\u624d\u80fd\u91ca\u653e\u9501\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 from threading import Thread , RLock def func ( i , lock ): lock . acquire () lock . acquire () print ( i , 'start sub thread.' ) lock . release () lock . release () if __name__ == \"__main__\" : lock = RLock () for i in range ( 5 ): t = Thread ( target = func , args = ( i , lock )) t . start () \u9012\u5f52\u9501\u7684\u5c42\u7ea7\u8d8a\u591a\u6548\u7387\u8d8a\u4f4e\u3002","title":"4.2 \u9012\u5f52\u9501"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/#43","text":"\u6709\u591a\u628a\u9501\uff0c\u5e76\u5728\u518d\u591a\u4e2a\u7ebf\u7a0b\u4e2d\u4ea4\u53c9\u4f7f\u7528\u5c31\u4f1a\u4ea7\u751f\u6b7b\u9501\u73b0\u8c61\u3002\u5f53\u4f7f\u7528\u4e92\u65a5\u9501\u51fa\u73b0\u6b7b\u9501\u73b0\u8c61\u65f6\uff0c\u53ef\u4ee5\u628a\u6240\u6709\u7684\u4e92\u65a5\u9501\u90fd\u6539\u6210\u4e00\u628a\u9012\u5f52\u9501\u3002\u4f46\u662f\u6267\u884c\u7684\u6548\u7387\u961f\u964d\u4f4e\u3002","title":"4.3 \u6b7b\u9501"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/#5_1","text":"","title":"5. \u7ebf\u7a0b\u961f\u5217"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/#51","text":"1 2 3 4 5 6 7 8 9 10 11 12 import queue # \u6570\u636e\u4e4b\u95f4\u7ebf\u7a0b\u5b89\u5168\u7684\u961f\u5217\u5bb9\u5668 q = queue . Queue ( 3 ) # \u5148\u8fdb\u5148\u51fa\uff0c\u53ef\u4ee5\u8bbe\u7f6e\u961f\u5217\u5927\u5c0f q . put ( 1 ) print ( q . get ()) # \u5f02\u5e38\u5904\u7406 try : q . get_nowait () except queue . Empty : # \u5f53\u961f\u5217\u4e3a\u7a7a\u65f6\u629b\u51fa\u5f02\u5e38 pass","title":"5.1 \u5148\u8fdb\u5148\u51fa\u961f\u5217"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/#52","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 from queue import LifoQueue lq = LifoQueue () for i in range ( 3 ): lq . put ( i ) for i in range ( 3 ): print ( lq . get ()) # \u8f93\u51fa\u7ed3\u679c # 2 # 1 # 0","title":"5.2 \u5148\u8fdb\u540e\u51fa\u961f\u5217"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/#53","text":"1 2 3 4 5 6 7 8 9 10 11 12 from queue import PriorityQueue pq = PriorityQueue () # (\u4f18\u5148\u7ea7,\u6570\u636e\u5185\u5bb9 ) pq . put (( 8 , \"A\" )) pq . put (( 2 , \"B\" )) print ( pq . get ()) print ( pq . get ()) # \u8f93\u51fa\u7ed3\u679c # (2, 'B') # (8, 'A') \u4f18\u5148\u7ea7\u6839\u636eASCII\u6392\u5e8f","title":"5.3 \u4f18\u5148\u7ea7\u961f\u5217"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/#_5","text":"","title":"\u4e09\u3001\u6c60"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/#1_3","text":"1 2 3 4 5 6 7 8 9 10 from concurrent.futures import ThreadPoolExecutor , ProcessPoolExecutor from threading import current_thread import time def func ( i ): print ( i , current_thread () . ident ) tp = ThreadPoolExecutor ( 4 ) # \u5b9e\u4f8b\u5316\u7ebf\u7a0b\u6c60\uff0c\u4f20\u5165\u7ebf\u7a0b\u6c60\u4e2d\u7ebf\u7a0b\u6570\u91cf for i in range ( 20 ): tp . submit ( func , i )","title":"1. \u7ebf\u7a0b\u6c60"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/#2_2","text":"","title":"2. \u8fdb\u7a0b\u6c60"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/#21_3","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 from concurrent.futures import ThreadPoolExecutor , ProcessPoolExecutor import os import time import random def func ( i ): print ( 'start: %s %s ' % ( i , os . getpid ())) time . sleep ( random . randint ( 1 , 3 )) print ( 'end: %s %s ' % ( i , os . getpid ())) if __name__ == \"__main__\" : tp = ProcessPoolExecutor ( 4 ) # \u5b9e\u4f8b\u5316\u7ebf\u7a0b\u6c60\uff0c\u4f20\u5165\u7ebf\u7a0b\u6c60\u4e2d\u7ebf\u7a0b\u6570\u91cf for i in range ( 20 ): tp . submit ( func , i )","title":"2.1.\u521b\u5efa\u7ebf\u7a0b\u6c60"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/#22_1","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 from concurrent.futures import ThreadPoolExecutor , ProcessPoolExecutor import os import time import random def func ( i ): print ( 'start: %s %s ' % ( i , os . getpid ())) time . sleep ( random . randint ( 1 , 3 )) print ( 'end: %s %s ' % ( i , os . getpid ())) return i ** 2 if __name__ == \"__main__\" : tp = ProcessPoolExecutor ( 4 ) future_l = {} for i in range ( 20 ): # \u5f02\u6b65\u975e\u963b\u585e ret = tp . submit ( func , i ) # print(ret.result()) # \u540c\u6b65\u6267\u884c\uff0c\u5982\u679c\u5728\u8fd9\u91cc\u83b7\u53d6\u7ed3\u679c\uff1a\u6267\u884c\u5b8c\u4e00\u4e2a\u8fdb\u7a0b\u7b49\u5f85\u6536\u5230\u7ed3\u679c\u4e4b\u540e\u7ee7\u7eed\u6267\u884c future_l [ i ] = ret for k , v in future_l . items (): # \u540c\u6b65\u83b7\u53d6\u7ed3\u679c print ( k , '-->' , v . result ())","title":"2.2 \u4ece\u8fdb\u7a0b\u6c60\u4e2d\u83b7\u53d6\u7ed3\u679c"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/#23","text":"map`\u53ea\u80fd\u4f20\u9012\u7b80\u5355\u53c2\u6570 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 from concurrent.futures import ThreadPoolExecutor , ProcessPoolExecutor import os import time import random def func ( i ): print ( 'start: %s %s ' % ( i , os . getpid ())) time . sleep ( random . randint ( 1 , 3 )) print ( 'end: %s %s ' % ( i , os . getpid ())) return i ** 2 if __name__ == \"__main__\" : tp = ProcessPoolExecutor ( 4 ) # map(\u51fd\u6570,\u53ef\u8fed\u4ee3\u5bf9\u8c61) ret = tp . map ( func , range ( 20 )) for k in ret : print ( k )","title":"2.3 \u4f20\u9012\u53c2\u6570"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/#24","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 from concurrent.futures import ThreadPoolExecutor , ProcessPoolExecutor import os import time import random def func ( i ): print ( 'start: %s %s ' % ( i , os . getpid ())) time . sleep ( random . randint ( 1 , 3 )) print ( 'end: %s %s ' % ( i , os . getpid ())) return i ** 2 def get_ret ( ret ): # \u5f02\u6b65\u963b\u585e print ( ret . result ()) if __name__ == \"__main__\" : tp = ProcessPoolExecutor ( 4 ) future_l = {} for i in range ( 20 ): # \u5f02\u6b65\u975e\u963b\u585e ret = tp . submit ( func , i ) # \u56de\u8c03\u51fd\u6570\uff0c\u7ed9ret\u5bf9\u8c61\u7ed1\u5b9a\u4e00\u4e2a\u56de\u8c03\u51fd\u6570\uff0c # \u7b49\u5f85ret\u5bf9\u5e94\u7684\u4efb\u52a1\u6709\u4e86\u7ed3\u679c\u4e4b\u540e\u7acb\u5373\u8c03\u7528get_ret\u51fd\u6570\uff0c\u5c31\u53ef\u4ee5\u5bf9\u7ed3\u679c\u7acb\u5373\u8fdb\u884c\u5904\u7406 ret . add_done_callback ( get_ret ) # \u5f02\u6b65\u963b\u585e","title":"2.4  \u56de\u8c03\u51fd\u6570"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/02-%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B/#_6","text":"","title":"\u56db. \u534f\u7a0b"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/03-%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/","text":"\u7f51\u7edc\u7f16\u7a0b \u00b6 \u4e00\u3001socket \u00b6 1. \u5957\u63a5\u5b57 \u00b6 1.1 \u8d77\u6e90 \u00b6 \u5957\u63a5\u5b57\u7684\u8d77\u6e90\u53ef\u4ee5\u8ffd\u6eaf\u523020\u4e16\u7eaa70\u5e74\u4ee3\uff0c\u5b83\u662f\u52a0\u5229\u798f\u5c3c\u4e9a\u5927\u5b66\u7684\u4f2f\u514b\u5229\u7248\u672cUNIX\u7684\u4e00\u90e8\u5206\u3002\u5957\u63a5\u5b57\u6700\u521d\u662f\u4e3a\u540c\u4e00\u4e3b\u673a\u4e0a\u7684\u5e94\u7528\u7a0b\u5e8f\u6240\u521b\u5efa\uff0c\u4f7f\u5f97\u4e3b\u673a\u4e0a\u8fd0\u884c\u7684\u4e00\u4e2a\u7a0b\u5e8f\u4e0e\u53e6\u4e00\u4e2a\u8fd0\u884c\u7684\u7a0b\u5e8f\u8fdb\u884c\u901a\u4fe1\uff0c\u8fd9\u5c31\u662f\u6240\u8c13\u7684\u8fdb\u7a0b\u95f4\u901a\u4fe1\u3002 1.2 \u5206\u7c7b \u00b6 \u57fa\u4e8e\u6587\u4ef6\u7684\uff1aAF_UNIX\u5bb6\u65cf \u9762\u5411\u7f51\u7edc\u7684\uff1aAF_INET\u5bb6\u3001AF_UNIX6(IPv6) 1.3 \u5957\u63a5\u5b57\u7c7b\u578b \u00b6 \u9762\u5411\u8fde\u63a5\u7684\u5957\u63a5\u5b57\uff1a\u7528TCP\u534f\u8bae\u5b9e\u73b0\uff0cSOCK_STREAM\u4f5c\u4e3a\u5957\u63a5\u5b57\u7c7b\u578b \u65e0\u8fde\u63a5\u7684\u5957\u63a5\u5b57\uff1a\u7528UDP\u534f\u8bae\u5b9e\u73b0\uff0cSOCK_DGRAM\u4f5c\u4e3a\u5957\u63a5\u5b57\u7c7b\u578b 2. socket\u6a21\u5757 \u00b6 \u4e00\u3001FTP \u00b6 \u4e8c\u3001SMTP \u00b6 \u4e09\u3001HTTP \u00b6 1. urllib \u00b6 get\u8bf7\u6c42 \u00b6 1 2 3 4 5 6 7 8 import urllib.request url = 'http://www.baidu.com/' response = urllib . request . urlopen ( url ) print ( response ) # <http.client.HTTPResponse object at 0x000002D28D124F60> data = response . read () . decode ( 'utf-8' ) with open ( 'baidu.html' , 'w' , encoding = 'utf-8' ) as f : f . write ( data ) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 import urllib.request url = 'https://www.baidu.com/' # \u6dfb\u52a0\u8bf7\u6c42\u5934\u4fe1\u606f\uff0c\u6a21\u62df\u771f\u5b9e\u6d4f\u89c8\u5668\u8bbf\u95ee header = { # \u6d4f\u89c8\u5668\u7248\u672c \"User-Agent\" : \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.132 Safari/537.36\" , } # \u521b\u5efa\u4e00\u4e2a\u8bf7\u6c42\u5bf9\u8c61 r = urllib . request . Request ( url , headers = header ) # \u83b7\u53d6\u6240\u6709\u8bf7\u6c42\u5934\u4fe1\u606f print ( r . headers ) # \u83b7\u53d6\u6307\u5b9a\u8bf7\u6c42\u5934\u4fe1\u606f(\u952e\u7684\u9996\u5b57\u6bcd\u8981\u5927\u5199\uff0c\u5176\u4ed6\u5c0f\u5199) print ( r . get_header ( \"User-agent\" )) # \u83b7\u53d6\u8bf7\u6c42\u7684url print ( r . get_full_url ()) # \u8bf7\u6c42\u6570\u636e response = urllib . request . urlopen ( r ) data = response . read () . decode ( 'utf-8' ) with open ( 'baidu.html' , 'w' , encoding = 'utf-8' ) as f : f . write ( data ) IP\u4ee3\u7406 \u00b6 urlopen()\u4e0d\u652f\u6301\u6dfb\u52a0\u4ee3\u7406\uff0c\u9700\u8981\u81ea\u5df1\u5b9a\u4e49 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 import urllib.request url = 'https://www.cnblogs.com/gaoyuanzhi' # \u6dfb\u52a0\u4ee3\u7406 proxy = { \"http\" : \"http://117.88.5.142:3000\" } proxy_handler = urllib . request . ProxyHandler ( proxy ) # \u521b\u5efa\u81ea\u5df1\u7684opener opener = urllib . request . build_opener ( proxy_handler ) # \u62ff\u7740\u4ee3\u7406IP\u53bb\u53d1\u9001\u8bf7\u6c42 response = opener . open ( url ) data = response . read () . decode ( 'utf-8' ) print ( data ) Cookies \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 import urllib.request import urllib.parse from http import cookiejar # \u5148\u767b\u5f55\uff0c\u518d\u5e26\u7740Cookie\u8bbf\u95ee # \u767b\u5f55\u7f51\u5740 login_url = \"https://www.yaozh.com/login/\" # \u767b\u5f55\u53c2\u6570 login_data = { 'username' : 'gaoyuanzhi' , 'pwd' : 'GP477364!' , 'formhash' : '5798AB70BB' , 'backurl' : 'https%3A %2F%2F www.yaozh.com %2F ' } # \u53c2\u6570\u9700\u8981\u8f6c\u7801,POST\u8bf7\u6c42\u9700\u8981\u4f7f\u7528byte\u7c7b\u578b data = urllib . parse . urlencode ( login_data ) . encode ( 'utf-8' ) header = { \"User-Agent\" : \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.132 Safari/537.36\" , } # \u4fdd\u5b58cookie cookie_jar = cookiejar . CookieJar () # \u5b9a\u4e49\u6709\u6dfb\u52a0cookie\u529f\u80fd\u7684\u5904\u7406\u5668 cookie_handler = urllib . request . HTTPCookieProcessor ( cookie_jar ) # \u6839\u636e\u5904\u7406\u5668\u751f\u6210opener opener = urllib . request . build_opener ( cookie_handler ) login_request = urllib . request . Request ( login_url , headers = header , data = data ) # \u53d1\u8d77\u767b\u5f55\u8bf7\u6c42 opener . open ( login_request ) center = 'https://www.yaozh.com/member/' center_request = urllib . request . Request ( center , headers = header ) # \u767b\u5f55\u5230\u4e2a\u4eba\u4e2d\u5fc3 response = opener . open ( center_request ) data = response . read () . decode ( 'utf-8' ) with open ( 'yaozhi.html' , 'w' , encoding = 'utf-8' ) as f : f . write ( data ) 2. requests \u00b6 get \u00b6 1 2 3 4 5 6 7 8 import requests url = 'http://www.baidu.com' response = requests . get ( url ) print ( response ) # <Response [200]> data = response . content . decode ( 'utf-8' ) print ( type ( data )) # <class 'str'> print ( response . status_code ) # 200 1 2 3 4 5 6 7 8 9 10 11 import requests url = 'http://www.baidu.com' header = { \"User-Agent\" : \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.132 Safari/537.36\" , } response = requests . get ( url , headers = header ) print ( '\u54cd\u5e94\u72b6\u6001\u7801:' , response . status_code ) print ( '\u8bf7\u6c42\u5934:' , response . request . headers ) print ( '\u54cd\u5e94\u5934:' , response . headers ) print ( 'cookie:' , response . cookies ) print ( '\u5b9e\u9645\u8bf7\u6c42\u7684url' , response . url ) get\u8bf7\u6c42\u5e26\u53c2\u6570 1 2 3 4 import requests payload = { 'key1' : 'value1' , 'key2' : 'value2' } r = requests . get ( \"http://httpbin.org/get\" , params = payload ) print ( r . url ) \u4ee3\u7406 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 import requests url = 'https://www.cnblogs.com/gaoyuanzhi' # \u8bbf\u95ee\u767e\u5ea6\u8fd4\u56de500 header = { \"User-Agent\" : \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.132 Safari/537.36\" , } free_proxy = { 'http' : '101.231.104.82:80' } response = requests . get ( url = url , headers = header , proxies = free_proxy ) print ( response . status_code ) # 200 \u5ffd\u7565SSL\u8ba4\u8bc1 \u00b6 1 2 3 4 5 6 7 8 9 10 11 import requests url = 'https://www.12306.cn' # 2020-3-2\u8bbf\u95ee\u65f6\uff0cCA\u5df2\u7ecf\u4fe1\u4efb\u4e86 header = { \"User-Agent\" : \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.132 Safari/537.36\" , } # \u5ffd\u7565CA\u8bc1\u4e66\u8ba4\u8bc1 response = requests . get ( url = url , headers = header , verify = False ) data = response . content . decode () with open ( '12306.html' , 'w' , encoding = 'utf-8' ) as f : f . write ( data ) cookies \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 import requests member_url = 'https://www.yaozh.com/member/' login_url = \"https://www.yaozh.com/login/\" header = { \"User-Agent\" : \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.132 Safari/537.36\" , } login_data = { 'username' : 'gaoyuanzhi' , 'pwd' : 'GP477364!' , 'formhash' : '5798AB70BB' , 'backurl' : 'https%3A %2F%2F www.yaozh.com %2F ' } # \u53ef\u4ee5\u81ea\u52a8\u4fdd\u5b58cookie s = requests . Session () login_response = s . post ( login_url , data = login_data , headers = header ) data = s . get ( member_url , headers = header ) . content . decode () with open ( 'yaozhi.html' , 'w' , encoding = 'utf-8' ) as f : f . write ( data )","title":"\u7f51\u7edc\u7f16\u7a0b"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/03-%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/#_1","text":"","title":"\u7f51\u7edc\u7f16\u7a0b"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/03-%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/#socket","text":"","title":"\u4e00\u3001socket"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/03-%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/#1","text":"","title":"1. \u5957\u63a5\u5b57"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/03-%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/#11","text":"\u5957\u63a5\u5b57\u7684\u8d77\u6e90\u53ef\u4ee5\u8ffd\u6eaf\u523020\u4e16\u7eaa70\u5e74\u4ee3\uff0c\u5b83\u662f\u52a0\u5229\u798f\u5c3c\u4e9a\u5927\u5b66\u7684\u4f2f\u514b\u5229\u7248\u672cUNIX\u7684\u4e00\u90e8\u5206\u3002\u5957\u63a5\u5b57\u6700\u521d\u662f\u4e3a\u540c\u4e00\u4e3b\u673a\u4e0a\u7684\u5e94\u7528\u7a0b\u5e8f\u6240\u521b\u5efa\uff0c\u4f7f\u5f97\u4e3b\u673a\u4e0a\u8fd0\u884c\u7684\u4e00\u4e2a\u7a0b\u5e8f\u4e0e\u53e6\u4e00\u4e2a\u8fd0\u884c\u7684\u7a0b\u5e8f\u8fdb\u884c\u901a\u4fe1\uff0c\u8fd9\u5c31\u662f\u6240\u8c13\u7684\u8fdb\u7a0b\u95f4\u901a\u4fe1\u3002","title":"1.1 \u8d77\u6e90"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/03-%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/#12","text":"\u57fa\u4e8e\u6587\u4ef6\u7684\uff1aAF_UNIX\u5bb6\u65cf \u9762\u5411\u7f51\u7edc\u7684\uff1aAF_INET\u5bb6\u3001AF_UNIX6(IPv6)","title":"1.2 \u5206\u7c7b"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/03-%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/#13","text":"\u9762\u5411\u8fde\u63a5\u7684\u5957\u63a5\u5b57\uff1a\u7528TCP\u534f\u8bae\u5b9e\u73b0\uff0cSOCK_STREAM\u4f5c\u4e3a\u5957\u63a5\u5b57\u7c7b\u578b \u65e0\u8fde\u63a5\u7684\u5957\u63a5\u5b57\uff1a\u7528UDP\u534f\u8bae\u5b9e\u73b0\uff0cSOCK_DGRAM\u4f5c\u4e3a\u5957\u63a5\u5b57\u7c7b\u578b","title":"1.3 \u5957\u63a5\u5b57\u7c7b\u578b"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/03-%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/#2-socket","text":"","title":"2. socket\u6a21\u5757"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/03-%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/#ftp","text":"","title":"\u4e00\u3001FTP"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/03-%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/#smtp","text":"","title":"\u4e8c\u3001SMTP"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/03-%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/#http","text":"","title":"\u4e09\u3001HTTP"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/03-%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/#1-urllib","text":"","title":"1. urllib"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/03-%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/#get","text":"1 2 3 4 5 6 7 8 import urllib.request url = 'http://www.baidu.com/' response = urllib . request . urlopen ( url ) print ( response ) # <http.client.HTTPResponse object at 0x000002D28D124F60> data = response . read () . decode ( 'utf-8' ) with open ( 'baidu.html' , 'w' , encoding = 'utf-8' ) as f : f . write ( data ) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 import urllib.request url = 'https://www.baidu.com/' # \u6dfb\u52a0\u8bf7\u6c42\u5934\u4fe1\u606f\uff0c\u6a21\u62df\u771f\u5b9e\u6d4f\u89c8\u5668\u8bbf\u95ee header = { # \u6d4f\u89c8\u5668\u7248\u672c \"User-Agent\" : \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.132 Safari/537.36\" , } # \u521b\u5efa\u4e00\u4e2a\u8bf7\u6c42\u5bf9\u8c61 r = urllib . request . Request ( url , headers = header ) # \u83b7\u53d6\u6240\u6709\u8bf7\u6c42\u5934\u4fe1\u606f print ( r . headers ) # \u83b7\u53d6\u6307\u5b9a\u8bf7\u6c42\u5934\u4fe1\u606f(\u952e\u7684\u9996\u5b57\u6bcd\u8981\u5927\u5199\uff0c\u5176\u4ed6\u5c0f\u5199) print ( r . get_header ( \"User-agent\" )) # \u83b7\u53d6\u8bf7\u6c42\u7684url print ( r . get_full_url ()) # \u8bf7\u6c42\u6570\u636e response = urllib . request . urlopen ( r ) data = response . read () . decode ( 'utf-8' ) with open ( 'baidu.html' , 'w' , encoding = 'utf-8' ) as f : f . write ( data )","title":"get\u8bf7\u6c42"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/03-%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/#ip","text":"urlopen()\u4e0d\u652f\u6301\u6dfb\u52a0\u4ee3\u7406\uff0c\u9700\u8981\u81ea\u5df1\u5b9a\u4e49 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 import urllib.request url = 'https://www.cnblogs.com/gaoyuanzhi' # \u6dfb\u52a0\u4ee3\u7406 proxy = { \"http\" : \"http://117.88.5.142:3000\" } proxy_handler = urllib . request . ProxyHandler ( proxy ) # \u521b\u5efa\u81ea\u5df1\u7684opener opener = urllib . request . build_opener ( proxy_handler ) # \u62ff\u7740\u4ee3\u7406IP\u53bb\u53d1\u9001\u8bf7\u6c42 response = opener . open ( url ) data = response . read () . decode ( 'utf-8' ) print ( data )","title":"IP\u4ee3\u7406"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/03-%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/#cookies","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 import urllib.request import urllib.parse from http import cookiejar # \u5148\u767b\u5f55\uff0c\u518d\u5e26\u7740Cookie\u8bbf\u95ee # \u767b\u5f55\u7f51\u5740 login_url = \"https://www.yaozh.com/login/\" # \u767b\u5f55\u53c2\u6570 login_data = { 'username' : 'gaoyuanzhi' , 'pwd' : 'GP477364!' , 'formhash' : '5798AB70BB' , 'backurl' : 'https%3A %2F%2F www.yaozh.com %2F ' } # \u53c2\u6570\u9700\u8981\u8f6c\u7801,POST\u8bf7\u6c42\u9700\u8981\u4f7f\u7528byte\u7c7b\u578b data = urllib . parse . urlencode ( login_data ) . encode ( 'utf-8' ) header = { \"User-Agent\" : \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.132 Safari/537.36\" , } # \u4fdd\u5b58cookie cookie_jar = cookiejar . CookieJar () # \u5b9a\u4e49\u6709\u6dfb\u52a0cookie\u529f\u80fd\u7684\u5904\u7406\u5668 cookie_handler = urllib . request . HTTPCookieProcessor ( cookie_jar ) # \u6839\u636e\u5904\u7406\u5668\u751f\u6210opener opener = urllib . request . build_opener ( cookie_handler ) login_request = urllib . request . Request ( login_url , headers = header , data = data ) # \u53d1\u8d77\u767b\u5f55\u8bf7\u6c42 opener . open ( login_request ) center = 'https://www.yaozh.com/member/' center_request = urllib . request . Request ( center , headers = header ) # \u767b\u5f55\u5230\u4e2a\u4eba\u4e2d\u5fc3 response = opener . open ( center_request ) data = response . read () . decode ( 'utf-8' ) with open ( 'yaozhi.html' , 'w' , encoding = 'utf-8' ) as f : f . write ( data )","title":"Cookies"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/03-%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/#2-requests","text":"","title":"2. requests"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/03-%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/#get_1","text":"1 2 3 4 5 6 7 8 import requests url = 'http://www.baidu.com' response = requests . get ( url ) print ( response ) # <Response [200]> data = response . content . decode ( 'utf-8' ) print ( type ( data )) # <class 'str'> print ( response . status_code ) # 200 1 2 3 4 5 6 7 8 9 10 11 import requests url = 'http://www.baidu.com' header = { \"User-Agent\" : \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.132 Safari/537.36\" , } response = requests . get ( url , headers = header ) print ( '\u54cd\u5e94\u72b6\u6001\u7801:' , response . status_code ) print ( '\u8bf7\u6c42\u5934:' , response . request . headers ) print ( '\u54cd\u5e94\u5934:' , response . headers ) print ( 'cookie:' , response . cookies ) print ( '\u5b9e\u9645\u8bf7\u6c42\u7684url' , response . url ) get\u8bf7\u6c42\u5e26\u53c2\u6570 1 2 3 4 import requests payload = { 'key1' : 'value1' , 'key2' : 'value2' } r = requests . get ( \"http://httpbin.org/get\" , params = payload ) print ( r . url )","title":"get"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/03-%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/#_2","text":"1 2 3 4 5 6 7 8 9 10 11 12 import requests url = 'https://www.cnblogs.com/gaoyuanzhi' # \u8bbf\u95ee\u767e\u5ea6\u8fd4\u56de500 header = { \"User-Agent\" : \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.132 Safari/537.36\" , } free_proxy = { 'http' : '101.231.104.82:80' } response = requests . get ( url = url , headers = header , proxies = free_proxy ) print ( response . status_code ) # 200","title":"\u4ee3\u7406"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/03-%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/#ssl","text":"1 2 3 4 5 6 7 8 9 10 11 import requests url = 'https://www.12306.cn' # 2020-3-2\u8bbf\u95ee\u65f6\uff0cCA\u5df2\u7ecf\u4fe1\u4efb\u4e86 header = { \"User-Agent\" : \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.132 Safari/537.36\" , } # \u5ffd\u7565CA\u8bc1\u4e66\u8ba4\u8bc1 response = requests . get ( url = url , headers = header , verify = False ) data = response . content . decode () with open ( '12306.html' , 'w' , encoding = 'utf-8' ) as f : f . write ( data )","title":"\u5ffd\u7565SSL\u8ba4\u8bc1"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/03-%E7%BD%91%E7%BB%9C%E7%BC%96%E7%A8%8B/#cookies_1","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 import requests member_url = 'https://www.yaozh.com/member/' login_url = \"https://www.yaozh.com/login/\" header = { \"User-Agent\" : \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/80.0.3987.132 Safari/537.36\" , } login_data = { 'username' : 'gaoyuanzhi' , 'pwd' : 'GP477364!' , 'formhash' : '5798AB70BB' , 'backurl' : 'https%3A %2F%2F www.yaozh.com %2F ' } # \u53ef\u4ee5\u81ea\u52a8\u4fdd\u5b58cookie s = requests . Session () login_response = s . post ( login_url , data = login_data , headers = header ) data = s . get ( member_url , headers = header ) . content . decode () with open ( 'yaozhi.html' , 'w' , encoding = 'utf-8' ) as f : f . write ( data )","title":"cookies"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/03-%E9%80%BB%E8%BE%91%E6%8E%A7%E5%88%B6/","text":"\u6d41\u7a0b\u63a7\u5236 \u00b6 \u4e00\u3001if\u8bed\u53e5 \u00b6 1. \u8bed\u6cd5\u683c\u5f0f \u00b6 1.1 \u683c\u5f0f\u4e00 \u00b6 1 2 if \u6761\u4ef6 : statements 1.2 \u683c\u5f0f\u4e8c \u00b6 1 2 3 4 if \u6761\u4ef6 : statements1 else : statements2 1.3 \u683c\u5f0f\u4e09 \u00b6 1 2 3 4 5 6 if \u6761\u4ef6 1 : statements1 elif \u6761\u4ef6 2 : statements2 else : statements3 \u793a\u4f8b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 score = float ( input ( '\u8bf7\u8f93\u5165\u6210\u7ee9: ' )) if score >= 90 : grade = 'A' elif score >= 80 : grade = 'B' elif score >= 70 : grade = 'C' elif score >= 60 : grade = 'D' else : grade = 'E' print ( '\u5bf9\u5e94\u7684\u7b49\u7ea7\u662f:' , grade ) 2. \u4e09\u5143\u8868\u8fbe\u5f0f \u00b6 1 2 3 4 5 6 7 8 # \u77ed\u8def\u8fd0\u7b97 A = Y if X else Z # \u7b49\u4ef7\u4e8e if X : A = Y else : A = Z \u6761\u4ef6\u53ef\u4ee5\u662f\u4efb\u610f\u8868\u8fbe\u5f0f\uff0c\u4f46\u6267\u884c\u7ed3\u679c\u5fc5\u987b\u4e3a\u5e03\u5c14\u7c7b\u578b\uff08\u5728if\u5224\u65ad\u4e2d\u6240\u6709\u7684\u6570\u636e\u7c7b\u578b\u4e5f\u90fd\u4f1a\u81ea\u52a8\u8f6c\u6362\u6210\u5e03\u5c14\u7c7b\u578b\uff0cNone\uff0c0\uff0c\u7a7a\uff08\u7a7a\u5b57\u7b26\u4e32\u3001\u7a7a\u5217\u8868\u3001\u7a7a\u5b57\u5178\u7b49\uff09\u4e09\u79cd\u60c5\u51b5\u4e0b\u8f6c\u6362\u6210\u7684\u5e03\u5c14\u503c\u4e3aFalse\uff0c\u5176\u4f59\u5747\u4e3aTrue\uff09 \u4e8c\u3001while\u5faa\u73af \u00b6 1. \u8bed\u6cd5\u683c\u5f0f \u00b6 1 2 3 4 while \u6761\u4ef6 : statements else statements 2. \u7528\u6cd5 \u00b6 2.1 \u4e00\u822c\u7528\u6cd5 \u00b6 1 2 3 4 5 num = 0 while num < 10 : if num % 2 == 0 : print ( num ) num += 1 2.2 break \u00b6 1 2 3 4 5 6 7 8 9 10 count = 0 while count < 3 : inp_name = input ( \"username:\" ) inp_passwd = input ( \"password:\" ) if inp_name == 'Tom' and inp_passwd == '123' : print ( \"\u767b\u5f55\u6210\u529f\uff01\" ) break else : print ( \"\u767b\u5f55\u5931\u8d25\uff01\" ) count += 1 2.3 continue \u00b6 \u7528\u4e8e\u7ed3\u675f\u672c\u6b21\u5faa\u73af\uff0c\u76f4\u63a5\u8fdb\u5165\u4e0b\u4e00\u6b21\u5faa\u73af 1 2 3 4 5 6 7 # \u6253\u53701\u523010\u4e4b\u95f4\uff0c\u96647\u4ee5\u5916\u7684\u6240\u6709\u6570\u5b57 number = 11 while number > 1 : number -= 1 if number == 7 : continue # \u7ed3\u675f\u6389\u672c\u6b21\u5faa\u73af\uff0c\u5373\u672c\u6b21\u5faa\u73afcontinue\u4e4b\u540e\u7684\u4ee3\u7801\u90fd\u4e0d\u4f1a\u8fd0\u884c\u4e86\uff0c\u800c\u662f\u76f4\u63a5\u8fdb\u5165\u4e0b\u4e00\u6b21\u5faa\u73af print ( number ) 2.4 else \u00b6 \u5f53\u4e14\u4ec5\u5f53\u5faa\u73af\u6b63\u5e38\u79bb\u5f00\u65f6\u624d\u4f1a\u6267\u884c 1 2 3 4 5 6 7 8 9 10 11 12 13 #!/usr/bin/env python3 cnt = 0 while cnt < 3 : username = input ( \"user: \" ) password = input ( \"password: \" ) if username == 'admin' and password == 'admin' : print ( '\u767b\u9646\u6210\u529f' ) break else : print ( '\u767b\u9646\u5931\u8d25\uff0c\u8fd8\u6709{}\u6b21\u673a\u4f1a\u3002' . format ( 2 - cnt )) cnt += 1 else : print ( '\u8d85\u8fc7\u91cd\u8bd5\u6b21\u6570\uff01' ) \u4e09\u3001for\u5faa\u73af \u00b6 for\u5faa\u73af\u5728python\u4e2d\u662f\u4e00\u4e2a\u901a\u7528\u8fed\u4ee3\u5668\uff0c\u53ef\u4ee5\u904d\u5386\u4efb\u4f55\u6709\u5e8f\u5e8f\u5217\u6216\u5176\u4ed6\u53ef\u8fed\u4ee3\u5bf9\u8c61\u5185\u7684\u5143\u7d20\u3002for\u5faa\u73af\u5728\u5faa\u73af\u53d6\u503c\uff08\u904d\u5386\u53d6\u503c\uff09\u6bd4while\u5faa\u73af\u66f4\u7b80\u6d01\u3002 1. \u8bed\u6cd5\u683c\u5f0f \u00b6 1 2 3 4 for \u53d8\u91cf\u540d in \u53ef\u8fed\u4ee3\u5bf9\u8c61 : statements else : statements 2. \u7528\u6cd5 \u00b6 2.1 \u4e00\u822c\u7528\u6cd5 \u00b6 1 2 3 4 5 # \u4e5d\u4e5d\u4e58\u6cd5\u8868 for i in range ( 1 , 10 ): for j in range ( 1 , i + 1 ): print ( ' %s * %s = %s ' % ( i , j , i * j ), end = ' ' ) print () 2.2 break \u00b6 \u540c while \uff0c\u7ec8\u6b62for\u5faa\u73af\u53ea\u80fd\u4f7f\u7528break\u3002 2.3 continue \u00b6 \u540c while 2.4 else \u00b6 \u540c while","title":"\u903b\u8f91\u63a7\u5236"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/03-%E9%80%BB%E8%BE%91%E6%8E%A7%E5%88%B6/#_1","text":"","title":"\u6d41\u7a0b\u63a7\u5236"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/03-%E9%80%BB%E8%BE%91%E6%8E%A7%E5%88%B6/#if","text":"","title":"\u4e00\u3001if\u8bed\u53e5"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/03-%E9%80%BB%E8%BE%91%E6%8E%A7%E5%88%B6/#1","text":"","title":"1. \u8bed\u6cd5\u683c\u5f0f"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/03-%E9%80%BB%E8%BE%91%E6%8E%A7%E5%88%B6/#11","text":"1 2 if \u6761\u4ef6 : statements","title":"1.1 \u683c\u5f0f\u4e00"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/03-%E9%80%BB%E8%BE%91%E6%8E%A7%E5%88%B6/#12","text":"1 2 3 4 if \u6761\u4ef6 : statements1 else : statements2","title":"1.2 \u683c\u5f0f\u4e8c"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/03-%E9%80%BB%E8%BE%91%E6%8E%A7%E5%88%B6/#13","text":"1 2 3 4 5 6 if \u6761\u4ef6 1 : statements1 elif \u6761\u4ef6 2 : statements2 else : statements3 \u793a\u4f8b\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 score = float ( input ( '\u8bf7\u8f93\u5165\u6210\u7ee9: ' )) if score >= 90 : grade = 'A' elif score >= 80 : grade = 'B' elif score >= 70 : grade = 'C' elif score >= 60 : grade = 'D' else : grade = 'E' print ( '\u5bf9\u5e94\u7684\u7b49\u7ea7\u662f:' , grade )","title":"1.3 \u683c\u5f0f\u4e09"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/03-%E9%80%BB%E8%BE%91%E6%8E%A7%E5%88%B6/#2","text":"1 2 3 4 5 6 7 8 # \u77ed\u8def\u8fd0\u7b97 A = Y if X else Z # \u7b49\u4ef7\u4e8e if X : A = Y else : A = Z \u6761\u4ef6\u53ef\u4ee5\u662f\u4efb\u610f\u8868\u8fbe\u5f0f\uff0c\u4f46\u6267\u884c\u7ed3\u679c\u5fc5\u987b\u4e3a\u5e03\u5c14\u7c7b\u578b\uff08\u5728if\u5224\u65ad\u4e2d\u6240\u6709\u7684\u6570\u636e\u7c7b\u578b\u4e5f\u90fd\u4f1a\u81ea\u52a8\u8f6c\u6362\u6210\u5e03\u5c14\u7c7b\u578b\uff0cNone\uff0c0\uff0c\u7a7a\uff08\u7a7a\u5b57\u7b26\u4e32\u3001\u7a7a\u5217\u8868\u3001\u7a7a\u5b57\u5178\u7b49\uff09\u4e09\u79cd\u60c5\u51b5\u4e0b\u8f6c\u6362\u6210\u7684\u5e03\u5c14\u503c\u4e3aFalse\uff0c\u5176\u4f59\u5747\u4e3aTrue\uff09","title":"2. \u4e09\u5143\u8868\u8fbe\u5f0f"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/03-%E9%80%BB%E8%BE%91%E6%8E%A7%E5%88%B6/#while","text":"","title":"\u4e8c\u3001while\u5faa\u73af"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/03-%E9%80%BB%E8%BE%91%E6%8E%A7%E5%88%B6/#1_1","text":"1 2 3 4 while \u6761\u4ef6 : statements else statements","title":"1. \u8bed\u6cd5\u683c\u5f0f"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/03-%E9%80%BB%E8%BE%91%E6%8E%A7%E5%88%B6/#2_1","text":"","title":"2. \u7528\u6cd5"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/03-%E9%80%BB%E8%BE%91%E6%8E%A7%E5%88%B6/#21","text":"1 2 3 4 5 num = 0 while num < 10 : if num % 2 == 0 : print ( num ) num += 1","title":"2.1 \u4e00\u822c\u7528\u6cd5"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/03-%E9%80%BB%E8%BE%91%E6%8E%A7%E5%88%B6/#22-break","text":"1 2 3 4 5 6 7 8 9 10 count = 0 while count < 3 : inp_name = input ( \"username:\" ) inp_passwd = input ( \"password:\" ) if inp_name == 'Tom' and inp_passwd == '123' : print ( \"\u767b\u5f55\u6210\u529f\uff01\" ) break else : print ( \"\u767b\u5f55\u5931\u8d25\uff01\" ) count += 1","title":"2.2 break"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/03-%E9%80%BB%E8%BE%91%E6%8E%A7%E5%88%B6/#23-continue","text":"\u7528\u4e8e\u7ed3\u675f\u672c\u6b21\u5faa\u73af\uff0c\u76f4\u63a5\u8fdb\u5165\u4e0b\u4e00\u6b21\u5faa\u73af 1 2 3 4 5 6 7 # \u6253\u53701\u523010\u4e4b\u95f4\uff0c\u96647\u4ee5\u5916\u7684\u6240\u6709\u6570\u5b57 number = 11 while number > 1 : number -= 1 if number == 7 : continue # \u7ed3\u675f\u6389\u672c\u6b21\u5faa\u73af\uff0c\u5373\u672c\u6b21\u5faa\u73afcontinue\u4e4b\u540e\u7684\u4ee3\u7801\u90fd\u4e0d\u4f1a\u8fd0\u884c\u4e86\uff0c\u800c\u662f\u76f4\u63a5\u8fdb\u5165\u4e0b\u4e00\u6b21\u5faa\u73af print ( number )","title":"2.3 continue"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/03-%E9%80%BB%E8%BE%91%E6%8E%A7%E5%88%B6/#24-else","text":"\u5f53\u4e14\u4ec5\u5f53\u5faa\u73af\u6b63\u5e38\u79bb\u5f00\u65f6\u624d\u4f1a\u6267\u884c 1 2 3 4 5 6 7 8 9 10 11 12 13 #!/usr/bin/env python3 cnt = 0 while cnt < 3 : username = input ( \"user: \" ) password = input ( \"password: \" ) if username == 'admin' and password == 'admin' : print ( '\u767b\u9646\u6210\u529f' ) break else : print ( '\u767b\u9646\u5931\u8d25\uff0c\u8fd8\u6709{}\u6b21\u673a\u4f1a\u3002' . format ( 2 - cnt )) cnt += 1 else : print ( '\u8d85\u8fc7\u91cd\u8bd5\u6b21\u6570\uff01' )","title":"2.4 else"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/03-%E9%80%BB%E8%BE%91%E6%8E%A7%E5%88%B6/#for","text":"for\u5faa\u73af\u5728python\u4e2d\u662f\u4e00\u4e2a\u901a\u7528\u8fed\u4ee3\u5668\uff0c\u53ef\u4ee5\u904d\u5386\u4efb\u4f55\u6709\u5e8f\u5e8f\u5217\u6216\u5176\u4ed6\u53ef\u8fed\u4ee3\u5bf9\u8c61\u5185\u7684\u5143\u7d20\u3002for\u5faa\u73af\u5728\u5faa\u73af\u53d6\u503c\uff08\u904d\u5386\u53d6\u503c\uff09\u6bd4while\u5faa\u73af\u66f4\u7b80\u6d01\u3002","title":"\u4e09\u3001for\u5faa\u73af"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/03-%E9%80%BB%E8%BE%91%E6%8E%A7%E5%88%B6/#1_2","text":"1 2 3 4 for \u53d8\u91cf\u540d in \u53ef\u8fed\u4ee3\u5bf9\u8c61 : statements else : statements","title":"1. \u8bed\u6cd5\u683c\u5f0f"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/03-%E9%80%BB%E8%BE%91%E6%8E%A7%E5%88%B6/#2_2","text":"","title":"2. \u7528\u6cd5"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/03-%E9%80%BB%E8%BE%91%E6%8E%A7%E5%88%B6/#21_1","text":"1 2 3 4 5 # \u4e5d\u4e5d\u4e58\u6cd5\u8868 for i in range ( 1 , 10 ): for j in range ( 1 , i + 1 ): print ( ' %s * %s = %s ' % ( i , j , i * j ), end = ' ' ) print ()","title":"2.1 \u4e00\u822c\u7528\u6cd5"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/03-%E9%80%BB%E8%BE%91%E6%8E%A7%E5%88%B6/#22-break_1","text":"\u540c while \uff0c\u7ec8\u6b62for\u5faa\u73af\u53ea\u80fd\u4f7f\u7528break\u3002","title":"2.2 break"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/03-%E9%80%BB%E8%BE%91%E6%8E%A7%E5%88%B6/#23-continue_1","text":"\u540c while","title":"2.3 continue"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/03-%E9%80%BB%E8%BE%91%E6%8E%A7%E5%88%B6/#24-else_1","text":"\u540c while","title":"2.4 else"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/04-%E5%87%BD%E6%95%B0/","text":"\u51fd\u6570 \u00b6 1. \u51fd\u6570\u7684\u4f5c\u7528 \u00b6 \u4ee3\u7801\u91cd\u7528\uff0c\u51cf\u5c11\u4ee3\u7801\u5197\u4f59 \u6d41\u7a0b\u5206\u89e3 2. \u51fd\u6570\u5206\u7c7b \u00b6 \u5185\u7f6e\u51fd\u6570 \u81ea\u5b9a\u4e49\u51fd\u6570 3. \u51fd\u6570\u7684\u5b9a\u4e49 \u00b6 1 2 3 4 def \u51fd\u6570\u540d ( arg1 , arg2 , ... ): \"\"\"\u63cf\u8ff0\"\"\" \u51fd\u6570\u4f53 return value \u7a0b\u5e8f\u8fd0\u884c\u65f6\u4f1a\u521b\u5efa\u4e00\u4e2a\u51fd\u6570\u5bf9\u8c61\u5e76\u5c06\u5176\u8d4b\u503c\u7ed9\u4e00\u4e2a\u53d8\u91cf\u540d\uff0c\u901a\u8fc7\u5728\u51fd\u6570\u540d\u540e\u52a0\u62ec\u53f7\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\u3002 1 2 3 4 5 >>> def bar (): ... print ( \"bar\" ) ... >>> print ( bar ) < function bar at 0x000002AEFFF01EA0 > 4. \u51fd\u6570\u7684\u53c2\u6570 \u00b6 4.1 \u65e0\u53c2\u6570 \u00b6 1 2 def bar (): print ( \"bar\" ) 4.2 \u4f4d\u7f6e\u53c2\u6570 \u00b6 1 2 3 def add ( x , y ): print ( x + y ) add ( 3 , 5 ) 4.3 \u9ed8\u8ba4\u53c2\u6570 \u00b6 1 2 3 def student ( name , age = 21 ): print ( 'Name:' , name ) print ( 'Age:' , age ) 4.4 \u53ef\u53d8\u53c2\u6570 \u00b6 1 2 3 4 5 6 7 # \u4f20\u5165\u7684\u53c2\u6570\u4e2a\u6570\u662f\u53ef\u53d8\u7684\uff0c\u53ef\u4ee5\u662f 1 \u4e2a\u30012 \u4e2a\u5230\u4efb\u610f\u4e2a\uff0c\u8fd8\u53ef\u4ee5\u662f 0 \u4e2a def calc ( * numbers ): sum = 0 for n in numbers : sum = sum + n * n return sum print ( calc ( 1 , 2 , 3 )) 4.5 \u5173\u952e\u5b57\u53c2\u6570 \u00b6 1 2 3 4 5 6 7 8 9 10 11 # \u5173\u952e\u5b57\u53c2\u6570\u5728\u51fd\u6570\u5185\u90e8\u81ea\u52a8\u7ec4\u88c5\u4e3a\u4e00\u4e2a dict def student ( name , age , ** kwargs ): print ( 'Name:' , name ) print ( 'Age:' , age ) print ( 'other:' , kwargs ) student ( '\u5f20\u4e09' , 13 , sex = 'boy' ) ###\u8fd0\u884c\u7ed3\u679c### Name : \u5f20\u4e09 Age : 13 other : { 'sex' : 'boy' } 4.6 \u547d\u540d\u5173\u952e\u5b57\u53c2\u6570 \u00b6 1 2 3 4 5 # *\u540e\u9762\u7684\u53c2\u6570\u88ab\u89c6\u4e3a\u547d\u540d\u5173\u952e\u5b57\u53c2\u6570,\u53ea\u63a5\u6536 city \u548c job \u4f5c\u4e3a\u5173\u952e\u5b57\u53c2\u6570 def person ( name , age , * , city , job ): print ( name , age , city , job ) person ( '\u5f20\u4e09' , 18 , city = \"xi'an\" , job = 'IT' ) 4.7 \u7ec4\u5408\u53c2\u6570 \u00b6 \u53c2\u6570\u987a\u5e8f\uff1a\u5fc5\u9009\u53c2\u6570\u3001\u9ed8\u8ba4\u53c2\u6570\u3001\u53ef\u53d8\u53c2\u6570/\u547d\u540d\u5173\u952e\u5b57\u53c2\u6570\u548c\u5173\u952e\u5b57\u53c2\u6570 5. \u4f5c\u7528\u57df\u6cd5\u5219LEGB \u00b6 L-Local(function)\uff1b\u51fd\u6570\u5185\u7684\u540d\u5b57\u7a7a\u95f4 E-Enclosing function locals\uff1b\u5916\u90e8\u5d4c\u5957\u51fd\u6570\u7684\u540d\u5b57\u7a7a\u95f4(\u4f8b\u5982closure) G-Global(module)\uff1b\u51fd\u6570\u5b9a\u4e49\u6240\u5728\u6a21\u5757\uff08\u6587\u4ef6\uff09\u7684\u540d\u5b57\u7a7a\u95f4 B-Builtin(Python)\uff1bPython\u5185\u7f6e\u6a21\u5757\u7684\u540d\u5b57\u7a7a\u95f4 6. \u51fd\u6570\u7684\u8fd4\u56de\u503c \u00b6 6.1 \u9ed8\u8ba4\u8fd4\u56deNone \u00b6 1 2 3 4 5 6 7 >>> def bar (): ... print ( \"hello\" ) ... >>> f = bar () hello >>> print ( f ) None 6.2 \u6307\u5b9a\u8fd4\u56de\u503c \u00b6 1 2 3 4 5 6 7 >>> def bar (): ... print ( \"hello\" ) ... return 1 ... >>> f = bar () hello >>> print ( f ) 6.3 \u8fd4\u56de\u8ba1\u7b97\u7ed3\u679c \u00b6 1 2 3 4 5 >>> def bar ( x , y ): ... return x + y ... >>> f = bar ( 1 , 2 ) >>> print ( f ) 6.4 \u7ed3\u675f\u51fd\u6570 \u00b6 1 2 3 4 5 6 >>> def bar (): ... print ( \"hello\" ) ... return 1 ... print ( \"world\" ) >>> bar () hello 6.5 \u8fd4\u56de\u5143\u7ec4 \u00b6 1 2 3 4 5 6 # \u7528\u9017\u53f7\u5206\u9694\u5f00\u591a\u4e2a\u503c\uff0c\u4f1a\u88abreturn\u8fd4\u56de\u6210\u5143\u7ec4 >>> def bar ( x , y ): ... return x , y ... >>> bar ( 1 , 2 ) ( 1 , 2 ) return\u7684\u4f5c\u7528 \u7ed3\u675f\u51fd\u6570 \u5c06\u4e00\u4e2a\u7ed3\u679c\u5bf9\u8c61\u4f20\u56de\u7ed9\u8c03\u7528\u8005 7. \u95ed\u5305(closure) \u00b6 \u5728\u4e00\u4e2a\u5185\u90e8\u51fd\u6570\u5bf9\u5728\u5916\u90e8\u7684\u4f5c\u7528\u7684\u4f5c\u7528\u57df\u8fdb\u884c\u4e00\u4e2a\u5f15\u7528\uff0c\u90a3\u4e48\u5185\u90e8\u51fd\u6570\u5c31\u662f\u4e00\u4e2a\u95ed\u5305 1 2 3 4 5 6 7 8 9 >>> def maker ( N ): ... def action ( X ): #\u4e00\u4e2a\u5185\u90e8\u51fd\u6570 ... return X ** N #N\u4e3a\u4e0a\u7ea7\u51fd\u6570\u7684\u4e00\u4e2a\u53d8\u91cf ... return action ... >>> f = maker ( 2 ) >>> f < function maker .< locals >. action at 0x000002C47A1E2A60 > >>> f ( 3 ) \u95ed\u5305\u7684\u4e09\u4e2a\u7279\u70b9\uff1a \u95ed\u5305\u51fd\u6570\u5fc5\u987b\u6709\u5185\u5d4c\u51fd\u6570 \u5185\u5d4c\u51fd\u6570\u9700\u8981\u5f15\u7528\u8be5\u5d4c\u5957\u51fd\u6570\u4e0a\u4e00\u7ea7 namespace \u4e2d\u7684\u53d8\u91cf \u95ed\u5305\u51fd\u6570\u5fc5\u987b\u8fd4\u56de\u5185\u5d4c\u51fd\u6570 8. \u9ad8\u9636\u51fd\u6570 \u00b6 8.1 \u53d8\u91cf\u540d\u53ef\u4ee5\u6307\u5411\u51fd\u6570 \u00b6 1 2 3 >>> abs ( - 10 ) >>> f = abs >>> f ( - 10 ) 8.2 \u51fd\u6570\u540d\u53ef\u4ee5\u4f5c\u4e3a\u5176\u4ed6\u51fd\u6570\u7684\u53c2\u6570 \u00b6 1 2 3 4 >>> def bar ( x , y , f ): ... return f ( x ) + f ( y ) ... >>> bar ( - 5 , - 3 , abs ) 8.3 \u51fd\u6570\u540d\u53ef\u4ee5\u4f5c\u4e3a\u8fd4\u56de\u503c \u00b6 1 2 3 4 5 6 7 >>> def bar (): ... def foo (): ... return \"hello\" ... return foo ... >>> bar () < function bar .< locals >. foo at 0x00000194EED32A60 > 9. \u88c5\u9970\u5668\uff08Decorator\uff09 \u00b6 \u5f00\u653e\u5c01\u95ed\u539f\u5219 \uff1a \u5f00\u653e\uff1a\u5bf9\u4ee3\u7801\u7684\u6269\u5c55\u5f00\u653e \u200b\u5c01\u95ed\uff1a\u5bf9\u4ee3\u7801\u7684\u4fee\u6539\u5c01\u95ed \u88c5\u9970\u5668\u5b8c\u5168\u9075\u5faa\u5f00\u653e\u5c01\u95ed\u539f\u5219\u3002\u5728\u4e0d\u6539\u53d8\u539f\u51fd\u6570\u7684\u4ee3\u7801\u4ee5\u53ca\u8c03\u7528\u65b9\u5f0f\u7684\u524d\u63d0\u4e0b\uff0c\u4e3a\u5176\u589e\u52a0\u4ee3\u7801\u529f\u80fd\u3002 \u88c5\u9970\u5668\u4e09\u8981\u7d20 \uff1aLEGB\u3001\u9ad8\u9636\u51fd\u6570\u3001\u95ed\u5305 9.1 \u65e0\u53c2\u88c5\u9970\u5668 \u00b6 9.1.1 \u88c5\u9970\u5668\u5b9e\u73b0\u601d\u8def \u00b6 \u7b2c\u4e00\u6b65\uff1a\u7edf\u8ba1hello\u51fd\u6570\u6267\u884c\u7684\u65f6\u95f4 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 def hello (): print ( \"hello\" ) # \u51fd\u6570\u540d\u53ef\u4ee5\u4f5c\u4e3a\u5176\u4ed6\u51fd\u6570\u7684\u53c2\u6570 def show_time ( func ): print ( \"------------\" ) func () print ( \"------------\" ) show_time ( hello ) # \u6216\u8005\u5982\u4e0b # hello = show_time(hello) # hello # \u4f46\u8c03\u7528\u65b9\u5f0f\u8fd8\u662f\u53d1\u751f\u4e86\u6539\u53d8 \u7b2c\u4e8c\u6b65\uff1a\u4fdd\u7559\u51fd\u6570\u8c03\u7528\u65b9\u5f0f \u00b6 \u5982\u679c\u628a\u4e00\u4e2a\u51fd\u6570\u540d\u8d4b\u503c\u7ed9hello\uff0chello()\u5c31\u53ef\u4ee5\u6267\u884c\u51fd\u6570\u4e86\uff0c\u5173\u952e\u95ee\u9898\u662f\u5982\u4f55\u8ba9show_time(hello)\u4f5c\u4e3a\u51fd\u6570\u540d\u8d4b\u503c\u7ed9hello \u60f3\u60f3\u9ad8\u9636\u51fd\u6570\u4e2d\u51fd\u6570\u540d\u53ef\u4ee5\u4f5c\u4e3a\u8fd4\u56de\u503c\u8fd4\u56de\u7684\u7279\u6027 \u53ef\u4ee5\u628a\u4e0a\u8ff0\u7684\u51fd\u6570\u6539\u4e3a\u5982\u4e0b 1 2 3 4 5 6 7 8 9 10 11 12 def hello (): print ( \"hello\" ) def show_time ( func ): def inner (): print ( \"------------\" ) func () print ( \"------------\" ) return inner #\u6b64\u65f6\u5982\u679c\u8c03\u7528show_time\uff0c\u8fd4\u56de\u7684\u5c31\u662finner\u51fd\u6570\u7684\u51fd\u6570\u540d hello = show_time ( hello ) #\u5c06inner\u51fd\u6570\u8d4b\u503c\u7ed9hello hello () #\u5b9e\u9645\u6267\u884c\u7684\u662finner\u51fd\u6570 \u7b2c\u4e09\u6b65\uff1a \u8bed\u6cd5\u7cd6 @func \u00b6 \u5728python\u4e2dhello=show_time(hello)\u53ef\u4ee5\u5199\u4e3a@show_time\uff0c\u5982\u4e0b 1 2 3 4 5 6 7 8 9 10 11 def show_time ( func ): def inner (): print ( \"------------\" ) func () print ( \"------------\" ) return inner @show_time # hello=show_time(hello) def hello (): print ( \"hello\" ) hello () 9.2 \u88ab\u88c5\u9970\u51fd\u6570\u7684\u53c2\u6570 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 def show_time ( func ): def inner ( name ): print ( \"------------\" ) func ( name ) print ( \"------------\" ) return inner @show_time def hello ( name ): print ( \"hello\" , name ) hello ( 'Bob' ) \u4f7f\u7528 *args,**kwargs \u7ec4\u5408\u6765\u6ee1\u8db3\u88ab\u88c5\u9970\u51fd\u6570\u53c2\u6570\u7684\u6240\u6709\u60c5\u51b5 1 2 3 4 5 def wrapper ( func ): def inner ( * args , ** kwargs ): res = func ( * args , ** kwargs ) return res return inner 9.2 \u6709\u53c2\u88c5\u9970\u5668 \u00b6 \u7ed9\u88c5\u9970\u5668\u52a0\u53c2\u6570\u6765\u5b9e\u73b0\u4e0d\u540c\u7684\u529f\u80fd\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 import time def logger ( flag = '' ): def show_time ( func ): def inner ( * args , ** kwargs ): start = time . time () time . sleep ( 1 ) func ( * args , ** kwargs ) end = time . time () print ( 'running time:' , end - start ) if flag == 'true' : print ( 'this is loggger' ) return inner return show_time @logger ( 'true' ) def foo ( * args , ** kwargs ): sums = 0 for i in args : sums += i print ( sums ) @logger () def bar (): print ( 'bar..' ) foo ( 1 , 2 , 3 ) bar () 9.3 \u4fdd\u7559\u539f\u51fd\u6570\u7684\u6587\u6863\u548c\u51fd\u6570\u540d\u5c5e\u6027 \u00b6 functools.wraps \u7684\u4f5c\u7528 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 def show_time ( func ): def inner ( name ): print ( \"------------\" ) func ( name ) print ( \"------------\" ) return inner @show_time def hello ( name ): ''' say hello :param name: :return: ''' print ( \"hello\" , name ) print ( hello . __name__ ) print ( '----------' ) print ( help ( hello )) # \u4f7f\u7528help(\u51fd\u6570\u540d)\u6765\u67e5\u770b\u51fd\u6570\u7684\u6587\u6863\u6ce8\u91ca,\u539f\u51fd\u6570\u7684\u540d\u79f0\u53d8\u6210\u4e86inner\uff0c\u4e0d\u662f\u539f\u6765\u7684hello ####\u8fd0\u884c\u7ed3\u679c#### inner ---------- Help on function inner in module __main__ : inner ( name ) None \u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u65b9\u5f0f\u6765\u4fee\u6b63\u88c5\u9970\u5668\uff1a 1 2 3 4 5 6 7 8 9 def show_time ( func ): def inner ( name ): print ( \"------------\" ) func ( name ) print ( \"------------\" ) inner . __doc__ = func . __doc__ inner . __name__ = func . __name__ return inner \u6309\u7167\u4e0a\u8ff0\u65b9\u5f0f\u6765\u5b9e\u73b0\u4fdd\u7559\u539f\u51fd\u6570\u5c5e\u6027\u8fc7\u4e8e\u9ebb\u70e6\uff0c functools \u6a21\u5757\u4e0b\u63d0\u4f9b\u4e00\u4e2a\u88c5\u9970\u5668wraps\u4e13\u95e8\u7528\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 from functools import wraps def show_time ( func ): @wraps ( func ) def inner ( name ): print ( \"------------\" ) func ( name ) print ( \"------------\" ) return inner @show_time def hello ( name ): print ( \"hello\" , name ) print ( hello . __name__ ) ####\u8fd0\u884c\u7ed3\u679c#### >> hello 9.3 \u591a\u4e2a\u88c5\u9970\u5668\u53e0\u52a0 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 def deco1 ( func1 ): # func1 = wrapper2\u7684\u5185\u5b58\u5730\u5740 def wrapper1 ( * args , ** kwargs ): print ( \"deco1.wrapper1\u5f00\u59cb\u6267\u884c\uff0cfunc1\uff1a\" , func1 ) # <function deco2.<locals>.wrapper2 at 0x0000021CB8462EA0> res = func1 ( * args , ** kwargs ) print ( \"deco1.wrapper1\u6267\u884c\u7ed3\u675f\" ) return res return wrapper1 def deco2 ( func2 ): # func2 = wrapper3\u7684\u5185\u5b58\u5730\u5740 def wrapper2 ( * args , ** kwargs ): print ( \"deco1.wrapper2\u5f00\u59cb\u6267\u884c\uff0cfunc2\uff1a\" , func2 ) # <function deco3.<locals>.wrapper3 at 0x0000021CB8462D90> res = func2 ( * args , ** kwargs ) print ( \"deco1.wrapper2\u6267\u884c\u7ed3\u675f\" ) return res return wrapper2 def deco3 ( func3 ): # func3 = \u88ab\u88c5\u9970\u5bf9\u8c61foo\u7684\u5185\u5b58\u5730\u5740 def wrapper3 ( * args , ** kwargs ): print ( \"deco1.wrapper3\u5f00\u59cb\u6267\u884c\uff0cfunc3\uff1a\" , func3 ) # <function foo at 0x0000022282592E18> res = func3 ( * args , ** kwargs ) print ( \"deco1.wrapper3\u6267\u884c\u7ed3\u675f\" ) return res return wrapper3 @deco1 # foo = deco2(wrapper2\u7684\u5185\u5b58\u5730\u5740) @deco2 # foo = deco2(wrapper3\u7684\u5185\u5b58\u5730\u5740) @deco3 # foo = deco3(foo) ==> foo = deco3(\u88ab\u88c5\u9970\u5bf9\u8c61foo\u7684\u5185\u5b58\u5730\u5740) def foo (): print ( \"hello world!\" ) print ( 'foo:' , foo ) foo () # \u52a0\u8f7d\u987a\u5e8f\u81ea\u4e0b\u800c\u4e0a \u6267\u884c\u7ed3\u679c 1 2 3 4 5 6 7 8 foo : < function deco1 .< locals >. wrapper1 at 0x00000176D6512F28 > deco1 . wrapper1\u5f00\u59cb\u6267\u884c \uff0c func1 \uff1a < function deco2 .< locals >. wrapper2 at 0x00000176D6512EA0 > deco1 . wrapper2\u5f00\u59cb\u6267\u884c \uff0c func2 \uff1a < function deco3 .< locals >. wrapper3 at 0x00000176D6512D90 > deco1 . wrapper3\u5f00\u59cb\u6267\u884c \uff0c func3 \uff1a < function foo at 0x00000176D6512E18 > hello world ! deco1 . wrapper3\u6267\u884c\u7ed3\u675f deco1 . wrapper2\u6267\u884c\u7ed3\u675f deco1 . wrapper1\u6267\u884c\u7ed3\u675f 10 global \u548c nonlocal \u00b6 10.1 global \u00b6 1 2 3 4 5 6 x = 88 def bar (): global x x = 99 bar () print ( x ) 10.2 nonlocal \u00b6 \u7528\u4e8e\u5d4c\u5957\u51fd\u6570\u4e2d\uff0c\u53ea\u4f5c\u7528\u4e8e\u5916\u5c42\u51fd\u6570\u7684\u4f5c\u7528\u57df\u4e2d\uff0c\u800c\u4e0d\u662f\u5168\u5c40 1 2 3 4 5 6 7 8 9 def bar (): x = 1 def foo (): nonlocal x x += 1 foo () print ( x ) bar () 11 \u533f\u540d\u51fd\u6570 \u00b6 lambda \u5f62\u53c2:\u8fd4\u56de\u503c 1 2 3 >>> f = lambda a , b : a + b >>> f ( 1 , 2 ) 3 \u533f\u540d\u7528\u4e8e\u4e34\u65f6\u8c03\u7528\u4e00\u6b21\u7684\u573a\u666f\uff1a\u66f4\u591a\u7684\u662f\u5c06\u533f\u540d\u4e0e\u5176\u4ed6\u51fd\u6570\u914d\u5408\u4f7f\u7528 12 \u51fd\u6570\u5f0f\u7f16\u7a0b \u00b6 12.1 map \u00b6 12.2 filter \u00b6 12.3 reduce \u00b6 13 \u51fd\u6570\u7684\u591a\u6001 \u00b6 \u51fd\u6570\u4e2dx,y\u7684\u610f\u4e49\u5b8c\u5168\u53d6\u51b3\u4e8ex\u548cy\u7684\u5bf9\u8c61\u7c7b\u578b 1 2 3 4 5 def add ( x , y ): print ( x + y ) add ( 3 , 5 ) # \u52a0\u6cd5 add ( 'hello' , 'world' ) # \u5b57\u7b26\u4e32\u62fc\u63a5 \u7ed9\u51fd\u6570\u9644\u52a0\u5c5e\u6027 1 2 3 4 5 6 foo (): pass foo . name = 'root' print ( foo . name )","title":"\u51fd\u6570"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/04-%E5%87%BD%E6%95%B0/#_1","text":"","title":"\u51fd\u6570"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/04-%E5%87%BD%E6%95%B0/#1","text":"\u4ee3\u7801\u91cd\u7528\uff0c\u51cf\u5c11\u4ee3\u7801\u5197\u4f59 \u6d41\u7a0b\u5206\u89e3","title":"1. \u51fd\u6570\u7684\u4f5c\u7528"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/04-%E5%87%BD%E6%95%B0/#2","text":"\u5185\u7f6e\u51fd\u6570 \u81ea\u5b9a\u4e49\u51fd\u6570","title":"2. \u51fd\u6570\u5206\u7c7b"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/04-%E5%87%BD%E6%95%B0/#3","text":"1 2 3 4 def \u51fd\u6570\u540d ( arg1 , arg2 , ... ): \"\"\"\u63cf\u8ff0\"\"\" \u51fd\u6570\u4f53 return value \u7a0b\u5e8f\u8fd0\u884c\u65f6\u4f1a\u521b\u5efa\u4e00\u4e2a\u51fd\u6570\u5bf9\u8c61\u5e76\u5c06\u5176\u8d4b\u503c\u7ed9\u4e00\u4e2a\u53d8\u91cf\u540d\uff0c\u901a\u8fc7\u5728\u51fd\u6570\u540d\u540e\u52a0\u62ec\u53f7\u8c03\u7528\u8fd9\u4e2a\u51fd\u6570\u3002 1 2 3 4 5 >>> def bar (): ... print ( \"bar\" ) ... >>> print ( bar ) < function bar at 0x000002AEFFF01EA0 >","title":"3. \u51fd\u6570\u7684\u5b9a\u4e49"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/04-%E5%87%BD%E6%95%B0/#4","text":"","title":"4. \u51fd\u6570\u7684\u53c2\u6570"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/04-%E5%87%BD%E6%95%B0/#41","text":"1 2 def bar (): print ( \"bar\" )","title":"4.1 \u65e0\u53c2\u6570"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/04-%E5%87%BD%E6%95%B0/#42","text":"1 2 3 def add ( x , y ): print ( x + y ) add ( 3 , 5 )","title":"4.2 \u4f4d\u7f6e\u53c2\u6570"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/04-%E5%87%BD%E6%95%B0/#43","text":"1 2 3 def student ( name , age = 21 ): print ( 'Name:' , name ) print ( 'Age:' , age )","title":"4.3 \u9ed8\u8ba4\u53c2\u6570"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/04-%E5%87%BD%E6%95%B0/#44","text":"1 2 3 4 5 6 7 # \u4f20\u5165\u7684\u53c2\u6570\u4e2a\u6570\u662f\u53ef\u53d8\u7684\uff0c\u53ef\u4ee5\u662f 1 \u4e2a\u30012 \u4e2a\u5230\u4efb\u610f\u4e2a\uff0c\u8fd8\u53ef\u4ee5\u662f 0 \u4e2a def calc ( * numbers ): sum = 0 for n in numbers : sum = sum + n * n return sum print ( calc ( 1 , 2 , 3 ))","title":"4.4 \u53ef\u53d8\u53c2\u6570"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/04-%E5%87%BD%E6%95%B0/#45","text":"1 2 3 4 5 6 7 8 9 10 11 # \u5173\u952e\u5b57\u53c2\u6570\u5728\u51fd\u6570\u5185\u90e8\u81ea\u52a8\u7ec4\u88c5\u4e3a\u4e00\u4e2a dict def student ( name , age , ** kwargs ): print ( 'Name:' , name ) print ( 'Age:' , age ) print ( 'other:' , kwargs ) student ( '\u5f20\u4e09' , 13 , sex = 'boy' ) ###\u8fd0\u884c\u7ed3\u679c### Name : \u5f20\u4e09 Age : 13 other : { 'sex' : 'boy' }","title":"4.5 \u5173\u952e\u5b57\u53c2\u6570"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/04-%E5%87%BD%E6%95%B0/#46","text":"1 2 3 4 5 # *\u540e\u9762\u7684\u53c2\u6570\u88ab\u89c6\u4e3a\u547d\u540d\u5173\u952e\u5b57\u53c2\u6570,\u53ea\u63a5\u6536 city \u548c job \u4f5c\u4e3a\u5173\u952e\u5b57\u53c2\u6570 def person ( name , age , * , city , job ): print ( name , age , city , job ) person ( '\u5f20\u4e09' , 18 , city = \"xi'an\" , job = 'IT' )","title":"4.6 \u547d\u540d\u5173\u952e\u5b57\u53c2\u6570"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/04-%E5%87%BD%E6%95%B0/#47","text":"\u53c2\u6570\u987a\u5e8f\uff1a\u5fc5\u9009\u53c2\u6570\u3001\u9ed8\u8ba4\u53c2\u6570\u3001\u53ef\u53d8\u53c2\u6570/\u547d\u540d\u5173\u952e\u5b57\u53c2\u6570\u548c\u5173\u952e\u5b57\u53c2\u6570","title":"4.7 \u7ec4\u5408\u53c2\u6570"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/04-%E5%87%BD%E6%95%B0/#5-legb","text":"L-Local(function)\uff1b\u51fd\u6570\u5185\u7684\u540d\u5b57\u7a7a\u95f4 E-Enclosing function locals\uff1b\u5916\u90e8\u5d4c\u5957\u51fd\u6570\u7684\u540d\u5b57\u7a7a\u95f4(\u4f8b\u5982closure) G-Global(module)\uff1b\u51fd\u6570\u5b9a\u4e49\u6240\u5728\u6a21\u5757\uff08\u6587\u4ef6\uff09\u7684\u540d\u5b57\u7a7a\u95f4 B-Builtin(Python)\uff1bPython\u5185\u7f6e\u6a21\u5757\u7684\u540d\u5b57\u7a7a\u95f4","title":"5. \u4f5c\u7528\u57df\u6cd5\u5219LEGB"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/04-%E5%87%BD%E6%95%B0/#6","text":"","title":"6. \u51fd\u6570\u7684\u8fd4\u56de\u503c"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/04-%E5%87%BD%E6%95%B0/#61-none","text":"1 2 3 4 5 6 7 >>> def bar (): ... print ( \"hello\" ) ... >>> f = bar () hello >>> print ( f ) None","title":"6.1 \u9ed8\u8ba4\u8fd4\u56deNone"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/04-%E5%87%BD%E6%95%B0/#62","text":"1 2 3 4 5 6 7 >>> def bar (): ... print ( \"hello\" ) ... return 1 ... >>> f = bar () hello >>> print ( f )","title":"6.2  \u6307\u5b9a\u8fd4\u56de\u503c"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/04-%E5%87%BD%E6%95%B0/#63","text":"1 2 3 4 5 >>> def bar ( x , y ): ... return x + y ... >>> f = bar ( 1 , 2 ) >>> print ( f )","title":"6.3  \u8fd4\u56de\u8ba1\u7b97\u7ed3\u679c"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/04-%E5%87%BD%E6%95%B0/#64","text":"1 2 3 4 5 6 >>> def bar (): ... print ( \"hello\" ) ... return 1 ... print ( \"world\" ) >>> bar () hello","title":"6.4  \u7ed3\u675f\u51fd\u6570"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/04-%E5%87%BD%E6%95%B0/#65","text":"1 2 3 4 5 6 # \u7528\u9017\u53f7\u5206\u9694\u5f00\u591a\u4e2a\u503c\uff0c\u4f1a\u88abreturn\u8fd4\u56de\u6210\u5143\u7ec4 >>> def bar ( x , y ): ... return x , y ... >>> bar ( 1 , 2 ) ( 1 , 2 ) return\u7684\u4f5c\u7528 \u7ed3\u675f\u51fd\u6570 \u5c06\u4e00\u4e2a\u7ed3\u679c\u5bf9\u8c61\u4f20\u56de\u7ed9\u8c03\u7528\u8005","title":"6.5 \u8fd4\u56de\u5143\u7ec4"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/04-%E5%87%BD%E6%95%B0/#7-closure","text":"\u5728\u4e00\u4e2a\u5185\u90e8\u51fd\u6570\u5bf9\u5728\u5916\u90e8\u7684\u4f5c\u7528\u7684\u4f5c\u7528\u57df\u8fdb\u884c\u4e00\u4e2a\u5f15\u7528\uff0c\u90a3\u4e48\u5185\u90e8\u51fd\u6570\u5c31\u662f\u4e00\u4e2a\u95ed\u5305 1 2 3 4 5 6 7 8 9 >>> def maker ( N ): ... def action ( X ): #\u4e00\u4e2a\u5185\u90e8\u51fd\u6570 ... return X ** N #N\u4e3a\u4e0a\u7ea7\u51fd\u6570\u7684\u4e00\u4e2a\u53d8\u91cf ... return action ... >>> f = maker ( 2 ) >>> f < function maker .< locals >. action at 0x000002C47A1E2A60 > >>> f ( 3 ) \u95ed\u5305\u7684\u4e09\u4e2a\u7279\u70b9\uff1a \u95ed\u5305\u51fd\u6570\u5fc5\u987b\u6709\u5185\u5d4c\u51fd\u6570 \u5185\u5d4c\u51fd\u6570\u9700\u8981\u5f15\u7528\u8be5\u5d4c\u5957\u51fd\u6570\u4e0a\u4e00\u7ea7 namespace \u4e2d\u7684\u53d8\u91cf \u95ed\u5305\u51fd\u6570\u5fc5\u987b\u8fd4\u56de\u5185\u5d4c\u51fd\u6570","title":"7. \u95ed\u5305(closure)"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/04-%E5%87%BD%E6%95%B0/#8","text":"","title":"8. \u9ad8\u9636\u51fd\u6570"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/04-%E5%87%BD%E6%95%B0/#81","text":"1 2 3 >>> abs ( - 10 ) >>> f = abs >>> f ( - 10 )","title":"8.1 \u53d8\u91cf\u540d\u53ef\u4ee5\u6307\u5411\u51fd\u6570"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/04-%E5%87%BD%E6%95%B0/#82","text":"1 2 3 4 >>> def bar ( x , y , f ): ... return f ( x ) + f ( y ) ... >>> bar ( - 5 , - 3 , abs )","title":"8.2 \u51fd\u6570\u540d\u53ef\u4ee5\u4f5c\u4e3a\u5176\u4ed6\u51fd\u6570\u7684\u53c2\u6570"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/04-%E5%87%BD%E6%95%B0/#83","text":"1 2 3 4 5 6 7 >>> def bar (): ... def foo (): ... return \"hello\" ... return foo ... >>> bar () < function bar .< locals >. foo at 0x00000194EED32A60 >","title":"8.3 \u51fd\u6570\u540d\u53ef\u4ee5\u4f5c\u4e3a\u8fd4\u56de\u503c"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/04-%E5%87%BD%E6%95%B0/#9-decorator","text":"\u5f00\u653e\u5c01\u95ed\u539f\u5219 \uff1a \u5f00\u653e\uff1a\u5bf9\u4ee3\u7801\u7684\u6269\u5c55\u5f00\u653e \u200b\u5c01\u95ed\uff1a\u5bf9\u4ee3\u7801\u7684\u4fee\u6539\u5c01\u95ed \u88c5\u9970\u5668\u5b8c\u5168\u9075\u5faa\u5f00\u653e\u5c01\u95ed\u539f\u5219\u3002\u5728\u4e0d\u6539\u53d8\u539f\u51fd\u6570\u7684\u4ee3\u7801\u4ee5\u53ca\u8c03\u7528\u65b9\u5f0f\u7684\u524d\u63d0\u4e0b\uff0c\u4e3a\u5176\u589e\u52a0\u4ee3\u7801\u529f\u80fd\u3002 \u88c5\u9970\u5668\u4e09\u8981\u7d20 \uff1aLEGB\u3001\u9ad8\u9636\u51fd\u6570\u3001\u95ed\u5305","title":"9. \u88c5\u9970\u5668\uff08Decorator\uff09"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/04-%E5%87%BD%E6%95%B0/#91","text":"","title":"9.1 \u65e0\u53c2\u88c5\u9970\u5668"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/04-%E5%87%BD%E6%95%B0/#911","text":"","title":"9.1.1 \u88c5\u9970\u5668\u5b9e\u73b0\u601d\u8def"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/04-%E5%87%BD%E6%95%B0/#hello","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 def hello (): print ( \"hello\" ) # \u51fd\u6570\u540d\u53ef\u4ee5\u4f5c\u4e3a\u5176\u4ed6\u51fd\u6570\u7684\u53c2\u6570 def show_time ( func ): print ( \"------------\" ) func () print ( \"------------\" ) show_time ( hello ) # \u6216\u8005\u5982\u4e0b # hello = show_time(hello) # hello # \u4f46\u8c03\u7528\u65b9\u5f0f\u8fd8\u662f\u53d1\u751f\u4e86\u6539\u53d8","title":"\u7b2c\u4e00\u6b65\uff1a\u7edf\u8ba1hello\u51fd\u6570\u6267\u884c\u7684\u65f6\u95f4"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/04-%E5%87%BD%E6%95%B0/#_2","text":"\u5982\u679c\u628a\u4e00\u4e2a\u51fd\u6570\u540d\u8d4b\u503c\u7ed9hello\uff0chello()\u5c31\u53ef\u4ee5\u6267\u884c\u51fd\u6570\u4e86\uff0c\u5173\u952e\u95ee\u9898\u662f\u5982\u4f55\u8ba9show_time(hello)\u4f5c\u4e3a\u51fd\u6570\u540d\u8d4b\u503c\u7ed9hello \u60f3\u60f3\u9ad8\u9636\u51fd\u6570\u4e2d\u51fd\u6570\u540d\u53ef\u4ee5\u4f5c\u4e3a\u8fd4\u56de\u503c\u8fd4\u56de\u7684\u7279\u6027 \u53ef\u4ee5\u628a\u4e0a\u8ff0\u7684\u51fd\u6570\u6539\u4e3a\u5982\u4e0b 1 2 3 4 5 6 7 8 9 10 11 12 def hello (): print ( \"hello\" ) def show_time ( func ): def inner (): print ( \"------------\" ) func () print ( \"------------\" ) return inner #\u6b64\u65f6\u5982\u679c\u8c03\u7528show_time\uff0c\u8fd4\u56de\u7684\u5c31\u662finner\u51fd\u6570\u7684\u51fd\u6570\u540d hello = show_time ( hello ) #\u5c06inner\u51fd\u6570\u8d4b\u503c\u7ed9hello hello () #\u5b9e\u9645\u6267\u884c\u7684\u662finner\u51fd\u6570","title":"\u7b2c\u4e8c\u6b65\uff1a\u4fdd\u7559\u51fd\u6570\u8c03\u7528\u65b9\u5f0f"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/04-%E5%87%BD%E6%95%B0/#func","text":"\u5728python\u4e2dhello=show_time(hello)\u53ef\u4ee5\u5199\u4e3a@show_time\uff0c\u5982\u4e0b 1 2 3 4 5 6 7 8 9 10 11 def show_time ( func ): def inner (): print ( \"------------\" ) func () print ( \"------------\" ) return inner @show_time # hello=show_time(hello) def hello (): print ( \"hello\" ) hello ()","title":"\u7b2c\u4e09\u6b65\uff1a \u8bed\u6cd5\u7cd6@func"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/04-%E5%87%BD%E6%95%B0/#92","text":"1 2 3 4 5 6 7 8 9 10 11 12 def show_time ( func ): def inner ( name ): print ( \"------------\" ) func ( name ) print ( \"------------\" ) return inner @show_time def hello ( name ): print ( \"hello\" , name ) hello ( 'Bob' ) \u4f7f\u7528 *args,**kwargs \u7ec4\u5408\u6765\u6ee1\u8db3\u88ab\u88c5\u9970\u51fd\u6570\u53c2\u6570\u7684\u6240\u6709\u60c5\u51b5 1 2 3 4 5 def wrapper ( func ): def inner ( * args , ** kwargs ): res = func ( * args , ** kwargs ) return res return inner","title":"9.2 \u88ab\u88c5\u9970\u51fd\u6570\u7684\u53c2\u6570"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/04-%E5%87%BD%E6%95%B0/#92_1","text":"\u7ed9\u88c5\u9970\u5668\u52a0\u53c2\u6570\u6765\u5b9e\u73b0\u4e0d\u540c\u7684\u529f\u80fd\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 import time def logger ( flag = '' ): def show_time ( func ): def inner ( * args , ** kwargs ): start = time . time () time . sleep ( 1 ) func ( * args , ** kwargs ) end = time . time () print ( 'running time:' , end - start ) if flag == 'true' : print ( 'this is loggger' ) return inner return show_time @logger ( 'true' ) def foo ( * args , ** kwargs ): sums = 0 for i in args : sums += i print ( sums ) @logger () def bar (): print ( 'bar..' ) foo ( 1 , 2 , 3 ) bar ()","title":"9.2 \u6709\u53c2\u88c5\u9970\u5668"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/04-%E5%87%BD%E6%95%B0/#93","text":"functools.wraps \u7684\u4f5c\u7528 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 def show_time ( func ): def inner ( name ): print ( \"------------\" ) func ( name ) print ( \"------------\" ) return inner @show_time def hello ( name ): ''' say hello :param name: :return: ''' print ( \"hello\" , name ) print ( hello . __name__ ) print ( '----------' ) print ( help ( hello )) # \u4f7f\u7528help(\u51fd\u6570\u540d)\u6765\u67e5\u770b\u51fd\u6570\u7684\u6587\u6863\u6ce8\u91ca,\u539f\u51fd\u6570\u7684\u540d\u79f0\u53d8\u6210\u4e86inner\uff0c\u4e0d\u662f\u539f\u6765\u7684hello ####\u8fd0\u884c\u7ed3\u679c#### inner ---------- Help on function inner in module __main__ : inner ( name ) None \u53ef\u4ee5\u901a\u8fc7\u5982\u4e0b\u65b9\u5f0f\u6765\u4fee\u6b63\u88c5\u9970\u5668\uff1a 1 2 3 4 5 6 7 8 9 def show_time ( func ): def inner ( name ): print ( \"------------\" ) func ( name ) print ( \"------------\" ) inner . __doc__ = func . __doc__ inner . __name__ = func . __name__ return inner \u6309\u7167\u4e0a\u8ff0\u65b9\u5f0f\u6765\u5b9e\u73b0\u4fdd\u7559\u539f\u51fd\u6570\u5c5e\u6027\u8fc7\u4e8e\u9ebb\u70e6\uff0c functools \u6a21\u5757\u4e0b\u63d0\u4f9b\u4e00\u4e2a\u88c5\u9970\u5668wraps\u4e13\u95e8\u7528\u6765\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 from functools import wraps def show_time ( func ): @wraps ( func ) def inner ( name ): print ( \"------------\" ) func ( name ) print ( \"------------\" ) return inner @show_time def hello ( name ): print ( \"hello\" , name ) print ( hello . __name__ ) ####\u8fd0\u884c\u7ed3\u679c#### >> hello","title":"9.3  \u4fdd\u7559\u539f\u51fd\u6570\u7684\u6587\u6863\u548c\u51fd\u6570\u540d\u5c5e\u6027"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/04-%E5%87%BD%E6%95%B0/#93_1","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 def deco1 ( func1 ): # func1 = wrapper2\u7684\u5185\u5b58\u5730\u5740 def wrapper1 ( * args , ** kwargs ): print ( \"deco1.wrapper1\u5f00\u59cb\u6267\u884c\uff0cfunc1\uff1a\" , func1 ) # <function deco2.<locals>.wrapper2 at 0x0000021CB8462EA0> res = func1 ( * args , ** kwargs ) print ( \"deco1.wrapper1\u6267\u884c\u7ed3\u675f\" ) return res return wrapper1 def deco2 ( func2 ): # func2 = wrapper3\u7684\u5185\u5b58\u5730\u5740 def wrapper2 ( * args , ** kwargs ): print ( \"deco1.wrapper2\u5f00\u59cb\u6267\u884c\uff0cfunc2\uff1a\" , func2 ) # <function deco3.<locals>.wrapper3 at 0x0000021CB8462D90> res = func2 ( * args , ** kwargs ) print ( \"deco1.wrapper2\u6267\u884c\u7ed3\u675f\" ) return res return wrapper2 def deco3 ( func3 ): # func3 = \u88ab\u88c5\u9970\u5bf9\u8c61foo\u7684\u5185\u5b58\u5730\u5740 def wrapper3 ( * args , ** kwargs ): print ( \"deco1.wrapper3\u5f00\u59cb\u6267\u884c\uff0cfunc3\uff1a\" , func3 ) # <function foo at 0x0000022282592E18> res = func3 ( * args , ** kwargs ) print ( \"deco1.wrapper3\u6267\u884c\u7ed3\u675f\" ) return res return wrapper3 @deco1 # foo = deco2(wrapper2\u7684\u5185\u5b58\u5730\u5740) @deco2 # foo = deco2(wrapper3\u7684\u5185\u5b58\u5730\u5740) @deco3 # foo = deco3(foo) ==> foo = deco3(\u88ab\u88c5\u9970\u5bf9\u8c61foo\u7684\u5185\u5b58\u5730\u5740) def foo (): print ( \"hello world!\" ) print ( 'foo:' , foo ) foo () # \u52a0\u8f7d\u987a\u5e8f\u81ea\u4e0b\u800c\u4e0a \u6267\u884c\u7ed3\u679c 1 2 3 4 5 6 7 8 foo : < function deco1 .< locals >. wrapper1 at 0x00000176D6512F28 > deco1 . wrapper1\u5f00\u59cb\u6267\u884c \uff0c func1 \uff1a < function deco2 .< locals >. wrapper2 at 0x00000176D6512EA0 > deco1 . wrapper2\u5f00\u59cb\u6267\u884c \uff0c func2 \uff1a < function deco3 .< locals >. wrapper3 at 0x00000176D6512D90 > deco1 . wrapper3\u5f00\u59cb\u6267\u884c \uff0c func3 \uff1a < function foo at 0x00000176D6512E18 > hello world ! deco1 . wrapper3\u6267\u884c\u7ed3\u675f deco1 . wrapper2\u6267\u884c\u7ed3\u675f deco1 . wrapper1\u6267\u884c\u7ed3\u675f","title":"9.3 \u591a\u4e2a\u88c5\u9970\u5668\u53e0\u52a0"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/04-%E5%87%BD%E6%95%B0/#10-global-nonlocal","text":"","title":"10 global \u548c nonlocal"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/04-%E5%87%BD%E6%95%B0/#101-global","text":"1 2 3 4 5 6 x = 88 def bar (): global x x = 99 bar () print ( x )","title":"10.1 global"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/04-%E5%87%BD%E6%95%B0/#102-nonlocal","text":"\u7528\u4e8e\u5d4c\u5957\u51fd\u6570\u4e2d\uff0c\u53ea\u4f5c\u7528\u4e8e\u5916\u5c42\u51fd\u6570\u7684\u4f5c\u7528\u57df\u4e2d\uff0c\u800c\u4e0d\u662f\u5168\u5c40 1 2 3 4 5 6 7 8 9 def bar (): x = 1 def foo (): nonlocal x x += 1 foo () print ( x ) bar ()","title":"10.2 nonlocal"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/04-%E5%87%BD%E6%95%B0/#11","text":"lambda \u5f62\u53c2:\u8fd4\u56de\u503c 1 2 3 >>> f = lambda a , b : a + b >>> f ( 1 , 2 ) 3 \u533f\u540d\u7528\u4e8e\u4e34\u65f6\u8c03\u7528\u4e00\u6b21\u7684\u573a\u666f\uff1a\u66f4\u591a\u7684\u662f\u5c06\u533f\u540d\u4e0e\u5176\u4ed6\u51fd\u6570\u914d\u5408\u4f7f\u7528","title":"11 \u533f\u540d\u51fd\u6570"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/04-%E5%87%BD%E6%95%B0/#12","text":"","title":"12 \u51fd\u6570\u5f0f\u7f16\u7a0b"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/04-%E5%87%BD%E6%95%B0/#121-map","text":"","title":"12.1 map"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/04-%E5%87%BD%E6%95%B0/#122-filter","text":"","title":"12.2 filter"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/04-%E5%87%BD%E6%95%B0/#123-reduce","text":"","title":"12.3 reduce"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/04-%E5%87%BD%E6%95%B0/#13","text":"\u51fd\u6570\u4e2dx,y\u7684\u610f\u4e49\u5b8c\u5168\u53d6\u51b3\u4e8ex\u548cy\u7684\u5bf9\u8c61\u7c7b\u578b 1 2 3 4 5 def add ( x , y ): print ( x + y ) add ( 3 , 5 ) # \u52a0\u6cd5 add ( 'hello' , 'world' ) # \u5b57\u7b26\u4e32\u62fc\u63a5 \u7ed9\u51fd\u6570\u9644\u52a0\u5c5e\u6027 1 2 3 4 5 6 foo (): pass foo . name = 'root' print ( foo . name )","title":"13 \u51fd\u6570\u7684\u591a\u6001"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/04-%E6%95%B0%E6%8D%AE%E5%BA%93%E7%BC%96%E7%A8%8B/","text":"","title":"\u6570\u636e\u5e93\u7f16\u7a0b"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/05-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/","text":"\u9762\u5411\u5bf9\u8c61 \u00b6 \u9762\u5411\u5bf9\u8c61\uff08OOP, Object-Oriented Programing\uff09\uff0c\u662f\u4e00\u79cd\u7f16\u7a0b\u65b9\u5f0f\uff08\u51fd\u6570\u5f0f\u7f16\u7a0b\u548c\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\uff09\u4e2d\u7684\u4e00\u79cd\uff0c\u53ef\u4ee5\u964d\u4f4e\u4ee3\u7801\u5197\u4f59\u7a0b\u5ea6\u3002python\u4e2d\u7684\u7c7b\u662f\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u7684\u4e00\u79cd\u5de5\u5177\uff0c\u662f\u9664\u51fd\u6570\u548c\u6a21\u5757\u4e4b\u5916\u7684\u53e6\u4e00\u79cd\u5c01\u88c5\u903b\u8f91\u548c\u6570\u636e\u7684\u65b9\u5f0f\u3002 \u7c7b\u548c\u5b9e\u4f8b\u7684\u533a\u522b\uff1a python\u4e2d\u7c7b\u548c\u5b9e\u4f8b\u662f\u4e24\u79cd\u4e0d\u540c\u7684\u5bf9\u8c61 \u7c7b\u662f\u62bd\u8c61\u7684\u6a21\u677f\uff0c\u5b9e\u4f8b\u662f\u6839\u636e\u7c7b\u521b\u5efa\u51fa\u6765\u7684\u4e00\u4e2a\u4e2a\u5177\u4f53\u7684\u201c\u5bf9\u8c61\u201d \u7c7b\u548c\u5b9e\u4f8b\u90fd\u6709\u72ec\u7acb\u7684\u547d\u540d\u7a7a\u95f4 \u9762\u5411\u5bf9\u8c61\u7684\u4e09\u5927\u601d\u60f3 \u7ee7\u627f \u591a\u6001 \u57fa\u4e8e\u5bf9\u8c61\u63a5\u53e3\u800c\u4e0d\u662f\u7c7b\u578b \u5c01\u88c5 1. \u7c7b\u7684\u5b9a\u4e49\u4e0e\u5b9e\u4f8b\u5316 \u00b6 python\u4e2d\u4f7f\u7528 class \u5173\u952e\u5b57\u6765\u5b9a\u4e49\u4e00\u4e2a\u7c7b\u3002 1 2 class \u7c7b\u540d: pass \u7c7b\u540d\u7684\u547d\u540d\u89c4\u5219\uff1a\u4ee5\u5927\u5199\u5b57\u6bcd\u5f00\u5934 \u5b9e\u4f8b\u5316\u4e00\u4e2a\u7c7b: \u5b9e\u4f8b\u540d = \u7c7b\u540d(\u53c2\u6570) 2. \u7c7b\u7684\u6210\u5458 \u00b6 1. \u5c5e\u6027 \u00b6 \u5c5e\u6027\u7684\u65b9\u6cd5\u65b9\u6cd5\uff1a \u5b9e\u4f8b\u540d.\u5c5e\u6027\u540d 1.1 \u5b9e\u4f8b\u5c5e\u6027 \u00b6 \u7531\u65b9\u6cd5\u5185\u90e8\u7684self\u5c5e\u6027\u8fdb\u884c\u8d4b\u503c\u8fd0\u7b97\u4ea7\u751f\uff0c\u4fdd\u5b58\u5728\u5bf9\u8c61\uff08\u5b9e\u4f8b\uff09\u4e2d\uff0c\u6267\u884c\u53ea\u80fd\u901a\u8fc7\u5bf9\u8c61\u8bbf\u95ee\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 class Person : def __init__ ( self , name ): # 1. \u5728\u7c7b\u7684\u5185\u90e8\u5b9a\u4e49\u5c5e\u6027 self . name = name tom = Person ( 'Tom' ) print ( tom . name ) # Tom # 2. \u5728\u7c7b\u7684\u5916\u90e8\u5b9a\u4e49\u5c5e\u6027 tom . age = '18' print ( tom . age ) # 18 Jerry = Person ( 'Jerry' ) print ( Jerry . name ) # Jerry print ( Jerry . age ) # AttributeError: 'Person' object has no attribute 'age' tom \u548c Jerry\u4e24\u4e2a\u5bf9\u8c61\u5c5e\u4e8e\u4e24\u4e2a\u4e0d\u540c\u7684\u547d\u540d\u7a7a\u95f4\uff0c\u7ed9Tom\u6dfb\u52a0\u7684age\u5c5e\u6027\u5728Jerry\u5bf9\u8c61\u4e2d\u5e76\u4e0d\u80fd\u8bbf\u95ee\u3002 1.2 \u7c7b\u5c5e\u6027 \u00b6 \u901a\u8fc7class\u8bed\u53e5\u5185\u7684\u8d4b\u503c\u8bed\u53e5\u521b\u5efa\uff0c\u4fdd\u5b58\u5728\u7c7b\u4e2d\uff0c\u6267\u884c\u65f6\u53ef\u4ee5\u901a\u8fc7\u5bf9\u8c61\u8bbf\u95ee\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u7c7b\u8bbf\u95ee 1 2 3 4 5 6 7 8 9 10 11 12 13 class Person : country = 'America' def __init__ ( self , name ): self . name = name Tom = Person ( 'Tom' ) # \u901a\u8fc7\u5b9e\u4f8b\u8bbf\u95ee\u7c7b\u5c5e\u6027 print ( Tom . country ) # America # \u901a\u8fc7\u7c7b\u8bbf\u95ee\u7c7b\u5c5e\u6027 print ( Person . country ) # America 1.3 \u79c1\u6709\u5c5e\u6027 \u00b6 \u5728Python\u4e2d\uff0c\u5b9e\u4f8b\u7684\u53d8\u91cf\u540d\u5982\u679c\u4ee5 __ \u5f00\u5934\uff0c\u5c31\u53d8\u6210\u4e86\u4e00\u4e2a\u79c1\u6709\u53d8\u91cf\uff08private\uff09\uff0c\u53ea\u6709\u5185\u90e8\u53ef\u4ee5\u8bbf\u95ee\uff0c\u5916\u90e8\u4e0d\u80fd\u8bbf\u95ee\uff0c\u786e\u4fdd\u4e86\u5916\u90e8\u4ee3\u7801\u4e0d\u80fd\u968f\u610f\u4fee\u6539\u5bf9\u8c61\u5185\u90e8\u7684\u72b6\u6001\uff0c\u4f46\u662f\u53ef\u4ee5\u95f4\u63a5\u8bbf\u95ee\u3002 1 2 3 4 5 6 7 8 9 10 11 class Person : def __init__ ( self , name ): self . __name = name def get_name ( self ): return self . __name Tom = Person ( 'Tom' ) # \u76f4\u63a5\u8bbf\u95ee\u62a5\u9519 # print(Tom.name) # AttributeError: 'Person' object has no attribute 'name' print ( Tom . get_name ()) # Tom 2. \u65b9\u6cd5 \u00b6 \u4f4d\u4e8e\u7c7b\u4e2d\u7684\u51fd\u6570\u79f0\u4e3a\u65b9\u6cd5\u3002\u00b7 \u7c7b\u65b9\u6cd5\u8c03\u7528\u7684\u7b2c\u4e8c\u79cd\u65b9\u5f0f\uff1a class.method(instance, args,...) \uff0c\u4e8b\u5b9e\u4e0a\uff0c instance.method(args...) \u8fd8\u662f\u4f1a\u7ffb\u8bd1\u6210\u8fd9\u79cd\u65b9\u5f0f\u6765\u8c03\u7528 1. \u6784\u9020\u65b9\u6cd5 \u00b6 \u4f5c\u7528\uff1a \u521d\u59cb\u5316\u5b9e\u4f8b\u5c5e\u6027 \u6267\u884c\u5176\u4ed6\u521d\u59cb\u5316\u4efb\u52a1 \u521b\u5efa\u4e00\u4e2a\u5b9e\u4f8b\u65f6\u81ea\u52a8\u8fd0\u884c 1 2 3 4 5 6 7 8 9 10 class Bar : def __init__ ( self , name , age ): self . n = name self . a = age print ( '\u521b\u5efa\u5bf9\u8c61\u65f6\u81ea\u52a8\u6267\u884c\u6784\u9020\u65b9\u6cd5' ) def foo ( self ): print ( self . n , self . a ) obj = Bar ( \"Tom\" , 10 ) # \u521b\u5efa\u5bf9\u8c61\u65f6\u81ea\u52a8\u6267\u884c\u6784\u9020\u65b9\u6cd5 obj . foo () # Tom 10 2. \u666e\u901a\u65b9\u6cd5 \u00b6 \u4fdd\u5b58\u5728\u7c7b\u4e2d\uff0c\u7531\u5bf9\u8c61\u8c03\u7528 1 2 3 4 5 6 7 8 class Bar : def __init__ ( self ): pass def hello ( self ): print ( 'hello world!' ) obj = Bar () obj . hello () # hello world! 3. \u79c1\u6709\u65b9\u6cd5 \u00b6 1 2 3 4 5 6 7 8 9 class Bar : def __init__ ( self ): pass def __hello ( self ): print ( 'hello world!' ) def foo ( self ): self . __hello () obj = Bar () obj . foo () 4. self\u53c2\u6570 \u00b6 \u7c7b\u5728\u521b\u5efa\u7684\u8fc7\u7a0b\u4e2d\u4f1a\u5728\u5185\u5b58\u4e2d\u5f00\u8f9f\u4e00\u4e2a\u5c5e\u4e8e\u7c7b\u7684\u7a7a\u95f4\uff0c\u5f53\u521b\u5efa\u4e00\u4e2a\u5b9e\u4f8b\u7684\u65f6\u5019\u4e5f\u4f1a\u521b\u5efa\u5c5e\u4e8e\u5b9e\u4f8b\u7684\u7a7a\u95f4\uff0c\u5f53\u5b9e\u4f8b\u9700\u8981\u6267\u884c\u7c7b\u4e2d\u7684\u65b9\u6cd5\uff0c\u56de\u53bb\u627e\u7c7b\u7a7a\u95f4\u76f8\u5e94\u7684\u65b9\u6cd5\uff0c\u65b9\u6cd5\u4e2d\u7684self\u53c2\u6570\uff0c\u63a5\u6536\u7684\u5c31\u662f\u5b9e\u4f8b\u672c\u8eab\u3002\u6240\u4ee5self\u4ee3\u6307\u8c03\u7528\u65b9\u6cd5\u7684\u5b9e\u4f8b\u5bf9\u8c61 \u5b9e\u4f8b\u65f6\u65b9\u6cd5\u8c03\u7528\u7684\u4e3b\u4f53\uff0c\u5e76\u4e14\u4f1a\u81ea\u52a8\u4f20\u5165\u7ed9\u65b9\u6cd5\u7684self\u53c2\u6570\uff0c\u628a\u5b9e\u4f8b\u4f20\u5165\u7ed9\u7b2c\u4e00\u4e2a\u53c2\u6570\u4ece\u800c\u544a\u8bc9\u65b9\u6cd5\u5e94\u8be5\u5904\u7406\u54ea\u4e00\u4e2a\u5b9e\u4f8b\u3002 1 2 3 4 5 6 7 8 9 class Bar : def foo ( self ): print ( \"self id:\" , id ( self )) obj = Bar () print ( \"obj id:\" , id ( obj )) # obj id: 2018867963888 obj . foo () # self id: 2018867963888 # self \u548c obj \u662f\u540c\u4e00\u4e2a\u4e1c\u897f 3. \u7ee7\u627f \u00b6 \u4e00\u4e2a\u7c7b\u7ee7\u627f\u53e6\u4e00\u4e2a\u7c7b\u65f6\uff0c\u5b83\u5c06\u81ea\u52a8\u83b7\u5f97\u53e6\u4e00\u4e2a\u7c7b\u7684\u6240\u6709\u5c5e\u6027\u548c\u65b9\u6cd5\uff1b\u539f\u6709\u7684\u7c7b\u79f0\u4e3a\u7236\u7c7b\uff08\u57fa\u7c7b\uff09\uff0c\u65b0\u7c7b\u79f0\u4e3a\u5b50\u7c7b\uff08\u6d3e\u751f\u7c7b\uff09\u3002\u5b50\u7c7b\u8fd8\u53ef\u4ee5\u81ea\u5b9a\u4e49\u81ea\u5df1\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\u3002 3.1 \u7ee7\u627f \u00b6 1 2 3 4 5 6 7 8 class Animal : def run ( self ): print ( \"Animal is running...\" ) class Cat ( Animal ): pass Tom = Cat () Tom . run () # Animal is running... 3.2 \u6269\u5c55 \u00b6 \u5728\u7236\u7c7b\u7684\u65b9\u6cd5\u4e0a\u6dfb\u52a0\u65b0\u7684\u529f\u80fd\u3002 1 2 3 4 5 6 7 8 9 10 class Person : def __init__ ( self , name , age ): self . name = name self . age = age def pay ( self , base ): print ( \"\u5e94\u53d1\u5de5\u8d44\uff1a %s \" % money ) class Manager ( Person ): def pay ( self , base , commission ): Person . pay ( self , base + commission ) 3.3 \u91cd\u5199 \u00b6 1 2 3 4 5 6 7 8 9 10 class Animal : def run ( self ): print ( \"Animal is running...\" ) class Cat ( Animal ): def run ( self ): print ( 'Cat is running...' ) Tom = Cat () Tom . run () # Cat is running... 3.4 \u7ec4\u5408 \u00b6 \u4e00\u4e2a\u7c7bA\u4e2d\uff0c\u4f7f\u7528\u53e6\u4e00\u4e2a\u7c7bB\u7684\u5b9e\u4f8b\u5bf9\u8c61\u4f5c\u4e3a\u7c7bA\u7684\u5c5e\u6027\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 class Date (): '''date''' def __init__ ( self , year , month , day ): self . year = year self . month = month self . day = day class Person : def __init__ ( self , name , date ): self . name = name self . birthday = date def show_birthday ( self ): print ( \" %s : %s - %s - %s \" % ( self . name , self . birthday . year , self . birthday . month , self . birthday . day )) Jerry = Person ( 'Jerry' , Date ( '1999' , '2' , '14' )) Jerry . show_birthday () # Jerry:1999-2-14 3.5 super() \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 class A : def func ( self ): print ( \"This is A\" ) class B ( A ): def func ( self ): super () . func () # A.func(self) # \u53e6\u4e00\u79cd\u7684\u5199\u6cd5 print ( \"This is B\" ) b = B () b . func () # \u8f93\u51fa\u7ed3\u679c # This is A # This is B super\u5b89\u88c5MRO\u987a\u5e8f\u6765\u5bfb\u627e\u5f53\u524d\u7c7b\u7684\u4e0b\u4e00\u4e2a\u7c7b python2\u65b0\u5f0f\u7c7b:super(\u5b50\u7c7b\u540d,self).\u51fd\u6570\u540d() 3.6 \u62bd\u8c61\u7c7b \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 from abc import ABCMeta , abstractclassmethod class Super ( metaclass = ABCMeta ): def __init__ ( self ): pass @abstractclassmethod def action ( self ): pass class Sub ( Super ): def action ( self ): print ( \"hello\" ) x = Sub () x . action () # hello action\u51fd\u6570\u5fc5\u987b\u5728\u5b50\u7c7b\u4e2d\u5b9a\u4e49\uff0c\u5426\u5219\u4f1a\u62a5\u9519 TypeError: Can't instantiate abstract class Sub with abstract methods action 3.7 \u591a\u7ee7\u627f \u00b6 \u4ece\u5de6\u5230\u53f3 \u4ece\u4e0b\u5230\u4e0a \u5e7f\u5ea6\u4f18\u5148 \u4f8b1\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 class F : def bar ( self ): print ( 'F.bar' ) class F1 ( F ): def boo ( self ): print ( 'F1.bar' ) class F2 : def bar ( self ): print ( 'F2.bar' ) class S ( F1 , F2 ): #\u4ece\u4e0b\u5f80\u4e0a\u627e pass obj = S () obj . bar () ############# F . bar \u4f8b2\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 class F1 : def bar ( self ): print ( 'F1.bar' ) class F2 : def bar ( self ): print ( 'F2.bar' ) class S ( F2 , F1 ): #\u4ece\u5de6\u5f80\u53f3\u627e pass obj = S () obj . bar () ########### F2 . bar \u4f8b3\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 class Base : def bar ( self ): print ( 'Base.bar' ) class F ( Base ): def foo ( self ): print ( 'F.bar' ) class F1 ( F ): def foo ( self ): print ( 'F1.bar' ) class F2 ( Base ): def bar ( self ): print ( 'F2.bar' ) class S ( F1 , F2 ): pass obj = S () obj . bar () #\u6709\u5171\u540c\u7684\u7236\u7c7b\uff0c\u6700\u540e\u5728\u7236\u7c7b\u4e2d\u627e ############ F2 . bar 3.7 \u7ecf\u5178\u7c7b\u548c\u65b0\u5f0f\u7c7b \u00b6 python2.x\uff1a\u9ed8\u8ba4\u662f\u7ecf\u5178\u7c7b\uff0c\u641c\u7d22\u7b97\u6cd5\u4e3aDFLR(Depth First,Left to Right)\uff0c\u6df1\u5ea6\u4f18\u5148\u3002\u7ee7\u627f object \u540e\u662f\u65b0\u5f0f\u7c7b python3.x\uff1a\u6ca1\u6709\u7ecf\u5178\u7c7b\uff0c\u90fd\u662f\u65b0\u5f0f\u7c7b\uff0c\u9690\u5f0f\u7ee7\u627f object \u7c7b\uff0c\u641c\u7d22\u7b97\u6cd5\u4e3a MRO(method resolution order)\uff0c\u5e7f\u5ea6\u4f18\u70b9\u3002 4. \u591a\u6001\u548c\u591a\u6001\u6027 \u00b6 Python3.7\u4e4b\u591a\u6001\u4e0e\u591a\u6001\u6027 - \u5f69\u8679\u7136 - \u535a\u5ba2\u56ed (cnblogs.com) \u591a\u6001\uff1a\u591a\u6001\u662f\u6307\u8fd0\u7b97\u7684\u610f\u4e49\u53d6\u51b3\u4e8e\u8fd0\u7b97\u7684\u5bf9\u8c61\u3002\uff08\u4e5f\u5c31\u662f\u8bf4\uff0c\u4ee3\u7801\u4e0d\u5e94\u8be5\u5173\u5fc3\u5b83\u5904\u7406\u7684\u5bf9\u8c61\u662f\u4ec0\u4e48\uff0c\u800c\u5e94\u8be5\u5173\u6ce8\u8fd9\u4e2a\u5bf9\u8c61\u505a\u4ec0\u4e48\uff09\u3002\u591a\u6001\u53ef\u4ee5\u7528\u6765\u9690\u85cf\u63a5\u53e3\u5dee\u5f02\u6027\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 class Animals : def talk ( self ): pass class Cat ( Animals ): def talk ( self ): print ( \"Meow...\" ) class Dog ( Animals ): def talk ( self ): print ( \"Woof!...\" ) class Person ( Animals ): def talk ( self ): print ( \"Ying...\" ) def func ( animal ): # \u4e0d\u7528\u5173\u5fc3\u662f\u4ec0\u4e48\u52a8\u7269\uff0c\u53ea\u8981\u662f\u4e2a\u52a8\u7269\u5c31\u5e94\u8be5\u53eb\u3002 animal . talk () xiaoming = Person () xiaohei = Cat () xiaohuang = Dog () for i in [ xiaoming , xiaohei , xiaohuang ]: func ( i ) 6. \u88c5\u9970\u5668 \u00b6 6.1 @property \u00b6 \u628a\u65b9\u6cd5\u53d8\u6210\u5c5e\u6027\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 class Bar : def __init__ ( self ): pass # \u5c5e\u6027 @property def foo ( self ): return 1 @foo.setter def foo ( self , val ): print ( val , \"setter\" ) @foo.deleter def foo ( self ): print ( \"delete\" ) obj = Bar () obj . foo = 123 #\u6267\u884c\u8d4b\u503c\u8bed\u53e5\u5c06\u6267\u884c@foo.setter\u4e0b\u5bf9\u5e94\u7684\u65b9\u6cd5 del obj . foo #\u6267\u884c@foo.deleter\u4e0b\u5bf9\u5e94\u7684\u65b9\u6cd5 ############ setter delete \u4f8b1: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 class Page : def __init__ ( self , page ): try : p = int ( page ) except Exception as e : p = 1 self . page = p @property def start ( self ): val = ( self . page - 1 ) * 10 return val @property def end ( self ): val = self . page * 10 return val li = [] for i in range ( 1000 ): li . append ( i ) while True : p = input ( \"\u8bf7\u8f93\u5165\u9875\u7801\uff1a\" ) if p == \"q\" : break obj = Page ( p ) print ( li [ obj . start : obj . end ]) \u4f8b2\uff1a\u5c5e\u6027\u7684\u53e6\u4e00\u79cd\u8868\u793a\u65b9\u6cd5 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 class Bar : def f1 ( self ): return 1 def f2 ( self , val ): print ( 'f2:' , val ) def f3 ( self ): print ( \"f3:del\" ) per = property ( fget = f1 , fset = f2 , fdel = f3 , doc = \"\u6ce8\u91ca\" ) obj = Bar () print ( obj . per ) obj . per = 123 del obj . per ########### f2 : 123 f3 : del 6.2 @staticmethod \u00b6 \u9759\u6001\u65b9\u6cd5\uff0c\u4e0d\u9700\u8981\u521b\u5efa\u5bf9\u8c61\uff0c\u4e0d\u4f1a\u9690\u5f0f\u4f20\u9012self\u3002\u5b9e\u4f8b\u5bf9\u8c61\u548c\u7c7b\u5bf9\u8c61\u90fd\u53ef\u4ee5\u8c03\u7528\u3002\u5f53\u65b9\u6cd5\u548c\u5b9e\u4f8b\u65e0\u76f8\u5173\u6027\u65f6\u4f7f\u7528\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 import time class Person : country = 'China' def __init__ ( self , name , age ): self . name = name self . age = age @staticmethod def show_time (): print ( time . strftime ( \"%Y-%m- %d %H:%M:%S\" )) Person . show_time () # 2020-02-15 19:17:53 Tom = Person ( 'Tom' , 18 ) Tom . show_time () # 2020-02-15 19:17:53 6.3 @classmethod \u00b6 \u7b2c\u4e00\u4e2a\u53c2\u6570\u5fc5\u987b\u662f\u5f53\u524d\u7c7b\u5bf9\u8c61\uff0c\u8be5\u53c2\u6570\u540d\u4e00\u822c\u7ea6\u5b9a\u4e3a cls \uff0c\u901a\u8fc7\u5b83\u6765\u4f20\u9012\u7c7b\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\u3002\u5b9e\u4f8b\u5bf9\u8c61\u548c\u7c7b\u5bf9\u8c61\u90fd\u53ef\u4ee5\u8c03\u7528\u3002\u5728\u5b9e\u4f8b\u5316\u4e4b\u524d\u4fee\u6539\u7c7b\u5c5e\u6027\u7684\u65f6\u5019\u4f7f\u7528\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 import time class Date : def __init__ ( self , year , month , day ): self . year = year self . month = month self . day = day @classmethod def today ( cls ): struct_time = time . localtime () date = cls ( struct_time . tm_year , struct_time . tm_mon , struct_time . tm_mday ) # \u81ea\u5df1\u7c7b\u7684\u5b9e\u4f8b\u5316 return date today = Date . today () print ( today . year , today . month , today . day ) # 2020 2 15 7. \u53cd\u5c04 \u00b6 \u7528\u5b57\u7b26\u4e32\u6570\u636e\u7c7b\u578b\u7684\u540d\u5b57\uff0c\u6765\u64cd\u4f5c\u8fd9\u4e2a\u540d\u5b57\u5bf9\u5e94\u7684\u51fd\u6570\uff0c\u793a\u4f8b\u53d8\u91cf\uff0c\u7ed1\u5b9a\u65b9\u6cd5\u7b49\u3002 \u53cd\u5c04\u7684\u4f7f\u7528\u573a\u666f\uff1a \u53cd\u5c04\u5bf9\u8c61\u7684\u5b9e\u4f8b\u53d8\u91cf\u3001\u7ed1\u5b9a\u65b9\u6cd5 \u53cd\u5c04\u7c7b\u4e2d\u7684\u9759\u6001\u53d8\u91cf\u3001\u7ed1\u5b9a\u65b9\u6cd5\u3001\u5176\u4ed6\u65b9\u6cd5 \u53cd\u5c04\u6a21\u5757\u4e2d\u7684\u6240\u6709\u53d8\u91cf 7.1 \u53cd\u5c04\u5bf9\u8c61\u7684\u5b9e\u4f8b\u53d8\u91cf\u3001\u7ed1\u5b9a\u65b9\u6cd5 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 class Person : def __init__ ( self , name , age ): self . name = name self . age = age def foo ( self ): return 'hello world!' zhangsan = Person ( '\u5f20\u4e09' , 18 ) # 1.\u53cd\u5c04\u5bf9\u8c61\u7684\u5b9e\u4f8b\u53d8\u91cf print ( getattr ( zhangsan , 'name' )) # 2.\u53cd\u5c04\u5bf9\u8c61\u7684\u7ed1\u5b9a\u65b9\u6cd5 print ( getattr ( zhangsan , 'foo' )()) # \u8f93\u51fa\u7ed3\u679c # \u5f20\u4e09 # hello world! 7.2 \u53cd\u5c04\u7c7b\u4e2d\u7684\u9759\u6001\u53d8\u91cf \u00b6 1 2 3 4 5 6 7 8 9 10 class Person : country = 'China' def __init__ ( self ): pass def foo ( self ): pass print ( getattr ( Person , 'country' )) # \u8f93\u51fa\u7ed3\u679c # China 7.3 \u53cd\u5c04\u6a21\u5757\u4e2d\u7684\u53d8\u91cf \u00b6 1.\u53cd\u5c04\u6a21\u5757\u4e2d\u7684\u53d8\u91cf 1 2 3 import module getattr ( module , 'func' ) getattr ( module , 'Bar' ) 2.\u53cd\u5c04\u811a\u672c\uff08\u672c\u6587\u4ef6\uff09\u4e2d\u7684\u53d8\u91cf 1 2 import sys getattr ( sys . modules [ '__main__' ], func ) 7.4 hasattr \u3001 setattr \u548c delattr \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 class Person : country = 'China' def __init__ ( self ): pass def foo ( self ): pass Bob = Person () # hasattr \u5224\u65ad\u662f\u5426\u6709\u67d0\u4e2a\u6210\u5458 print ( hasattr ( Bob , 'name' )) # False # setattr \u8bbe\u7f6e\u5c5e\u6027 setattr ( Bob , 'name' , 'Bob' ) print ( hasattr ( Bob , 'name' )) # True # delattr \u5220\u9664\u5c5e\u6027 delattr ( Bob , 'name' ) print ( hasattr ( Bob , 'name' )) # False 7.5 \u53cd\u5c04\u7684\u4f8b\u5b50 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 #!/usr/bin/env python # -*- coding: utf-8 -*- while True : inp = input ( \"\u8bf7\u8f93\u5165\u8981\u8bbf\u95ee\u7684URL\uff1a\" ) if inp == \"q\" : break class Bar : def f1 ( self ): return \"\u9996\u9875\" def f2 ( self ): return \"\u65b0\u95fb\" def f3 ( self ): return \"\u535a\u5ba2\" obj = Bar () if hasattr ( obj , inp ): f = getattr ( obj , inp ) print ( f ()) else : print ( \"404\" ) 8. \u5143\u7c7b \u00b6 9. \u91cd\u88c5\u8fd0\u7b97\u7b26 \u00b6 9.1 __new__ \u662f\u4e00\u4e2a\u6784\u9020\u65b9\u6cd5\uff0c\u7528\u6765\u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61\u9700\u8981\u7684\u7a7a\u95f4\u3002 \u4f7f\u7528\u573a\u666f\uff1a\u521b\u5efa\u5355\u4f8b\u6a21\u5f0f\uff08\u4e00\u4e2a\u7c7b\u53ea\u4f1a\u521b\u5efa\u4e00\u6b21self\u7684\u7a7a\u95f4\uff09 1 2 3 4 5 6 class Bar : __instance = None def __new__ ( cls , * args , ** kwargs ): if not cls . __instance : cls . __instance = super () . __new__ ( cls ) return cls . __instance 9.1 __call__\u65b9\u6cd5 1 2 3 4 5 6 7 8 9 class Bar : def __init__ ( self ): print ( \"init\" ) def __call__ ( self ): print ( \"call\" ) obj = Bar () obj () #\u5bf9\u8c61\u52a0\u62ec\u53f7\u81ea\u52a8\u6267\u884c__call__\u65b9\u6cd5 9.2 str \u4e0e int 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 class Bar : def __init__ ( self ): pass def __int__ ( self ): return 111 def __str__ ( self ): return \"str\" obj = Bar () print ( obj , type ( obj )) r = int ( obj ) #int \u52a0\u5bf9\u8c61\uff0c\u81ea\u52a8\u6267\u884c\u5bf9\u8c61\u7684int\u65b9\u6cd5\uff0c\u5e76\u5c06\u8fd4\u56de\u503c\u8d4b\u503c\u7ed9int\u5bf9\u8c61 print ( r ) r = str ( obj ) print ( r ) #str \u52a0\u5bf9\u8c61\uff0c\u81ea\u52a8\u6267\u884c\u5bf9\u8c61\u7684str\u65b9\u6cd5\uff0c\u5e76\u5c06\u8fd4\u56de\u503c\u8d4b\u503c\u7ed9str\u5bf9\u8c61 ------------ str < class ' __main__ . Bar '> str 9.3 \u4f8b\uff1a__str_ 1 2 3 4 5 6 7 8 9 10 11 class Bar : def __init__ ( self , name , age ): self . name = name self . age = age def __str__ ( self ): return \" %s : %s \" % ( self . name , self . age ) obj = Bar ( \"Tom\" , 18 ) print ( obj ) ----------- Tom : 18 9.4 del \u6790\u6784\u65b9\u6cd5\uff1a\u5bf9\u8c61\u9500\u6bc1\u7684\u65f6\u5019\u6267\u884c 1 2 3 4 5 6 7 class Bar : def __init__ ( self ): pass def __del__ ( self ): print ( \"\u6790\u6784\u65b9\u6cd5\" ) obj = Bar () 9.5 dict \u5c06\u5b57\u6bb5\u4e2d\u7684\u6210\u5458\u4ee5\u5b57\u6bb5\u7684\u5f62\u5f0f\u8fd4\u56de 1 2 3 4 5 6 7 8 9 10 11 12 13 class Bar : \"\"\"\u6ce8\u91ca\"\"\" def __init__ ( self , name , age ): self . name = name self . age = age obj = Bar ( 'Tom' , 18 ) #\u5c06\u5b57\u6bb5\u4e2d\u7684\u6210\u5458\u4ee5\u5b57\u6bb5\u7684\u5f62\u5f0f\u8fd4\u56de print ( Bar . __dict__ ) print ( obj . __dict__ ) --------- { '__module__' : '__main__' , '__init__' : < function Bar . __init__ at 0x0000013DAD733AE8 > , '__weakref__' : < attribute '__weakref__' of 'Bar' objects > , '__doc__' : '\u6ce8\u91ca' , '__dict__' : < attribute '__dict__' of 'Bar' objects > } { 'name' : 'Tom' , 'age' : 18 } 9.6 getitem \u3001 setitem \u548c delitem 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 class Bar : \"\"\"\u6ce8\u91ca\"\"\" def __init__ ( self ): pass def __getitem__ ( self , item ): return item + 10 def __setitem__ ( self , k , v ): print ( k , v ) def __delitem__ ( self , val ): print ( 'delete:' , val ) obj = Bar () print ( obj [ 2 ]) obj [ 'name' ] = 'Tom' del obj [ 'del' ] ---------------- name Tom delete : del 9.7 iter \u5982\u679c\u7c7b\u4e2d\u6709__iter__\u65b9\u6cd5\uff0c\u5176\u5bf9\u8c61\u5c31\u662f\u4e00\u4e2a\u53ef\u8fed\u4ee3\u5bf9\u8c61\uff1b \u5bf9\u8c61\u540d. iter ()\u7684\u8fd4\u56de\u503c\u662f\u8fed\u4ee3\u5668 1 2 3 4 5 6 7 8 9 class Bar : def __iter__ ( self ): return iter ([ 11 , 22 , 33 ]) obj = Bar () for i in obj : print ( i ) #for\u5faa\u73af\u6267\u884cobj\u5bf9\u8c61\u7684\u7c7b\u4e2d\u7684__iter__\u65b9\u6cd5\uff0c\u5e76\u83b7\u53d6\u5176\u8fed\u4ee3\u5668\uff1b\u5faa\u73af\u4e0a\u4e00\u6b65\u4e2d\u8fd4\u56de\u7684\u5bf9\u8c61 10. \u5355\u4f8b\u6a21\u5f0f \u00b6 \u5e94\u7528\u573a\u666f\uff1a\u6570\u636e\u5e93\u8fde\u63a5\u6c60 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 class Bar : __v = None @classmethod def get_instance ( cls ): if cls . __v : return cls . __v else : cls . __v = Bar () return cls . __v # \u4e0d\u7528\u518d\u4f7f\u7528Bar()\u521b\u5efa\u5b9e\u4f8b obj1 = Bar . get_instance () print ( obj1 ) obj2 = Bar . get_instance () print ( obj2 ) obj3 = Bar . get_instance () print ( obj3 ) ########### < __main__ . Bar object at 0x0000026D865B4A20 > < __main__ . Bar object at 0x0000026D865B4A20 > < __main__ . Bar object at 0x0000026D865B4A20 > \u7ebf\u7a0b\u5b89\u5168\u5355\u4f8b\u6a21\u5f0f 1 2 3 4 5 6 7 8 9 class Bar : from threading import Lock __instance = None lock = Lock () def __new__ ( cls , * args , ** kwargs ): with cls . lock : if not cls . __instance : cls . __instance = super () . __new__ ( cls ) return cls . __instance","title":"\u9762\u5411\u5bf9\u8c61"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/05-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/#_1","text":"\u9762\u5411\u5bf9\u8c61\uff08OOP, Object-Oriented Programing\uff09\uff0c\u662f\u4e00\u79cd\u7f16\u7a0b\u65b9\u5f0f\uff08\u51fd\u6570\u5f0f\u7f16\u7a0b\u548c\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\uff09\u4e2d\u7684\u4e00\u79cd\uff0c\u53ef\u4ee5\u964d\u4f4e\u4ee3\u7801\u5197\u4f59\u7a0b\u5ea6\u3002python\u4e2d\u7684\u7c7b\u662f\u9762\u5411\u5bf9\u8c61\u7f16\u7a0b\u7684\u4e00\u79cd\u5de5\u5177\uff0c\u662f\u9664\u51fd\u6570\u548c\u6a21\u5757\u4e4b\u5916\u7684\u53e6\u4e00\u79cd\u5c01\u88c5\u903b\u8f91\u548c\u6570\u636e\u7684\u65b9\u5f0f\u3002 \u7c7b\u548c\u5b9e\u4f8b\u7684\u533a\u522b\uff1a python\u4e2d\u7c7b\u548c\u5b9e\u4f8b\u662f\u4e24\u79cd\u4e0d\u540c\u7684\u5bf9\u8c61 \u7c7b\u662f\u62bd\u8c61\u7684\u6a21\u677f\uff0c\u5b9e\u4f8b\u662f\u6839\u636e\u7c7b\u521b\u5efa\u51fa\u6765\u7684\u4e00\u4e2a\u4e2a\u5177\u4f53\u7684\u201c\u5bf9\u8c61\u201d \u7c7b\u548c\u5b9e\u4f8b\u90fd\u6709\u72ec\u7acb\u7684\u547d\u540d\u7a7a\u95f4 \u9762\u5411\u5bf9\u8c61\u7684\u4e09\u5927\u601d\u60f3 \u7ee7\u627f \u591a\u6001 \u57fa\u4e8e\u5bf9\u8c61\u63a5\u53e3\u800c\u4e0d\u662f\u7c7b\u578b \u5c01\u88c5","title":"\u9762\u5411\u5bf9\u8c61"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/05-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/#1","text":"python\u4e2d\u4f7f\u7528 class \u5173\u952e\u5b57\u6765\u5b9a\u4e49\u4e00\u4e2a\u7c7b\u3002 1 2 class \u7c7b\u540d: pass \u7c7b\u540d\u7684\u547d\u540d\u89c4\u5219\uff1a\u4ee5\u5927\u5199\u5b57\u6bcd\u5f00\u5934 \u5b9e\u4f8b\u5316\u4e00\u4e2a\u7c7b: \u5b9e\u4f8b\u540d = \u7c7b\u540d(\u53c2\u6570)","title":"1. \u7c7b\u7684\u5b9a\u4e49\u4e0e\u5b9e\u4f8b\u5316"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/05-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/#2","text":"","title":"2. \u7c7b\u7684\u6210\u5458"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/05-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/#1_1","text":"\u5c5e\u6027\u7684\u65b9\u6cd5\u65b9\u6cd5\uff1a \u5b9e\u4f8b\u540d.\u5c5e\u6027\u540d","title":"1. \u5c5e\u6027"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/05-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/#11","text":"\u7531\u65b9\u6cd5\u5185\u90e8\u7684self\u5c5e\u6027\u8fdb\u884c\u8d4b\u503c\u8fd0\u7b97\u4ea7\u751f\uff0c\u4fdd\u5b58\u5728\u5bf9\u8c61\uff08\u5b9e\u4f8b\uff09\u4e2d\uff0c\u6267\u884c\u53ea\u80fd\u901a\u8fc7\u5bf9\u8c61\u8bbf\u95ee\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 class Person : def __init__ ( self , name ): # 1. \u5728\u7c7b\u7684\u5185\u90e8\u5b9a\u4e49\u5c5e\u6027 self . name = name tom = Person ( 'Tom' ) print ( tom . name ) # Tom # 2. \u5728\u7c7b\u7684\u5916\u90e8\u5b9a\u4e49\u5c5e\u6027 tom . age = '18' print ( tom . age ) # 18 Jerry = Person ( 'Jerry' ) print ( Jerry . name ) # Jerry print ( Jerry . age ) # AttributeError: 'Person' object has no attribute 'age' tom \u548c Jerry\u4e24\u4e2a\u5bf9\u8c61\u5c5e\u4e8e\u4e24\u4e2a\u4e0d\u540c\u7684\u547d\u540d\u7a7a\u95f4\uff0c\u7ed9Tom\u6dfb\u52a0\u7684age\u5c5e\u6027\u5728Jerry\u5bf9\u8c61\u4e2d\u5e76\u4e0d\u80fd\u8bbf\u95ee\u3002","title":"1.1 \u5b9e\u4f8b\u5c5e\u6027"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/05-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/#12","text":"\u901a\u8fc7class\u8bed\u53e5\u5185\u7684\u8d4b\u503c\u8bed\u53e5\u521b\u5efa\uff0c\u4fdd\u5b58\u5728\u7c7b\u4e2d\uff0c\u6267\u884c\u65f6\u53ef\u4ee5\u901a\u8fc7\u5bf9\u8c61\u8bbf\u95ee\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u7c7b\u8bbf\u95ee 1 2 3 4 5 6 7 8 9 10 11 12 13 class Person : country = 'America' def __init__ ( self , name ): self . name = name Tom = Person ( 'Tom' ) # \u901a\u8fc7\u5b9e\u4f8b\u8bbf\u95ee\u7c7b\u5c5e\u6027 print ( Tom . country ) # America # \u901a\u8fc7\u7c7b\u8bbf\u95ee\u7c7b\u5c5e\u6027 print ( Person . country ) # America","title":"1.2 \u7c7b\u5c5e\u6027"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/05-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/#13","text":"\u5728Python\u4e2d\uff0c\u5b9e\u4f8b\u7684\u53d8\u91cf\u540d\u5982\u679c\u4ee5 __ \u5f00\u5934\uff0c\u5c31\u53d8\u6210\u4e86\u4e00\u4e2a\u79c1\u6709\u53d8\u91cf\uff08private\uff09\uff0c\u53ea\u6709\u5185\u90e8\u53ef\u4ee5\u8bbf\u95ee\uff0c\u5916\u90e8\u4e0d\u80fd\u8bbf\u95ee\uff0c\u786e\u4fdd\u4e86\u5916\u90e8\u4ee3\u7801\u4e0d\u80fd\u968f\u610f\u4fee\u6539\u5bf9\u8c61\u5185\u90e8\u7684\u72b6\u6001\uff0c\u4f46\u662f\u53ef\u4ee5\u95f4\u63a5\u8bbf\u95ee\u3002 1 2 3 4 5 6 7 8 9 10 11 class Person : def __init__ ( self , name ): self . __name = name def get_name ( self ): return self . __name Tom = Person ( 'Tom' ) # \u76f4\u63a5\u8bbf\u95ee\u62a5\u9519 # print(Tom.name) # AttributeError: 'Person' object has no attribute 'name' print ( Tom . get_name ()) # Tom","title":"1.3 \u79c1\u6709\u5c5e\u6027"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/05-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/#2_1","text":"\u4f4d\u4e8e\u7c7b\u4e2d\u7684\u51fd\u6570\u79f0\u4e3a\u65b9\u6cd5\u3002\u00b7 \u7c7b\u65b9\u6cd5\u8c03\u7528\u7684\u7b2c\u4e8c\u79cd\u65b9\u5f0f\uff1a class.method(instance, args,...) \uff0c\u4e8b\u5b9e\u4e0a\uff0c instance.method(args...) \u8fd8\u662f\u4f1a\u7ffb\u8bd1\u6210\u8fd9\u79cd\u65b9\u5f0f\u6765\u8c03\u7528","title":"2. \u65b9\u6cd5"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/05-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/#1_2","text":"\u4f5c\u7528\uff1a \u521d\u59cb\u5316\u5b9e\u4f8b\u5c5e\u6027 \u6267\u884c\u5176\u4ed6\u521d\u59cb\u5316\u4efb\u52a1 \u521b\u5efa\u4e00\u4e2a\u5b9e\u4f8b\u65f6\u81ea\u52a8\u8fd0\u884c 1 2 3 4 5 6 7 8 9 10 class Bar : def __init__ ( self , name , age ): self . n = name self . a = age print ( '\u521b\u5efa\u5bf9\u8c61\u65f6\u81ea\u52a8\u6267\u884c\u6784\u9020\u65b9\u6cd5' ) def foo ( self ): print ( self . n , self . a ) obj = Bar ( \"Tom\" , 10 ) # \u521b\u5efa\u5bf9\u8c61\u65f6\u81ea\u52a8\u6267\u884c\u6784\u9020\u65b9\u6cd5 obj . foo () # Tom 10","title":"1. \u6784\u9020\u65b9\u6cd5"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/05-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/#2_2","text":"\u4fdd\u5b58\u5728\u7c7b\u4e2d\uff0c\u7531\u5bf9\u8c61\u8c03\u7528 1 2 3 4 5 6 7 8 class Bar : def __init__ ( self ): pass def hello ( self ): print ( 'hello world!' ) obj = Bar () obj . hello () # hello world!","title":"2. \u666e\u901a\u65b9\u6cd5"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/05-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/#3","text":"1 2 3 4 5 6 7 8 9 class Bar : def __init__ ( self ): pass def __hello ( self ): print ( 'hello world!' ) def foo ( self ): self . __hello () obj = Bar () obj . foo ()","title":"3. \u79c1\u6709\u65b9\u6cd5"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/05-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/#4-self","text":"\u7c7b\u5728\u521b\u5efa\u7684\u8fc7\u7a0b\u4e2d\u4f1a\u5728\u5185\u5b58\u4e2d\u5f00\u8f9f\u4e00\u4e2a\u5c5e\u4e8e\u7c7b\u7684\u7a7a\u95f4\uff0c\u5f53\u521b\u5efa\u4e00\u4e2a\u5b9e\u4f8b\u7684\u65f6\u5019\u4e5f\u4f1a\u521b\u5efa\u5c5e\u4e8e\u5b9e\u4f8b\u7684\u7a7a\u95f4\uff0c\u5f53\u5b9e\u4f8b\u9700\u8981\u6267\u884c\u7c7b\u4e2d\u7684\u65b9\u6cd5\uff0c\u56de\u53bb\u627e\u7c7b\u7a7a\u95f4\u76f8\u5e94\u7684\u65b9\u6cd5\uff0c\u65b9\u6cd5\u4e2d\u7684self\u53c2\u6570\uff0c\u63a5\u6536\u7684\u5c31\u662f\u5b9e\u4f8b\u672c\u8eab\u3002\u6240\u4ee5self\u4ee3\u6307\u8c03\u7528\u65b9\u6cd5\u7684\u5b9e\u4f8b\u5bf9\u8c61 \u5b9e\u4f8b\u65f6\u65b9\u6cd5\u8c03\u7528\u7684\u4e3b\u4f53\uff0c\u5e76\u4e14\u4f1a\u81ea\u52a8\u4f20\u5165\u7ed9\u65b9\u6cd5\u7684self\u53c2\u6570\uff0c\u628a\u5b9e\u4f8b\u4f20\u5165\u7ed9\u7b2c\u4e00\u4e2a\u53c2\u6570\u4ece\u800c\u544a\u8bc9\u65b9\u6cd5\u5e94\u8be5\u5904\u7406\u54ea\u4e00\u4e2a\u5b9e\u4f8b\u3002 1 2 3 4 5 6 7 8 9 class Bar : def foo ( self ): print ( \"self id:\" , id ( self )) obj = Bar () print ( \"obj id:\" , id ( obj )) # obj id: 2018867963888 obj . foo () # self id: 2018867963888 # self \u548c obj \u662f\u540c\u4e00\u4e2a\u4e1c\u897f","title":"4. self\u53c2\u6570"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/05-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/#3_1","text":"\u4e00\u4e2a\u7c7b\u7ee7\u627f\u53e6\u4e00\u4e2a\u7c7b\u65f6\uff0c\u5b83\u5c06\u81ea\u52a8\u83b7\u5f97\u53e6\u4e00\u4e2a\u7c7b\u7684\u6240\u6709\u5c5e\u6027\u548c\u65b9\u6cd5\uff1b\u539f\u6709\u7684\u7c7b\u79f0\u4e3a\u7236\u7c7b\uff08\u57fa\u7c7b\uff09\uff0c\u65b0\u7c7b\u79f0\u4e3a\u5b50\u7c7b\uff08\u6d3e\u751f\u7c7b\uff09\u3002\u5b50\u7c7b\u8fd8\u53ef\u4ee5\u81ea\u5b9a\u4e49\u81ea\u5df1\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\u3002","title":"3. \u7ee7\u627f"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/05-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/#31","text":"1 2 3 4 5 6 7 8 class Animal : def run ( self ): print ( \"Animal is running...\" ) class Cat ( Animal ): pass Tom = Cat () Tom . run () # Animal is running...","title":"3.1 \u7ee7\u627f"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/05-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/#32","text":"\u5728\u7236\u7c7b\u7684\u65b9\u6cd5\u4e0a\u6dfb\u52a0\u65b0\u7684\u529f\u80fd\u3002 1 2 3 4 5 6 7 8 9 10 class Person : def __init__ ( self , name , age ): self . name = name self . age = age def pay ( self , base ): print ( \"\u5e94\u53d1\u5de5\u8d44\uff1a %s \" % money ) class Manager ( Person ): def pay ( self , base , commission ): Person . pay ( self , base + commission )","title":"3.2 \u6269\u5c55"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/05-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/#33","text":"1 2 3 4 5 6 7 8 9 10 class Animal : def run ( self ): print ( \"Animal is running...\" ) class Cat ( Animal ): def run ( self ): print ( 'Cat is running...' ) Tom = Cat () Tom . run () # Cat is running...","title":"3.3 \u91cd\u5199"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/05-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/#34","text":"\u4e00\u4e2a\u7c7bA\u4e2d\uff0c\u4f7f\u7528\u53e6\u4e00\u4e2a\u7c7bB\u7684\u5b9e\u4f8b\u5bf9\u8c61\u4f5c\u4e3a\u7c7bA\u7684\u5c5e\u6027\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 class Date (): '''date''' def __init__ ( self , year , month , day ): self . year = year self . month = month self . day = day class Person : def __init__ ( self , name , date ): self . name = name self . birthday = date def show_birthday ( self ): print ( \" %s : %s - %s - %s \" % ( self . name , self . birthday . year , self . birthday . month , self . birthday . day )) Jerry = Person ( 'Jerry' , Date ( '1999' , '2' , '14' )) Jerry . show_birthday () # Jerry:1999-2-14","title":"3.4 \u7ec4\u5408"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/05-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/#35-super","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 class A : def func ( self ): print ( \"This is A\" ) class B ( A ): def func ( self ): super () . func () # A.func(self) # \u53e6\u4e00\u79cd\u7684\u5199\u6cd5 print ( \"This is B\" ) b = B () b . func () # \u8f93\u51fa\u7ed3\u679c # This is A # This is B super\u5b89\u88c5MRO\u987a\u5e8f\u6765\u5bfb\u627e\u5f53\u524d\u7c7b\u7684\u4e0b\u4e00\u4e2a\u7c7b python2\u65b0\u5f0f\u7c7b:super(\u5b50\u7c7b\u540d,self).\u51fd\u6570\u540d()","title":"3.5 super()"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/05-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/#36","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 from abc import ABCMeta , abstractclassmethod class Super ( metaclass = ABCMeta ): def __init__ ( self ): pass @abstractclassmethod def action ( self ): pass class Sub ( Super ): def action ( self ): print ( \"hello\" ) x = Sub () x . action () # hello action\u51fd\u6570\u5fc5\u987b\u5728\u5b50\u7c7b\u4e2d\u5b9a\u4e49\uff0c\u5426\u5219\u4f1a\u62a5\u9519 TypeError: Can't instantiate abstract class Sub with abstract methods action","title":"3.6 \u62bd\u8c61\u7c7b"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/05-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/#37","text":"\u4ece\u5de6\u5230\u53f3 \u4ece\u4e0b\u5230\u4e0a \u5e7f\u5ea6\u4f18\u5148 \u4f8b1\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 class F : def bar ( self ): print ( 'F.bar' ) class F1 ( F ): def boo ( self ): print ( 'F1.bar' ) class F2 : def bar ( self ): print ( 'F2.bar' ) class S ( F1 , F2 ): #\u4ece\u4e0b\u5f80\u4e0a\u627e pass obj = S () obj . bar () ############# F . bar \u4f8b2\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 class F1 : def bar ( self ): print ( 'F1.bar' ) class F2 : def bar ( self ): print ( 'F2.bar' ) class S ( F2 , F1 ): #\u4ece\u5de6\u5f80\u53f3\u627e pass obj = S () obj . bar () ########### F2 . bar \u4f8b3\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 class Base : def bar ( self ): print ( 'Base.bar' ) class F ( Base ): def foo ( self ): print ( 'F.bar' ) class F1 ( F ): def foo ( self ): print ( 'F1.bar' ) class F2 ( Base ): def bar ( self ): print ( 'F2.bar' ) class S ( F1 , F2 ): pass obj = S () obj . bar () #\u6709\u5171\u540c\u7684\u7236\u7c7b\uff0c\u6700\u540e\u5728\u7236\u7c7b\u4e2d\u627e ############ F2 . bar","title":"3.7 \u591a\u7ee7\u627f"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/05-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/#37_1","text":"python2.x\uff1a\u9ed8\u8ba4\u662f\u7ecf\u5178\u7c7b\uff0c\u641c\u7d22\u7b97\u6cd5\u4e3aDFLR(Depth First,Left to Right)\uff0c\u6df1\u5ea6\u4f18\u5148\u3002\u7ee7\u627f object \u540e\u662f\u65b0\u5f0f\u7c7b python3.x\uff1a\u6ca1\u6709\u7ecf\u5178\u7c7b\uff0c\u90fd\u662f\u65b0\u5f0f\u7c7b\uff0c\u9690\u5f0f\u7ee7\u627f object \u7c7b\uff0c\u641c\u7d22\u7b97\u6cd5\u4e3a MRO(method resolution order)\uff0c\u5e7f\u5ea6\u4f18\u70b9\u3002","title":"3.7   \u7ecf\u5178\u7c7b\u548c\u65b0\u5f0f\u7c7b"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/05-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/#4","text":"Python3.7\u4e4b\u591a\u6001\u4e0e\u591a\u6001\u6027 - \u5f69\u8679\u7136 - \u535a\u5ba2\u56ed (cnblogs.com) \u591a\u6001\uff1a\u591a\u6001\u662f\u6307\u8fd0\u7b97\u7684\u610f\u4e49\u53d6\u51b3\u4e8e\u8fd0\u7b97\u7684\u5bf9\u8c61\u3002\uff08\u4e5f\u5c31\u662f\u8bf4\uff0c\u4ee3\u7801\u4e0d\u5e94\u8be5\u5173\u5fc3\u5b83\u5904\u7406\u7684\u5bf9\u8c61\u662f\u4ec0\u4e48\uff0c\u800c\u5e94\u8be5\u5173\u6ce8\u8fd9\u4e2a\u5bf9\u8c61\u505a\u4ec0\u4e48\uff09\u3002\u591a\u6001\u53ef\u4ee5\u7528\u6765\u9690\u85cf\u63a5\u53e3\u5dee\u5f02\u6027\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 class Animals : def talk ( self ): pass class Cat ( Animals ): def talk ( self ): print ( \"Meow...\" ) class Dog ( Animals ): def talk ( self ): print ( \"Woof!...\" ) class Person ( Animals ): def talk ( self ): print ( \"Ying...\" ) def func ( animal ): # \u4e0d\u7528\u5173\u5fc3\u662f\u4ec0\u4e48\u52a8\u7269\uff0c\u53ea\u8981\u662f\u4e2a\u52a8\u7269\u5c31\u5e94\u8be5\u53eb\u3002 animal . talk () xiaoming = Person () xiaohei = Cat () xiaohuang = Dog () for i in [ xiaoming , xiaohei , xiaohuang ]: func ( i )","title":"4. \u591a\u6001\u548c\u591a\u6001\u6027"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/05-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/#6","text":"","title":"6. \u88c5\u9970\u5668"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/05-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/#61-property","text":"\u628a\u65b9\u6cd5\u53d8\u6210\u5c5e\u6027\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 class Bar : def __init__ ( self ): pass # \u5c5e\u6027 @property def foo ( self ): return 1 @foo.setter def foo ( self , val ): print ( val , \"setter\" ) @foo.deleter def foo ( self ): print ( \"delete\" ) obj = Bar () obj . foo = 123 #\u6267\u884c\u8d4b\u503c\u8bed\u53e5\u5c06\u6267\u884c@foo.setter\u4e0b\u5bf9\u5e94\u7684\u65b9\u6cd5 del obj . foo #\u6267\u884c@foo.deleter\u4e0b\u5bf9\u5e94\u7684\u65b9\u6cd5 ############ setter delete \u4f8b1: 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 class Page : def __init__ ( self , page ): try : p = int ( page ) except Exception as e : p = 1 self . page = p @property def start ( self ): val = ( self . page - 1 ) * 10 return val @property def end ( self ): val = self . page * 10 return val li = [] for i in range ( 1000 ): li . append ( i ) while True : p = input ( \"\u8bf7\u8f93\u5165\u9875\u7801\uff1a\" ) if p == \"q\" : break obj = Page ( p ) print ( li [ obj . start : obj . end ]) \u4f8b2\uff1a\u5c5e\u6027\u7684\u53e6\u4e00\u79cd\u8868\u793a\u65b9\u6cd5 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 class Bar : def f1 ( self ): return 1 def f2 ( self , val ): print ( 'f2:' , val ) def f3 ( self ): print ( \"f3:del\" ) per = property ( fget = f1 , fset = f2 , fdel = f3 , doc = \"\u6ce8\u91ca\" ) obj = Bar () print ( obj . per ) obj . per = 123 del obj . per ########### f2 : 123 f3 : del","title":"6.1 @property"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/05-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/#62-staticmethod","text":"\u9759\u6001\u65b9\u6cd5\uff0c\u4e0d\u9700\u8981\u521b\u5efa\u5bf9\u8c61\uff0c\u4e0d\u4f1a\u9690\u5f0f\u4f20\u9012self\u3002\u5b9e\u4f8b\u5bf9\u8c61\u548c\u7c7b\u5bf9\u8c61\u90fd\u53ef\u4ee5\u8c03\u7528\u3002\u5f53\u65b9\u6cd5\u548c\u5b9e\u4f8b\u65e0\u76f8\u5173\u6027\u65f6\u4f7f\u7528\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 import time class Person : country = 'China' def __init__ ( self , name , age ): self . name = name self . age = age @staticmethod def show_time (): print ( time . strftime ( \"%Y-%m- %d %H:%M:%S\" )) Person . show_time () # 2020-02-15 19:17:53 Tom = Person ( 'Tom' , 18 ) Tom . show_time () # 2020-02-15 19:17:53","title":"6.2 @staticmethod"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/05-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/#63-classmethod","text":"\u7b2c\u4e00\u4e2a\u53c2\u6570\u5fc5\u987b\u662f\u5f53\u524d\u7c7b\u5bf9\u8c61\uff0c\u8be5\u53c2\u6570\u540d\u4e00\u822c\u7ea6\u5b9a\u4e3a cls \uff0c\u901a\u8fc7\u5b83\u6765\u4f20\u9012\u7c7b\u7684\u5c5e\u6027\u548c\u65b9\u6cd5\u3002\u5b9e\u4f8b\u5bf9\u8c61\u548c\u7c7b\u5bf9\u8c61\u90fd\u53ef\u4ee5\u8c03\u7528\u3002\u5728\u5b9e\u4f8b\u5316\u4e4b\u524d\u4fee\u6539\u7c7b\u5c5e\u6027\u7684\u65f6\u5019\u4f7f\u7528\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 import time class Date : def __init__ ( self , year , month , day ): self . year = year self . month = month self . day = day @classmethod def today ( cls ): struct_time = time . localtime () date = cls ( struct_time . tm_year , struct_time . tm_mon , struct_time . tm_mday ) # \u81ea\u5df1\u7c7b\u7684\u5b9e\u4f8b\u5316 return date today = Date . today () print ( today . year , today . month , today . day ) # 2020 2 15","title":"6.3 @classmethod"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/05-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/#7","text":"\u7528\u5b57\u7b26\u4e32\u6570\u636e\u7c7b\u578b\u7684\u540d\u5b57\uff0c\u6765\u64cd\u4f5c\u8fd9\u4e2a\u540d\u5b57\u5bf9\u5e94\u7684\u51fd\u6570\uff0c\u793a\u4f8b\u53d8\u91cf\uff0c\u7ed1\u5b9a\u65b9\u6cd5\u7b49\u3002 \u53cd\u5c04\u7684\u4f7f\u7528\u573a\u666f\uff1a \u53cd\u5c04\u5bf9\u8c61\u7684\u5b9e\u4f8b\u53d8\u91cf\u3001\u7ed1\u5b9a\u65b9\u6cd5 \u53cd\u5c04\u7c7b\u4e2d\u7684\u9759\u6001\u53d8\u91cf\u3001\u7ed1\u5b9a\u65b9\u6cd5\u3001\u5176\u4ed6\u65b9\u6cd5 \u53cd\u5c04\u6a21\u5757\u4e2d\u7684\u6240\u6709\u53d8\u91cf","title":"7. \u53cd\u5c04"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/05-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/#71","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 class Person : def __init__ ( self , name , age ): self . name = name self . age = age def foo ( self ): return 'hello world!' zhangsan = Person ( '\u5f20\u4e09' , 18 ) # 1.\u53cd\u5c04\u5bf9\u8c61\u7684\u5b9e\u4f8b\u53d8\u91cf print ( getattr ( zhangsan , 'name' )) # 2.\u53cd\u5c04\u5bf9\u8c61\u7684\u7ed1\u5b9a\u65b9\u6cd5 print ( getattr ( zhangsan , 'foo' )()) # \u8f93\u51fa\u7ed3\u679c # \u5f20\u4e09 # hello world!","title":"7.1 \u53cd\u5c04\u5bf9\u8c61\u7684\u5b9e\u4f8b\u53d8\u91cf\u3001\u7ed1\u5b9a\u65b9\u6cd5"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/05-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/#72","text":"1 2 3 4 5 6 7 8 9 10 class Person : country = 'China' def __init__ ( self ): pass def foo ( self ): pass print ( getattr ( Person , 'country' )) # \u8f93\u51fa\u7ed3\u679c # China","title":"7.2 \u53cd\u5c04\u7c7b\u4e2d\u7684\u9759\u6001\u53d8\u91cf"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/05-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/#73","text":"1.\u53cd\u5c04\u6a21\u5757\u4e2d\u7684\u53d8\u91cf 1 2 3 import module getattr ( module , 'func' ) getattr ( module , 'Bar' ) 2.\u53cd\u5c04\u811a\u672c\uff08\u672c\u6587\u4ef6\uff09\u4e2d\u7684\u53d8\u91cf 1 2 import sys getattr ( sys . modules [ '__main__' ], func )","title":"7.3 \u53cd\u5c04\u6a21\u5757\u4e2d\u7684\u53d8\u91cf"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/05-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/#74-hasattrsetattrdelattr","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 class Person : country = 'China' def __init__ ( self ): pass def foo ( self ): pass Bob = Person () # hasattr \u5224\u65ad\u662f\u5426\u6709\u67d0\u4e2a\u6210\u5458 print ( hasattr ( Bob , 'name' )) # False # setattr \u8bbe\u7f6e\u5c5e\u6027 setattr ( Bob , 'name' , 'Bob' ) print ( hasattr ( Bob , 'name' )) # True # delattr \u5220\u9664\u5c5e\u6027 delattr ( Bob , 'name' ) print ( hasattr ( Bob , 'name' )) # False","title":"7.4 hasattr\u3001setattr\u548cdelattr"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/05-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/#75","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 #!/usr/bin/env python # -*- coding: utf-8 -*- while True : inp = input ( \"\u8bf7\u8f93\u5165\u8981\u8bbf\u95ee\u7684URL\uff1a\" ) if inp == \"q\" : break class Bar : def f1 ( self ): return \"\u9996\u9875\" def f2 ( self ): return \"\u65b0\u95fb\" def f3 ( self ): return \"\u535a\u5ba2\" obj = Bar () if hasattr ( obj , inp ): f = getattr ( obj , inp ) print ( f ()) else : print ( \"404\" )","title":"7.5  \u53cd\u5c04\u7684\u4f8b\u5b50"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/05-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/#8","text":"","title":"8. \u5143\u7c7b"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/05-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/#9","text":"9.1 __new__ \u662f\u4e00\u4e2a\u6784\u9020\u65b9\u6cd5\uff0c\u7528\u6765\u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61\u9700\u8981\u7684\u7a7a\u95f4\u3002 \u4f7f\u7528\u573a\u666f\uff1a\u521b\u5efa\u5355\u4f8b\u6a21\u5f0f\uff08\u4e00\u4e2a\u7c7b\u53ea\u4f1a\u521b\u5efa\u4e00\u6b21self\u7684\u7a7a\u95f4\uff09 1 2 3 4 5 6 class Bar : __instance = None def __new__ ( cls , * args , ** kwargs ): if not cls . __instance : cls . __instance = super () . __new__ ( cls ) return cls . __instance 9.1 __call__\u65b9\u6cd5 1 2 3 4 5 6 7 8 9 class Bar : def __init__ ( self ): print ( \"init\" ) def __call__ ( self ): print ( \"call\" ) obj = Bar () obj () #\u5bf9\u8c61\u52a0\u62ec\u53f7\u81ea\u52a8\u6267\u884c__call__\u65b9\u6cd5 9.2 str \u4e0e int 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 class Bar : def __init__ ( self ): pass def __int__ ( self ): return 111 def __str__ ( self ): return \"str\" obj = Bar () print ( obj , type ( obj )) r = int ( obj ) #int \u52a0\u5bf9\u8c61\uff0c\u81ea\u52a8\u6267\u884c\u5bf9\u8c61\u7684int\u65b9\u6cd5\uff0c\u5e76\u5c06\u8fd4\u56de\u503c\u8d4b\u503c\u7ed9int\u5bf9\u8c61 print ( r ) r = str ( obj ) print ( r ) #str \u52a0\u5bf9\u8c61\uff0c\u81ea\u52a8\u6267\u884c\u5bf9\u8c61\u7684str\u65b9\u6cd5\uff0c\u5e76\u5c06\u8fd4\u56de\u503c\u8d4b\u503c\u7ed9str\u5bf9\u8c61 ------------ str < class ' __main__ . Bar '> str 9.3 \u4f8b\uff1a__str_ 1 2 3 4 5 6 7 8 9 10 11 class Bar : def __init__ ( self , name , age ): self . name = name self . age = age def __str__ ( self ): return \" %s : %s \" % ( self . name , self . age ) obj = Bar ( \"Tom\" , 18 ) print ( obj ) ----------- Tom : 18 9.4 del \u6790\u6784\u65b9\u6cd5\uff1a\u5bf9\u8c61\u9500\u6bc1\u7684\u65f6\u5019\u6267\u884c 1 2 3 4 5 6 7 class Bar : def __init__ ( self ): pass def __del__ ( self ): print ( \"\u6790\u6784\u65b9\u6cd5\" ) obj = Bar () 9.5 dict \u5c06\u5b57\u6bb5\u4e2d\u7684\u6210\u5458\u4ee5\u5b57\u6bb5\u7684\u5f62\u5f0f\u8fd4\u56de 1 2 3 4 5 6 7 8 9 10 11 12 13 class Bar : \"\"\"\u6ce8\u91ca\"\"\" def __init__ ( self , name , age ): self . name = name self . age = age obj = Bar ( 'Tom' , 18 ) #\u5c06\u5b57\u6bb5\u4e2d\u7684\u6210\u5458\u4ee5\u5b57\u6bb5\u7684\u5f62\u5f0f\u8fd4\u56de print ( Bar . __dict__ ) print ( obj . __dict__ ) --------- { '__module__' : '__main__' , '__init__' : < function Bar . __init__ at 0x0000013DAD733AE8 > , '__weakref__' : < attribute '__weakref__' of 'Bar' objects > , '__doc__' : '\u6ce8\u91ca' , '__dict__' : < attribute '__dict__' of 'Bar' objects > } { 'name' : 'Tom' , 'age' : 18 } 9.6 getitem \u3001 setitem \u548c delitem 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 class Bar : \"\"\"\u6ce8\u91ca\"\"\" def __init__ ( self ): pass def __getitem__ ( self , item ): return item + 10 def __setitem__ ( self , k , v ): print ( k , v ) def __delitem__ ( self , val ): print ( 'delete:' , val ) obj = Bar () print ( obj [ 2 ]) obj [ 'name' ] = 'Tom' del obj [ 'del' ] ---------------- name Tom delete : del 9.7 iter \u5982\u679c\u7c7b\u4e2d\u6709__iter__\u65b9\u6cd5\uff0c\u5176\u5bf9\u8c61\u5c31\u662f\u4e00\u4e2a\u53ef\u8fed\u4ee3\u5bf9\u8c61\uff1b \u5bf9\u8c61\u540d. iter ()\u7684\u8fd4\u56de\u503c\u662f\u8fed\u4ee3\u5668 1 2 3 4 5 6 7 8 9 class Bar : def __iter__ ( self ): return iter ([ 11 , 22 , 33 ]) obj = Bar () for i in obj : print ( i ) #for\u5faa\u73af\u6267\u884cobj\u5bf9\u8c61\u7684\u7c7b\u4e2d\u7684__iter__\u65b9\u6cd5\uff0c\u5e76\u83b7\u53d6\u5176\u8fed\u4ee3\u5668\uff1b\u5faa\u73af\u4e0a\u4e00\u6b65\u4e2d\u8fd4\u56de\u7684\u5bf9\u8c61","title":"9. \u91cd\u88c5\u8fd0\u7b97\u7b26"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/05-%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/#10","text":"\u5e94\u7528\u573a\u666f\uff1a\u6570\u636e\u5e93\u8fde\u63a5\u6c60 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 class Bar : __v = None @classmethod def get_instance ( cls ): if cls . __v : return cls . __v else : cls . __v = Bar () return cls . __v # \u4e0d\u7528\u518d\u4f7f\u7528Bar()\u521b\u5efa\u5b9e\u4f8b obj1 = Bar . get_instance () print ( obj1 ) obj2 = Bar . get_instance () print ( obj2 ) obj3 = Bar . get_instance () print ( obj3 ) ########### < __main__ . Bar object at 0x0000026D865B4A20 > < __main__ . Bar object at 0x0000026D865B4A20 > < __main__ . Bar object at 0x0000026D865B4A20 > \u7ebf\u7a0b\u5b89\u5168\u5355\u4f8b\u6a21\u5f0f 1 2 3 4 5 6 7 8 9 class Bar : from threading import Lock __instance = None lock = Lock () def __new__ ( cls , * args , ** kwargs ): with cls . lock : if not cls . __instance : cls . __instance = super () . __new__ ( cls ) return cls . __instance","title":"10. \u5355\u4f8b\u6a21\u5f0f"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/06-%E5%8C%85%E5%92%8C%E6%A8%A1%E5%9D%97/","text":"\u6a21\u5757\u548c\u5305 \u00b6 \u6a21\u5757\u548c\u5305\u7684\u547d\u4ee4\u90fd\u5e94\u9075\u5faapython\u53d8\u91cf\u7684\u547d\u540d\u89c4\u5219\u3002 \u4e00\u3001\u6a21\u5757 \u00b6 \u672c\u8d28\u5c31\u662f\u4e00\u4e2a.py\u6587\u4ef6\uff0c\u5c01\u88c5\u8bed\u53e5\u7684\u6700\u5c0f\u5355\u4f4d\uff0c\u662f\u4e00\u7cfb\u5217\u529f\u80fd\u7684\u96c6\u5408\u4f53\u3002\u4f7f\u7528\u6a21\u5757\u53ef\u4ee5\u63d0\u9ad8\u5f00\u53d1\u6548\u7387\uff0c\u4fbf\u4e8e\u7ef4\u62a4\u548c\u7ba1\u7406\u3002 1. \u6a21\u5757\u7684\u5206\u7c7b \u00b6 \u5185\u7f6e\u6a21\u5757 \u7b2c\u4e09\u65b9\u6a21\u5757\u3001\u6269\u5c55\u6a21\u5757 \u81ea\u5b9a\u4e49\u6a21\u5757 2. \u6a21\u5757\u7684\u5f62\u5f0f \u00b6 \u4f7f\u7528python\u7f16\u5199\u7684\u6e90\u4ee3\u7801\u6587\u4ef6\uff08.py\u6587\u4ef6\uff09 \u5b57\u8282\u7801\u6587\u4ef6\uff08.pyc\uff09 \u7528C\u6216C++\u7f16\u5199\u7684\u7f16\u8bd1\u6269\u5c55\u6a21\u5757\uff0c\u5bfc\u5165\u65f6\u4f7f\u7528\u52a8\u6001\u94fe\u63a5\uff08linux\u7684.so\u3001Cygwin\u6216Windows\u7684.dll\uff09 \u628a\u4e00\u7cfb\u5217\u6a21\u5757\u7ec4\u7ec7\u5230\u4e00\u8d77\u7684\u6587\u4ef6\u5939\uff08\u5305\uff09 \u4f7f\u7528C\u7f16\u5199\u5e76\u94fe\u63a5\u5230python\u89e3\u91ca\u5668\u7684\u5185\u7f6e\u6a21\u5757 zip\u6587\u4ef6\uff0c\u5bfc\u5165\u65f6\u81ea\u52a8\u89e3\u538b\u7f29 3. \u6a21\u5757\u7684\u641c\u7d22\u8def\u5f84 \u00b6 \u7a0b\u5e8f\u4e3b\u76ee\u5f55 PYTHONPATH\u76ee\u5f55 \u6807\u51c6\u5e93\u76ee\u5f55 .pth \u6587\u4ef6\u4e2d\u7684\u5185\u5bb9\uff08\u4e0d\u5e38\u7528\uff09 \u7b2c\u4e09\u65b9\u6269\u5c55\u5e94\u7528\u7684 site-packages \u4e3b\u76ee\u5f55 1 2 3 4 5 6 7 $ python3 Python 3.6 . 9 ( default , Oct 8 2020 , 12 : 12 : 24 ) [ GCC 8.4 . 0 ] on linux Type \"help\" , \"copyright\" , \"credits\" or \"license\" for more information . >>> import sys >>> sys . path [ '' , '/usr/lib/python36.zip' , '/usr/lib/python3.6' , '/usr/lib/python3.6/lib-dynload' , '/home/gp/.local/lib/python3.6/site-packages' , '/usr/local/lib/python3.6/dist-packages' , '/usr/lib/python3/dist-packages' ] 4. \u6a21\u5757\u7684\u8fd0\u884c\u65b9\u5f0f \u00b6 \u811a\u672c\u65b9\u5f0f\uff1a\u76f4\u63a5\u7528\u89e3\u91ca\u5668\u6267\u884c \u6a21\u5757\u65b9\u5f0f\uff1a\u88ab\u5176\u4ed6\u7684\u6a21\u5757\u5bfc\u5165\u6267\u884c\uff0c\u4e3a\u5bfc\u5165\u5b83\u7684\u6a21\u5757\u63d0\u4f9b\u8d44\u6e90\uff08\u53d8\u91cf\u3001\u51fd\u6570\u5b9a\u4e49\u3001\u7c7b\u5b9a\u4e49\u7b49\uff09\u3002 \u81ea\u5b9a\u4e49\u6a21\u5757\u88ab\u5176\u4ed6\u6a21\u5757\u5bfc\u5165\u65f6\uff0c\u5176\u4e2d\u7684\u53ef\u6267\u884c\u8bed\u53e5\u4f1a\u7acb\u5373\u6267\u884c\u3002 5. \u6a21\u5757\u7684\u5bfc\u5165 \u00b6 5.1 \u5bfc\u5165\u6a21\u5757\u7684\u89c4\u8303 \u00b6 1 2 3 4 5 #/usr/bin/env python3 import python\u5185\u7f6e\u6a21\u5757 import \u7b2c\u4e09\u65b9\u6a21\u5757 import \u81ea\u5b9a\u4e49\u6a21\u5757 ... 5.2 \u5bfc\u5165\u6a21\u5757\u65f6\u53d1\u751f\u4e86\u4ec0\u4e48 \u00b6 5.2.1 \u5bfc\u5165\u7684\u4e09\u4e2a\u6b65\u9aa4 \u00b6 \u7a0b\u5e8f\u7b2c\u4e00\u6b21\u5bfc\u5165\u6307\u5b9a\u6587\u4ef6\u65f6\uff0c\u4f1a\u6267\u884c\u4e09\u4e2a\u6b65\u9aa4\uff1a \u627e\u5230\u6a21\u5757\u6587\u4ef6 \u7f16\u8bd1\u6210\u5b57\u8282\u7801 \u6267\u884c\u6a21\u5757\u7684\u4ee3\u7801\u6765\u521b\u5efa\u5176\u6240\u5b9a\u4e49\u7684\u5bf9\u8c61 \u4e4b\u540e\u518d\u5bfc\u5165\u76f8\u540c\u7684\u6a21\u5757\u65f6\u4f1a\u8df3\u8fc7\u8fd9\u4e09\u4e2a\u6b65\u9aa4\uff0c\u800c\u53ea\u662f\u63d0\u53d6\u5185\u5b58\u4e2d\u5df2\u52a0\u8f7d\u7684\u6a21\u5757\u5bf9\u8c61\uff0cpython\u4f1a\u628a\u5df2\u52a0\u8f7d\u7684\u6a21\u5757\u5b58\u50a8\u5230 sys.modules \u5b57\u5178\u4e2d\u3002 5.2.2 \u5bfc\u5165\u6a21\u5757\u65f6\u6267\u884c\u7684\u4e09\u4ef6\u4e8b \u00b6 \u5728\u5185\u5b58\u4e2d\u521b\u5efa\u4ee5\u6a21\u5757\u540d\u79f0\u547d\u540d\u7684\u540d\u79f0\u7a7a\u95f4 \u4ece\u5934\u5230\u5c3e\u4f9d\u6b21\u6267\u884c\u8be5\u6a21\u5757\u6587\u4ef6\u5185\u7684\u8bed\u53e5\uff0c\u6587\u4ef6\u9876\u5c42\u7684\uff08\u4e0d\u5728def\u6216class\u4e4b\u5185\uff09\u8d4b\u503c\u540d\u79f0\u7684\u8bed\u53e5\uff08=\u6216def\uff09\u4f1a\u521b\u5efa\u6a21\u5757\u5bf9\u8c61\u7684\u5c5e\u6027\uff0c\u8d4b\u503c\u7684\u540d\u79f0\u4f1a\u5b58\u50a8\u5728\u6a21\u5757\u7684\u547d\u540d\u7a7a\u95f4\u5185\u3002 \u901a\u8fc7 \u6a21\u5757. \u7684\u65b9\u5f0f\u8c03\u7528\u6b64\u6a21\u5757\u4e2d\u7684\u5185\u5bb9 5.3 \u5bfc\u5165\u6a21\u5757\u7684\u65b9\u5f0f \u00b6 5.3.1 import \u00b6 \u8bed\u6cd5\u683c\u5f0f 1 2 import module # \u5bfc\u5165\u4e00\u4e2a\u6a21\u5757\u7684\u6240\u6709\u6210\u5458 import module1 , module2 # \u4e00\u6b21\u6027\u5bfc\u5165\u591a\u4e2a\u6a21\u5757\uff0c\u4e0d\u63a8\u8350\u8fd9\u79cd\u5199\u6cd5 import \u4f1a\u6574\u4f53\u8bfb\u53d6\u4e00\u4e2a\u6a21\u5757\uff0c\u4f7f\u7528\u540d\u79f0\u65f6\u9700\u8981\u52a0\u4e0a\u6a21\u5757\u540d\u3002 1 2 >>> import time >>> time . sleep ( 1 ) 5.3.2 from \u00b6 \u8bed\u6cd5\u683c\u5f0f 1 2 3 from module import name from module import name1 , name2 # \u67d0\u4e2a\u6a21\u5757\u4e2d\u5bfc\u5165\u591a\u4e2a\u6210\u5458 from module import * # \u5bfc\u5165\u4e00\u4e2a\u6a21\u5757\u7684\u6240\u6709\u6210\u5458\uff0c\u5728python3\u4e2d\u53ea\u80fd\u7528\u5728\u4e00\u4e2a\u6a21\u5757\u6587\u4ef6\u7684\u9876\u90e8\uff0c\u4e0d\u80fd\u7528\u5728\u51fd\u6570\u4e2d from \u4ece\u6a21\u5757\u4e2d\u8bfb\u53d6\u7279\u5b9a\u7684\u540d\u79f0\uff0c\u4f7f\u7528\u65f6\u4e0d\u9700\u8981\u52a0\u6a21\u5757\u540d\u3002 1 2 >>> from time import sleep >>> sleep ( 1 ) \u4f7f\u7528\u522b\u540d alias \u7ed9\u6210\u5458\u53d6\u522b\u540d\uff0c\u907f\u514d\u540d\u79f0\u51b2\u7a81 from xxx import zzz as y \u7ed9\u6a21\u5757\u53d6\u522b\u540d\uff0c\u7b80\u5316\u719f\u6089 import xxx as y \u4f7f\u7528 __all__ \u63a7\u5236\u88ab\u5bfc\u5165\u7684\u6210\u5458 \u00b6 from xxx import * \u63a7\u5236\u6210\u5458\u88ab\u5bfc\u5165\uff0c __all__ \u662f\u4e00\u4e2a\u5217\u8868\uff0c\u7528\u4e8e\u8868\u793a\u672c\u6a21\u5757\u53ef\u4ee5\u88ab\u5916\u754c\u4f7f\u7528\u7684\u6210\u5458\uff0c\u5143\u7d20\u662f\u6210\u5458\u7684\u5b57\u7b26\u4e32\u3002 1 2 # \u53ea\u6709\u4f7f\u7528`from xxx import *`\u5bfc\u5165\u624d\u6709\u6548 __all__ = [ \"\u6210\u54581\" , \"\u6210\u54582\" ] 6. __name__ \u5c5e\u6027 \u00b6 \u6bcf\u4e2a\u6a21\u5757\u5185\u6709\u4e00\u4e2a\u540d\u4e3a __name__ \u7684\u5185\u7f6e\u5c5e\u6027\u3002 \u5982\u679c\u6587\u4ef6\u4f5c\u4e3a\u9876\u5c42\u7a0b\u5e8f\u6587\u4ef6\uff08\u811a\u672c\u65b9\u5f0f\uff09\u6267\u884c\u65f6\uff0c __name__ \u503c\u4e3a\u5b57\u7b26\u4e32 __main__ \uff0c \u5982\u679c\u6587\u4ef6\u88ab\u5f53\u505a\u6a21\u5757\u5bfc\u5165\u65f6\uff0c __name__ \u7684\u503c\u4e3a\u5c31\u662f\u672c\u6a21\u5757\u7684\u540d\u5b57\u3002 \u4e8c\u3001\u6a21\u5757\u5305 \u00b6 \u5305\u5c31\u662f\u4e00\u4e2a\u5305\u542b\u6709 __init__.py \u6587\u4ef6\u7684\u6587\u4ef6\u5939 1. \u5bfc\u5165\u5305\u7684\u65b9\u5f0f \u00b6 1 2 import from ... import ...","title":"\u5305\u548c\u6a21\u5757"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/06-%E5%8C%85%E5%92%8C%E6%A8%A1%E5%9D%97/#_1","text":"\u6a21\u5757\u548c\u5305\u7684\u547d\u4ee4\u90fd\u5e94\u9075\u5faapython\u53d8\u91cf\u7684\u547d\u540d\u89c4\u5219\u3002","title":"\u6a21\u5757\u548c\u5305"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/06-%E5%8C%85%E5%92%8C%E6%A8%A1%E5%9D%97/#_2","text":"\u672c\u8d28\u5c31\u662f\u4e00\u4e2a.py\u6587\u4ef6\uff0c\u5c01\u88c5\u8bed\u53e5\u7684\u6700\u5c0f\u5355\u4f4d\uff0c\u662f\u4e00\u7cfb\u5217\u529f\u80fd\u7684\u96c6\u5408\u4f53\u3002\u4f7f\u7528\u6a21\u5757\u53ef\u4ee5\u63d0\u9ad8\u5f00\u53d1\u6548\u7387\uff0c\u4fbf\u4e8e\u7ef4\u62a4\u548c\u7ba1\u7406\u3002","title":"\u4e00\u3001\u6a21\u5757"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/06-%E5%8C%85%E5%92%8C%E6%A8%A1%E5%9D%97/#1","text":"\u5185\u7f6e\u6a21\u5757 \u7b2c\u4e09\u65b9\u6a21\u5757\u3001\u6269\u5c55\u6a21\u5757 \u81ea\u5b9a\u4e49\u6a21\u5757","title":"1. \u6a21\u5757\u7684\u5206\u7c7b"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/06-%E5%8C%85%E5%92%8C%E6%A8%A1%E5%9D%97/#2","text":"\u4f7f\u7528python\u7f16\u5199\u7684\u6e90\u4ee3\u7801\u6587\u4ef6\uff08.py\u6587\u4ef6\uff09 \u5b57\u8282\u7801\u6587\u4ef6\uff08.pyc\uff09 \u7528C\u6216C++\u7f16\u5199\u7684\u7f16\u8bd1\u6269\u5c55\u6a21\u5757\uff0c\u5bfc\u5165\u65f6\u4f7f\u7528\u52a8\u6001\u94fe\u63a5\uff08linux\u7684.so\u3001Cygwin\u6216Windows\u7684.dll\uff09 \u628a\u4e00\u7cfb\u5217\u6a21\u5757\u7ec4\u7ec7\u5230\u4e00\u8d77\u7684\u6587\u4ef6\u5939\uff08\u5305\uff09 \u4f7f\u7528C\u7f16\u5199\u5e76\u94fe\u63a5\u5230python\u89e3\u91ca\u5668\u7684\u5185\u7f6e\u6a21\u5757 zip\u6587\u4ef6\uff0c\u5bfc\u5165\u65f6\u81ea\u52a8\u89e3\u538b\u7f29","title":"2. \u6a21\u5757\u7684\u5f62\u5f0f"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/06-%E5%8C%85%E5%92%8C%E6%A8%A1%E5%9D%97/#3","text":"\u7a0b\u5e8f\u4e3b\u76ee\u5f55 PYTHONPATH\u76ee\u5f55 \u6807\u51c6\u5e93\u76ee\u5f55 .pth \u6587\u4ef6\u4e2d\u7684\u5185\u5bb9\uff08\u4e0d\u5e38\u7528\uff09 \u7b2c\u4e09\u65b9\u6269\u5c55\u5e94\u7528\u7684 site-packages \u4e3b\u76ee\u5f55 1 2 3 4 5 6 7 $ python3 Python 3.6 . 9 ( default , Oct 8 2020 , 12 : 12 : 24 ) [ GCC 8.4 . 0 ] on linux Type \"help\" , \"copyright\" , \"credits\" or \"license\" for more information . >>> import sys >>> sys . path [ '' , '/usr/lib/python36.zip' , '/usr/lib/python3.6' , '/usr/lib/python3.6/lib-dynload' , '/home/gp/.local/lib/python3.6/site-packages' , '/usr/local/lib/python3.6/dist-packages' , '/usr/lib/python3/dist-packages' ]","title":"3. \u6a21\u5757\u7684\u641c\u7d22\u8def\u5f84"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/06-%E5%8C%85%E5%92%8C%E6%A8%A1%E5%9D%97/#4","text":"\u811a\u672c\u65b9\u5f0f\uff1a\u76f4\u63a5\u7528\u89e3\u91ca\u5668\u6267\u884c \u6a21\u5757\u65b9\u5f0f\uff1a\u88ab\u5176\u4ed6\u7684\u6a21\u5757\u5bfc\u5165\u6267\u884c\uff0c\u4e3a\u5bfc\u5165\u5b83\u7684\u6a21\u5757\u63d0\u4f9b\u8d44\u6e90\uff08\u53d8\u91cf\u3001\u51fd\u6570\u5b9a\u4e49\u3001\u7c7b\u5b9a\u4e49\u7b49\uff09\u3002 \u81ea\u5b9a\u4e49\u6a21\u5757\u88ab\u5176\u4ed6\u6a21\u5757\u5bfc\u5165\u65f6\uff0c\u5176\u4e2d\u7684\u53ef\u6267\u884c\u8bed\u53e5\u4f1a\u7acb\u5373\u6267\u884c\u3002","title":"4. \u6a21\u5757\u7684\u8fd0\u884c\u65b9\u5f0f"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/06-%E5%8C%85%E5%92%8C%E6%A8%A1%E5%9D%97/#5","text":"","title":"5. \u6a21\u5757\u7684\u5bfc\u5165"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/06-%E5%8C%85%E5%92%8C%E6%A8%A1%E5%9D%97/#51","text":"1 2 3 4 5 #/usr/bin/env python3 import python\u5185\u7f6e\u6a21\u5757 import \u7b2c\u4e09\u65b9\u6a21\u5757 import \u81ea\u5b9a\u4e49\u6a21\u5757 ...","title":"5.1  \u5bfc\u5165\u6a21\u5757\u7684\u89c4\u8303"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/06-%E5%8C%85%E5%92%8C%E6%A8%A1%E5%9D%97/#52","text":"","title":"5.2 \u5bfc\u5165\u6a21\u5757\u65f6\u53d1\u751f\u4e86\u4ec0\u4e48"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/06-%E5%8C%85%E5%92%8C%E6%A8%A1%E5%9D%97/#521","text":"\u7a0b\u5e8f\u7b2c\u4e00\u6b21\u5bfc\u5165\u6307\u5b9a\u6587\u4ef6\u65f6\uff0c\u4f1a\u6267\u884c\u4e09\u4e2a\u6b65\u9aa4\uff1a \u627e\u5230\u6a21\u5757\u6587\u4ef6 \u7f16\u8bd1\u6210\u5b57\u8282\u7801 \u6267\u884c\u6a21\u5757\u7684\u4ee3\u7801\u6765\u521b\u5efa\u5176\u6240\u5b9a\u4e49\u7684\u5bf9\u8c61 \u4e4b\u540e\u518d\u5bfc\u5165\u76f8\u540c\u7684\u6a21\u5757\u65f6\u4f1a\u8df3\u8fc7\u8fd9\u4e09\u4e2a\u6b65\u9aa4\uff0c\u800c\u53ea\u662f\u63d0\u53d6\u5185\u5b58\u4e2d\u5df2\u52a0\u8f7d\u7684\u6a21\u5757\u5bf9\u8c61\uff0cpython\u4f1a\u628a\u5df2\u52a0\u8f7d\u7684\u6a21\u5757\u5b58\u50a8\u5230 sys.modules \u5b57\u5178\u4e2d\u3002","title":"5.2.1 \u5bfc\u5165\u7684\u4e09\u4e2a\u6b65\u9aa4"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/06-%E5%8C%85%E5%92%8C%E6%A8%A1%E5%9D%97/#522","text":"\u5728\u5185\u5b58\u4e2d\u521b\u5efa\u4ee5\u6a21\u5757\u540d\u79f0\u547d\u540d\u7684\u540d\u79f0\u7a7a\u95f4 \u4ece\u5934\u5230\u5c3e\u4f9d\u6b21\u6267\u884c\u8be5\u6a21\u5757\u6587\u4ef6\u5185\u7684\u8bed\u53e5\uff0c\u6587\u4ef6\u9876\u5c42\u7684\uff08\u4e0d\u5728def\u6216class\u4e4b\u5185\uff09\u8d4b\u503c\u540d\u79f0\u7684\u8bed\u53e5\uff08=\u6216def\uff09\u4f1a\u521b\u5efa\u6a21\u5757\u5bf9\u8c61\u7684\u5c5e\u6027\uff0c\u8d4b\u503c\u7684\u540d\u79f0\u4f1a\u5b58\u50a8\u5728\u6a21\u5757\u7684\u547d\u540d\u7a7a\u95f4\u5185\u3002 \u901a\u8fc7 \u6a21\u5757. \u7684\u65b9\u5f0f\u8c03\u7528\u6b64\u6a21\u5757\u4e2d\u7684\u5185\u5bb9","title":"5.2.2 \u5bfc\u5165\u6a21\u5757\u65f6\u6267\u884c\u7684\u4e09\u4ef6\u4e8b"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/06-%E5%8C%85%E5%92%8C%E6%A8%A1%E5%9D%97/#53","text":"","title":"5.3 \u5bfc\u5165\u6a21\u5757\u7684\u65b9\u5f0f"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/06-%E5%8C%85%E5%92%8C%E6%A8%A1%E5%9D%97/#531-import","text":"\u8bed\u6cd5\u683c\u5f0f 1 2 import module # \u5bfc\u5165\u4e00\u4e2a\u6a21\u5757\u7684\u6240\u6709\u6210\u5458 import module1 , module2 # \u4e00\u6b21\u6027\u5bfc\u5165\u591a\u4e2a\u6a21\u5757\uff0c\u4e0d\u63a8\u8350\u8fd9\u79cd\u5199\u6cd5 import \u4f1a\u6574\u4f53\u8bfb\u53d6\u4e00\u4e2a\u6a21\u5757\uff0c\u4f7f\u7528\u540d\u79f0\u65f6\u9700\u8981\u52a0\u4e0a\u6a21\u5757\u540d\u3002 1 2 >>> import time >>> time . sleep ( 1 )","title":"5.3.1 import"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/06-%E5%8C%85%E5%92%8C%E6%A8%A1%E5%9D%97/#532-from","text":"\u8bed\u6cd5\u683c\u5f0f 1 2 3 from module import name from module import name1 , name2 # \u67d0\u4e2a\u6a21\u5757\u4e2d\u5bfc\u5165\u591a\u4e2a\u6210\u5458 from module import * # \u5bfc\u5165\u4e00\u4e2a\u6a21\u5757\u7684\u6240\u6709\u6210\u5458\uff0c\u5728python3\u4e2d\u53ea\u80fd\u7528\u5728\u4e00\u4e2a\u6a21\u5757\u6587\u4ef6\u7684\u9876\u90e8\uff0c\u4e0d\u80fd\u7528\u5728\u51fd\u6570\u4e2d from \u4ece\u6a21\u5757\u4e2d\u8bfb\u53d6\u7279\u5b9a\u7684\u540d\u79f0\uff0c\u4f7f\u7528\u65f6\u4e0d\u9700\u8981\u52a0\u6a21\u5757\u540d\u3002 1 2 >>> from time import sleep >>> sleep ( 1 ) \u4f7f\u7528\u522b\u540d alias \u7ed9\u6210\u5458\u53d6\u522b\u540d\uff0c\u907f\u514d\u540d\u79f0\u51b2\u7a81 from xxx import zzz as y \u7ed9\u6a21\u5757\u53d6\u522b\u540d\uff0c\u7b80\u5316\u719f\u6089 import xxx as y","title":"5.3.2 from"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/06-%E5%8C%85%E5%92%8C%E6%A8%A1%E5%9D%97/#__all__","text":"from xxx import * \u63a7\u5236\u6210\u5458\u88ab\u5bfc\u5165\uff0c __all__ \u662f\u4e00\u4e2a\u5217\u8868\uff0c\u7528\u4e8e\u8868\u793a\u672c\u6a21\u5757\u53ef\u4ee5\u88ab\u5916\u754c\u4f7f\u7528\u7684\u6210\u5458\uff0c\u5143\u7d20\u662f\u6210\u5458\u7684\u5b57\u7b26\u4e32\u3002 1 2 # \u53ea\u6709\u4f7f\u7528`from xxx import *`\u5bfc\u5165\u624d\u6709\u6548 __all__ = [ \"\u6210\u54581\" , \"\u6210\u54582\" ]","title":"\u4f7f\u7528__all__\u63a7\u5236\u88ab\u5bfc\u5165\u7684\u6210\u5458"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/06-%E5%8C%85%E5%92%8C%E6%A8%A1%E5%9D%97/#6-__name__","text":"\u6bcf\u4e2a\u6a21\u5757\u5185\u6709\u4e00\u4e2a\u540d\u4e3a __name__ \u7684\u5185\u7f6e\u5c5e\u6027\u3002 \u5982\u679c\u6587\u4ef6\u4f5c\u4e3a\u9876\u5c42\u7a0b\u5e8f\u6587\u4ef6\uff08\u811a\u672c\u65b9\u5f0f\uff09\u6267\u884c\u65f6\uff0c __name__ \u503c\u4e3a\u5b57\u7b26\u4e32 __main__ \uff0c \u5982\u679c\u6587\u4ef6\u88ab\u5f53\u505a\u6a21\u5757\u5bfc\u5165\u65f6\uff0c __name__ \u7684\u503c\u4e3a\u5c31\u662f\u672c\u6a21\u5757\u7684\u540d\u5b57\u3002","title":"6. __name__\u5c5e\u6027"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/06-%E5%8C%85%E5%92%8C%E6%A8%A1%E5%9D%97/#_3","text":"\u5305\u5c31\u662f\u4e00\u4e2a\u5305\u542b\u6709 __init__.py \u6587\u4ef6\u7684\u6587\u4ef6\u5939","title":"\u4e8c\u3001\u6a21\u5757\u5305"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/06-%E5%8C%85%E5%92%8C%E6%A8%A1%E5%9D%97/#1_1","text":"1 2 import from ... import ...","title":"1. \u5bfc\u5165\u5305\u7684\u65b9\u5f0f"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/07-%E8%BF%AD%E4%BB%A3%E5%92%8C%E6%8E%A8%E5%AF%BC/","text":"\u4e00\u3001\u53ef\u8fed\u4ee3\u5bf9\u8c61\u4e0e\u8fed\u4ee3\u5668 \u00b6 1. \u53ef\u8fed\u4ee3\u5bf9\u8c61 \u00b6 \u53ef\u4ee5\u76f4\u63a5\u4f5c\u7528\u4e8e for \u5faa\u73af\u7684\u5bf9\u8c61\u7edf\u79f0\u4e3a\u53ef\u8fed\u4ee3\u5bf9\u8c61\uff08Iterable\uff09\u3002\u5185\u90e8\u542b\u6709 __iter__ \u65b9\u6cd5\u3002\u5982\u5b57\u7b26\u4e32\u3001\u5217\u8868\u3001\u5143\u7ec4\u3001\u5b57\u5178\u3001\u96c6\u5408\u3001\u6587\u4ef6\u53e5\u67c4\u7b49\u3002 \u53ef\u8fed\u4ee3\u5bf9\u8c61.__iter__() :\u53ef\u5f97\u5230\u8fed\u4ee3\u5668\u5bf9\u8c61\u3002 1 2 3 >>> l = [] >>> l . __iter__ () < list_iterator object at 0x000001931878FBE0 > 1.1 \u5224\u65ad\u4e00\u4e2a\u5bf9\u8c61\u662f\u5426\u662f\u53ef\u8fed\u4ee3\u5bf9\u8c61 \u00b6 1 2 3 4 5 6 >>> '__iter__' in dir ( 'hello' ) True # \u6216\u8005 >>> from collections import Iterable >>> isinstance ([], Iterable ) True \u51e1\u662f\u53ef\u4f5c\u7528\u4e8e for \u5faa\u73af\u7684\u5bf9\u8c61\u90fd\u662f Iterable \u7c7b\u578b 1.2. \u53ef\u8fed\u4ee3\u5bf9\u8c61\u7684\u7279\u70b9 \u00b6 1.2.1 \u4f18\u70b9 \u00b6 \u5b58\u50a8\u7684\u6570\u636e\u80fd\u76f4\u63a5\u663e\u793a\uff0c\u6bd4\u8f83\u76f4\u89c2 \u62e5\u6709\u7684\u65b9\u6cd5\u6bd4\u8f83\u591a\uff0c\u64cd\u4f5c\u65b9\u4fbf 1.2.2 \u7f3a\u70b9 \u00b6 \u5360\u7528\u5185\u5b58 \u4e0d\u80fd\u76f4\u63a5\u901a\u8fc7for\u5faa\u73af\u53d6\u503c 2. \u8fed\u4ee3\u5668 \u00b6 \u53ef\u4ee5\u88ab next()\u51fd\u6570\u8c03\u7528\u5e76\u4e0d\u65ad\u8fd4\u56de\u4e0b\u4e00\u4e2a\u503c\u7684\u5bf9\u8c61\u79f0\u4e3a\u8fed\u4ee3\u5668\uff08Iterator\uff09\uff0c\u5185\u90e8\u542b\u6709 __iter__ \u65b9\u6cd5\u548c __next__ \u65b9\u6cd5\u7684\u5bf9\u8c61\u3002\u8fed\u4ee3\u5668\u6307\u7684\u662f\u8fed\u4ee3\u53d6\u503c\u7684\u5de5\u5177\uff0c\u8fed\u4ee3\u662f\u4e00\u4e2a\u91cd\u590d\u7684\u8fc7\u7a0b\uff0c\u6bcf\u6b21\u91cd\u590d\uff0c\u90fd\u662f\u57fa\u4e8e\u4e0a\u4e00\u6b21\u7684\u7ed3\u679c\u800c\u7ee7\u7eed\u7684\uff0c\u5355\u7eaf\u7684\u91cd\u590d\u5e76\u4e0d\u662f\u8fed\u4ee3\u3002 2.1 \u5224\u65ad\u4e00\u4e2a\u5bf9\u8c61\u662f\u4e0d\u662f\u8fed\u4ee3\u5668 \u00b6 1 2 3 4 5 >>> from collections import Iterator >>> isinstance (( x for x in range ( 10 )), Iterator ) True >>> isinstance ([], Iterator ) False \u51e1\u662f\u53ef\u4f5c\u7528\u4e8e next()\u51fd\u6570\u7684\u5bf9\u8c61\u90fd\u662f Iterator \u7c7b\u578b,\u662f\u4e00\u4e2a\u60f0\u6027 \u8ba1\u7b97\u7684\u5e8f\u5217\uff1b 2.2 \u53ef\u8fed\u4ee3\u5bf9\u8c61\u8f6c\u6362\u4e3a\u8fed\u4ee3\u5668 \u00b6 \u65b9\u5f0f\u4e00\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 >>> d = { 'a' : 1 , 'b' : 2 , 'c' : 3 } >>> d_iterator = d . __iter__ () >>> print ( d_iterator ) < dict_keyiterator object at 0x0000019318519598 > >>> >>> print ( d_iterator . __next__ ()) a >>> print ( d_iterator . __next__ ()) b >>> print ( d_iterator . __next__ ()) c >>> print ( d_iterator . __next__ ()) Traceback ( most recent call last ): File \"<stdin>\" , line 1 , in < module > StopIteration \u65b9\u5f0f\u4e8c\uff1a 1 2 3 >>> s = 'hello' >>> iter ( s ) < str_iterator object at 0x000002157774D898 > 2.3 for\u5faa\u73af\u7684\u5de5\u4f5c\u539f\u7406 \u00b6 1 2 3 4 5 6 d = { 'a' : 1 , 'b' : 2 , 'c' : 3 } # 1\u3001d.__iter__()\u5f97\u5230\u4e00\u4e2a\u8fed\u4ee3\u5668\u5bf9\u8c61 # 2\u3001\u8fed\u4ee3\u5668\u5bf9\u8c61.__next__()\u62ff\u5230\u4e00\u4e2a\u8fd4\u56de\u503c\uff0c\u7136\u540e\u5c06\u8be5\u8fd4\u56de\u503c\u8d4b\u503c\u7ed9k # 3\u3001\u5faa\u73af\u5f80\u590d\u6b65\u9aa42\uff0c\u76f4\u5230\u629b\u51faStopIteration\u5f02\u5e38for\u5faa\u73af\u4f1a\u6355\u6349\u5f02\u5e38\u7136\u540e\u7ed3\u675f\u5faa\u73af for k in d : print ( k ) 2.4 \u8fed\u4ee3\u5668\u7684\u4f18\u7f3a\u70b9 \u00b6 2.4.1.\u4f18\u70b9 \u00b6 \u4e3a\u5e8f\u5217\u548c\u975e\u5e8f\u5217\u7c7b\u578b\u63d0\u4f9b\u4e86\u4e00\u79cd\u7edf\u4e00\u7684\u8fed\u4ee3\u53d6\u503c\u65b9\u5f0f\u3002 \u60f0\u6027\u8ba1\u7b97\uff1a\u8fed\u4ee3\u5668\u5bf9\u8c61\u8868\u793a\u7684\u662f\u4e00\u4e2a\u6570\u636e\u6d41\uff0c\u53ef\u4ee5\u53ea\u5728\u9700\u8981\u65f6\u624d\u53bb\u8c03\u7528next\u6765\u8ba1\u7b97\u51fa\u4e00\u4e2a\u503c\uff0c\u5c31\u8fed\u4ee3\u5668\u672c\u8eab\u6765\u8bf4\uff0c\u540c\u4e00\u65f6\u523b\u5728\u5185\u5b58\u4e2d\u53ea\u6709\u4e00\u4e2a\u503c\uff0c\u56e0\u800c\u53ef\u4ee5\u5b58\u653e\u65e0\u9650\u5927\u7684\u6570\u636e\u6d41\uff0c\u800c\u5bf9\u4e8e\u5176\u4ed6\u5bb9\u5668\u7c7b\u578b\uff0c\u5982\u5217\u8868\uff0c\u9700\u8981\u628a\u6240\u6709\u7684\u5143\u7d20\u90fd\u5b58\u653e\u4e8e\u5185\u5b58\u4e2d\uff0c\u53d7\u5185\u5b58\u5927\u5c0f\u7684\u9650\u5236\uff0c\u53ef\u4ee5\u5b58\u653e\u7684\u503c\u7684\u4e2a\u6570\u662f\u6709\u9650\u7684\u3002 2.4.2 \u7f3a\u70b9 \u00b6 \u9664\u975e\u53d6\u5c3d\uff0c\u5426\u5219\u65e0\u6cd5\u83b7\u53d6\u8fed\u4ee3\u5668\u7684\u957f\u5ea6 \u53ea\u80fd\u53d6\u4e0b\u4e00\u4e2a\u503c\uff0c\u4e0d\u80fd\u56de\u5230\u5f00\u59cb\uff0c\u66f4\u50cf\u662f\u2018\u4e00\u6b21\u6027\u7684\u2019\uff0c\u8fed\u4ee3\u5668\u4ea7\u751f\u540e\u7684\u552f\u4e00\u76ee\u6807\u5c31\u662f\u91cd\u590d\u6267\u884c next \u65b9\u6cd5\u76f4\u5230\u503c\u53d6\u5c3d\uff0c\u5426\u5219\u5c31\u4f1a\u505c\u7559\u5728\u67d0\u4e2a\u4f4d\u7f6e\uff0c\u7b49\u5f85\u4e0b\u4e00\u6b21\u8c03\u7528 next \uff1b\u82e5\u662f\u8981\u518d\u6b21\u8fed\u4ee3\u540c\u4e2a\u5bf9\u8c61\uff0c\u4f60\u53ea\u80fd\u91cd\u65b0\u8c03\u7528 iter \u65b9\u6cd5\u53bb\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u8fed\u4ee3\u5668\u5bf9\u8c61\uff0c\u5982\u679c\u6709\u4e24\u4e2a\u6216\u8005\u591a\u4e2a\u5faa\u73af\u4f7f\u7528\u540c\u4e00\u4e2a\u8fed\u4ee3\u5668\uff0c\u5fc5\u7136\u53ea\u4f1a\u6709\u4e00\u4e2a\u5faa\u73af\u80fd\u53d6\u5230\u503c\u3002 \u4e8c\u3001\u751f\u6210\u5668 \u00b6 \u751f\u6210\u5668\u7684\u672c\u8d28\u662f\u8fed\u4ee3\u5668\uff0c 1. \u751f\u6210\u5668\u7684\u83b7\u53d6\u65b9\u5f0f \u00b6 \u751f\u6210\u5668\u51fd\u6570 \u751f\u6210\u5668\u8868\u8fbe\u5f0f python\u5185\u90e8\u63d0\u4f9b 2. \u751f\u6210\u5668\u51fd\u6570 \u00b6 \u5982\u679c def \u5b9a\u4e49\u7684\u51fd\u6570\u4e2d\u6709 yield \uff0c\u8fd9\u4e2a\u51fd\u6570\u5c31\u662f\u751f\u6210\u5668\u51fd\u6570\uff0c\u4e0d\u518d\u662f\u666e\u901a\u51fd\u6570\u3002\u751f\u6210\u5668\u51fd\u6570\u4e2d\u53ef\u4ee5\u6709\u591a\u4e2a yield \uff0c\u4e00\u4e2a yield \u5bf9\u5e94\u4e00\u4e2a next 2.1 yield \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 >>> def func (): ... print ( '\u7b2c\u4e00\u6b21' ) ... yield 1 ... print ( '\u7b2c\u4e8c\u6b21' ) ... yield 2 ... print ( '\u7b2c\u4e09\u6b21' ) ... yield 3 ... print ( '\u7b2c\u56db\u6b21' ) ... >>> g = func () >>> print ( g ) < generator object func at 0x0000019318767A98 > >>> next ( g ) \u7b2c\u4e00\u6b21 1 >>> next ( g ) \u7b2c\u4e8c\u6b21 2 >>> next ( g ) \u7b2c\u4e09\u6b21 3 >>> next ( g ) \u7b2c\u56db\u6b21 Traceback ( most recent call last ): File \"<stdin>\" , line 1 , in < module > StopIteration >>> #next() \u4f1a\u89e6\u53d1\u51fd\u6570\u4f53\u4ee3\u7801\u7684\u8fd0\u884c\uff0c\u7136\u540e\u9047\u5230yield\u505c\u4e0b\u6765\uff0c\u5c06yield\u540e\u7684\u503c ... # \u5f53\u505a\u672c\u6b21\u8c03\u7528\u7684\u7ed3\u679c\u8fd4\u56de ... \u6709\u4e86yield\u5173\u952e\u5b57\uff0c\u6211\u4eec\u5c31\u6709\u4e86\u4e00\u79cd\u81ea\u5b9a\u4e49\u8fed\u4ee3\u5668\u7684\u5b9e\u73b0\u65b9\u5f0f\u3002yield\u53ef\u4ee5\u7528\u4e8e\u8fd4\u56de\u503c\uff0c\u4f46\u4e0d\u540c\u4e8ereturn\uff0c\u51fd\u6570\u4e00\u65e6\u9047\u5230return\u5c31\u7ed3\u675f\u4e86\uff0c\u800cyield\u53ef\u4ee5\u4fdd\u5b58\u51fd\u6570\u7684\u8fd0\u884c\u72b6\u6001\u6302\u8d77\u51fd\u6570\uff0c\u7528\u6765\u8fd4\u56de\u591a\u6b21\u503c 2.1 yield from \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 >>> def func (): ... l = [ 1 , 2 , 3 ] ... yield l ... >>> next ( func ()) [ 1 , 2 , 3 ] # yield from \u628a\u5217\u8868\u53d8\u6210\u8fed\u4ee3\u5668 >>> def func (): ... l = [ 1 , 2 , 3 ] ... yield from l ... >>> next ( func ()) 1 3. \u751f\u6210\u5668\u8868\u8fbe\u5f0f \u00b6 \u628a\u5217\u8868\u751f\u6210\u5f0f\u7684[]\u6539\u6210() 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 >>> g = ( x * x for x in range ( 10 ) if x % 3 == 0 ) >>> print ( next ( g )) 0 >>> print ( next ( g )) 9 >>> print ( next ( g )) 36 >>> print ( next ( g )) 81 >>> print ( next ( g )) Traceback ( most recent call last ): File \"<stdin>\" , line 1 , in < module > StopIteration >>> g < generator object < genexpr > at 0x0000019318767A98 > \u4e09\u3001\u751f\u6210\u5f0f \u00b6 1. \u5217\u8868\u751f\u6210\u5f0f \u00b6 \u5217\u8868\u63a8\u5bfc\u662f\u901a\u8fc7\u5bf9\u5e8f\u5217\u4e2d\u7684\u6bcf\u4e00\u9879\u8fd0\u884c\u4e00\u4e2a\u8868\u8fbe\u5f0f\u6765\u521b\u5efa\u4e00\u4e2a\u65b0\u5217\u8868\u7684\u65b9\u6cd5\u3002 1.1 \u5faa\u73af\u6a21\u5f0f \u00b6 1 2 >>> [ x ** 2 for x in range ( 1 , 11 ) ] [ 1 , 4 , 9 , 16 , 25 , 36 , 49 , 64 , 81 , 100 ] 2.2. \u7b5b\u9009\u6a21\u5f0f \u00b6 1 2 >>> [ x for x in range ( 1 , 11 ) if x % 2 == 0 ] [ 2 , 4 , 6 , 8 , 10 ] 2. \u5b57\u5178\u751f\u6210\u5f0f \u00b6 \u573a\u666f\u4e00 1 2 3 4 >>> keys = [ 'name' , 'age' , 'gender' ] >>> dic = { key : None for key in keys } >>> print ( dic ) { 'name' : None , 'age' : None , 'gender' : None } \u573a\u666f\u4e8c 1 2 3 4 >>> items = [( 'name' , 'egon' ), ( 'age' , 18 ), ( 'gender' , 'male' )] >>> res = { k : v for k , v in items } >>> print ( res ) { 'name' : 'egon' , 'age' : 18 , 'gender' : 'male' } 3. \u96c6\u5408\u751f\u6210\u5f0f \u00b6 1 2 3 4 >>> keys = [ 'name' , 'age' , 'gender' ] >>> set1 = { key for key in keys } >>> print ( set1 , type ( set1 )) { 'name' , 'age' , 'gender' } < class ' set '>","title":"\u8fed\u4ee3\u548c\u63a8\u5bfc"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/07-%E8%BF%AD%E4%BB%A3%E5%92%8C%E6%8E%A8%E5%AF%BC/#_1","text":"","title":"\u4e00\u3001\u53ef\u8fed\u4ee3\u5bf9\u8c61\u4e0e\u8fed\u4ee3\u5668"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/07-%E8%BF%AD%E4%BB%A3%E5%92%8C%E6%8E%A8%E5%AF%BC/#1","text":"\u53ef\u4ee5\u76f4\u63a5\u4f5c\u7528\u4e8e for \u5faa\u73af\u7684\u5bf9\u8c61\u7edf\u79f0\u4e3a\u53ef\u8fed\u4ee3\u5bf9\u8c61\uff08Iterable\uff09\u3002\u5185\u90e8\u542b\u6709 __iter__ \u65b9\u6cd5\u3002\u5982\u5b57\u7b26\u4e32\u3001\u5217\u8868\u3001\u5143\u7ec4\u3001\u5b57\u5178\u3001\u96c6\u5408\u3001\u6587\u4ef6\u53e5\u67c4\u7b49\u3002 \u53ef\u8fed\u4ee3\u5bf9\u8c61.__iter__() :\u53ef\u5f97\u5230\u8fed\u4ee3\u5668\u5bf9\u8c61\u3002 1 2 3 >>> l = [] >>> l . __iter__ () < list_iterator object at 0x000001931878FBE0 >","title":"1. \u53ef\u8fed\u4ee3\u5bf9\u8c61"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/07-%E8%BF%AD%E4%BB%A3%E5%92%8C%E6%8E%A8%E5%AF%BC/#11","text":"1 2 3 4 5 6 >>> '__iter__' in dir ( 'hello' ) True # \u6216\u8005 >>> from collections import Iterable >>> isinstance ([], Iterable ) True \u51e1\u662f\u53ef\u4f5c\u7528\u4e8e for \u5faa\u73af\u7684\u5bf9\u8c61\u90fd\u662f Iterable \u7c7b\u578b","title":"1.1 \u5224\u65ad\u4e00\u4e2a\u5bf9\u8c61\u662f\u5426\u662f\u53ef\u8fed\u4ee3\u5bf9\u8c61"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/07-%E8%BF%AD%E4%BB%A3%E5%92%8C%E6%8E%A8%E5%AF%BC/#12","text":"","title":"1.2. \u53ef\u8fed\u4ee3\u5bf9\u8c61\u7684\u7279\u70b9"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/07-%E8%BF%AD%E4%BB%A3%E5%92%8C%E6%8E%A8%E5%AF%BC/#121","text":"\u5b58\u50a8\u7684\u6570\u636e\u80fd\u76f4\u63a5\u663e\u793a\uff0c\u6bd4\u8f83\u76f4\u89c2 \u62e5\u6709\u7684\u65b9\u6cd5\u6bd4\u8f83\u591a\uff0c\u64cd\u4f5c\u65b9\u4fbf","title":"1.2.1 \u4f18\u70b9"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/07-%E8%BF%AD%E4%BB%A3%E5%92%8C%E6%8E%A8%E5%AF%BC/#122","text":"\u5360\u7528\u5185\u5b58 \u4e0d\u80fd\u76f4\u63a5\u901a\u8fc7for\u5faa\u73af\u53d6\u503c","title":"1.2.2 \u7f3a\u70b9"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/07-%E8%BF%AD%E4%BB%A3%E5%92%8C%E6%8E%A8%E5%AF%BC/#2","text":"\u53ef\u4ee5\u88ab next()\u51fd\u6570\u8c03\u7528\u5e76\u4e0d\u65ad\u8fd4\u56de\u4e0b\u4e00\u4e2a\u503c\u7684\u5bf9\u8c61\u79f0\u4e3a\u8fed\u4ee3\u5668\uff08Iterator\uff09\uff0c\u5185\u90e8\u542b\u6709 __iter__ \u65b9\u6cd5\u548c __next__ \u65b9\u6cd5\u7684\u5bf9\u8c61\u3002\u8fed\u4ee3\u5668\u6307\u7684\u662f\u8fed\u4ee3\u53d6\u503c\u7684\u5de5\u5177\uff0c\u8fed\u4ee3\u662f\u4e00\u4e2a\u91cd\u590d\u7684\u8fc7\u7a0b\uff0c\u6bcf\u6b21\u91cd\u590d\uff0c\u90fd\u662f\u57fa\u4e8e\u4e0a\u4e00\u6b21\u7684\u7ed3\u679c\u800c\u7ee7\u7eed\u7684\uff0c\u5355\u7eaf\u7684\u91cd\u590d\u5e76\u4e0d\u662f\u8fed\u4ee3\u3002","title":"2. \u8fed\u4ee3\u5668"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/07-%E8%BF%AD%E4%BB%A3%E5%92%8C%E6%8E%A8%E5%AF%BC/#21","text":"1 2 3 4 5 >>> from collections import Iterator >>> isinstance (( x for x in range ( 10 )), Iterator ) True >>> isinstance ([], Iterator ) False \u51e1\u662f\u53ef\u4f5c\u7528\u4e8e next()\u51fd\u6570\u7684\u5bf9\u8c61\u90fd\u662f Iterator \u7c7b\u578b,\u662f\u4e00\u4e2a\u60f0\u6027 \u8ba1\u7b97\u7684\u5e8f\u5217\uff1b","title":"2.1 \u5224\u65ad\u4e00\u4e2a\u5bf9\u8c61\u662f\u4e0d\u662f\u8fed\u4ee3\u5668"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/07-%E8%BF%AD%E4%BB%A3%E5%92%8C%E6%8E%A8%E5%AF%BC/#22","text":"\u65b9\u5f0f\u4e00\uff1a 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 >>> d = { 'a' : 1 , 'b' : 2 , 'c' : 3 } >>> d_iterator = d . __iter__ () >>> print ( d_iterator ) < dict_keyiterator object at 0x0000019318519598 > >>> >>> print ( d_iterator . __next__ ()) a >>> print ( d_iterator . __next__ ()) b >>> print ( d_iterator . __next__ ()) c >>> print ( d_iterator . __next__ ()) Traceback ( most recent call last ): File \"<stdin>\" , line 1 , in < module > StopIteration \u65b9\u5f0f\u4e8c\uff1a 1 2 3 >>> s = 'hello' >>> iter ( s ) < str_iterator object at 0x000002157774D898 >","title":"2.2 \u53ef\u8fed\u4ee3\u5bf9\u8c61\u8f6c\u6362\u4e3a\u8fed\u4ee3\u5668"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/07-%E8%BF%AD%E4%BB%A3%E5%92%8C%E6%8E%A8%E5%AF%BC/#23-for","text":"1 2 3 4 5 6 d = { 'a' : 1 , 'b' : 2 , 'c' : 3 } # 1\u3001d.__iter__()\u5f97\u5230\u4e00\u4e2a\u8fed\u4ee3\u5668\u5bf9\u8c61 # 2\u3001\u8fed\u4ee3\u5668\u5bf9\u8c61.__next__()\u62ff\u5230\u4e00\u4e2a\u8fd4\u56de\u503c\uff0c\u7136\u540e\u5c06\u8be5\u8fd4\u56de\u503c\u8d4b\u503c\u7ed9k # 3\u3001\u5faa\u73af\u5f80\u590d\u6b65\u9aa42\uff0c\u76f4\u5230\u629b\u51faStopIteration\u5f02\u5e38for\u5faa\u73af\u4f1a\u6355\u6349\u5f02\u5e38\u7136\u540e\u7ed3\u675f\u5faa\u73af for k in d : print ( k )","title":"2.3 for\u5faa\u73af\u7684\u5de5\u4f5c\u539f\u7406"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/07-%E8%BF%AD%E4%BB%A3%E5%92%8C%E6%8E%A8%E5%AF%BC/#24","text":"","title":"2.4 \u8fed\u4ee3\u5668\u7684\u4f18\u7f3a\u70b9"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/07-%E8%BF%AD%E4%BB%A3%E5%92%8C%E6%8E%A8%E5%AF%BC/#241","text":"\u4e3a\u5e8f\u5217\u548c\u975e\u5e8f\u5217\u7c7b\u578b\u63d0\u4f9b\u4e86\u4e00\u79cd\u7edf\u4e00\u7684\u8fed\u4ee3\u53d6\u503c\u65b9\u5f0f\u3002 \u60f0\u6027\u8ba1\u7b97\uff1a\u8fed\u4ee3\u5668\u5bf9\u8c61\u8868\u793a\u7684\u662f\u4e00\u4e2a\u6570\u636e\u6d41\uff0c\u53ef\u4ee5\u53ea\u5728\u9700\u8981\u65f6\u624d\u53bb\u8c03\u7528next\u6765\u8ba1\u7b97\u51fa\u4e00\u4e2a\u503c\uff0c\u5c31\u8fed\u4ee3\u5668\u672c\u8eab\u6765\u8bf4\uff0c\u540c\u4e00\u65f6\u523b\u5728\u5185\u5b58\u4e2d\u53ea\u6709\u4e00\u4e2a\u503c\uff0c\u56e0\u800c\u53ef\u4ee5\u5b58\u653e\u65e0\u9650\u5927\u7684\u6570\u636e\u6d41\uff0c\u800c\u5bf9\u4e8e\u5176\u4ed6\u5bb9\u5668\u7c7b\u578b\uff0c\u5982\u5217\u8868\uff0c\u9700\u8981\u628a\u6240\u6709\u7684\u5143\u7d20\u90fd\u5b58\u653e\u4e8e\u5185\u5b58\u4e2d\uff0c\u53d7\u5185\u5b58\u5927\u5c0f\u7684\u9650\u5236\uff0c\u53ef\u4ee5\u5b58\u653e\u7684\u503c\u7684\u4e2a\u6570\u662f\u6709\u9650\u7684\u3002","title":"2.4.1.\u4f18\u70b9"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/07-%E8%BF%AD%E4%BB%A3%E5%92%8C%E6%8E%A8%E5%AF%BC/#242","text":"\u9664\u975e\u53d6\u5c3d\uff0c\u5426\u5219\u65e0\u6cd5\u83b7\u53d6\u8fed\u4ee3\u5668\u7684\u957f\u5ea6 \u53ea\u80fd\u53d6\u4e0b\u4e00\u4e2a\u503c\uff0c\u4e0d\u80fd\u56de\u5230\u5f00\u59cb\uff0c\u66f4\u50cf\u662f\u2018\u4e00\u6b21\u6027\u7684\u2019\uff0c\u8fed\u4ee3\u5668\u4ea7\u751f\u540e\u7684\u552f\u4e00\u76ee\u6807\u5c31\u662f\u91cd\u590d\u6267\u884c next \u65b9\u6cd5\u76f4\u5230\u503c\u53d6\u5c3d\uff0c\u5426\u5219\u5c31\u4f1a\u505c\u7559\u5728\u67d0\u4e2a\u4f4d\u7f6e\uff0c\u7b49\u5f85\u4e0b\u4e00\u6b21\u8c03\u7528 next \uff1b\u82e5\u662f\u8981\u518d\u6b21\u8fed\u4ee3\u540c\u4e2a\u5bf9\u8c61\uff0c\u4f60\u53ea\u80fd\u91cd\u65b0\u8c03\u7528 iter \u65b9\u6cd5\u53bb\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u8fed\u4ee3\u5668\u5bf9\u8c61\uff0c\u5982\u679c\u6709\u4e24\u4e2a\u6216\u8005\u591a\u4e2a\u5faa\u73af\u4f7f\u7528\u540c\u4e00\u4e2a\u8fed\u4ee3\u5668\uff0c\u5fc5\u7136\u53ea\u4f1a\u6709\u4e00\u4e2a\u5faa\u73af\u80fd\u53d6\u5230\u503c\u3002","title":"2.4.2 \u7f3a\u70b9"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/07-%E8%BF%AD%E4%BB%A3%E5%92%8C%E6%8E%A8%E5%AF%BC/#_2","text":"\u751f\u6210\u5668\u7684\u672c\u8d28\u662f\u8fed\u4ee3\u5668\uff0c","title":"\u4e8c\u3001\u751f\u6210\u5668"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/07-%E8%BF%AD%E4%BB%A3%E5%92%8C%E6%8E%A8%E5%AF%BC/#1_1","text":"\u751f\u6210\u5668\u51fd\u6570 \u751f\u6210\u5668\u8868\u8fbe\u5f0f python\u5185\u90e8\u63d0\u4f9b","title":"1. \u751f\u6210\u5668\u7684\u83b7\u53d6\u65b9\u5f0f"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/07-%E8%BF%AD%E4%BB%A3%E5%92%8C%E6%8E%A8%E5%AF%BC/#2_1","text":"\u5982\u679c def \u5b9a\u4e49\u7684\u51fd\u6570\u4e2d\u6709 yield \uff0c\u8fd9\u4e2a\u51fd\u6570\u5c31\u662f\u751f\u6210\u5668\u51fd\u6570\uff0c\u4e0d\u518d\u662f\u666e\u901a\u51fd\u6570\u3002\u751f\u6210\u5668\u51fd\u6570\u4e2d\u53ef\u4ee5\u6709\u591a\u4e2a yield \uff0c\u4e00\u4e2a yield \u5bf9\u5e94\u4e00\u4e2a next","title":"2. \u751f\u6210\u5668\u51fd\u6570"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/07-%E8%BF%AD%E4%BB%A3%E5%92%8C%E6%8E%A8%E5%AF%BC/#21-yield","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 >>> def func (): ... print ( '\u7b2c\u4e00\u6b21' ) ... yield 1 ... print ( '\u7b2c\u4e8c\u6b21' ) ... yield 2 ... print ( '\u7b2c\u4e09\u6b21' ) ... yield 3 ... print ( '\u7b2c\u56db\u6b21' ) ... >>> g = func () >>> print ( g ) < generator object func at 0x0000019318767A98 > >>> next ( g ) \u7b2c\u4e00\u6b21 1 >>> next ( g ) \u7b2c\u4e8c\u6b21 2 >>> next ( g ) \u7b2c\u4e09\u6b21 3 >>> next ( g ) \u7b2c\u56db\u6b21 Traceback ( most recent call last ): File \"<stdin>\" , line 1 , in < module > StopIteration >>> #next() \u4f1a\u89e6\u53d1\u51fd\u6570\u4f53\u4ee3\u7801\u7684\u8fd0\u884c\uff0c\u7136\u540e\u9047\u5230yield\u505c\u4e0b\u6765\uff0c\u5c06yield\u540e\u7684\u503c ... # \u5f53\u505a\u672c\u6b21\u8c03\u7528\u7684\u7ed3\u679c\u8fd4\u56de ... \u6709\u4e86yield\u5173\u952e\u5b57\uff0c\u6211\u4eec\u5c31\u6709\u4e86\u4e00\u79cd\u81ea\u5b9a\u4e49\u8fed\u4ee3\u5668\u7684\u5b9e\u73b0\u65b9\u5f0f\u3002yield\u53ef\u4ee5\u7528\u4e8e\u8fd4\u56de\u503c\uff0c\u4f46\u4e0d\u540c\u4e8ereturn\uff0c\u51fd\u6570\u4e00\u65e6\u9047\u5230return\u5c31\u7ed3\u675f\u4e86\uff0c\u800cyield\u53ef\u4ee5\u4fdd\u5b58\u51fd\u6570\u7684\u8fd0\u884c\u72b6\u6001\u6302\u8d77\u51fd\u6570\uff0c\u7528\u6765\u8fd4\u56de\u591a\u6b21\u503c","title":"2.1 yield"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/07-%E8%BF%AD%E4%BB%A3%E5%92%8C%E6%8E%A8%E5%AF%BC/#21-yield-from","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 >>> def func (): ... l = [ 1 , 2 , 3 ] ... yield l ... >>> next ( func ()) [ 1 , 2 , 3 ] # yield from \u628a\u5217\u8868\u53d8\u6210\u8fed\u4ee3\u5668 >>> def func (): ... l = [ 1 , 2 , 3 ] ... yield from l ... >>> next ( func ()) 1","title":"2.1 yield from"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/07-%E8%BF%AD%E4%BB%A3%E5%92%8C%E6%8E%A8%E5%AF%BC/#3","text":"\u628a\u5217\u8868\u751f\u6210\u5f0f\u7684[]\u6539\u6210() 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 >>> g = ( x * x for x in range ( 10 ) if x % 3 == 0 ) >>> print ( next ( g )) 0 >>> print ( next ( g )) 9 >>> print ( next ( g )) 36 >>> print ( next ( g )) 81 >>> print ( next ( g )) Traceback ( most recent call last ): File \"<stdin>\" , line 1 , in < module > StopIteration >>> g < generator object < genexpr > at 0x0000019318767A98 >","title":"3. \u751f\u6210\u5668\u8868\u8fbe\u5f0f"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/07-%E8%BF%AD%E4%BB%A3%E5%92%8C%E6%8E%A8%E5%AF%BC/#_3","text":"","title":"\u4e09\u3001\u751f\u6210\u5f0f"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/07-%E8%BF%AD%E4%BB%A3%E5%92%8C%E6%8E%A8%E5%AF%BC/#1_2","text":"\u5217\u8868\u63a8\u5bfc\u662f\u901a\u8fc7\u5bf9\u5e8f\u5217\u4e2d\u7684\u6bcf\u4e00\u9879\u8fd0\u884c\u4e00\u4e2a\u8868\u8fbe\u5f0f\u6765\u521b\u5efa\u4e00\u4e2a\u65b0\u5217\u8868\u7684\u65b9\u6cd5\u3002","title":"1. \u5217\u8868\u751f\u6210\u5f0f"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/07-%E8%BF%AD%E4%BB%A3%E5%92%8C%E6%8E%A8%E5%AF%BC/#11_1","text":"1 2 >>> [ x ** 2 for x in range ( 1 , 11 ) ] [ 1 , 4 , 9 , 16 , 25 , 36 , 49 , 64 , 81 , 100 ]","title":"1.1  \u5faa\u73af\u6a21\u5f0f"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/07-%E8%BF%AD%E4%BB%A3%E5%92%8C%E6%8E%A8%E5%AF%BC/#22_1","text":"1 2 >>> [ x for x in range ( 1 , 11 ) if x % 2 == 0 ] [ 2 , 4 , 6 , 8 , 10 ]","title":"2.2. \u7b5b\u9009\u6a21\u5f0f"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/07-%E8%BF%AD%E4%BB%A3%E5%92%8C%E6%8E%A8%E5%AF%BC/#2_2","text":"\u573a\u666f\u4e00 1 2 3 4 >>> keys = [ 'name' , 'age' , 'gender' ] >>> dic = { key : None for key in keys } >>> print ( dic ) { 'name' : None , 'age' : None , 'gender' : None } \u573a\u666f\u4e8c 1 2 3 4 >>> items = [( 'name' , 'egon' ), ( 'age' , 18 ), ( 'gender' , 'male' )] >>> res = { k : v for k , v in items } >>> print ( res ) { 'name' : 'egon' , 'age' : 18 , 'gender' : 'male' }","title":"2. \u5b57\u5178\u751f\u6210\u5f0f"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/07-%E8%BF%AD%E4%BB%A3%E5%92%8C%E6%8E%A8%E5%AF%BC/#3_1","text":"1 2 3 4 >>> keys = [ 'name' , 'age' , 'gender' ] >>> set1 = { key for key in keys } >>> print ( set1 , type ( set1 )) { 'name' , 'age' , 'gender' } < class ' set '>","title":"3. \u96c6\u5408\u751f\u6210\u5f0f"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/08-%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86/","text":"\u5e38\u7528\u6587\u4ef6\u5904\u7406\u51fd\u6570 \u00b6 \u4e00\u3001open\u51fd\u6570 \u00b6 1. \u6253\u5f00\u6587\u4ef6 \u00b6 1 f = open ( filename , mode ) filename: \u8def\u5f84\u53ef\u4ee5\u662f\u89c9\u5f97\u8def\u5f84\u6216\u76f8\u5bf9\u8def\u5f84 mode \u8bf4\u660e r \u4ee5\u8f93\u5165\u6a21\u5f0f\u6253\u5f00\uff08\u9ed8\u8ba4\u503c\uff09 w \u4ee5\u8f93\u51fa\u6a21\u5f0f\u751f\u6210\u5e76\u6253\u5f00\u6587\u4ef6 a \u5728\u6587\u4ef6\u5c3e\u90e8\u8ffd\u52a0\u5e76\u6253\u5f00\u6587\u4ef6 b \u4e8c\u8fdb\u5236\u6570\u636e\u5904\u7406 + \u540c\u65f6\u652f\u6301\u8f93\u5165\u8f93\u51fa 2. \u8bfb\u53d6\u6587\u4ef6 \u00b6 \u65b9\u6cd5 \u63cf\u8ff0 f.read() \u628a\u6574\u4e2a\u6587\u4ef6\u8bfb\u8fdb\u4e00\u4e2a\u5b57\u7b26\u4e32 f.read(N) \u8bfb\u53d6\u63a5\u4e0b\u6765\u7684N\u4e2a\u5b57\u7b26\u5230\u4e00\u4e2a\u5b57\u7b26\u4e32 f.readline() \u8bfb\u53d6\u4e0b\u4e00\u884c\u5230\u4e00\u4e2a\u5b57\u7b26\u4e32 f.readlines() \u8bfb\u53d6\u6574\u4e2a\u6587\u4ef6\u5230\u4e00\u4e2a\u5b57\u7b26\u4e32\u5217\u8868 1 2 3 4 5 6 7 8 9 10 11 >>> f = open ( 'hello.txt' ) >>> f . read () 'hello world! \\n life is short, \\n I love Python. \\n ' >>> f = open ( 'hello.txt' ) >>> help ( f ) >>> f . read ( 3 ) 'hel' >>> f . readline () 'lo world! \\n ' >>> f . readlines () [ 'life is short, \\n ' , 'I love Python. \\n ' ] 1 2 3 4 5 6 7 8 # \u6587\u4ef6\u8fed\u4ee3\u5668\u8bfb\u53d6\u6587\u4ef6 >>> f = open ( 'hello.txt' ) >>> for line in f . readlines (): ... print ( line ) ... I love China . hello world ! 3. \u5199\u5165\u6587\u4ef6 \u00b6 \u65b9\u6cd5 \u63cf\u8ff0 f.write(String) \u628a\u5b57\u7b26\u4e32\u5199\u5165\u6587\u4ef6 f.writelines(List) \u628a\u5217\u8868\u5185\u7684\u6240\u6709\u5b57\u7b26\u4e32\u5199\u5165\u6587\u4ef6 1 2 3 4 5 6 7 8 # \u5199\u5165\u6587\u4ef6 >>> f = open ( 'hello.txt' , 'w' ) >>> L = [ 'I love China.' ] >>> f . writelines ( L ) # \u8bfb\u53d6\u6587\u4ef6 >>> f = open ( 'hello.txt' ) >>> f . read () 'I love China.' 4. \u5173\u95ed\u6587\u4ef6 \u00b6 1 f . close () \u4e09\u3001xml \u00b6 XML \u6307\u53ef\u6269\u5c55\u6807\u8bb0\u8bed\u8a00\uff08EXtensible Markup Language\uff09\uff0cXML \u88ab\u8bbe\u8ba1\u7528\u6765\u4f20\u8f93\u548c\u5b58\u50a8\u6570\u636e\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 <bookstore> <book category= \"COOKING\" > <title lang= \"en\" > Everyday Italian </title> <author> Giada De Laurentiis </author> <year> 2005 </year> <price> 30.00 </price> </book> <book category= \"WEB\" > <title lang= \"en\" > Learning XML </title> <author> Erik T. Ray </author> <year> 2003 </year> <price> 39.95 </price> </book> </bookstore> 1. xml\u57fa\u7840 \u00b6 1. \u5143\u7d20 \u00b6 \u6839\u5143\u7d20\u662f <bookstore> <book> \u5143\u7d20\u6709 4 \u4e2a\u5b50\u5143\u7d20\uff1a <title> \u3001 < author> \u3001 <year> \u3001 <price> \u3002 \u5143\u7d20\u7684\u547d\u540d\u89c4\u5219 \u540d\u79f0\u53ef\u4ee5\u542b\u5b57\u6bcd\u3001\u6570\u5b57\u4ee5\u53ca\u5176\u4ed6\u7684\u5b57\u7b26 \u540d\u79f0\u4e0d\u80fd\u4ee5\u6570\u5b57\u6216\u8005\u6807\u70b9\u7b26\u53f7\u5f00\u59cb \u540d\u79f0\u4e0d\u80fd\u4ee5\u5b57\u7b26 \u201cxml\u201d\uff08\u6216\u8005 XML\u3001Xml\uff09\u5f00\u59cb \u540d\u79f0\u4e0d\u80fd\u5305\u542b\u7a7a\u683c 2. \u5c5e\u6027 \u00b6 lang=\"en\" \u53eb\u5c5e\u6027\uff0cXML \u7684\u5c5e\u6027\u503c\u987b\u52a0\u5f15\u53f7 3. \u6ce8\u91ca \u00b6 1 <!-- This is a comment --> 4. \u5b9e\u4f53\u5f15\u7528 \u00b6 \u5b9e\u4f53\u5f15\u7528 \u542b\u4e49 &lt; < &gt; > &amp; & &apos; ' &quot; \" 2. The ElementTree XML API \u00b6 python\u6709\u4e09\u79cd\u65b9\u6cd5\u89e3\u6790XML\uff1aSAX\uff0cDOM\uff0c\u4ee5\u53caElementTree\u3002ElementTree\u5c31\u50cf\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u7684DOM\uff0c\u5177\u6709\u65b9\u4fbf\u53cb\u597d\u7684API\u3002\u4ee3\u7801\u53ef\u7528\u6027\u597d\uff0c\u901f\u5ea6\u5feb\uff0c\u6d88\u8017\u5185\u5b58\u5c11\u3002 country_data.xml\u6587\u4ef6\u5185\u5bb9\u5982\u4e0b 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 <?xml version=\"1.0\"?> <data> <country name= \"Liechtenstein\" > <rank> 1 </rank> <year> 2008 </year> <gdppc> 141100 </gdppc> <neighbor name= \"Austria\" direction= \"E\" /> <neighbor name= \"Switzerland\" direction= \"W\" /> </country> <country name= \"Singapore\" > <rank> 4 </rank> <year> 2011 </year> <gdppc> 59900 </gdppc> <neighbor name= \"Malaysia\" direction= \"N\" /> </country> <country name= \"Panama\" > <rank> 68 </rank> <year> 2011 </year> <gdppc> 13600 </gdppc> <neighbor name= \"Costa Rica\" direction= \"W\" /> <neighbor name= \"Colombia\" direction= \"E\" /> </country> </data> 1. \u83b7\u53d6\u5185\u5bb9 \u00b6 1. \u8bfb\u53d6xml \u00b6 \u65b9\u6cd5\u4e00\uff1a\u4ece\u6587\u4ef6\u4e2d\u8bfb\u53d6 1 2 3 import xml.etree.ElementTree as ET tree = ET . parse ( 'country_data.xml' ) root = tree . getroot () \u65b9\u6cd5\u4e8c\uff1a\u4ece\u5b57\u7b26\u4e32\u8bfb\u53d6 1 2 3 import xml.etree.ElementTree as ET country_data_as_string = '\u6587\u4ef6\u5185\u5bb9' root = ET . fromstring ( country_data_as_string ) 2. \u83b7\u53d6\u5143\u7d20\u7684\u6807\u7b7e\u540d\u79f0 .tag \u00b6 1 2 >>> root . tag 'data' 3. \u83b7\u53d6\u5143\u7d20\u7684\u5c5e\u6027 .attrib \u00b6 1 2 >>> root . attrib {} 4.\u83b7\u53d6\u5143\u7d20\u7684\u5185\u5bb9 .text \u00b6 1 2 >>> root [ 0 ][ 1 ] . text '2008' 5.\u83b7\u53d6\u5c5e\u6027\u7684\u503c .get \u00b6 1 2 >>> root [ 0 ] . get ( \"name\" ) 'Liechtenstein' 6. \u904d\u5386\u5b50\u5143\u7d20 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 >>> for child in root : ... print ( child ) ... < Element 'country' at 0x0000012451A447C8 > < Element 'country' at 0x0000012451D31408 > < Element 'country' at 0x0000012451D31598 > >>> for child in root : ... print ( \"\u5b50\u5143\u7d20\u6807\u7b7e\uff1a\" , child . tag , \"\u5c5e\u6027\uff1a\" , child . attrib ) ... \u5b50\u5143\u7d20\u6807\u7b7e\uff1a country \u5c5e\u6027\uff1a { 'name' : 'Liechtenstein' } \u5b50\u5143\u7d20\u6807\u7b7e\uff1a country \u5c5e\u6027\uff1a { 'name' : 'Singapore' } \u5b50\u5143\u7d20\u6807\u7b7e\uff1a country \u5c5e\u6027\uff1a { 'name' : 'Panama' } 7. \u904d\u5386\u6307\u5b9a\u5143\u7d20 .iter() \u00b6 1 2 3 4 5 6 7 8 >>> for neighbor in root . iter ( \"neighbor\" ): ... print ( neighbor . attrib ) ... { 'name' : 'Austria' , 'direction' : 'E' } { 'name' : 'Switzerland' , 'direction' : 'W' } { 'name' : 'Malaysia' , 'direction' : 'N' } { 'name' : 'Costa Rica' , 'direction' : 'W' } { 'name' : 'Colombia' , 'direction' : 'E' } 8.\u67e5\u627e\u5143\u7d20 findall \u548c find \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 # findall \u67e5\u627e\u6307\u5b9a\u6807\u7b7e\u7684\u5143\u7d20 >>> for child in root . findall ( \"country\" ): ... print ( child ) ... < Element 'country' at 0x0000012451A447C8 > < Element 'country' at 0x0000012451D31408 > < Element 'country' at 0x0000012451D31598 > # find \u67e5\u627e\u6307\u5b9a\u6807\u7b7e\u4e0b\u7684\u7684\u5b50\u5143\u7d20 >>> for child in root . find ( \"country\" ): ... print ( child ) ... < Element 'rank' at 0x0000012451B42728 > < Element 'year' at 0x0000012451D17B38 > < Element 'gdppc' at 0x0000012451D17B88 > < Element 'neighbor' at 0x0000012451D2C278 > < Element 'neighbor' at 0x0000012451D313B8 > 2. \u4fee\u6539\u5185\u5bb9 \u00b6 1. \u4fee\u6539 .set \u00b6 1 2 3 4 5 6 7 >>> root [ 0 ][ 1 ] . text '2008' # \u91cd\u65b0\u526f\u804c >>> root [ 0 ][ 1 ] . text = '2018' >>> root [ 0 ][ 1 ] . set ( 'updated' , 'yes' ) KeyboardInterrupt >>> tree . write ( 'output.xml' ) 2. \u5220\u9664 .remove \u00b6 1 2 3 4 5 >>> for child in root . findall ( \"country\" ): ... if child . attrib [ 'name' ] == 'Liechtenstein' : ... root . remove ( child ) ... >>> tree . write ( 'output.xml' ) 3.\u901a\u8fc7XPath\u5b9a\u4f4d\u5143\u7d20 \u00b6 \u8bed\u6cd5 \u542b\u4e49 tag \u9009\u62e9\u5177\u6709\u7ed9\u5b9a\u6807\u7b7e\u7684\u6240\u6709\u5b50\u5143\u7d20 * \u9009\u62e9\u6240\u6709\u5b50\u5143\u7d20 . \u9009\u62e9\u5f53\u524d\u5143\u7d20\u3002\u5728xpath\u8868\u8fbe\u5f0f\u5f00\u5934\u4f7f\u7528\uff0c\u8868\u793a\u76f8\u5bf9\u8def\u5f84\u3002 // \u9009\u62e9\u5f53\u524d\u5143\u7d20\u4e0b\u6240\u6709\u7ea7\u522b\u7684\u6240\u6709\u5b50\u5143\u7d20 .. \u9009\u62e9\u7236\u5143\u7d20 [@attrib] \u9009\u62e9\u5177\u6709\u7ed9\u5b9a\u5c5e\u6027\u7684\u6240\u6709\u5143\u7d20,\u5728\u540c\u7ea7\u4e0b\u9009\u53d6\uff0c\u5e76\u4e14\u4e0d\u5411\u5b50\u4ee3\u67e5\u627e [@attrib='value'] \u9009\u62e9\u6307\u5b9a\u5c5e\u6027attrib\u5177\u6709\u6307\u5b9a\u503cvalue\u7684\u5143\u7d20 [tag] \u9009\u62e9\u6240\u6709\u5177\u6709\u540d\u4e3atag\u7684\u5b50\u5143\u7d20\u7684\u5143\u7d20 [tag='text'] \u9009\u62e9\u5143\u7d20\uff08\u6216\u5176\u5b50\u5143\u7d20\uff09\u540d\u4e3atag\uff0c\u5b8c\u6574\u6587\u672c\u5185\u5bb9\u4e3a\u6307\u5b9a\u7684\u503ctext\u7684\u5143\u7d20\u3002 [position] \u9009\u62e9\u4f4d\u4e8e\u7ed9\u5b9a\u4f4d\u7f6e\u7684\u6240\u6709\u5143\u7d20\u3002\u8be5\u4f4d\u7f6e\u53ef\u4ee5\u662f\u6574\u6570\uff081\u662f\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\uff09\uff0c\u8868\u8fbe\u5f0flast()\u7528\u4e8e\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u4e5f\u53ef\u4ee5\u662f\u76f8\u5bf9\u4e8e\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e\u7684\u4f4d\u7f6e\uff08\u4f8b\u5982last()-1\uff09 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 >>> root . findall ( './country/year' ) [ < Element 'year' at 0x0000012451D17B38 > , < Element 'year' at 0x0000012451D31C28 > , < Element 'year' at 0x0000012451D31DB8 > ] # \u5728\u6240\u6709\u5b50\u5143\u7d20\u4e2d\u9009\u62e9 >>> for year in root . findall ( '*/year' ): ... print ( year . text ) ... 2008 2011 2011 # .. \u8868\u793a\u9009\u62e9\u7236\u5143\u7d20\uff08\u4e0a\u4e00\u7ea7\uff09 >>> root . findall ( './country/..' )[ 0 ] . tag 'data' # \u9009\u62e9\u5177\u6709\u7ed9\u5b9a\u5c5e\u6027\u7684\u6240\u6709\u5143\u7d20 >>> root . findall ( './country/[@name]' ) [ < Element 'country' at 0x0000012451D2C278 > , < Element 'country' at 0x0000012451D317C8 > , < Element 'country' at 0x0000012451D31D18 > ] # \u9009\u62e9\u6307\u5b9a\u5c5e\u6027attrib\u5177\u6709\u6307\u5b9a\u503cvalue\u7684\u5143\u7d20 >>> root . findall ( './country/[@name=\"Panama\"]' ) [ < Element 'country' at 0x0000012451D31D18 > ] # \u9009\u62e9\u6240\u6709\u5177\u6709\u540d\u4e3atag\u7684\u5b50\u5143\u7d20\u7684\u5143\u7d20 >>> root . findall ( './country/[year]' ) [ < Element 'country' at 0x0000012451D2C278 > , < Element 'country' at 0x0000012451D317C8 > , < Element 'country' at 0x0000012451D31D18 > ] # \u9009\u62e9\u5143\u7d20\uff08\u6216\u5176\u5b50\u5143\u7d20\uff09\u540d\u4e3atag\uff0c\u5b8c\u6574\u6587\u672c\u5185\u5bb9\u4e3a\u6307\u5b9a\u7684\u503ctext\u7684\u5143\u7d20\u3002 >>> root . findall ( \"./country/[year='2008']\" ) [ < Element 'country' at 0x0000012451D2C278 > ] \u56db\u3001configparser\u6a21\u5757 \u00b6 \u914d\u7f6e\u6587\u4ef6\u89e3\u6790\u5668 1. \u521b\u5efa\u914d\u7f6e\u6587\u4ef6 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 import configparser config = configparser . ConfigParser () config [ \"DEFAULT\" ] = { 'user' : 'ubuntu' , 'port' : '22' } config [ 'web' ] = {} config [ 'web' ][ 'manage' ] = 'manageweb' config [ 'api' ] = {} api = config [ 'api' ] api [ 'manage' ] = 'manage.war' with open ( 'test.conf' , 'w' ) as configfile : config . write ( configfile ) \u521b\u5efa\u597d\u7684\u914d\u7f6e\u6587\u4ef6 1 2 3 4 5 6 7 8 9 10 $ cat test.conf [ DEFAULT ] user = ubuntu port = 22 [ web ] manage = manageweb [ api ] manage = manage.war 2. \u8bfb\u53d6\u914d\u7f6e\u6587\u4ef6 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 import configparser config = configparser . ConfigParser () # \u8bfb\u53d6\u914d\u7f6e\u6587\u4ef6 config . read ( 'test.conf' ) # \u67e5\u770b\u914d\u7f6e\u6587\u4ef6\u4e2d\u7684\u7ae0\u8282\uff0c\u4e0d\u5305\u542bDEFAULT print ( config . sections ()) # \u67e5\u770b\u67d0\u4e00\u4e2a\u914d\u7f6e\u7684\u503c print ( config [ 'api' ][ 'manage' ]) # \u5224\u65ad\u7ae0\u8282\u662f\u5426\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u5b58\u5728 print ( 'db' in config ) # \u7528get\u8bfb\u53d6\u503c print ( config [ 'DEFAULT' ] . get ( 'port' )) # \u6216 print ( config . get ( 'api' , 'manage' )) # \u5982\u679c\u6ca1\u6709get\u5230\uff0c\u8fd4\u56de\u4e00\u4e2a\u6307\u5b9a\u7684\u503c print ( config . get ( 'test' , 'test' , fallback = 'not find' )) \u6267\u884c\u7ed3\u679c 1 2 3 4 5 6 7 $ python3 test.py [ 'web' , 'api' ] manage.war False 22 manage.war not find 3. \u4fee\u6539\u914d\u7f6e\u6587\u4ef6 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 import configparser import configparser config = configparser . ConfigParser () # \u8bfb\u53d6\u914d\u7f6e\u6587\u4ef6 config . read ( 'test.conf' ) # \u6dfb\u52a0\u4e00\u4e2a\u7ae0\u8282 config . add_section ( 'mysql' ) # \u6dfb\u52a0\u4e00\u4e2a\u952e\u503c\u5bf9 config . set ( 'mysql' , 'host' , '127.0.0.1' ) # \u4fdd\u5b58\u5230\u6587\u4ef6\u4e2d config . write ( open ( 'test.conf' , 'w' )) \u4e94\u3001cvs \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 import csv # \u5199\u5165 # \u4e3a\u4e86\u4fdd\u8bc1WindowLinux\u548c\u884c\u5c3e\u7684\u7b26\u53f7\u4e00\u81f4\uff0c\u6700\u597d\u7684\u52a0\u4e0anewline='' with open ( 'hosts.csv' , 'w' , newline = '' ) as hostsfile : # \u5b9a\u4e49\u5b57\u7b26\u76f4\u63a5\u7684\u5206\u5272\u7b26\u4e3a\u7a7a\u683c\uff08delimiter=' '\uff09 # writer = csv.writer(hostsfile, delimiter=' ') writer = csv . writer ( hostsfile ,) # \u5199\u5165\u4e00\u884c writer . writerow ([ 'IP' , 'username' , 'password' ]) writer . writerow ([ '192.168.1.10' , 'root' , '123456' ]) # \u5199\u5165\u591a\u884c\uff0c\u4f20\u5165\u53c2\u6570\u4e3a\u4e00\u4e2a\u5d4c\u5957\u5143\u7ec4\uff0c\u6bcf\u4e00\u884c\u90fd\u5b58\u5728\u5728\u4e00\u4e2a\u5143\u7ec4\u4e2d writer . writerows ([[ '192.168.1.11' , 'admin' , '123456' ], [ '192.168.1.12' , 'admin' , '123456' ]]) # \u8bfb with open ( 'hosts.csv' , newline = '' ) as hostsfile : reader = csv . reader ( hostsfile , delimiter = ' ' ) for row in reader : print ( row ) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 import csv # \u4f7f\u7528\u7c7b\u65b9\u6cd5\u64cd\u4f5c # \u5199\u5165 with open ( 'hosts.csv' , 'w' , newline = '' ) as hostsfile : fieldnames = [ 'IP' , 'username' , 'password' , 'port' ] # \u8bbe\u7f6e\u201c\u6807\u9898\u201d writer = csv . DictWriter ( hostsfile , fieldnames = fieldnames ) # \u5199\u5165\u6807\u9898 writer . writeheader () # \u53c2\u6570\u683c\u5f0f\u5fc5\u987b\u662f\u4e00\u4e2a\u5b57\u5178, # \u5199\u5165\u5355\u884c writer . writerow ({ 'IP' : '192.168.1.10' , 'username' : 'root' , 'password' : '123456' , 'port' : '22' }) # \u5199\u5165\u591a\u884c,\u4f20\u5165\u7684\u53c2\u6570\u5fc5\u987b\u662f\u4e00\u4e2a\u53ef\u8fed\u4ee3\u5bf9\u8c61\uff0c\u91cc\u9762\u7684\u5143\u7d20\u662f\u5b57\u5178\u683c\u5f0f\u7684\uff0c\u8fd9\u91cc\u7528\u5143\u7ec4 writer . writerows ([{ 'IP' : '192.168.1.11' , 'username' : 'root' , 'password' : '123456' , 'port' : '22' }, { 'IP' : '192.168.1.12' , 'username' : 'root' , 'password' : '123456' , 'port' : '22' }]) # \u8bfb\u53d6 # with open ( 'hosts.csv' , newline = '' ) as hostsfile : reader = csv . DictReader ( hostsfile ) for row in reader : # \u8fd4\u56de\u7ed3\u679c\u4e3a\u5b57\u5178\u683c\u5f0f print ( row )","title":"\u6587\u4ef6\u5904\u7406"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/08-%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86/#_1","text":"","title":"\u5e38\u7528\u6587\u4ef6\u5904\u7406\u51fd\u6570"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/08-%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86/#open","text":"","title":"\u4e00\u3001open\u51fd\u6570"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/08-%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86/#1","text":"1 f = open ( filename , mode ) filename: \u8def\u5f84\u53ef\u4ee5\u662f\u89c9\u5f97\u8def\u5f84\u6216\u76f8\u5bf9\u8def\u5f84 mode \u8bf4\u660e r \u4ee5\u8f93\u5165\u6a21\u5f0f\u6253\u5f00\uff08\u9ed8\u8ba4\u503c\uff09 w \u4ee5\u8f93\u51fa\u6a21\u5f0f\u751f\u6210\u5e76\u6253\u5f00\u6587\u4ef6 a \u5728\u6587\u4ef6\u5c3e\u90e8\u8ffd\u52a0\u5e76\u6253\u5f00\u6587\u4ef6 b \u4e8c\u8fdb\u5236\u6570\u636e\u5904\u7406 + \u540c\u65f6\u652f\u6301\u8f93\u5165\u8f93\u51fa","title":"1. \u6253\u5f00\u6587\u4ef6"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/08-%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86/#2","text":"\u65b9\u6cd5 \u63cf\u8ff0 f.read() \u628a\u6574\u4e2a\u6587\u4ef6\u8bfb\u8fdb\u4e00\u4e2a\u5b57\u7b26\u4e32 f.read(N) \u8bfb\u53d6\u63a5\u4e0b\u6765\u7684N\u4e2a\u5b57\u7b26\u5230\u4e00\u4e2a\u5b57\u7b26\u4e32 f.readline() \u8bfb\u53d6\u4e0b\u4e00\u884c\u5230\u4e00\u4e2a\u5b57\u7b26\u4e32 f.readlines() \u8bfb\u53d6\u6574\u4e2a\u6587\u4ef6\u5230\u4e00\u4e2a\u5b57\u7b26\u4e32\u5217\u8868 1 2 3 4 5 6 7 8 9 10 11 >>> f = open ( 'hello.txt' ) >>> f . read () 'hello world! \\n life is short, \\n I love Python. \\n ' >>> f = open ( 'hello.txt' ) >>> help ( f ) >>> f . read ( 3 ) 'hel' >>> f . readline () 'lo world! \\n ' >>> f . readlines () [ 'life is short, \\n ' , 'I love Python. \\n ' ] 1 2 3 4 5 6 7 8 # \u6587\u4ef6\u8fed\u4ee3\u5668\u8bfb\u53d6\u6587\u4ef6 >>> f = open ( 'hello.txt' ) >>> for line in f . readlines (): ... print ( line ) ... I love China . hello world !","title":"2. \u8bfb\u53d6\u6587\u4ef6"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/08-%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86/#3","text":"\u65b9\u6cd5 \u63cf\u8ff0 f.write(String) \u628a\u5b57\u7b26\u4e32\u5199\u5165\u6587\u4ef6 f.writelines(List) \u628a\u5217\u8868\u5185\u7684\u6240\u6709\u5b57\u7b26\u4e32\u5199\u5165\u6587\u4ef6 1 2 3 4 5 6 7 8 # \u5199\u5165\u6587\u4ef6 >>> f = open ( 'hello.txt' , 'w' ) >>> L = [ 'I love China.' ] >>> f . writelines ( L ) # \u8bfb\u53d6\u6587\u4ef6 >>> f = open ( 'hello.txt' ) >>> f . read () 'I love China.'","title":"3. \u5199\u5165\u6587\u4ef6"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/08-%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86/#4","text":"1 f . close ()","title":"4. \u5173\u95ed\u6587\u4ef6"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/08-%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86/#xml","text":"XML \u6307\u53ef\u6269\u5c55\u6807\u8bb0\u8bed\u8a00\uff08EXtensible Markup Language\uff09\uff0cXML \u88ab\u8bbe\u8ba1\u7528\u6765\u4f20\u8f93\u548c\u5b58\u50a8\u6570\u636e\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 <bookstore> <book category= \"COOKING\" > <title lang= \"en\" > Everyday Italian </title> <author> Giada De Laurentiis </author> <year> 2005 </year> <price> 30.00 </price> </book> <book category= \"WEB\" > <title lang= \"en\" > Learning XML </title> <author> Erik T. Ray </author> <year> 2003 </year> <price> 39.95 </price> </book> </bookstore>","title":"\u4e09\u3001xml"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/08-%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86/#1-xml","text":"","title":"1. xml\u57fa\u7840"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/08-%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86/#1_1","text":"\u6839\u5143\u7d20\u662f <bookstore> <book> \u5143\u7d20\u6709 4 \u4e2a\u5b50\u5143\u7d20\uff1a <title> \u3001 < author> \u3001 <year> \u3001 <price> \u3002 \u5143\u7d20\u7684\u547d\u540d\u89c4\u5219 \u540d\u79f0\u53ef\u4ee5\u542b\u5b57\u6bcd\u3001\u6570\u5b57\u4ee5\u53ca\u5176\u4ed6\u7684\u5b57\u7b26 \u540d\u79f0\u4e0d\u80fd\u4ee5\u6570\u5b57\u6216\u8005\u6807\u70b9\u7b26\u53f7\u5f00\u59cb \u540d\u79f0\u4e0d\u80fd\u4ee5\u5b57\u7b26 \u201cxml\u201d\uff08\u6216\u8005 XML\u3001Xml\uff09\u5f00\u59cb \u540d\u79f0\u4e0d\u80fd\u5305\u542b\u7a7a\u683c","title":"1. \u5143\u7d20"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/08-%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86/#2_1","text":"lang=\"en\" \u53eb\u5c5e\u6027\uff0cXML \u7684\u5c5e\u6027\u503c\u987b\u52a0\u5f15\u53f7","title":"2. \u5c5e\u6027"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/08-%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86/#3_1","text":"1 <!-- This is a comment -->","title":"3. \u6ce8\u91ca"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/08-%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86/#4_1","text":"\u5b9e\u4f53\u5f15\u7528 \u542b\u4e49 &lt; < &gt; > &amp; & &apos; ' &quot; \"","title":"4. \u5b9e\u4f53\u5f15\u7528"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/08-%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86/#2-the-elementtree-xml-api","text":"python\u6709\u4e09\u79cd\u65b9\u6cd5\u89e3\u6790XML\uff1aSAX\uff0cDOM\uff0c\u4ee5\u53caElementTree\u3002ElementTree\u5c31\u50cf\u4e00\u4e2a\u8f7b\u91cf\u7ea7\u7684DOM\uff0c\u5177\u6709\u65b9\u4fbf\u53cb\u597d\u7684API\u3002\u4ee3\u7801\u53ef\u7528\u6027\u597d\uff0c\u901f\u5ea6\u5feb\uff0c\u6d88\u8017\u5185\u5b58\u5c11\u3002 country_data.xml\u6587\u4ef6\u5185\u5bb9\u5982\u4e0b 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 <?xml version=\"1.0\"?> <data> <country name= \"Liechtenstein\" > <rank> 1 </rank> <year> 2008 </year> <gdppc> 141100 </gdppc> <neighbor name= \"Austria\" direction= \"E\" /> <neighbor name= \"Switzerland\" direction= \"W\" /> </country> <country name= \"Singapore\" > <rank> 4 </rank> <year> 2011 </year> <gdppc> 59900 </gdppc> <neighbor name= \"Malaysia\" direction= \"N\" /> </country> <country name= \"Panama\" > <rank> 68 </rank> <year> 2011 </year> <gdppc> 13600 </gdppc> <neighbor name= \"Costa Rica\" direction= \"W\" /> <neighbor name= \"Colombia\" direction= \"E\" /> </country> </data>","title":"2. The ElementTree XML API"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/08-%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86/#1_2","text":"","title":"1. \u83b7\u53d6\u5185\u5bb9"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/08-%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86/#1-xml_1","text":"\u65b9\u6cd5\u4e00\uff1a\u4ece\u6587\u4ef6\u4e2d\u8bfb\u53d6 1 2 3 import xml.etree.ElementTree as ET tree = ET . parse ( 'country_data.xml' ) root = tree . getroot () \u65b9\u6cd5\u4e8c\uff1a\u4ece\u5b57\u7b26\u4e32\u8bfb\u53d6 1 2 3 import xml.etree.ElementTree as ET country_data_as_string = '\u6587\u4ef6\u5185\u5bb9' root = ET . fromstring ( country_data_as_string )","title":"1. \u8bfb\u53d6xml"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/08-%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86/#2-tag","text":"1 2 >>> root . tag 'data'","title":"2. \u83b7\u53d6\u5143\u7d20\u7684\u6807\u7b7e\u540d\u79f0 .tag"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/08-%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86/#3-attrib","text":"1 2 >>> root . attrib {}","title":"3. \u83b7\u53d6\u5143\u7d20\u7684\u5c5e\u6027 .attrib"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/08-%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86/#4-text","text":"1 2 >>> root [ 0 ][ 1 ] . text '2008'","title":"4.\u83b7\u53d6\u5143\u7d20\u7684\u5185\u5bb9 .text"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/08-%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86/#5get","text":"1 2 >>> root [ 0 ] . get ( \"name\" ) 'Liechtenstein'","title":"5.\u83b7\u53d6\u5c5e\u6027\u7684\u503c.get"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/08-%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86/#6","text":"1 2 3 4 5 6 7 8 9 10 11 12 >>> for child in root : ... print ( child ) ... < Element 'country' at 0x0000012451A447C8 > < Element 'country' at 0x0000012451D31408 > < Element 'country' at 0x0000012451D31598 > >>> for child in root : ... print ( \"\u5b50\u5143\u7d20\u6807\u7b7e\uff1a\" , child . tag , \"\u5c5e\u6027\uff1a\" , child . attrib ) ... \u5b50\u5143\u7d20\u6807\u7b7e\uff1a country \u5c5e\u6027\uff1a { 'name' : 'Liechtenstein' } \u5b50\u5143\u7d20\u6807\u7b7e\uff1a country \u5c5e\u6027\uff1a { 'name' : 'Singapore' } \u5b50\u5143\u7d20\u6807\u7b7e\uff1a country \u5c5e\u6027\uff1a { 'name' : 'Panama' }","title":"6. \u904d\u5386\u5b50\u5143\u7d20"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/08-%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86/#7-iter","text":"1 2 3 4 5 6 7 8 >>> for neighbor in root . iter ( \"neighbor\" ): ... print ( neighbor . attrib ) ... { 'name' : 'Austria' , 'direction' : 'E' } { 'name' : 'Switzerland' , 'direction' : 'W' } { 'name' : 'Malaysia' , 'direction' : 'N' } { 'name' : 'Costa Rica' , 'direction' : 'W' } { 'name' : 'Colombia' , 'direction' : 'E' }","title":"7. \u904d\u5386\u6307\u5b9a\u5143\u7d20.iter()"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/08-%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86/#8findallfind","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 # findall \u67e5\u627e\u6307\u5b9a\u6807\u7b7e\u7684\u5143\u7d20 >>> for child in root . findall ( \"country\" ): ... print ( child ) ... < Element 'country' at 0x0000012451A447C8 > < Element 'country' at 0x0000012451D31408 > < Element 'country' at 0x0000012451D31598 > # find \u67e5\u627e\u6307\u5b9a\u6807\u7b7e\u4e0b\u7684\u7684\u5b50\u5143\u7d20 >>> for child in root . find ( \"country\" ): ... print ( child ) ... < Element 'rank' at 0x0000012451B42728 > < Element 'year' at 0x0000012451D17B38 > < Element 'gdppc' at 0x0000012451D17B88 > < Element 'neighbor' at 0x0000012451D2C278 > < Element 'neighbor' at 0x0000012451D313B8 >","title":"8.\u67e5\u627e\u5143\u7d20findall\u548cfind"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/08-%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86/#2_2","text":"","title":"2. \u4fee\u6539\u5185\u5bb9"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/08-%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86/#1-set","text":"1 2 3 4 5 6 7 >>> root [ 0 ][ 1 ] . text '2008' # \u91cd\u65b0\u526f\u804c >>> root [ 0 ][ 1 ] . text = '2018' >>> root [ 0 ][ 1 ] . set ( 'updated' , 'yes' ) KeyboardInterrupt >>> tree . write ( 'output.xml' )","title":"1. \u4fee\u6539.set"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/08-%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86/#2-remove","text":"1 2 3 4 5 >>> for child in root . findall ( \"country\" ): ... if child . attrib [ 'name' ] == 'Liechtenstein' : ... root . remove ( child ) ... >>> tree . write ( 'output.xml' )","title":"2. \u5220\u9664.remove"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/08-%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86/#3xpath","text":"\u8bed\u6cd5 \u542b\u4e49 tag \u9009\u62e9\u5177\u6709\u7ed9\u5b9a\u6807\u7b7e\u7684\u6240\u6709\u5b50\u5143\u7d20 * \u9009\u62e9\u6240\u6709\u5b50\u5143\u7d20 . \u9009\u62e9\u5f53\u524d\u5143\u7d20\u3002\u5728xpath\u8868\u8fbe\u5f0f\u5f00\u5934\u4f7f\u7528\uff0c\u8868\u793a\u76f8\u5bf9\u8def\u5f84\u3002 // \u9009\u62e9\u5f53\u524d\u5143\u7d20\u4e0b\u6240\u6709\u7ea7\u522b\u7684\u6240\u6709\u5b50\u5143\u7d20 .. \u9009\u62e9\u7236\u5143\u7d20 [@attrib] \u9009\u62e9\u5177\u6709\u7ed9\u5b9a\u5c5e\u6027\u7684\u6240\u6709\u5143\u7d20,\u5728\u540c\u7ea7\u4e0b\u9009\u53d6\uff0c\u5e76\u4e14\u4e0d\u5411\u5b50\u4ee3\u67e5\u627e [@attrib='value'] \u9009\u62e9\u6307\u5b9a\u5c5e\u6027attrib\u5177\u6709\u6307\u5b9a\u503cvalue\u7684\u5143\u7d20 [tag] \u9009\u62e9\u6240\u6709\u5177\u6709\u540d\u4e3atag\u7684\u5b50\u5143\u7d20\u7684\u5143\u7d20 [tag='text'] \u9009\u62e9\u5143\u7d20\uff08\u6216\u5176\u5b50\u5143\u7d20\uff09\u540d\u4e3atag\uff0c\u5b8c\u6574\u6587\u672c\u5185\u5bb9\u4e3a\u6307\u5b9a\u7684\u503ctext\u7684\u5143\u7d20\u3002 [position] \u9009\u62e9\u4f4d\u4e8e\u7ed9\u5b9a\u4f4d\u7f6e\u7684\u6240\u6709\u5143\u7d20\u3002\u8be5\u4f4d\u7f6e\u53ef\u4ee5\u662f\u6574\u6570\uff081\u662f\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\uff09\uff0c\u8868\u8fbe\u5f0flast()\u7528\u4e8e\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u4e5f\u53ef\u4ee5\u662f\u76f8\u5bf9\u4e8e\u6700\u540e\u4e00\u4e2a\u4f4d\u7f6e\u7684\u4f4d\u7f6e\uff08\u4f8b\u5982last()-1\uff09 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 >>> root . findall ( './country/year' ) [ < Element 'year' at 0x0000012451D17B38 > , < Element 'year' at 0x0000012451D31C28 > , < Element 'year' at 0x0000012451D31DB8 > ] # \u5728\u6240\u6709\u5b50\u5143\u7d20\u4e2d\u9009\u62e9 >>> for year in root . findall ( '*/year' ): ... print ( year . text ) ... 2008 2011 2011 # .. \u8868\u793a\u9009\u62e9\u7236\u5143\u7d20\uff08\u4e0a\u4e00\u7ea7\uff09 >>> root . findall ( './country/..' )[ 0 ] . tag 'data' # \u9009\u62e9\u5177\u6709\u7ed9\u5b9a\u5c5e\u6027\u7684\u6240\u6709\u5143\u7d20 >>> root . findall ( './country/[@name]' ) [ < Element 'country' at 0x0000012451D2C278 > , < Element 'country' at 0x0000012451D317C8 > , < Element 'country' at 0x0000012451D31D18 > ] # \u9009\u62e9\u6307\u5b9a\u5c5e\u6027attrib\u5177\u6709\u6307\u5b9a\u503cvalue\u7684\u5143\u7d20 >>> root . findall ( './country/[@name=\"Panama\"]' ) [ < Element 'country' at 0x0000012451D31D18 > ] # \u9009\u62e9\u6240\u6709\u5177\u6709\u540d\u4e3atag\u7684\u5b50\u5143\u7d20\u7684\u5143\u7d20 >>> root . findall ( './country/[year]' ) [ < Element 'country' at 0x0000012451D2C278 > , < Element 'country' at 0x0000012451D317C8 > , < Element 'country' at 0x0000012451D31D18 > ] # \u9009\u62e9\u5143\u7d20\uff08\u6216\u5176\u5b50\u5143\u7d20\uff09\u540d\u4e3atag\uff0c\u5b8c\u6574\u6587\u672c\u5185\u5bb9\u4e3a\u6307\u5b9a\u7684\u503ctext\u7684\u5143\u7d20\u3002 >>> root . findall ( \"./country/[year='2008']\" ) [ < Element 'country' at 0x0000012451D2C278 > ]","title":"3.\u901a\u8fc7XPath\u5b9a\u4f4d\u5143\u7d20"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/08-%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86/#configparser","text":"\u914d\u7f6e\u6587\u4ef6\u89e3\u6790\u5668","title":"\u56db\u3001configparser\u6a21\u5757"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/08-%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86/#1_3","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 import configparser config = configparser . ConfigParser () config [ \"DEFAULT\" ] = { 'user' : 'ubuntu' , 'port' : '22' } config [ 'web' ] = {} config [ 'web' ][ 'manage' ] = 'manageweb' config [ 'api' ] = {} api = config [ 'api' ] api [ 'manage' ] = 'manage.war' with open ( 'test.conf' , 'w' ) as configfile : config . write ( configfile ) \u521b\u5efa\u597d\u7684\u914d\u7f6e\u6587\u4ef6 1 2 3 4 5 6 7 8 9 10 $ cat test.conf [ DEFAULT ] user = ubuntu port = 22 [ web ] manage = manageweb [ api ] manage = manage.war","title":"1. \u521b\u5efa\u914d\u7f6e\u6587\u4ef6"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/08-%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86/#2_3","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 import configparser config = configparser . ConfigParser () # \u8bfb\u53d6\u914d\u7f6e\u6587\u4ef6 config . read ( 'test.conf' ) # \u67e5\u770b\u914d\u7f6e\u6587\u4ef6\u4e2d\u7684\u7ae0\u8282\uff0c\u4e0d\u5305\u542bDEFAULT print ( config . sections ()) # \u67e5\u770b\u67d0\u4e00\u4e2a\u914d\u7f6e\u7684\u503c print ( config [ 'api' ][ 'manage' ]) # \u5224\u65ad\u7ae0\u8282\u662f\u5426\u5728\u914d\u7f6e\u6587\u4ef6\u4e2d\u5b58\u5728 print ( 'db' in config ) # \u7528get\u8bfb\u53d6\u503c print ( config [ 'DEFAULT' ] . get ( 'port' )) # \u6216 print ( config . get ( 'api' , 'manage' )) # \u5982\u679c\u6ca1\u6709get\u5230\uff0c\u8fd4\u56de\u4e00\u4e2a\u6307\u5b9a\u7684\u503c print ( config . get ( 'test' , 'test' , fallback = 'not find' )) \u6267\u884c\u7ed3\u679c 1 2 3 4 5 6 7 $ python3 test.py [ 'web' , 'api' ] manage.war False 22 manage.war not find","title":"2. \u8bfb\u53d6\u914d\u7f6e\u6587\u4ef6"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/08-%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86/#3_2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 import configparser import configparser config = configparser . ConfigParser () # \u8bfb\u53d6\u914d\u7f6e\u6587\u4ef6 config . read ( 'test.conf' ) # \u6dfb\u52a0\u4e00\u4e2a\u7ae0\u8282 config . add_section ( 'mysql' ) # \u6dfb\u52a0\u4e00\u4e2a\u952e\u503c\u5bf9 config . set ( 'mysql' , 'host' , '127.0.0.1' ) # \u4fdd\u5b58\u5230\u6587\u4ef6\u4e2d config . write ( open ( 'test.conf' , 'w' ))","title":"3. \u4fee\u6539\u914d\u7f6e\u6587\u4ef6"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/08-%E6%96%87%E4%BB%B6%E5%A4%84%E7%90%86/#cvs","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 import csv # \u5199\u5165 # \u4e3a\u4e86\u4fdd\u8bc1WindowLinux\u548c\u884c\u5c3e\u7684\u7b26\u53f7\u4e00\u81f4\uff0c\u6700\u597d\u7684\u52a0\u4e0anewline='' with open ( 'hosts.csv' , 'w' , newline = '' ) as hostsfile : # \u5b9a\u4e49\u5b57\u7b26\u76f4\u63a5\u7684\u5206\u5272\u7b26\u4e3a\u7a7a\u683c\uff08delimiter=' '\uff09 # writer = csv.writer(hostsfile, delimiter=' ') writer = csv . writer ( hostsfile ,) # \u5199\u5165\u4e00\u884c writer . writerow ([ 'IP' , 'username' , 'password' ]) writer . writerow ([ '192.168.1.10' , 'root' , '123456' ]) # \u5199\u5165\u591a\u884c\uff0c\u4f20\u5165\u53c2\u6570\u4e3a\u4e00\u4e2a\u5d4c\u5957\u5143\u7ec4\uff0c\u6bcf\u4e00\u884c\u90fd\u5b58\u5728\u5728\u4e00\u4e2a\u5143\u7ec4\u4e2d writer . writerows ([[ '192.168.1.11' , 'admin' , '123456' ], [ '192.168.1.12' , 'admin' , '123456' ]]) # \u8bfb with open ( 'hosts.csv' , newline = '' ) as hostsfile : reader = csv . reader ( hostsfile , delimiter = ' ' ) for row in reader : print ( row ) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 import csv # \u4f7f\u7528\u7c7b\u65b9\u6cd5\u64cd\u4f5c # \u5199\u5165 with open ( 'hosts.csv' , 'w' , newline = '' ) as hostsfile : fieldnames = [ 'IP' , 'username' , 'password' , 'port' ] # \u8bbe\u7f6e\u201c\u6807\u9898\u201d writer = csv . DictWriter ( hostsfile , fieldnames = fieldnames ) # \u5199\u5165\u6807\u9898 writer . writeheader () # \u53c2\u6570\u683c\u5f0f\u5fc5\u987b\u662f\u4e00\u4e2a\u5b57\u5178, # \u5199\u5165\u5355\u884c writer . writerow ({ 'IP' : '192.168.1.10' , 'username' : 'root' , 'password' : '123456' , 'port' : '22' }) # \u5199\u5165\u591a\u884c,\u4f20\u5165\u7684\u53c2\u6570\u5fc5\u987b\u662f\u4e00\u4e2a\u53ef\u8fed\u4ee3\u5bf9\u8c61\uff0c\u91cc\u9762\u7684\u5143\u7d20\u662f\u5b57\u5178\u683c\u5f0f\u7684\uff0c\u8fd9\u91cc\u7528\u5143\u7ec4 writer . writerows ([{ 'IP' : '192.168.1.11' , 'username' : 'root' , 'password' : '123456' , 'port' : '22' }, { 'IP' : '192.168.1.12' , 'username' : 'root' , 'password' : '123456' , 'port' : '22' }]) # \u8bfb\u53d6 # with open ( 'hosts.csv' , newline = '' ) as hostsfile : reader = csv . DictReader ( hostsfile ) for row in reader : # \u8fd4\u56de\u7ed3\u679c\u4e3a\u5b57\u5178\u683c\u5f0f print ( row )","title":"\u4e94\u3001cvs"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/09-%E5%BC%82%E5%B8%B8%E4%B8%8E%E6%B5%8B%E8%AF%95/","text":"Python\u5f02\u5e38\u5904\u7406 \u00b6 \u4e00\u3001 \u5f02\u5e38\u5904\u7406 \u00b6 \u7528\u6cd5\u4e00 \u00b6 1 2 3 4 5 #!/usr/bin/env python3 try : action () except NameError as e : print ( \"\u9519\u8bef\u4fe1\u606f\uff1a\" , e ) \u7528\u6cd5\u4e8c \u00b6 1 2 3 4 5 6 7 #!/usr/bin/env python3 try : action () except NameError as e : print ( \"\u9519\u8bef\u4fe1\u606f\uff1a\" , e ) except IndexError as e : print ( \"\u9519\u8bef\u4fe1\u606f\uff1a\" , e ) \u7528\u6cd5\u4e09 \u00b6 1 2 3 4 5 6 7 #!/usr/bin/env python3 try : action () except NameError as e : print ( \"\u9519\u8bef\u4fe1\u606f\uff1a\" , e ) except ( IndexError , KeyError ) as e : print ( \"\u9519\u8bef\u4fe1\u606f\uff1a\" , e ) \u7528\u6cd5\u56db \u00b6 1 2 3 4 5 6 try : action () except Exception as e : print ( \"\u9519\u8bef\u4fe1\u606f\uff1a\" , e ) else : # \u5982\u679c\u4e3b\u8981\u6267\u884c\u7684\u4ee3\u7801\u6ca1\u6709\u9519\u8bef\uff0c\u5c31\u6267\u884celse\u4e2d\u7684\u5185\u5bb9 print ( \"===\" ) \u7528\u6cd5\u4e94 \u00b6 1 2 3 4 try : action () finally : # \u4e0d\u5904\u7406\u5f02\u5e38\uff0c\u65e0\u8bba\u662f\u5426\u53d1\u751f\u5f02\u5e38\u90fd\u4f1a\u6267\u884cfinally\u7684\u5b50\u4ee3\u7801 print ( \"===\" ) \u4e8c\u3001 \u4e3b\u52a8\u629b\u51fa\u5f02\u5e38 \u00b6 1 2 3 4 try : raise Exception ( '\u4e3b\u52a8\u629b\u51fa\u7684\u5f02\u5e38' ) except Exception as e : print ( e ) \u4e09\u3001\u81ea\u5b9a\u4e49\u5f02\u5e38 \u00b6 1 2 3 4 5 6 7 8 9 10 11 class myError ( Exception ): \"\"\" \u81ea\u5b9a\u4e49\u5f02\u5e38\"\"\" def __init__ ( self , msg ): self . message = msg def __str__ ( self ): return self . message try : raise myError ( '\u81ea\u5b9a\u4e49\u7684\u5f02\u5e38' ) except Exception as e : print ( e ) \u56db\u3001\u65ad\u8a00 assert \u00b6 \u4f7f\u7528\u683c\u5f0f\uff1a assert \u6761\u4ef6 \u6761\u4ef6\u6210\u7acb\u7ee7\u7eed\u6267\u884c \u7528\u4e8e\u5f3a\u5236\u7528\u6237\u670d\u4ece\u6761\u4ef6\uff0c\u5426\u5219\u62a5\u9519\uff0c\u53ef\u4ee5\u6355\u83b7\uff0c\u4f46\u4e00\u822c\u4e0d\u6355\u83b7","title":"\u5f02\u5e38\u5904\u7406"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/09-%E5%BC%82%E5%B8%B8%E4%B8%8E%E6%B5%8B%E8%AF%95/#python","text":"","title":"Python\u5f02\u5e38\u5904\u7406"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/09-%E5%BC%82%E5%B8%B8%E4%B8%8E%E6%B5%8B%E8%AF%95/#_1","text":"","title":"\u4e00\u3001 \u5f02\u5e38\u5904\u7406"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/09-%E5%BC%82%E5%B8%B8%E4%B8%8E%E6%B5%8B%E8%AF%95/#_2","text":"1 2 3 4 5 #!/usr/bin/env python3 try : action () except NameError as e : print ( \"\u9519\u8bef\u4fe1\u606f\uff1a\" , e )","title":"\u7528\u6cd5\u4e00"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/09-%E5%BC%82%E5%B8%B8%E4%B8%8E%E6%B5%8B%E8%AF%95/#_3","text":"1 2 3 4 5 6 7 #!/usr/bin/env python3 try : action () except NameError as e : print ( \"\u9519\u8bef\u4fe1\u606f\uff1a\" , e ) except IndexError as e : print ( \"\u9519\u8bef\u4fe1\u606f\uff1a\" , e )","title":"\u7528\u6cd5\u4e8c"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/09-%E5%BC%82%E5%B8%B8%E4%B8%8E%E6%B5%8B%E8%AF%95/#_4","text":"1 2 3 4 5 6 7 #!/usr/bin/env python3 try : action () except NameError as e : print ( \"\u9519\u8bef\u4fe1\u606f\uff1a\" , e ) except ( IndexError , KeyError ) as e : print ( \"\u9519\u8bef\u4fe1\u606f\uff1a\" , e )","title":"\u7528\u6cd5\u4e09"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/09-%E5%BC%82%E5%B8%B8%E4%B8%8E%E6%B5%8B%E8%AF%95/#_5","text":"1 2 3 4 5 6 try : action () except Exception as e : print ( \"\u9519\u8bef\u4fe1\u606f\uff1a\" , e ) else : # \u5982\u679c\u4e3b\u8981\u6267\u884c\u7684\u4ee3\u7801\u6ca1\u6709\u9519\u8bef\uff0c\u5c31\u6267\u884celse\u4e2d\u7684\u5185\u5bb9 print ( \"===\" )","title":"\u7528\u6cd5\u56db"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/09-%E5%BC%82%E5%B8%B8%E4%B8%8E%E6%B5%8B%E8%AF%95/#_6","text":"1 2 3 4 try : action () finally : # \u4e0d\u5904\u7406\u5f02\u5e38\uff0c\u65e0\u8bba\u662f\u5426\u53d1\u751f\u5f02\u5e38\u90fd\u4f1a\u6267\u884cfinally\u7684\u5b50\u4ee3\u7801 print ( \"===\" )","title":"\u7528\u6cd5\u4e94"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/09-%E5%BC%82%E5%B8%B8%E4%B8%8E%E6%B5%8B%E8%AF%95/#_7","text":"1 2 3 4 try : raise Exception ( '\u4e3b\u52a8\u629b\u51fa\u7684\u5f02\u5e38' ) except Exception as e : print ( e )","title":"\u4e8c\u3001 \u4e3b\u52a8\u629b\u51fa\u5f02\u5e38"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/09-%E5%BC%82%E5%B8%B8%E4%B8%8E%E6%B5%8B%E8%AF%95/#_8","text":"1 2 3 4 5 6 7 8 9 10 11 class myError ( Exception ): \"\"\" \u81ea\u5b9a\u4e49\u5f02\u5e38\"\"\" def __init__ ( self , msg ): self . message = msg def __str__ ( self ): return self . message try : raise myError ( '\u81ea\u5b9a\u4e49\u7684\u5f02\u5e38' ) except Exception as e : print ( e )","title":"\u4e09\u3001\u81ea\u5b9a\u4e49\u5f02\u5e38"},{"location":"programming/python/%E5%9F%BA%E7%A1%80/09-%E5%BC%82%E5%B8%B8%E4%B8%8E%E6%B5%8B%E8%AF%95/#assert","text":"\u4f7f\u7528\u683c\u5f0f\uff1a assert \u6761\u4ef6 \u6761\u4ef6\u6210\u7acb\u7ee7\u7eed\u6267\u884c \u7528\u4e8e\u5f3a\u5236\u7528\u6237\u670d\u4ece\u6761\u4ef6\uff0c\u5426\u5219\u62a5\u9519\uff0c\u53ef\u4ee5\u6355\u83b7\uff0c\u4f46\u4e00\u822c\u4e0d\u6355\u83b7","title":"\u56db\u3001\u65ad\u8a00 assert"},{"location":"resource/docs/","text":"\u6587\u6863 \u00b6 - Python \u00b6 Django2.2.x\u6587\u6863 Django1.11.x\u6587\u6863 Flask1.1.x\u6587\u6863\uff08\u82f1\u6587\u7248\uff09 Flask1.1.x\u6587\u6863\uff08\u4e2d\u6587\u7248\uff09 Jinja2.11x\u6587\u6863 - \u6570\u636e\u5e93 \u00b6 PostgreSQL \u00b6 PostgreSQL11.2\u4e2d\u6587\u6587\u6863 Mysql5.7\u53c2\u8003\u624b\u518c","title":"\u8d44\u6e90"},{"location":"resource/docs/#_1","text":"","title":"\u6587\u6863"},{"location":"resource/docs/#-python","text":"Django2.2.x\u6587\u6863 Django1.11.x\u6587\u6863 Flask1.1.x\u6587\u6863\uff08\u82f1\u6587\u7248\uff09 Flask1.1.x\u6587\u6863\uff08\u4e2d\u6587\u7248\uff09 Jinja2.11x\u6587\u6863","title":"- Python"},{"location":"resource/docs/#-","text":"","title":"- \u6570\u636e\u5e93"},{"location":"resource/docs/#postgresql","text":"PostgreSQL11.2\u4e2d\u6587\u6587\u6863 Mysql5.7\u53c2\u8003\u624b\u518c","title":"PostgreSQL"},{"location":"software/middleware/rabbitmq/","text":"\u4e00\u3001\u57fa\u7840\u77e5\u8bc6 \u00b6 1. \u6d88\u606f\u4e2d\u95f4\u4ef6 \u00b6 1. \u6d88\u606f\u4e0e\u6d88\u606f\u961f\u5217\u4e2d\u95f4\u4ef6 \u00b6 \u6d88\u606f \uff1a\u6d88\u606f\u662f\u6307\u5e94\u7528\u95f4\u4f20\u9001\u7684\u6570\u636e\uff0c\u53ef\u4ee5\u662f\u5b57\u7b26\u4e32\uff0cJSON\uff0c\u5185\u5d4c\u5bf9\u8c61\u7b49 \u6d88\u606f\u4e2d\u95f4\u4ef6 \uff1a\u662f\u6307\u5229\u7528\u9ad8\u6548\u53ef\u9760\u989d\u6d88\u606f\u4f20\u9012\u673a\u5236\u8fdb\u884c\u4e0e\u5e73\u53f0\u65e0\u5173\u7684\u6570\u636e\u4ea4\u6d41\uff0c\u5e76\u57fa\u4e8e\u6570\u636e\u901a\u4fe1\u6765\u8fdb\u884c\u5206\u5e03\u5f0f\u7cfb\u7edf\u96c6\u6210\u3002 2. \u6d88\u606f\u4f20\u9012\u6a21\u5f0f \u00b6 \u70b9\u5bf9\u70b9\uff1a\u6d88\u606f\u751f\u4ea7\u8005\u751f\u4ea7\u6d88\u606f\u53d1\u9001\u5230queue\u4e2d\uff0c\u7136\u540e\u6d88\u606f\u6d88\u8d39\u8005\u4ecequeue\u4e2d\u53d6\u51fa\u5e76\u4e14\u6d88\u8d39\u6d88\u606f \u53d1\u5e03/\u8ba2\u9605\uff1a\u4f7f\u7528topic\u4f5c\u4e3a\u901a\u4fe1\u8f7d\u4f53 3.\u4e3b\u6d41\u4ea7\u54c1 \u00b6 Rabbitmq\u3001Kafka\u3001ActiveMQ\u3001RocketMQ 4. \u6d88\u606f\u4e2d\u95f4\u4ef6\u7684\u4f5c\u7528 \u00b6 \u89e3\u8026 \u5197\u4f59\uff08\u5b58\u50a8\uff09\uff1a\u628a\u6570\u636e\u6301\u4e45\u5316\u76f4\u5230\u6570\u636e\u88ab\u5904\u7406\u5b8c \u6269\u5c55\u6027 \u524a\u5cf0\uff1a\u4f7f\u5173\u952e\u7ec4\u4ef6\u652f\u6491\u7a81\u53d1\u8bbf\u95ee\u538b\u529b \u53ef\u6062\u590d\u6027 \u987a\u5e8f\u4fdd\u8bc1\uff1a\u4fdd\u8bc1\u6570\u636e\u5904\u7406\u7684\u987a\u5e8f \u7f13\u51b2 \u5f02\u6b65\u901a\u4fe1 2. Rabbitmq \u00b6 1. \u5b98\u7f51 \u00b6 http://www.rabbitmq.com/ 2. \u7279\u70b9 \u00b6 \u53ef\u9760\u6027\uff1a \u6301\u4e45\u5316\u3001\u4f20\u8f93\u786e\u8ba4\u3001\u53d1\u5e03\u786e\u8ba4 \u7075\u6d3b\u7684\u8def\u7531 \u6269\u5c55\u6027\uff1a\u96c6\u7fa4 \u9ad8\u53ef\u7528\u6027\uff1a \u96c6\u7fa4\u955c\u50cf \u591a\u79cd\u534f\u8bae\uff1aAMQP\u3001STOMP\u3001MQTT \u591a\u8bed\u8a00\u5ba2\u6237\u7aef\uff1aPython\u3001Java\u3001Ruby\u3001PHP\u3001C#\u3001JavaScript\u3001Go\u3001Elixir\u3001Objective-C\u3001Swift\u3001Spring AMQP \u7ba1\u7406\u754c\u9762 \u63d2\u4ef6\u673a\u5236 3. \u6982\u5ff5 \u00b6 1. Producer \u00b6 \u751f\u4ea7\u8005\uff0c\u6295\u9012\u6d88\u606f\u7684\u4e00\u65b9\uff0c\u6d88\u606f\u7684\u7ec4\u6210\uff1a \u6d88\u606f\u4f53\uff1a\u5e26\u6709\u4e1a\u52a1\u903b\u8f91\u7ed3\u6784\u7684\u6570\u636e\uff08\u5982JSON\uff09 \u6807\u7b7e\uff1a\u4ea4\u6362\u5668\u540d\u79f0\u6216\u8def\u7531\u952e 2. Consumer \u00b6 \u6d88\u8d39\u8005\uff0c\u63a5\u6536\u6d88\u606f\u7684\u4e00\u65b9\uff0c\u6d88\u8d39\u4e00\u6761\u6d88\u606f\u65f6\u53ea\u6d88\u8d39\u6d88\u606f\u4f53\uff0c\u6d88\u606f\u7684\u6807\u7b7e\u5728\u8def\u7531\u7684\u8fc7\u7a0b\u4e2d\u4f1a\u4e22\u5f03 3. Broker \u00b6 \u6d88\u606f\u4e2d\u95f4\u4ef6\u7684\u670d\u52a1\u8282\u70b9\uff0c\u53ef\u4ee5\u7b80\u5355\u7684\u770b\u4f5c\u4e00\u4e2aRabbitmq\u670d\u52a1\u8282\u70b9\u6216\u8005Rabbitmq\u670d\u52a1\u5b9e\u4f8b 4. Queue \u00b6 \u961f\u5217\uff0cRabbitmq\u7684\u5185\u90e8\u5bf9\u8c61\uff0c\u7528\u6765\u5b58\u50a8\u6d88\u606f\u3002 \u591a\u4e2a\u6d88\u8d39\u8005\u53ef\u4ee5\u8ba2\u9605\u540c\u4e00\u4e2a\u961f\u5217\uff0c\u961f\u5217\u4e2d\u7684\u6d88\u606f\u4f1a\u8f6e\u8be2\u7ed9\u591a\u4e2a\u6d88\u8d39\u8005\u8fdb\u884c\u5904\u7406\u3002 5. Exchange \u00b6 \u4ea4\u6362\u5668\uff0c\u751f\u4ea7\u8005\u5c06\u6d88\u606f\u53d1\u9001\u5230\u4ea4\u6362\u5668\uff0c\u7531\u4ea4\u6362\u5668\u5c06\u6d88\u606f\u8def\u7531\u5230\u4e00\u4e2a\u6216\u591a\u4e2a\u961f\u5217\u4e2d\u3002 \u4ea4\u6362\u5668\u7c7b\u578b\uff1a fanout\uff1a \u628a\u6240\u6709\u53d1\u9001\u5230\u8be5\u4ea4\u6362\u5668\u7684\u6d88\u606f\u8def\u7531\u5230\u6240\u6709\u4e0e\u8be5\u4ea4\u6362\u5668\u7ed1\u5b9a\u7684\u961f\u5217\u4e2d direct\uff1a \u628a\u6d88\u606f\u8def\u7531\u5230BindingKey\u548cRoutingKey\u5b8c\u5168\u5339\u914d\u7684\u961f\u5217\u4e2d topic\uff1a\u628a\u6d88\u606f\u8def\u7531\u5230BindingKey\u548cRoutingKey\u5339\u914d\uff08\u53ef\u4ee5\u6a21\u7cca\u5339\u914d\uff09\u7684\u961f\u5217\u4e2d 1 2 3 4 5 6 7 \u5339\u914d\u89c4\u5219\uff1a 1. routing key\u4e3a\u4e00\u4e2a\u53e5\u70b9\u53f7\u201c.\u201d\u5206\u9694\u7684\u5b57\u7b26\u4e32\uff08\u6211\u4eec\u5c06\u88ab\u53e5\u70b9\u53f7\u201c.\u201d\u5206\u9694\u5f00\u7684 \u6bcf\u4e00\u6bb5\u72ec\u7acb\u7684\u5b57\u7b26\u4e32\u79f0\u4e3a\u4e00\u4e2a\u5355\u8bcd\uff09\uff0c\u5982\u201cstock.usd.nyse\u201d\u3001\u201cnyse.vmw\u201d\u3001 \u201cquick.orange.rabbit\u201d 2.binding key\u4e0erouting key\u4e00\u6837\u4e5f\u662f\u53e5\u70b9\u53f7\u201c.\u201d\u5206\u9694\u7684\u5b57\u7b26\u4e32 3.binding key\u4e2d\u53ef\u4ee5\u5b58\u5728\u4e24\u79cd\u7279\u6b8a\u5b57\u7b26\u201c*\u201d\u4e0e\u201c#\u201d\uff0c\u7528\u4e8e\u505a\u6a21\u7cca\u5339\u914d\uff0c\u5176\u4e2d\u201c*\u201d \u7528\u4e8e\u5339\u914d\u4e00\u4e2a\u5355\u8bcd\uff0c\u201c#\u201d\u7528\u4e8e\u5339\u914d\u591a\u4e2a\u5355\u8bcd\uff08\u53ef\u4ee5\u662f\u96f6\u4e2a\uff09 headers: \u6839\u636e\u6d88\u606f\u5185\u5bb9\u4e2dheader\uff08\u952e\u503c\u5bf9\u5f62\u5f0f\uff09\u5c5e\u6027\u8fdb\u884c\u5339\u914d \u6027\u80fd\u8f83\u5dee\uff0c\u800c\u4e14\u4e0d\u5b9e\u7528 6.RoutingKey \u00b6 \u8def\u7531\u952e\uff0c\u751f\u4ea7\u8005\u5c06\u6d88\u606f\u53d1\u7ed9\u4ea4\u6362\u5668\u7684\u65f6\u5019\uff0c\u4e00\u822c\u4f1a\u6307\u5b9a\u4e00\u4e2aRoutingKey\uff0c\u7528\u6765\u6307\u5b9a\u8fd9\u4e2a\u6d88\u606f\u7684\u8def\u7531\u89c4\u5219\uff0c\uff1b\u8def\u7531\u952e\u9700\u8981\u4e0e \u4ea4\u6362\u5668\u7c7b\u578b\u548c\u7ed1\u5b9a\u952e\u8054\u5408\u4f7f\u7528\u624d\u80fd\u751f\u6548 7. Binding \u00b6 \u7ed1\u5b9a\uff0c\u7ed1\u5b9a\u53ef\u4ee5\u5c06\u4ea4\u6362\u5668\u4e0e\u961f\u5217\u5173\u8054\u8d77\u6765 8. Connection \u00b6 \u8fde\u63a5\uff0c\u6d88\u8d39\u8005/\u751f\u4ea7\u8005\u4e0eRabbitmq Broker\u5efa\u7acb\u7684TCP\u8fde\u63a5 9. Channel \u00b6 \u4fe1\u9053\uff0c\u5efa\u7acb\u5728Connection\u4e0a\u7684\u865a\u62df\u8fde\u63a5 4. \u5de5\u4f5c\u6d41\u7a0b \u00b6 1. \u751f\u4ea7\u8005\u53d1\u9001\u6d88\u606f \u00b6 \u751f\u4ea7\u8005\u8fde\u63a5\u5230Rabbitmq Broker\uff0c\u5efa\u7acb\u4e00\u4e2a\u8fde\u63a5\uff0c\u5f00\u542f\u4e00\u4e2a\u4fe1\u9053(Channel) \u751f\u4ea7\u8005\u58f0\u660e\u4e00\u4e2a\u4ea4\u6362\u5668\uff0c\u5e76\u8bbe\u7f6e\u76f8\u5173\u5c5e\u6027\uff0c\u6bd4\u5982\u4ea4\u6362\u673a\u7c7b\u578b\u3001\u662f\u5426\u6301\u4e45\u5316\u7b49 \u751f\u4ea7\u8005\u58f0\u660e\u4e00\u4e2a\u961f\u5217\u5e76\u8bbe\u7f6e\u76f8\u5173\u5c5e\u6027\uff0c\u6bd4\u5982\u662f\u5426\u62cd\u4ed6\uff0c\u662f\u5426\u6301\u4e45\u5316\uff0c\u662f\u5426\u81ea\u52a8\u5220\u9664\u7b49 \u751f\u4ea7\u8005\u901a\u8fc7\u8def\u7531\u952e\u5c06\u4ea4\u6362\u5668\u548c\u961f\u5217\u7ed1\u5b9a\u8d77\u6765 \u751f\u4ea7\u8005\u53d1\u9001\u6d88\u606f\u5230Rabbitmq Broker\uff0c\u5176\u4e2d\u5305\u62ec\u8def\u7531\u952e\u3001\u4ea4\u6362\u5668\u7b49 \u76f8\u5e94\u7684\u4ea4\u6362\u5668\u6839\u636e\u63a5\u6536\u5230\u7684\u8def\u7531\u952e\u67e5\u627e\u76f8\u5339\u914d\u7684\u961f\u5217 \u5982\u679c\u627e\u5230\uff0c\u5219\u5c06\u4ece\u751f\u4ea7\u8005\u53d1\u9001\u8fc7\u6765\u7684\u6d88\u606f\u5b58\u5165\u5230\u76f8\u5e94\u7684\u961f\u5217\u4e2d\uff0c\u672a\u627e\u5230\u5219\u6839\u636e\u751f\u4ea7\u8005\u914d\u7f6e\u7684\u5c5e\u6027 \u9009\u62e9\u4e22\u5f03\u8fd8\u662f\u9000\u56de\u7ed9\u751f\u4ea7\u8005 \u5173\u95ed\u4fe1\u9053 \u5173\u95ed\u8fde\u63a5 2. \u6d88\u8d39\u8005\u63a5\u6536\u6d88\u606f \u00b6 \u6d88\u8d39\u8005\u8fde\u63a5\u5230Rabbitmq Broker\uff0c \u5efa\u7acb\u4e00\u4e2a\u8fde\u63a5\uff0c\u5f00\u542f\u4e00\u4e2a\u4fe1\u9053 \u6d88\u8d39\u8005\u5411Rabbitmq Broker\u8bf7\u6c42\u6d88\u8d39\u76f8\u5e94\u961f\u5217\u4e2d\u7684\u6d88\u606f\uff0c\u53ef\u80fd\u4f1a\u8bbe\u7f6e\u76f8\u5e94\u7684\u56de\u8c03\u51fd\u6570\uff0c\u4ee5 \u53ca\u4e00\u4e9b\u51c6\u5907\u5de5\u4f5c \u7b49\u5f85Rabbitmq Broker\u56de\u5e94\u5e76\u6295\u9012\u76f8\u5e94\u961f\u5217\u4e2d\u7684\u6d88\u606f \u6d88\u8d39\u8005\u786e\u8ba4\u63a5\u6536\u5230\u7684\u6d88\u606f\u3001 Rabbitmq\u4ece\u961f\u5217\u4e2d\u5220\u9664\u5df2\u7ecf\u88ab\u786e\u8ba4\u7684\u6d88\u606f \u5173\u95ed\u4fe1\u9053 \u5173\u95ed\u8fde\u63a5 3. AMQP\u534f\u8bae \u00b6 AMQP\u534f\u8bae\u5305\u62ec\u4e09\u5c42 Module Layer\uff1a\u4f4d\u4e8e\u534f\u8bae\u6700\u9ad8\u5c42\uff0c\u4e3b\u8981\u5b9a\u4e49\u4e86\u4e00\u4e9b\u63d0\u4f9b\u7ed9\u5ba2\u6237\u7aef\u8c03\u7528\u7684\u547d\u4ee4\uff0c\u5ba2\u6237\u7aef\u53ef \u4ee5\u5229\u7528\u8fd9\u4e9b\u547d\u4ee4\u5b9e\u73b0\u81ea\u5df1\u7684\u4e1a\u52a1\u903b\u8f91\u3002 Session Layer\uff1a\u4f4d\u4e8e\u4e2d\u95f4\u5c42\uff0c\u4e3b\u8981\u8d1f\u8d23\u5c06\u5ba2\u6237\u7aef\u7684\u547d\u4ee4\u53d1\u9001\u7ed9\u670d\u52a1\u5668\uff0c\u518d\u5c06\u670d\u52a1\u5668\u7aef\u7684 \u5e94\u7b54\u8fd4\u56de\u7ed9\u5ba2\u6237\u7aef\uff0c\u4e3b\u8981\u4e3a\u5ba2\u6237\u7aef\u4e0e\u670d\u52a1\u5668\u76f4\u63a5\u7684\u901a\u4fe1\u63d0\u4f9b\u53ef\u9ad8\u6027\u540c\u6b65\u673a\u5236\u548c\u9519\u8bef\u5904\u7406 Transport Layer\uff1a\u4f4d\u4e8e\u6700\u5e95\u5c42\uff0c\u4e3b\u8981\u4f20\u8f93\u4e8c\u8fdb\u5236\u6570\u636e\u6d41\uff0c\u63d0\u4f9b\u5e27\u7684\u5904\u7406\u3001\u4fe1\u9053\u590d\u7528\u3001\u9519 \u8bef\u68c0\u6d4b\u548c\u6570\u636e\u8868\u793a \u4e8c\u3001\u4f7f\u7528 \u00b6 \u5b89\u88c5pika 1 pip install pika \u4ee5\u5bb9\u5668\u65b9\u5f0f\u542f\u52a8\u4e00\u4e2arabbitmq 1 $ docker run -it --name rabbitmq -p 5672 :5672 -p 15672 :15672 -p 25672 :25672 rabbitmq:3.6.12 1. Hello Word \u00b6 \u751f\u4ea7\u8005 1 2 3 4 5 6 7 8 9 10 11 12 13 import pika # \u5efa\u7acbTCP\u8fde\u63a5 connection = pika . BlockingConnection ( pika . ConnectionParameters ( 'localhost' )) # \u5efa\u7acb\u4e00\u4e2a\u4fe1\u9053 channel = connection . channel () # \u521b\u5efa\u4e00\u4e2a\u961f\u5217 channel . queue_declare ( queue = 'hello' ) # \u521b\u5efa\u4e00\u4e2a\u4ea4\u6362\u673a channel . basic_publish ( exchange = '' , routing_key = 'hello' , body = 'Hello World!' ) print ( \" [\u00d7] Sent 'Hello World!'\" ) # \u5173\u95ed\u8fde\u63a5 connection . close () \u67e5\u770brabbitmq\u4e2d\u7684\u961f\u5217 1 2 3 4 $ docker exec -it rabbitmq bash root@f6d1cc085307:/# rabbitmqctl list_queues Listing queues hello 1 \u6d88\u8d39\u8005 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 import pika connection = pika . BlockingConnection ( pika . ConnectionParameters ( host = 'localhost' ) channel = connection . channel () # \u4e00\u6b21\u518d\u5efa\u7acb\u961f\u5217\u3002\u5b98\u65b9\u5efa\u8bae\u5728\u6d88\u8d39\u548c\u751f\u4ea7\u8005\u90fd\u58f0\u660e\u5efa\u7acb\u4e00\u4e2a\u961f\u5217 channel . queue_declare ( queue = 'hello' ) # \u5b9a\u4e49\u4e00\u4e2a\u56de\u8c03\u51fd\u6570\u6765\u5904\u7406\u6d88\u606f\uff0c\u51fd\u6570\u683c\u5f0f\u56fa\u5b9a def callback ( ch , method , properties , body ): print ( \"[\u00d7] Receive %r \" % body ) # \u5b9a\u4e49\u4ece\u54ea\u4e2a\u961f\u5217\u63a5\u6536\u6d88\u606f\u4ee5\u53ca\u5904\u7406\u6d88\u606f\u7684\u51fd\u6570 channel . basic_consume ( callback , queue = 'hello' , no_ack = True ) print ( '[*] Waiting for messages. To exit press CTRL+C' ) # \u5f00\u59cb\u5904\u7406\u6d88\u606f channel . start_consuming () \u6267\u884c\u7ed3\u679c 1 2 3 4 5 $python3 send.py [ \u00d7 ] Sent 'Hello World!' $ python3 receive.py [ * ] Waiting for messages. To exit press CTRL+C [ \u00d7 ] Receive b 'Hello World!' Queue \u961f\u5217 \u00b6 \u961f\u5217\u7684\u4f5c\u7528\uff1a \u60f3\u8c61\u4e00\u4e2a\u573a\u666f\uff0c\u5982\u679c\u751f\u4ea7\u8005\u4ea7\u751f\u8bb8\u591a\u9700\u8981\u82b1\u5f88\u591a\u65f6\u95f4\u5904\u7406\u7684\u6570\u636e\u548c\u4efb\u52a1\uff0c\u91c7\u7528BIO\u7684\u6a21\u5f0f \u4ea4\u7ed9\u6d88\u8d39\u8005\u5904\u7406\u7684\u8bdd\uff0c\u751f\u4ea7\u8005\u9700\u8981\u7b49\u5f88\u957f\u65f6\u95f4\u76f4\u5230\u6d88\u8d39\u8005\u5904\u7406\u5b8c\u6d88\u606f\u518d\u7ee7\u7eed\u53d1\u9001\u4e0b\u4e00\u4e2a\u6d88\u606f\u3002 \u6709\u4e86\u961f\u5217\u4ee5\u540e\u751f\u4ea7\u8005\u53ea\u9700\u8981\u628a\u6570\u636e\u6254\u5230\u961f\u5217\u4e2d\u5c31\u53ef\u4ee5\u4e86\uff0c\u6d88\u8d39\u8005\u5b9a\u671f\u4ece\u961f\u5217\u4e2d\u53d6\u6570\u636e\u8fdb\u884c\u5904 \u7406\uff08\u6d88\u8d39\uff09\u3002\u5904\u7406\u5b8c\u4e00\u4e2a\u518d\u4ece\u961f\u5217\u4e2d\u53d6\u4e0b\u4e00\u4e2a\u8fdb\u884c\u5904\u7406\u3002\u5982\u679c\u6570\u636e\u5904\u7406\u7684\u65f6\u95f4\u592a\u957f\uff0c\u6211\u4eec\u53ef \u4ee5\u591a\u5efa\u51e0\u4e2a\u6d88\u8d39\u8005\u4e00\u8d77\u6d88\u8d39\u6570\u636e\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0crabbitmq\u4ee5\u8f6e\u8be2\u7684\u65b9\u5f0f\u628a\u6d88\u606f\u5206\u53d1\u7ed9\u6d88\u8d39\u8005\u3002 1. \u6d88\u606f\u786e\u8ba4 \u00b6 \u5728\u4e4b\u524d\u7684\u4ee3\u7801\u4e2d\uff0c\u4e00\u65e6rabbitmq\u628a\u6d88\u606f\u53d1\u7ed9\u6d88\u8d39\u8005\u5c31\u4f1a\u628a\u6d88\u8d39\u6807\u8bb0\u4e3a\u5220\u9664\uff0c\u5982\u679c\u6b64\u65f6\u6d88\u8d39\u8005 \u6302\u4e86\uff0c\u6d88\u606f\u5c31\u4f1a\u4e22\u5931\uff0c\u6211\u4eec\u5e0c\u671b\u5982\u679c\u56e0\u4e3a\u4e00\u4e2a\u6d88\u8d39\u8005\u6302\u4e86\u800c\u628a\u6ca1\u6709\u6ca1\u6709\u5904\u7406\u7684\u6d88\u606f\u4ea4\u7ed9\u53e6\u4e00 \u4e2a\u6d88\u8d39\u8005\u5904\u7406\u3002\u4e3a\u4e86\u4fdd\u8bc1\u6570\u636e\u4e0d\u4e22\u5931\uff0crabbitmq\u4f7f\u7528\u6d88\u606f\u786e\u8ba4\u673a\u5236\u4fdd\u8bc1\u6570\u636e\u4e0d\u4e22\u5931\u3002\u6d88\u8d39\u8005 \u5982\u679c\u5904\u7406\u5b8c\u6d88\u606f\u4f1a\u7ed9rabbitmq\u53d1\u9001\u4e00\u4e2aack\u3002 \u5982\u679c\u6d88\u8d39\u8005\u6302\u4e86\uff08TCP\u8fde\u63a5\u7aef\u53e3\uff0c\u4fe1\u9053\u5173\u95ed\uff09\uff0c\u6ca1\u6709\u53d1\u9001ack\uff0crabbitmq\u5c31\u8ba4\u4e3a\u6d88\u606f\u6ca1\u6709\u5904\u7406 \u7136\u540e\u628a\u6d88\u606f\u4ea4\u7ed9\u5176\u4ed6\u6d88\u8d39\u8005\u53bb\u5904\u7406\u3002 \u66f4\u6539\u540e\u7684\u4ee3\u7801 \u751f\u4ea7\u8005 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 import pika import sys # \u5efa\u7acbTCP\u8fde\u63a5 connection = pika . BlockingConnection ( pika . ConnectionParameters ( 'localhost' )) # \u5efa\u7acb\u4e00\u4e2a\u4fe1\u9053 channel = connection . channel () # \u521b\u5efa\u4e00\u4e2a\u961f\u5217 channel . queue_declare ( queue = 'hello' ) # \u5b9a\u4e49\u6d88\u606f\u5185\u5bb9 message = ' ' . join ( sys . argv [ 1 :]) or \"Hello World!\" # \u521b\u5efa\u4e00\u4e2a\u4ea4\u6362\u673a channel . basic_publish ( exchange = '' , routing_key = 'hello' , body = message ) print ( \" [\u00d7] Sent %r \" % message ) # \u5173\u95ed\u8fde\u63a5 connection . close () \u6d88\u8d39\u8005 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 import pika import time connection = pika . BlockingConnection ( pika . ConnectionParameters ( host = 'localhost' )) channel = connection . channel () # \u4e00\u6b21\u518d\u5efa\u7acb\u961f\u5217\u3002\u5b98\u65b9\u5efa\u8bae\u5728\u6d88\u8d39\u548c\u751f\u4ea7\u8005\u90fd\u58f0\u660e\u5efa\u7acb\u4e00\u4e2a\u961f\u5217 channel . queue_declare ( queue = 'hello' ) # \u5b9a\u4e49\u4e00\u4e2a\u56de\u8c03\u51fd\u6570\u6765\u5904\u7406\u6d88\u606f\uff0c\u51fd\u6570\u683c\u5f0f\u56fa\u5b9a def callback ( ch , method , properties , body ): print ( \"[\u00d7] Receive %r \" % body ) # \u8ba1\u7b97\u6d88\u606f\u957f\u5ea6\u6765\u6a21\u62df\u6d88\u8d39\u8005\u5904\u7406\u6d88\u606f\u9700\u8981\u7684\u65f6\u95f4 time . sleep ( len ( body )) print ( \"[\u00d7] Done\" ) # \u786e\u8ba4\u6d88\u606f\u5df2\u7ecf\u88ab\u5904\u7406 ch . basic_ack ( delivery_tag = method . delivery_tag ) # \u5b9a\u4e49\u4ece\u54ea\u4e2a\u961f\u5217\u63a5\u6536\u6d88\u606f\u4ee5\u53ca\u5904\u7406\u6d88\u606f\u7684\u51fd\u6570 channel . basic_consume ( callback , queue = 'hello' ) print ( '[*] Waiting for messages. To exit press CTRL+C' ) # \u5f00\u59cb\u5904\u7406\u6d88\u606f channel . start_consuming () \u6d4b\u8bd5 \u5f00\u7b2c1\u4e2ashell\u53d1\u9001\u6d88\u606f 1 2 3 # \u53d1\u9001\u4e00\u4e2a\u6d88\u606f $ python3 send.py [ \u00d7 ] Sent 'Hello World!' \u5f00\u7b2c2\u4e2ashell\u5904\u7406\u6d88\u606f\uff0c\u6d88\u606f\u6ca1\u5904\u7406\u5b8c\u76f4\u63a5\u7ed3\u675f\u8fdb\u884c 1 2 3 4 5 6 # \u6d88\u606f\u8fd8\u6ca1\u6709\u5904\u7406\u5b8c\u7684\u65f6\u5019\u628a\u8fdb\u7a0b\u7ed3\u675f\u6389 $ python3 receive.py [ * ] Waiting for messages. To exit press CTRL+C [ \u00d7 ] Receive b 'Hello World!' ^CTraceback ( most recent call last ) : ... \u5f00\u7b2c3\u4e2ashell\u7ee7\u7eed\u5904\u7406\u6d88\u606f 1 2 3 4 5 # \u6d88\u606f\u88ab\u8f6c\u5230\u53e6\u4e2a\u4e00\u6d88\u8d39\u8005\u8fdb\u884c\u5904\u7406 $ python3 receive.py [ * ] Waiting for messages. To exit press CTRL+C [ \u00d7 ] Receive b 'Hello World!' [ \u00d7 ] Done \u67e5\u770b\u672a\u88ab\u786e\u8ba4\u7684\u6d88\u606f 1 2 3 $ rabbitmqctl list_queues name messages_ready messages_unacknowledged Listing queues hello 0 5 2. \u6d88\u606f\u6301\u4e45\u5316 \u00b6 \u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0crabbitmq\u9000\u51fa\u4e4b\u540e\u961f\u5217\u548c\u6d88\u606f\u5c31\u4f1a\u4e22\u5931\u3002\u4e3a\u4e86\u4fdd\u8bc1\u6570\u636e\u4e0d\u4e22\u5931\u9700\u8981\u505a\u6570\u636e\u6301\u4e45\u5316\u3002 \u961f\u5217\u6301\u4e45\u5316 1 channel . queue_declare ( queue = 'hello' , durable = True ) \u6d88\u606f\u6301\u4e45\u5316 1 2 3 4 5 6 channel . basic_publish ( exchange = '' , routing_key = \"task_queue\" , body = message , properties = pika . BasicProperties ( delivery_mode = 2 , # make message persistent )) 3. \u516c\u5e73\u5206\u53d1 \u00b6 \u666e\u901a\u7684\u8f6e\u8be2\u7b56\u7565\u53ef\u80fd\u4f1a\u5bfc\u81f4\u8d1f\u8f7d\u4e0d\u5747\u8861\u3002Fair dispatch\u6709\u70b9\u52a0\u6743\u8f6e\u8be2\u7684\u610f\u601d\uff0c\u628a\u6d88\u606f\u5206\u53d1 \u7ed9\u4e0d\u592a\u5fd9\u7684\u6d88\u8d39\u8005 \u4f7f\u7528basic.qos\u6a21\u5f0f\u4ee4prefetch_count=1\u3002\u8ba9\u6d88\u8d39\u8005\u544a\u8bc9Rabbitmq\uff0c\u5728\u5f53\u524d\u7684\u6d88\u606f\u5904\u7406\u5b8c\u6bd5 \u5e76\u786e\u8ba4\u4e4b\u524d\u4e0d\u8981\u518d\u53d1\u6d88\u606f \u6700\u7ec8\u4ee3\u7801 \u751f\u4ea7\u8005 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 #!/usr/bin/env python import pika import sys connection = pika . BlockingConnection ( pika . ConnectionParameters ( host = 'localhost' )) channel = connection . channel () channel . queue_declare ( queue = 'task_queue' , durable = True ) message = ' ' . join ( sys . argv [ 1 :]) or \"Hello World!\" channel . basic_publish ( exchange = '' , routing_key = 'task_queue' , body = message , properties = pika . BasicProperties ( delivery_mode = 2 , # make message persistent )) print ( \" [x] Sent %r \" % message ) connection . close () \u6d88\u8d39\u8005 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 #!/usr/bin/env python import pika import time connection = pika . BlockingConnection ( pika . ConnectionParameters ( host = 'localhost' )) channel = connection . channel () channel . queue_declare ( queue = 'task_queue' , durable = True ) print ( ' [*] Waiting for messages. To exit press CTRL+C' ) def callback ( ch , method , properties , body ): print ( \" [x] Received %r \" % body ) time . sleep ( len ( body )) print ( \" [x] Done\" ) ch . basic_ack ( delivery_tag = method . delivery_tag ) channel . basic_qos ( prefetch_count = 1 ) channel . basic_consume ( callback , queue = 'task_queue' ) channel . start_consuming () 3. \u5206\u53d1\u4e0e\u8ba2\u9605 \u00b6 1. \u4ea4\u6362\u5668 \u00b6 \u4ea4\u6362\u5668\u4ece\u751f\u4ea7\u8005\u90a3\u91cc\u5c31\u6536\u6570\u636e\uff0c\u7136\u540e\u63a8\u9001\u7684\u961f\u5217 \u4ea4\u6362\u5668\u89c9\u5f97\u6d88\u606f\u662f\u5206\u53d1\u7ed9\u6307\u5b9a\u961f\u5217\uff0c\u8fd8\u662f\u591a\u4e2a\u961f\u5217\uff0c\u8fd8\u662f\u4e22\u5f03 \u4ea4\u6362\u5668\u7684\u7c7b\u578b\uff1adirect\u3001topic\u3001fanout\u3001header 2. \u4e34\u65f6\u961f\u5217 \u00b6 \u7528\u5b8c\u4e4b\u540e\u5c31\u5220\u9664\uff0c\u5b98\u65b9\u6587\u6863\u4ee5\u8bb0\u5f55\u65e5\u5fd7\u7684\u5b9e\u4f8b\u8bf4\u660e\u3002 \u4f7f\u7528fanout\u4ea4\u6362\u5668\uff0c\u6d88\u8d39\u8005\u8981\u63a5\u6536\u6240\u6709\u7684\u65e5\u5fd7\u6d88\u606f\uff0c \u6d88\u8d39\u8005\u60f3\u8981\u63a5\u6536\u7684\u6d88\u606f\u662f\u6700\u65b0\u7684\u6d88\u606f\u6d41\u800c\u4e0d\u662f\u65e7\u7684\u3002 \u4e3a\u4e86\u8fbe\u5230\u8fd9\u4e2a\u76ee\u7684\uff0c\u9700\u8981\u5e72\u4e24\u4ef6\u4e8b\uff1a \u65e0\u8bba\u4ec0\u4e48\u65f6\u5019\u8fde\u63a5rabbitmq\u65f6\uff0c\u9700\u8981\u4e00\u4e2a\u65b0\u7684\u3001\u7a7a\u7684\u961f\u5217-->\u521b\u5efa\u4e00\u4e2a\u968f\u673a\u961f\u5217 \u4e00\u65e6\u6d88\u8d39\u8005\u65ad\u5f00\u8fde\u63a5\uff0c\u5c31\u5220\u9664\u8fd9\u4e2a\u961f\u5217 \u6700\u7ec8\u4ee3\u7801 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 import pika import sys # \u5efa\u7acbTCP\u8fde\u63a5 connection = pika . BlockingConnection ( pika . ConnectionParameters ( 'localhost' )) # \u5efa\u7acb\u4e00\u4e2a\u4fe1\u9053 channel = connection . channel () # \u5efa\u7acb\u4e00\u4e2a\u4ea4\u6362\u5668\uff0c\u4ea4\u6362\u5668\u7684\u7c7b\u578b\u4e3afanout channel . exchange_declare ( exchange = 'logs' , exchange_type = 'fanout' ) # \u5b9a\u4e49\u6d88\u606f\u5185\u5bb9 message = ' ' . join ( sys . argv [ 1 :]) or \"Hello World!\" # \u521b\u5efa\u4e00\u4e2a\u4ea4\u6362\u673a channel . basic_publish ( exchange = 'logs' , routing_key = '' , # \u5728fanout\u6a21\u5f0f\u4e0b\uff0c\u8def\u7531\u952e\u88ab\u5ffd\u7565 body = message ) print ( \" [\u00d7] Sent %r \" % message ) # \u5173\u95ed\u8fde\u63a5 connection . close () 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 import pika import time connection = pika . BlockingConnection ( pika . ConnectionParameters ( host = 'localhost' )) channel = connection . channel () channel . exchange_declare ( exchange = 'logs' , exchange_type = 'fanout' ) # \u6d88\u8d39\u5b8c\u4e4b\u540e\u5220\u9664\u961f\u5217 result = channel . queue_declare ( exclusive = True ) # \u751f\u6210\u4e00\u4e2a\u968f\u673a\u961f\u5217 queue_name = result . method . queue channel . queue_bind ( exchange = 'logs' , queue = queue_name ) print ( '[*] Waiting for messages. To exit press CTRL+C' ) # \u5b9a\u4e49\u4e00\u4e2a\u56de\u8c03\u51fd\u6570\u6765\u5904\u7406\u6d88\u606f\uff0c\u51fd\u6570\u683c\u5f0f\u56fa\u5b9a def callback ( ch , method , properties , body ): print ( \"[\u00d7] Receive %r \" % body ) # \u5b9a\u4e49\u4ece\u54ea\u4e2a\u961f\u5217\u63a5\u6536\u6d88\u606f\u4ee5\u53ca\u5904\u7406\u6d88\u606f\u7684\u51fd\u6570 channel . basic_consume ( callback , queue = queue_name , no_ack = True ) # \u5f00\u59cb\u5904\u7406\u6d88\u606f channel . start_consuming () 1 2 3 4 # rabbitmqctl list_bindings Listing bindings exchange amq.gen-gFj_8p_zIA4a2rpIpTSYcA queue amq.gen-gFj_8p_zIA4a2rpIpTSYcA [] logs exchange amq.gen-gFj_8p_zIA4a2rpIpTSYcA queue amq.gen-gFj_8p_zIA4a2rpIpTSYcA [] 4. \u8def\u7531 \u00b6 1. Binging \u00b6 \u7ed1\u5b9a\u628a\u4ea4\u6362\u5668\u548c\u961f\u5217\u5173\u8054\u8d77\u6765\uff0c\u961f\u5217\u53ef\u4ee5\u4ece\u4ea4\u6362\u5668\u90a3\u91cc\u53ea\u63a5\u6536\u81ea\u5df1\u201c\u611f\u5174\u8da3\u201d\u7684\u6d88\u606f 2. Direct \u4ea4\u6362\u5668 \u00b6 fanout \u4ea4\u6362\u5668\u4f1a\u201c\u65e0\u8111\u201d\u7684\u628a\u6d88\u606f\u5e7f\u64ad\u7ed9\u6bcf\u4e2a\u6d88\u8d39\u8005\uff0c\u4f46\u662f\u6709\u65f6\u5019\u6211\u4eec\u5e76\u4e0d\u9700\u8981\u6240\u6709\u7684\u6d88\u606f \u6bd4\u5982\u4e0a\u9762\u7684log\u4f8b\u5b50\u4e2d\uff0c\u5047\u5982\u6d88\u8d39\u8005\u53ea\u60f3\u63a5\u6536\u9519\u8bef\u65e5\u5fd7\u65f6\u5c31\u9700\u8981\u7528direct \u4ea4\u6362\u5668\u6765\u5b9e\u73b0\u4e86 \u6700\u7ec8\u4ee3\u7801 \u751f\u4ea7\u8005 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 mport pika import sys connection = pika . BlockingConnection ( pika . ConnectionParameters ( 'localhost' )) channel = connection . channel () channel . exchange_declare ( exchange = 'logs' , exchange_type = 'direct' ) # \u5b9a\u4e49\u65e5\u5fd7\u7ea7\u522b severity = sys . argv [ 1 ] if len ( sys . argv ) > 1 else 'info' # \u6d88\u606f\u5185\u5bb9 message = ' ' . join ( sys . argv [ 2 :]) or \"Hello World!\" # \u521b\u5efa\u4e00\u4e2a\u4ea4\u6362\u673a channel . basic_publish ( exchange = 'logs' , routing_key = severity , # \u5728fanout\u6a21\u5f0f\u4e0b\uff0c\u8def\u7531\u952e\u88ab\u5ffd\u7565 body = message ) print ( \" [\u00d7] Sent %r : %r \" % ( severity , message )) connection . close () \u6d88\u8d39\u8005 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 import pika import sys connection = pika . BlockingConnection ( pika . ConnectionParameters ( host = 'localhost' )) channel = connection . channel () channel . exchange_declare ( exchange = 'logs' , exchange_type = 'direct' ) # \u6d88\u8d39\u5b8c\u4e4b\u540e\u5220\u9664\u961f\u5217 result = channel . queue_declare ( exclusive = True ) # \u751f\u6210\u4e00\u4e2a\u968f\u673a\u961f\u5217 queue_name = result . method . queue # \u6d88\u8d39\u8005\u63a5\u6536\u65e5\u5fd7\u7684\u7ea7\u522b severities = sys . argv [ 1 :] if not severities : sys . stderr . write ( \"Usage: %s [info] [warning] [error] \\n \" % sys . argv [ 0 ]) for severity in severities : channel . queue_bind ( exchange = 'logs' , queue = queue_name , routing_key = severity ) print ( '[*] Waiting for messages. To exit press CTRL+C' ) # \u5b9a\u4e49\u4e00\u4e2a\u56de\u8c03\u51fd\u6570\u6765\u5904\u7406\u6d88\u606f\uff0c\u51fd\u6570\u683c\u5f0f\u56fa\u5b9a def callback ( ch , method , properties , body ): print ( \"[\u00d7] %r : %r \" % ( method . routing_key , body )) # \u5b9a\u4e49\u4ece\u54ea\u4e2a\u961f\u5217\u63a5\u6536\u6d88\u606f\u4ee5\u53ca\u5904\u7406\u6d88\u606f\u7684\u51fd\u6570 channel . basic_consume ( callback , queue = queue_name , no_ack = True ) channel . start_consuming () \u9a8c\u8bc1\uff1a \u5f00\u56db\u4e2a\u7a97\u53e3\uff0c\u4e00\u4e2a\u53d1\u9001\uff0c\u4e09\u4e2a\u63a5\u6536 shell 1 1 2 3 4 5 6 # \u7b2c\u4e00\u6b21\u53d1\u9001info\u7ea7\u522b\u7684\u65e5\u5fd7 $ python3 send.py info hello [ \u00d7 ] Sent 'info' : 'hello' # \u7b2c\u4e8c\u6b21\u53d1\u9001warning\u7ea7\u522b\u7684\u65e5\u5fd7 $ python3 send.py warning world [ \u00d7 ] Sent 'warning' : 'world' shell 2 1 2 3 4 # \u53ea\u63a5\u6536info\u7ea7\u522b\u65e5\u5fd7\u7ea7\u522b\u7684\u6d88\u8d39\u8005\u90fd\u6536\u5230\u65e5\u5fd7 $ python3 receive.py info [ * ] Waiting for messages. To exit press CTRL+C [ \u00d7 ] 'info' :b 'hello' shell 3 1 2 3 4 # \u53ea\u5c31\u6536warning\u7ea7\u522b\u65e5\u5fd7\u7684\u6d88\u8d39\u8005\u53ea\u6536\u5230\u7b2c\u4e8c\u6b21\u53d1\u9001\u7684\u6d88\u606f $ python3 receive.py warning [ * ] Waiting for messages. To exit press CTRL+C [ \u00d7 ] 'warning' :b 'world' shell 4 1 2 3 4 # \u53ea\u63a5\u6536info\u7ea7\u522b\u65e5\u5fd7\u7ea7\u522b\u7684\u6d88\u8d39\u8005\u90fd\u6536\u5230\u65e5\u5fd7 $ python3 receive.py info [ * ] Waiting for messages. To exit press CTRL+C [ \u00d7 ] 'info' :b 'hello' 5. \u4e3b\u9898 \u00b6 6. RPC \u00b6 \u4e09\u3001\u8fd0\u7ef4 \u00b6 1.\u5b89\u88c5 \u00b6 1. \u7f16\u8bd1\u5b89\u88c5 \u00b6 1.1. \u5b89\u88c5\u7f16\u8bd1\u5de5\u5177 \u00b6 1 2 $ sudo apt update $ sudo apt install gcc make 1.2. \u5b89\u88c5ncurses \u00b6 1 2 3 4 5 6 $ wget http://ftp.gnu.org/gnu/ncurses/ncurses-6.1.tar.gz $ tar zxf ncurses-6.1.tar.gz $ cd ncurses-6.1 $ ./configure $ make $ sudo make install 1.3. \u5b89\u88c5openssl \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 $ wget https://www.openssl.org/source/old/1.0.2/openssl-1.0.2p.tar.gz $ sudo mkdir /usr/local/openssl $ tar zxf openssl-1.0.2p.tar.gz $ cd openssl-1.0.2p/ $ ./config --prefix = /usr/local/openssl #\u65b0\u7248\u672copenssl\u9ed8\u8ba4\u7f16\u8bd1\u51fa\u6765\u7684libcrypto.a\u662f\u6ca1\u6709\u52a0-fPIC\u53c2\u6570\u7684\uff0c\u5f53\u91cd\u5b9a\u4f4d\u88ab\u5f15\u7528\u7684\u4ee3\u7801 #\u6bb5\u6570\u636e\u5bf9\u8c61\u65f6\u51fa\u9519\u3002 #\u4fee\u6539openssl\u6e90\u7801\u7684Makefile #\u53c2\u8003\uff1ahttps://blog.csdn.net/erlib/article/details/20995947 #\u5728CFLAG=\u3000\u6dfb\u52a0\u3000-fPIC $ vi Makefile CC = gcc CFLAG = -fPIC ... $ make $ sudo make install 1.4. \u5b89\u88c5erlang\u73af\u5883 \u00b6 1 2 3 4 5 6 7 8 9 #\u4e0b\u8f7derlang\uff1ahttp://www.erlang.org/downloads/19.3 #\u5b89\u88c5\u6307\u5357\uff1ahttp://erlang.org/doc/installation_guide/INSTALL.html $ wget http://erlang.org/download/otp_src_19.3.tar.gz $ tar zxf otp_src_19.3.tar.gz $ sudo mkdir /usr/local/erlang $ cd otp_src_19.3/ $ ./configure --prefix = /usr/local/erlang/ --with-ssl = /usr/local/openssl $ make && sudo make install 1.5. \u5b89\u88c5rabbitmq \u00b6 1 2 3 4 5 # rabbitmq\u4e0b\u8f7d\u5730\u5740\uff1ahttp://www.rabbitmq.com/releases/rabbitmq-server/ # \u4e0b\u8f7d\u9700\u8981\u5b89\u88c5\u7684\u7248\u672c\uff1a $ wget http://www.rabbitmq.com/releases/rabbitmq-server/v3.6.12/rabbitmq-server-generic-unix-3.6.12.tar.xz $ tar xJf rabbitmq-server-generic-unix-3.6.12.tar.xz $ sudo mv rabbitmq_server-3.6.12 /usr/local/rabbitmq 1.6. \u914d\u7f6e\u73af\u5883\u53d8\u91cf \u00b6 1 2 3 4 5 6 $ cat /etc/profile export ERLANG_HOME = /usr/local/erlang export PATH = $ERLANG_HOME /bin: $PATH export RABBITMQ_HOME = /usr/local/rabbitmq export PATH = $RABBITMQ_HOME /sbin: $PATH $ source /etc/profile 1.7. \u542f\u52a8\u670d\u52a1 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 $ rabbitmq-server -detached Warning: PID file not written ; -detached was passed. # \u4f7f\u7528-detached\u4e0d\u4f1a\u751f\u4ea7pid\u6587\u4ef6 # \u67e5\u770brabbitmq\u72b6\u6001 $ rabbitmqctl status Status of node rabbit@node1 [{ pid,2162 } , { running_applications, [{ rabbit, \"RabbitMQ\" , \"3.6.12\" } , { mnesia, \"MNESIA CXC 138 12\" , \"4.14.3\" } , { ranch, \"Socket acceptor pool for TCP protocols.\" , \"1.3.0\" } , { ssl, \"Erlang/OTP SSL application\" , \"8.1.1\" } , { public_key, \"Public key infrastructure\" , \"1.4\" } , { asn1, \"The Erlang ASN1 compiler version 4.0.4\" , \"4.0.4\" } , { rabbit_common, \"Modules shared by rabbitmq-server and rabbitmq-erlang-client\" , \"3.6.12\" } , { syntax_tools, \"Syntax tools\" , \"2.1.1\" } , { os_mon, \"CPO CXC 138 46\" , \"2.4.2\" } , { crypto, \"CRYPTO\" , \"3.7.3\" } , { xmerl, \"XML parser\" , \"1.3.13\" } , { compiler, \"ERTS CXC 138 10\" , \"7.0.4\" } , { sasl, \"SASL CXC 138 11\" , \"3.0.3\" } , { stdlib, \"ERTS CXC 138 10\" , \"3.3\" } , { kernel, \"ERTS CXC 138 10\" , \"5.2\" }]} , { os, { unix,linux }} , { erlang_version, \"Erlang/OTP 19 [erts-8.3] [source] [64-bit] [async-threads:64] [kernel-poll:true]\\n\" } , { memory, [{ connection_readers,0 } , { connection_writers,0 } , { connection_channels,0 } , { connection_other,0 } , { queue_procs,2600 } , { queue_slave_procs,0 } , { plugins,0 } , { other_proc,22505384 } , { metrics,42216 } , { mgmt_db,0 } , { mnesia,58288 } , { other_ets,1946128 } , { binary,52272 } , { msg_index,41080 } , { code,21412394 } , { atom,891849 } , { other_system,18227437 } , { total,65179648 }]} , { alarms, []} , { listeners, [{ clustering,25672, \"::\" } , { amqp,5672, \"::\" }]} , { vm_memory_calculation_strategy,rss } , { vm_memory_high_watermark,0.4 } , { vm_memory_limit,416343654 } , { disk_free_limit,50000000 } , { disk_free,6662619136 } , { file_descriptors, [{ total_limit,924 } , { total_used,2 } , { sockets_limit,829 } , { sockets_used,0 }]} , { processes, [{ limit,1048576 } , { used,151 }]} , { run_queue,0 } , { uptime,176 } , { kernel, { net_ticktime,60 }}] \u4ee5\u8fd9\u79cd\u65b9\u5f0f\u542f\u52a8\u65f6\uff0c\u5f53\u524d\u8282\u70b9\u4ee5rabbit@\u4e3b\u673a\u540d\u6765\u547d\u4ee4\u3002 \u6307\u5b9a\u8282\u70b9\u540d\u7684\u65b9\u6cd5 1 $ RABBITMQ_NODENAME = rabbit@\u540d\u79f0 rabbitmq-server -detached 2. \u7f51\u7edc\u6e90\u5b89\u88c5 \u00b6 \u7565 2. \u7ba1\u7406 \u00b6 1. \u865a\u62df\u4e3b\u673a\u7ba1\u7406 \u00b6 \u67e5\u770b\u73b0\u6709\u7684\u865a\u62df\u4e3b\u673a 1 2 3 4 # \u67e5\u770b\u73b0\u6709\u7684\u865a\u62df\u4e3b\u673a $ rabbitmqctl list_vhosts # \u67e5\u770b\u662f\u5426\u4f7f\u7528\u4e86trace\u529f\u80fd $ rabbitmqctl list_vhosts name tracing \u6dfb\u52a0\u4e00\u4e2a\u865a\u62df\u4e3b\u673a 1 $ rabbitmqctl add_vhost { \u865a\u62df\u4e3b\u673a\u540d } \u5220\u9664\u4e00\u4e2a\u865a\u62df\u4e3b\u673a 1 $ rabbitmqctl delete_vhost { \u865a\u62df\u4e3b\u673a\u540d } \u67e5\u770b\u865a\u62df\u673a\u6743\u9650 1 $ rabbitmqctl list_permissions -p { \u865a\u62df\u4e3b\u673a\u540d } \u865a\u62df\u673a\u6743\u9650\u6388\u4e88 1 rabbitmqctl set_permissions -p { \u865a\u62df\u4e3b\u673a\u540d } { \u7528\u6237\u540d } \".*\" \".*\" \".*\" \u683c\u5f0f\uff1arabbitmqctl set_permissions [-p vhost] {user} {conf} {write} {read} vhost:\u6388\u4e88\u7528\u6237\u8bbf\u95ee\u6743\u9650\u7684vhost\u7684\u540d\u79f0 user\uff1a\u53ef\u4ee5\u8bbf\u95ee\u6307\u5b9avhost\u7684\u7528\u6237\u540d conf:\u7528\u4e8e\u5339\u914d\u7528\u6237\u5728\u54ea\u4e9b\u8d44\u6e90\u662f\u62e5\u6709\u53ef\u914d\u7f6e\u6743\u9650\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\uff08\u961f\u5217\u548c\u4ea4\u6362\u673a\u7684\u521b\u5efa\u53ca\u5220\u9664\u4e4b\u7c7b\uff09 write\uff1a\u7528\u4e8e\u5339\u914d\u7528\u6237\u5728\u54ea\u4e9b\u8d44\u6e90\u662f\u62e5\u6709\u53ef\u5199\u6743\u9650\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\uff08\u53d1\u5e03\u6d88\u606f\uff09 read\uff1a\u7528\u4e8e\u5339\u914d\u7528\u6237\u5728\u54ea\u4e9b\u8d44\u6e90\u662f\u62e5\u6709\u53ef\u8bfb\u6743\u9650\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\uff08\u8bfb\u53d6\u6d88\u606f\u548c\u6e05\u7a7a\u961f\u5217\uff09 \u67e5\u770b\u7528\u6237\u7684\u6743\u9650 1 $ rabbitmqctl list_user_permissions { USER } 2. \u7528\u6237\u7ba1\u7406 \u00b6 \u521b\u5efa\u7528\u6237\u5e76\u8bbe\u7f6e\u5bc6\u7801 1 $ rabbitmqctl add_user { username } { password } \u66f4\u6539\u5bc6\u7801 1 $ rabbitmqctl change_password { username } { new password } \u6e05\u9664\u5bc6\u7801 1 $ rabbitmqctl clear_password { username } \u67e5\u770b\u73b0\u6709\u7528\u6237 1 $ rabbitmqctl list_users \u8bbe\u7f6e\u7528\u6237\u89d2\u8272 1 2 3 4 5 6 7 $ rabbitmqctl set_user_tags { username } { roles } \u7528\u6237\u89d2\u8272\u7c7b\u578b\uff1a none: \u65e0\u4efb\u4f55\u89d2\u8272\uff0c\u65b0\u521b\u5efa\u7684\u7528\u6237\u89d2\u8272\u9ed8\u8ba4\u4e3anone management:\u53ef\u4ee5\u8bbf\u95eeweb\u7ba1\u7406\u754c\u9762 policymaker:\u5305\u542bmanagement\u7684\u6240\u6709\u6743\u9650\uff0c\u5e76\u53ef\u53ef\u4ee5\u7ba1\u7406\u7b56\u7565\u548c\u53c2\u6570 monitoring:\u5305\u542bmanagement\u7684\u6240\u6709\u6743\u9650\uff0c\u53ef\u4ee5\u770b\u5230\u6240\u6709\u8fde\u63a5\u3001\u4fe1\u9053\u53ca\u8282\u70b9\u76f8\u5173\u4fe1\u606f administrator: \u6700\u9ad8\u6743\u9650 \u9a8c\u8bc1\u7528\u6237\u662f\u5426\u80fd\u767b\u9646\u6210\u529f 1 $ rabbitmqctl authenticate_user { username } { password } \u5220\u9664\u7528\u6237 1 $ rabbitmqctl delete_user { username } 3. WEB\u7aef\u7ba1\u7406 \u00b6 \u67e5\u770b\u53ef\u7528\u63d2\u4ef6 1 2 $ rabbitmq-plugins list # [E*] \u4e3a\u663e\u5f0f\u542f\u52a8\uff1b[e*] \u4e3a\u9690\u5f0f\u542f\u52a8 \u63d2\u4ef6\u8def\u5f84\uff1a$RABBITMQ_HOME/plugins \u542f\u7528web\u7ba1\u7406\u63d2\u4ef6 1 2 3 $ rabbitmq-plugins enable rabbitmq_management $ netstat -lant | grep 15672 tcp 0 0 0 .0.0.0:15672 0 .0.0.0:* LISTEN \u521b\u5efa\u4e00\u4e2a\u5177\u6709\u7ba1\u7406\u5458\u8eab\u4efd\u7684\u7528\u6237 1 2 $ rabbitmqctl add_user admin admin $ rabbitmqctl set_user_tags admin administrator \u767b\u9646\u7ba1\u7406\u754c\u9762 http://serverip:15672 \u5173\u95ed\u63d2\u4ef6 1 $ rabbitmq-plugins disable rabbitmq_management 4. \u5e94\u7528\u7ba1\u7406 \u00b6 \u505c\u6b62\u670d\u52a1 1 2 3 4 # \u505c\u6b62\u8fd0\u884cRabbitmq Erlang\u865a\u62df\u673a\u548cRabbitmq\u670d\u52a1\u5e94\u7528 $ rabbitmqctl stop # \u505c\u6b62\u8fd0\u884cRabbitmq Erlang\u865a\u62df\u673a\u548cRabbitmq\u670d\u52a1\u5e94\u7528\uff08\u963b\u585e\u76f4\u5230Erlang\u865a\u62df\u673a\u8fdb\u7a0b\u9000\u51fa\uff09 $ rabbitmqctl shutdown \u505c\u6b62Rabbitmq\u5e94\u7528(Erlang\u865a\u62df\u673a\u5904\u4e8e\u8fd0\u884c\u72b6\u6001) 1 $ rabbitmqctl stop_app \u542f\u52a8Rabbitmq\u5e94\u7528 1 $ rabbitmqctl start_app \u91cd\u7f6e\u8282\u70b9\uff0c\u8fd8\u539f\u5230\u6700\u521d\u72b6\u6001 1 $ rabbitmqctl reset \u65e5\u5fd7\u8f6c\u50a8 1 $ rabbitmqctl rotate_logs { \u540e\u7f00 } 5. \u670d\u52a1\u72b6\u6001 \u00b6 \u961f\u5217\u72b6\u6001 \u683c\u5f0f\uff1arabbitmqctl list_queues [-p vhost] [queueinfoitem ...] 1 $ rabbitmqctl list_queues -p myvhost \u4ea4\u6362\u673a\u72b6\u6001 \u683c\u5f0f\uff1arabbitmqctl list_exchange [-p vhost] [exchangeinfoitem ...] 1 $ rabbitmqctl list_exchanges -p myvhost name type durable auto_delete internal arguments policy bind\u72b6\u6001 \u683c\u5f0f\uff1arabbitmqctl list bindings [-p vhost] [bindinginfoitem ...] 1 $ rabbitmqctl list_bindings -p myvhost -q \u8fde\u63a5\u72b6\u6001 \u683c\u5f0f\uff1arabbitmqctllist_connections [connectioninfoitem ...] 1 $ rabbitmqctl list_connections \u4fe1\u9053\u72b6\u6001 \u683c\u5f0f\uff1a rabbitmqctl list_channels [channelinfoitem ...] 1 $ rabbitmqctl list_channels \u6d88\u8d39\u8005\u72b6\u6001 \u683c\u5f0f\uff1arabbitmqctl list_consumers [-p vhost] 1 $ rabbitmqctl list_consumers -p / \u670d\u52a1\u72b6\u6001 1 2 3 4 5 6 7 8 # Broker \u72b6\u6001 $ rabbitmqctl status # \u8282\u70b9\u5065\u5eb7\u68c0\u6d4b $ rabbitmqctl node_health_check # \u73af\u5883\u53d8\u91cf\u540d\u79f0\u548c\u503c $ rabbitmqctl environment # \u751f\u6210\u670d\u52a1\u72b6\u6001\u62a5\u544a $ rabbitmqctl report > report.txt 3. \u914d\u7f6e \u00b6 1. \u73af\u5883\u53d8\u91cf \u00b6 \u73af\u5883\u53d8\u91cf\u4f18\u5148\u7ea7\uff1aSHELL\u73af\u5883>rabbitmq-env.conf>\u9ed8\u8ba4\u914d\u7f6e rabbitmq-env.conf:\\$RABBITMQ_HOME/etc/rabbitmq/rabbitmq-env.conf \u9ed8\u8ba4\u914d\u7f6e\uff1a\\$RABBITMQ_HOME/sbin/rabbitmq-defaults 2. \u914d\u7f6e\u6587\u4ef6 \u00b6 \u914d\u7f6e\u6587\u4ef6\u793a\u4f8b\uff1ahttps://github.com/rabbitmq/rabbitmq-server/blob/v3.7.x/docs/rabbitmq.conf.example 3. \u4f18\u5316\u914d\u7f6e \u00b6 \u5185\u6838\u53c2\u6570 1 2 3 net.ipv4.tcp_fID_timeout = 5 net.core.somaxconn = 128 net.ipv4.tcp_max_syn_backlog = 4096 4. \u96c6\u7fa4 \u00b6 Rabbitmq\u96c6\u7fa4\u4e2d\u7684\u6240\u6709\u8282\u70b9\u90fd\u4f1a\u5907\u4efd\u6240\u6709\u5143\u6570\u636e\u4fe1\u606f\uff0c\u5305\u62ec: \u961f\u5217\u5143\u6570\u636e\uff1a\u961f\u5217\u7684\u540d\u79f0\u53ca\u5c5e\u6027 \u4ea4\u6362\u5668\uff1a\u4ea4\u6362\u5668\u7684\u540d\u79f0\u53ca\u5c5e\u6027 \u7ed1\u5b9a\u5173\u7cfb\u5143\u6570\u636e\uff1a\u4ea4\u6362\u5668\u4e0e\u961f\u5217\u6216\u8005\u4ea4\u6362\u5668\u4e0e\u4ea4\u6362\u5668\u4e4b\u95f4\u7684\u7ed1\u5b9a\u5173\u7cfb\uff1b vhost\u6570\u636e\uff1a\u4e3avhost\u5185\u7684\u961f\u5217\u3001\u4ea4\u6362\u5668\u548c\u7ed1\u5b9a\u63d0\u4f9b\u547d\u540d\u7a7a\u95f4\u53ca\u5b89\u5168\u5c5e\u6027\u3002 \u6d88\u606f\u4e0d\u4f1a\u5907\u4efd\uff08\u901a\u8fc7\u914d\u7f6e\u955c\u50cf\u961f\u5217\u53ef\u4ee5\u89e3\u51b3\uff09 :\u53ea\u4f1a\u5728\u5355\u8282\u70b9\u521b\u5efa\u961f\u5217\u5e76\u5305\u542b\u5b8c\u6574\u7684\u961f \u5217\u4fe1\u606f\uff08\u5143\u6570\u636e\u3001\u72b6\u6001\u3001\u5185\u5bb9\uff09\u3002 1. \u96c6\u7fa4\u642d\u5efa \u00b6 \u5b89\u88c5rabbitmq \u53c2\u7167\u4e00.1\u4e2d\u7684\u6b65\u9aa4\u5b89\u88c5\u4e09\u53f0rabbitmq\u670d\u52a1\u5668 \u914d\u7f6eDNS\u89e3\u6790 1 2 3 4 cat /etc/hosts 172 .16.10.101 node1 172 .16.10.102 node2 172 .16.10.103 node3 \u542f\u52a8node1 1 [ ubuntu@nodel:~$ rabbitmq-server -detached \u62f7\u8d1dnode1\u7684cookie\u6587\u4ef6\u5230node2\uff0cnode3 \u7f16\u8bd1\u5b89\u88c5\u7684cookie\u6587\u4ef6\u5728\u3000$HOME/.erlang.cookie 1 2 ubuntu@node1:~$ scp $HOME /.erlang.cookie ubuntu@node2:~/ ubuntu@node1:~$ scp $HOME /.erlang.cookie ubuntu@node3:~/ \u914d\u7f6e\u96c6\u7fa4 \u96c6\u7fa4\u914d\u7f6e\u7684\u65b9\u5f0f\uff1a rabbitmqctl \u6700\u5e38\u7528 rabbitmq.config rabbitmq-autocluster \u5c06node2\u52a0\u5165\u96c6\u7fa4 1 2 3 4 5 6 7 8 9 ubuntu@node2:~$ rabbitmq-server -detached ubuntu@node2:~$ rabbitmqctl stop_app Stopping rabbit application on node rabbit@node2 ubuntu@node2:~$ rabbitmqctl reset Resetting node rabbit@node2 ubuntu@node2:~$ rabbitmqctl join_cluster rabbit@node1 Clustering node rabbit@node2 with rabbit@node1 ubuntu@node2:~$ rabbitmqctl start_app Starting node rabbit@node2 \u5c06node3\u52a0\u5165\u96c6\u7fa4 1 2 3 4 5 6 7 8 9 ubuntu@node3:~$ rabbitmq-server -detached ubuntu@node3:~$ rabbitmqctl stop_app Stopping rabbit application on node rabbit@node3 ubuntu@node3:~$ rabbitmqctl reset Resetting node rabbit@node3 ubuntu@node3:~$ rabbitmqctl join_cluster rabbit@node1 Clustering node rabbit@node3 with rabbit@node1 ubuntu@node3:~$ rabbitmqctl start_app Starting node rabbit@node3 \u67e5\u770b\u96c6\u7fa4\u72b6\u6001 1 2 3 4 5 6 7 ubuntu@node1:~$ rabbitmqctl cluster_status Cluster status of node rabbit@node1 [{ nodes, [{ disc, [ rabbit@node1,rabbit@node2,rabbit@node3 ]}]} , { running_nodes, [ rabbit@node3,rabbit@node2,rabbit@node1 ]} , { cluster_name,<< \"rabbit@node1\" >> } , { partitions, []} , { alarms, [{ rabbit@node3, []} , { rabbit@node2, []} , { rabbit@node1, []}]}] \u5982\u679c\u5173\u95ed\u4e86\u96c6\u7fa4\u4e2d\u6240\u6709\u7684\u8282\u70b9\uff0c\u5219\u9700\u8981\u4fdd\u8bc1\u5728\u542f\u52a8\u7684\u65f6\u5019\u6700\u540e\u5173\u95ed\u7684\u90a3\u4e2a\u8282\u70b9\u662f\u7b2c\u4e00\u4e2a\u542f\u52a8 \u7684\u3002\u5982\u679c\u7b2c\u4e00\u4e2a\u8d77\u5230\u80fd\u591f\u7684\u4e0d\u662f\u6700\u540e\u5173\u95ed\u7684\u8282\u70b9\uff0c\u90a3\u4e48\u8fd9\u4e2a\u8282\u70b9\u4f1a\u7b49\u5f85\u6700\u540e\u5173\u95ed\u7684\u8282\u70b9\u542f\u52a8\u3002 \u9ed8\u8ba4\u91cd\u8bd510\u6b2130s\u4ee5\u7b49\u5f85\u6700\u540e\u5173\u95ed\u7684\u8282\u70b9\u542f\u52a8\u3002\u5728\u91cd\u8bd5\u5931\u8d25\u4e4b\u540e\uff0c\u5f53\u524d\u8282\u70b9\u4e5f\u4f1a\u56e0\u4e3a\u5931\u8d25\u800c \u5173\u95ed\u81ea\u8eab\u7684\u5e94\u7528\u3002\u5982\u679c\u6700\u540e\u4e00\u4e2a\u5173\u95ed\u7684\u8282\u70b9\u6700\u7ec8\u7531\u4e8e\u67d0\u4e9b\u5f02\u5e38\u800c\u65e0\u6cd5\u542f\u52a8\uff0c\u5219\u53ef\u4ee5\u901a\u8fc7rab bitmqctlforget_cluster_node \u547d\u4ee4\u6765\u5c06\u6b64\u8282\u70b9\u8e22\u51fa\u96c6\u7fa4\u3002 \u5982\u679c\u6240\u6709\u7684\u8282\u70b9\u56e0\u4e3a\u67d0\u4e9b\u56e0\u7d20(\u65ad\u7535\u7b49)\u5173\u95ed\uff0c\u90a3\u4e48\u96c6\u7fa4\u4e2d\u7684\u8282\u70b9\u4f1a\u8ba4\u4e3a\u8fd8\u6709\u5176\u4ed6\u8282\u70b9\u5728\u5176\u540e \u9762\u5173\u95ed\u3002\u9700\u8981\u8c03\u7528rabbitmqctl force_boot\u6765\u542f\u52a8\u4e00\u4e2a\u8282\u70b9\uff0c\u4e4b\u540e\u96c6\u7fa4\u624d\u80fd\u6b63\u5e38\u542f\u52a8\u3002 2. \u96c6\u7fa4\u7ba1\u7406 \u00b6 1. \u96c6\u7fa4\u8282\u70b9\u7684\u7c7b\u578b \u00b6 \u78c1\u76d8\u8282\u70b9 \u96c6\u7fa4\u4e2d\u81f3\u5c11\u8981\u67092\u4e2a\u78c1\u76d8\u8282\u70b9 \u5982\u679c\u53ea\u6709\u4e00\u4e2a\u78c1\u76d8\u8282\u70b9\uff0c\u5f53\u78c1\u76d8\u8282\u70b9\u5d29\u6e83\u65f6\uff0c\u76f4\u8fbe\u8be5\u8282\u70b9\u6062\u590d\u4e4b\u524d\u3002\u4e0d\u80fd\u6267\u884c\u521b\u5efa\u961f\u5217\u3001\u4ea4\u6362 \u5668\u3001\u7ed1\u5b9a\u5173\u7cfb\u3001\u7528\u6237\uff0c\u4ee5\u53ca\u6743\u9650\u66f4\u6539\u3001\u6dfb\u52a0\u6216\u5220\u9664\u96c6\u7fa4\u8282\u70b9\u7684\u64cd\u4f5c \u5185\u5b58\u8282\u70b9 \u5185\u5b58\u8282\u70b9\u552f\u4e00\u5b58\u50a8\u5230\u78c1\u76d8\u7684\u5143\u6570\u636e\u4fe1\u606f\u662f\u96c6\u7fa4\u53ea\u80fd\u602a\u78c1\u76d8\u8282\u70b9\u7684\u5730\u5740\u3002\u53ea\u8981\u5185\u5b58\u8282\u70b9\u53ef\u4ee5\u627e\u5230 \u81f3\u5c11\u4e00\u5757\u76d8\uff0c\u90a3\u4e48\u5b83\u5c31\u80fd\u5728\u91cd\u542f\u4ee5\u540e\u91cd\u65b0\u52a0\u5165\u96c6\u7fa4\u4e2d \u5355\u96c6\u7fa4\u8282\u70b9\u4e2d\u53ea\u6709\u78c1\u76d8\u7c7b\u578b\u7684\u8282\u70b9\uff0c\u5426\u5219\u91cd\u542f\u540e\u6570\u636e\u5c31\u4f1a\u4e22\u5931 \u52a0\u5165\u8282\u70b9\u65f6\u6307\u5b9a\u8282\u70b9\u7c7b\u578b 1 rabbitmqctl join_cluster rabbit@node1 --ram \u6539\u53d8\u8282\u70b9\u7c7b\u578b(\u9700\u8981\u5148stop_app) 1 ubuntu@node2:~$ rabbitmqctl change_cluster_node_type { disc | ram } 2. \u5254\u9664\u5355\u4e2a\u8282\u70b9 \u00b6 \u5254\u9664\u8282\u70b9\u6709\u4e24\u79cd\u65b9\u5f0f\uff0c\u4ee5\u5254\u9664node2\u4e3a\u4f8b \u88ab\u52a8\u5254\u9664 \u5148\u5728node2\u5173\u95edrabbitmq\uff1a rabbitmqctl stop_app \u7136\u540e\u5728node1\u4e0a\u628anode2\u5254\u9664\uff1a rabbitmqctl forget_cluster_node rabbit@node2 \u4e3b\u52a8\u5254\u9664 \u505c\u6b62\u5e94\u7528\uff1arabbitmqctl stop_app \u91cd\u7f6erabbitmq \uff1arabbitmqctl reset 3. \u603b\u7ed3 \u00b6 \u67e5\u770b\u96c6\u7fa4\u72b6\u6001 1 $ rabbitmqctl cluster_status \u4fee\u6539\u96c6\u7fa4\u8282\u70b9\u7c7b\u578b 1 2 # \u9700\u8981\u73b0\u505c\u6b62rabbitmq\u5e94\u7528\uff1arabbitmqctl stop_app $ rabbitmqctl change_cluster_node_type { disc | ram } \u5c06\u8282\u70b9\u4ece\u96c6\u7fa4\u4e2d\u5220\u9664 1 $ rabbitmqctl forget_cluster_node { \u8282\u70b9\u540d\u79f0 } \u542f\u52a8\u524d\u54a8\u8be2\u96c6\u7fa4\u8282\u70b9\u7684\u6700\u65b0\u4fe1\u606f 1 rabbitmqctl update_cluster_nodes { \u8282\u70b9\u540d\u79f0 } \u65ad\u7535\u540e\u91cd\u542f \u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u91cd\u542f\u7684\u7b2c\u4e00\u4e2a\u8282\u70b9\u5e94\u8be5\u662f\u6700\u540e\u5173\u95ed\u7684\u8282\u70b9 1 $ rabbitmqctl force_boot \u540c\u6b65\u961f\u5217 1 2 # \u524d\u63d0\u6761\u4ef6\u662f\u961f\u5217\u914d\u7f6e\u4e86\u955c\u50cf $ rabbitmqctl sync_queue queue \u8bbe\u7f6e\u96c6\u7fa4\u540d\u79f0 \u9ed8\u8ba4\u662f\u96c6\u7fa4\u4e2d\u7b2c\u4e00\u4e2a\u8282\u70b9\u7684\u540d\u79f0 1 $ rabbitmqctl set_cluster_name { name } 3. \u96c6\u7fa4\u76d1\u63a7 \u00b6 \u901a\u8fc7HTTP API\u63d0\u4f9b\u76d1\u63a7\u6570\u636e \u901a\u8fc7\u5ba2\u6237\u7aef\u63d0\u4f9b\u76d1\u63a7\u6570\u636e \u5143\u6570\u636e\u7ba1\u7406\u4e0e\u76d1\u63a7 4. \u961f\u5217\u955c\u50cf \u00b6 \u96c6\u7fa4\u4e2d\u7684\u6bcf\u4e2a\u8282\u70b9\u90fd\u53ef\u4ee5\u4fdd\u5b58\u5143\u6570\u636e\uff0c\u4f46\u662f\u6d88\u606f\u53ea\u5728\u5355\u8282\u70b9\u4e0a\u4fdd\u5b58\uff0c\u4f7f\u7528\u955c\u50cf\u961f\u5217\u53ef\u4ee5\u5c06\u961f\u5217\u955c\u50cf\u5230 \u96c6\u7fa4\u4e2d\u7684\u5176\u4ed6Broker\u4e0a\uff0c\u5982\u679c\u96c6\u7fa4\u4e2d\u7684\u4e00\u4e2a\u8282\u70b9\u5931\u6548\u4e86\uff0c\u961f\u5217\u80fd\u81ea\u52a8\u5207\u6362\u5230\u955c\u50cf\u4e2d\u7684\u53e6\u4e00\u4e2a\u8282\u70b9\u4e0a\u3002 \u955c\u50cf\u961f\u5217\u90fd\u5305\u542b\u4e00\u4e2amaster\u8282\u70b9\uff0c\u548c\u82e5\u5e72\u4e2a\u4ece\u8282\u70b9\u3002\u5982\u679cmaster\u7531\u4e8e\u67d0\u79cd\u539f\u56e0\u5931\u6548\uff0c\u90a3\u4e48\u8d44\u5386\u6700\u8001 \u7684\uff08\u52a0\u5165\u96c6\u7fa4\u65f6\u95f4\u6700\u957f\u7684\uff09slave\u4f1a\u88ab\u63d0\u5347\u4e3a\u65b0\u7684master\u3002\u53d1\u9001\u5230\u955c\u50cf\u961f\u5217\u7684\u6240\u6709\u6d88\u606f\u4f1a\u540c\u65f6\u53d1\u5f80 master\u548c\u6240\u6709\u7684slave\uff0c\u5982\u679c\u6b64\u65f6master\u6302\u4e86\uff0c\u6d88\u606f\u8fd8\u4f1a\u5728slave\u4e0a\u3002\u9664\u4e86\u53d1\u9001\u6d88\u606f\u5916\u7684\u6240\u6709\u52a8\u4f5c \u90fd\u53ea\u4f1a\u5411master\u53d1\u9001\uff0c\u7136\u540e\u518d\u7531master\u5c06\u547d\u4ee4\u6267\u884c\u7684\u7ed3\u679c\u5e7f\u64ad\u7ed9\u5404\u4e2aslave\u3002 \u6d88\u8d39\u8005\u8ba2\u9605\u7684\u6d88\u606f\u5b9e\u9645\u4e0a\u90fd\u662f\u4ecemaster\u83b7\u53d6\u6d88\u606f\uff0c\u6bd4\u5982\u6d88\u8d39\u8005\u8fde\u63a5\u5230salve \u6d88\u8d39\u8005\u4e0eslave\u5efa\u7acb\u8fde\u63a5-->\u6d88\u8d39\u8005\u53d1\u51faget\u8bf7\u6c42-->slave\u628a\u8bf7\u6c42\u8f6c\u7ed9master-->master\u51c6\u5907\u6570\u636e \u8fd4\u7ed9slave-->slave\u628a\u6570\u636e\u6295\u9012\u7ed9\u6d88\u8d39\u8005 \u4e8b\u5b9e\u4e0a\u961f\u5217\u7684master\u4e0d\u662f\u90fd\u5b58\u5728\u67d0\u4e00\u4e2a\u8282\u70b9\u4e0a\u7684\uff0c\u800c\u6bcf\u4e2a\u8282\u70b9\u4e0a\u65e2\u6709master\uff0c\u53c8\u6709slave\u3002\u961f\u5217\u7684 master\u662f\u5747\u5300\u5206\u5e03\u5728\u96c6\u7fa4\u4e2d\u7684\u5404\u4e2a\u8282\u70b9\u4e0a\u7684\u3002\uff08\u4e0d\u6070\u5f53\u7684\u6bd4\u4f8b\uff1a\u7c7b\u4f3c\u4e0e\u78c1\u76d8raid5\u7684\u90a3\u79cd\u5b58\u50a8) 1 $ rabbitmqctl set_policy ha-all \".*\" '{\"ha-mode\":\"all\",\"ha-sync-mode\":\"automatic\"}' 5. \u8d1f\u8f7d\u5747\u8861 \u00b6 \u96c6\u7fa4\u914d\u7f6e\u955c\u50cf\u961f\u5217\u4e4b\u540e\u518d\u914d\u7f6e\u8d1f\u8f7d\u5747\u8861 1. \u5ba2\u6237\u7aef\u5185\u90e8\u5b9e\u73b0 \u00b6 \u8d1f\u8f7d\u5747\u8861\u6d41\u7a0b\u7b97\u6cd5\uff1a \u8f6e\u8be2 \u52a0\u6743\u8f6e\u8be2 \u968f\u673a\u6cd5 \u52a0\u6743\u968f\u673a\u6cd5l \u6e90\u5730\u5740\u54c8\u5e0c \u6700\u5c0f\u8fde\u63a5\u6570\u6cd5 2. \u4f7f\u7528HAProxy \u00b6 1. \u5b89\u88c5haproxy \u00b6 1 2 3 4 5 6 7 8 $ sudo apt update && sudo apt install make gcc $ sudo apt install -y zlib1g-dev libpcre3-dev libssl-dev # \u76f4\u63a5\u4e0b\u8f7d\u88ab\u5899 $ wget http://www.haproxy.org/download/1.8/src/haproxy-1.8.19.tar.gz $ tar zxf haproxy-1.8.19.tar.gz $ sudo mkdir /usr/local/haproxy $ make TARGET = generic USE_PCRE = 1 USE_OPENSSL = 1 USE_ZLIB = 1 $ sodo make install PREFIX = /usr/loacal/haproxy 2. \u914d\u7f6e \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 $ sudo mkdir /usr/loacl/haproxy $ cat /usr/loacl/haproxy/haproxy.cnf # \u5168\u5c40\u914d\u7f6e global log 127 .0.0.1 local0 info maxconn 4096 chroot /usr/local/haproxy user haproxy group haproxy daemon pidfile /tmp/haproxy.pid # \u9ed8\u8ba4\u914d\u7f6e defaults log global mode tcp option tcplog option dontlognull retries 3 maxconn 2000 timeout connect 5s timeout client 60s timeout server 60s # \u7ed1\u5b9a\u914d\u7f6e frontend rabbitmq bind *:5672 mode tcp default_backend rabbitmq_cluster backend rabbitmq_cluster mode tcp balance roundrobin server node1 172 .16.10.101:5672 check inter 5000 rise 2 fall 3 weight 1 server node2 172 .16.10.102:5672 check inter 5000 rise 2 fall 3 weight 1 server node3 172 .16.10.103:5672 check inter 5000 rise 2 fall 3 weight 1 # haproxy \u76d1\u63a7 listen monitor bind *:8100 mode http stats enable stats auth admin:admin stats refresh 5s stats uri /haproxy?stats # \u786e\u8ba4\u670d\u52a1\u542f\u52a8 $ netstat -lant | egrep \"(8100|5672)\" tcp 0 0 0 .0.0.0:8100 0 .0.0.0:* LISTEN tcp 0 0 0 .0.0.0:5672 0 .0.0.0:* LISTEN 3. \u9a8c\u8bc1 \u00b6 3. keepalived\u5b9e\u73b0\u9ad8\u53ef\u7528+\u8d1f\u8f7d\u5747\u8861 \u00b6 \u5148\u6b20\u8005 \u7ed3\u5c3e \u00b6 \u4ee5\u4e0a\u5185\u5bb9\u662f\u770b\u4e66+\u5b9e\u8df5\u505a\u7684\u4e00\u4e9b\u7b14\u8bb0\uff0c\u6700\u540e\u4e00\u90e8\u5206\u60f3\u5199\u9ad8\u53ef\u7528\u76f8\u5173\u7684\u5185\u5bb9\uff08keepalived\u7b49\uff09\uff0c\u4f46\u662f \u77e5\u8bc6\u50a8\u5907\u8fd8\u6ca1\u5230\u3002\u540e\u671f\u4f1a\u4e13\u95e8\u5199\u4e00\u7bc7\u5173\u4e8elvs\u3001keepalived\u76f8\u5173\u7684\u3002\u672c\u6765\u8fd8\u884c\u5199\u4e00\u4e9b\u5173\u4e8epython \u5ba2\u6237\u7aef\u4f7f\u7528rabbitmq\u7684\u6559\u7a0b\uff0c\u80fd\u529b\u6709\u9650\uff0c\u8fd8\u662f\u770b \u5b98\u65b9\u624b\u518c \u5427","title":"Rabbitmq"},{"location":"software/middleware/rabbitmq/#_1","text":"","title":"\u4e00\u3001\u57fa\u7840\u77e5\u8bc6"},{"location":"software/middleware/rabbitmq/#1","text":"","title":"1. \u6d88\u606f\u4e2d\u95f4\u4ef6"},{"location":"software/middleware/rabbitmq/#1_1","text":"\u6d88\u606f \uff1a\u6d88\u606f\u662f\u6307\u5e94\u7528\u95f4\u4f20\u9001\u7684\u6570\u636e\uff0c\u53ef\u4ee5\u662f\u5b57\u7b26\u4e32\uff0cJSON\uff0c\u5185\u5d4c\u5bf9\u8c61\u7b49 \u6d88\u606f\u4e2d\u95f4\u4ef6 \uff1a\u662f\u6307\u5229\u7528\u9ad8\u6548\u53ef\u9760\u989d\u6d88\u606f\u4f20\u9012\u673a\u5236\u8fdb\u884c\u4e0e\u5e73\u53f0\u65e0\u5173\u7684\u6570\u636e\u4ea4\u6d41\uff0c\u5e76\u57fa\u4e8e\u6570\u636e\u901a\u4fe1\u6765\u8fdb\u884c\u5206\u5e03\u5f0f\u7cfb\u7edf\u96c6\u6210\u3002","title":"1. \u6d88\u606f\u4e0e\u6d88\u606f\u961f\u5217\u4e2d\u95f4\u4ef6"},{"location":"software/middleware/rabbitmq/#2","text":"\u70b9\u5bf9\u70b9\uff1a\u6d88\u606f\u751f\u4ea7\u8005\u751f\u4ea7\u6d88\u606f\u53d1\u9001\u5230queue\u4e2d\uff0c\u7136\u540e\u6d88\u606f\u6d88\u8d39\u8005\u4ecequeue\u4e2d\u53d6\u51fa\u5e76\u4e14\u6d88\u8d39\u6d88\u606f \u53d1\u5e03/\u8ba2\u9605\uff1a\u4f7f\u7528topic\u4f5c\u4e3a\u901a\u4fe1\u8f7d\u4f53","title":"2. \u6d88\u606f\u4f20\u9012\u6a21\u5f0f"},{"location":"software/middleware/rabbitmq/#3","text":"Rabbitmq\u3001Kafka\u3001ActiveMQ\u3001RocketMQ","title":"3.\u4e3b\u6d41\u4ea7\u54c1"},{"location":"software/middleware/rabbitmq/#4","text":"\u89e3\u8026 \u5197\u4f59\uff08\u5b58\u50a8\uff09\uff1a\u628a\u6570\u636e\u6301\u4e45\u5316\u76f4\u5230\u6570\u636e\u88ab\u5904\u7406\u5b8c \u6269\u5c55\u6027 \u524a\u5cf0\uff1a\u4f7f\u5173\u952e\u7ec4\u4ef6\u652f\u6491\u7a81\u53d1\u8bbf\u95ee\u538b\u529b \u53ef\u6062\u590d\u6027 \u987a\u5e8f\u4fdd\u8bc1\uff1a\u4fdd\u8bc1\u6570\u636e\u5904\u7406\u7684\u987a\u5e8f \u7f13\u51b2 \u5f02\u6b65\u901a\u4fe1","title":"4. \u6d88\u606f\u4e2d\u95f4\u4ef6\u7684\u4f5c\u7528"},{"location":"software/middleware/rabbitmq/#2-rabbitmq","text":"","title":"2. Rabbitmq"},{"location":"software/middleware/rabbitmq/#1_2","text":"http://www.rabbitmq.com/","title":"1. \u5b98\u7f51"},{"location":"software/middleware/rabbitmq/#2_1","text":"\u53ef\u9760\u6027\uff1a \u6301\u4e45\u5316\u3001\u4f20\u8f93\u786e\u8ba4\u3001\u53d1\u5e03\u786e\u8ba4 \u7075\u6d3b\u7684\u8def\u7531 \u6269\u5c55\u6027\uff1a\u96c6\u7fa4 \u9ad8\u53ef\u7528\u6027\uff1a \u96c6\u7fa4\u955c\u50cf \u591a\u79cd\u534f\u8bae\uff1aAMQP\u3001STOMP\u3001MQTT \u591a\u8bed\u8a00\u5ba2\u6237\u7aef\uff1aPython\u3001Java\u3001Ruby\u3001PHP\u3001C#\u3001JavaScript\u3001Go\u3001Elixir\u3001Objective-C\u3001Swift\u3001Spring AMQP \u7ba1\u7406\u754c\u9762 \u63d2\u4ef6\u673a\u5236","title":"2. \u7279\u70b9"},{"location":"software/middleware/rabbitmq/#3_1","text":"","title":"3. \u6982\u5ff5"},{"location":"software/middleware/rabbitmq/#1-producer","text":"\u751f\u4ea7\u8005\uff0c\u6295\u9012\u6d88\u606f\u7684\u4e00\u65b9\uff0c\u6d88\u606f\u7684\u7ec4\u6210\uff1a \u6d88\u606f\u4f53\uff1a\u5e26\u6709\u4e1a\u52a1\u903b\u8f91\u7ed3\u6784\u7684\u6570\u636e\uff08\u5982JSON\uff09 \u6807\u7b7e\uff1a\u4ea4\u6362\u5668\u540d\u79f0\u6216\u8def\u7531\u952e","title":"1. Producer"},{"location":"software/middleware/rabbitmq/#2-consumer","text":"\u6d88\u8d39\u8005\uff0c\u63a5\u6536\u6d88\u606f\u7684\u4e00\u65b9\uff0c\u6d88\u8d39\u4e00\u6761\u6d88\u606f\u65f6\u53ea\u6d88\u8d39\u6d88\u606f\u4f53\uff0c\u6d88\u606f\u7684\u6807\u7b7e\u5728\u8def\u7531\u7684\u8fc7\u7a0b\u4e2d\u4f1a\u4e22\u5f03","title":"2. Consumer"},{"location":"software/middleware/rabbitmq/#3-broker","text":"\u6d88\u606f\u4e2d\u95f4\u4ef6\u7684\u670d\u52a1\u8282\u70b9\uff0c\u53ef\u4ee5\u7b80\u5355\u7684\u770b\u4f5c\u4e00\u4e2aRabbitmq\u670d\u52a1\u8282\u70b9\u6216\u8005Rabbitmq\u670d\u52a1\u5b9e\u4f8b","title":"3. Broker"},{"location":"software/middleware/rabbitmq/#4-queue","text":"\u961f\u5217\uff0cRabbitmq\u7684\u5185\u90e8\u5bf9\u8c61\uff0c\u7528\u6765\u5b58\u50a8\u6d88\u606f\u3002 \u591a\u4e2a\u6d88\u8d39\u8005\u53ef\u4ee5\u8ba2\u9605\u540c\u4e00\u4e2a\u961f\u5217\uff0c\u961f\u5217\u4e2d\u7684\u6d88\u606f\u4f1a\u8f6e\u8be2\u7ed9\u591a\u4e2a\u6d88\u8d39\u8005\u8fdb\u884c\u5904\u7406\u3002","title":"4. Queue"},{"location":"software/middleware/rabbitmq/#5-exchange","text":"\u4ea4\u6362\u5668\uff0c\u751f\u4ea7\u8005\u5c06\u6d88\u606f\u53d1\u9001\u5230\u4ea4\u6362\u5668\uff0c\u7531\u4ea4\u6362\u5668\u5c06\u6d88\u606f\u8def\u7531\u5230\u4e00\u4e2a\u6216\u591a\u4e2a\u961f\u5217\u4e2d\u3002 \u4ea4\u6362\u5668\u7c7b\u578b\uff1a fanout\uff1a \u628a\u6240\u6709\u53d1\u9001\u5230\u8be5\u4ea4\u6362\u5668\u7684\u6d88\u606f\u8def\u7531\u5230\u6240\u6709\u4e0e\u8be5\u4ea4\u6362\u5668\u7ed1\u5b9a\u7684\u961f\u5217\u4e2d direct\uff1a \u628a\u6d88\u606f\u8def\u7531\u5230BindingKey\u548cRoutingKey\u5b8c\u5168\u5339\u914d\u7684\u961f\u5217\u4e2d topic\uff1a\u628a\u6d88\u606f\u8def\u7531\u5230BindingKey\u548cRoutingKey\u5339\u914d\uff08\u53ef\u4ee5\u6a21\u7cca\u5339\u914d\uff09\u7684\u961f\u5217\u4e2d 1 2 3 4 5 6 7 \u5339\u914d\u89c4\u5219\uff1a 1. routing key\u4e3a\u4e00\u4e2a\u53e5\u70b9\u53f7\u201c.\u201d\u5206\u9694\u7684\u5b57\u7b26\u4e32\uff08\u6211\u4eec\u5c06\u88ab\u53e5\u70b9\u53f7\u201c.\u201d\u5206\u9694\u5f00\u7684 \u6bcf\u4e00\u6bb5\u72ec\u7acb\u7684\u5b57\u7b26\u4e32\u79f0\u4e3a\u4e00\u4e2a\u5355\u8bcd\uff09\uff0c\u5982\u201cstock.usd.nyse\u201d\u3001\u201cnyse.vmw\u201d\u3001 \u201cquick.orange.rabbit\u201d 2.binding key\u4e0erouting key\u4e00\u6837\u4e5f\u662f\u53e5\u70b9\u53f7\u201c.\u201d\u5206\u9694\u7684\u5b57\u7b26\u4e32 3.binding key\u4e2d\u53ef\u4ee5\u5b58\u5728\u4e24\u79cd\u7279\u6b8a\u5b57\u7b26\u201c*\u201d\u4e0e\u201c#\u201d\uff0c\u7528\u4e8e\u505a\u6a21\u7cca\u5339\u914d\uff0c\u5176\u4e2d\u201c*\u201d \u7528\u4e8e\u5339\u914d\u4e00\u4e2a\u5355\u8bcd\uff0c\u201c#\u201d\u7528\u4e8e\u5339\u914d\u591a\u4e2a\u5355\u8bcd\uff08\u53ef\u4ee5\u662f\u96f6\u4e2a\uff09 headers: \u6839\u636e\u6d88\u606f\u5185\u5bb9\u4e2dheader\uff08\u952e\u503c\u5bf9\u5f62\u5f0f\uff09\u5c5e\u6027\u8fdb\u884c\u5339\u914d \u6027\u80fd\u8f83\u5dee\uff0c\u800c\u4e14\u4e0d\u5b9e\u7528","title":"5. Exchange"},{"location":"software/middleware/rabbitmq/#6routingkey","text":"\u8def\u7531\u952e\uff0c\u751f\u4ea7\u8005\u5c06\u6d88\u606f\u53d1\u7ed9\u4ea4\u6362\u5668\u7684\u65f6\u5019\uff0c\u4e00\u822c\u4f1a\u6307\u5b9a\u4e00\u4e2aRoutingKey\uff0c\u7528\u6765\u6307\u5b9a\u8fd9\u4e2a\u6d88\u606f\u7684\u8def\u7531\u89c4\u5219\uff0c\uff1b\u8def\u7531\u952e\u9700\u8981\u4e0e \u4ea4\u6362\u5668\u7c7b\u578b\u548c\u7ed1\u5b9a\u952e\u8054\u5408\u4f7f\u7528\u624d\u80fd\u751f\u6548","title":"6.RoutingKey"},{"location":"software/middleware/rabbitmq/#7-binding","text":"\u7ed1\u5b9a\uff0c\u7ed1\u5b9a\u53ef\u4ee5\u5c06\u4ea4\u6362\u5668\u4e0e\u961f\u5217\u5173\u8054\u8d77\u6765","title":"7. Binding"},{"location":"software/middleware/rabbitmq/#8-connection","text":"\u8fde\u63a5\uff0c\u6d88\u8d39\u8005/\u751f\u4ea7\u8005\u4e0eRabbitmq Broker\u5efa\u7acb\u7684TCP\u8fde\u63a5","title":"8. Connection"},{"location":"software/middleware/rabbitmq/#9-channel","text":"\u4fe1\u9053\uff0c\u5efa\u7acb\u5728Connection\u4e0a\u7684\u865a\u62df\u8fde\u63a5","title":"9. Channel"},{"location":"software/middleware/rabbitmq/#4_1","text":"","title":"4. \u5de5\u4f5c\u6d41\u7a0b"},{"location":"software/middleware/rabbitmq/#1_3","text":"\u751f\u4ea7\u8005\u8fde\u63a5\u5230Rabbitmq Broker\uff0c\u5efa\u7acb\u4e00\u4e2a\u8fde\u63a5\uff0c\u5f00\u542f\u4e00\u4e2a\u4fe1\u9053(Channel) \u751f\u4ea7\u8005\u58f0\u660e\u4e00\u4e2a\u4ea4\u6362\u5668\uff0c\u5e76\u8bbe\u7f6e\u76f8\u5173\u5c5e\u6027\uff0c\u6bd4\u5982\u4ea4\u6362\u673a\u7c7b\u578b\u3001\u662f\u5426\u6301\u4e45\u5316\u7b49 \u751f\u4ea7\u8005\u58f0\u660e\u4e00\u4e2a\u961f\u5217\u5e76\u8bbe\u7f6e\u76f8\u5173\u5c5e\u6027\uff0c\u6bd4\u5982\u662f\u5426\u62cd\u4ed6\uff0c\u662f\u5426\u6301\u4e45\u5316\uff0c\u662f\u5426\u81ea\u52a8\u5220\u9664\u7b49 \u751f\u4ea7\u8005\u901a\u8fc7\u8def\u7531\u952e\u5c06\u4ea4\u6362\u5668\u548c\u961f\u5217\u7ed1\u5b9a\u8d77\u6765 \u751f\u4ea7\u8005\u53d1\u9001\u6d88\u606f\u5230Rabbitmq Broker\uff0c\u5176\u4e2d\u5305\u62ec\u8def\u7531\u952e\u3001\u4ea4\u6362\u5668\u7b49 \u76f8\u5e94\u7684\u4ea4\u6362\u5668\u6839\u636e\u63a5\u6536\u5230\u7684\u8def\u7531\u952e\u67e5\u627e\u76f8\u5339\u914d\u7684\u961f\u5217 \u5982\u679c\u627e\u5230\uff0c\u5219\u5c06\u4ece\u751f\u4ea7\u8005\u53d1\u9001\u8fc7\u6765\u7684\u6d88\u606f\u5b58\u5165\u5230\u76f8\u5e94\u7684\u961f\u5217\u4e2d\uff0c\u672a\u627e\u5230\u5219\u6839\u636e\u751f\u4ea7\u8005\u914d\u7f6e\u7684\u5c5e\u6027 \u9009\u62e9\u4e22\u5f03\u8fd8\u662f\u9000\u56de\u7ed9\u751f\u4ea7\u8005 \u5173\u95ed\u4fe1\u9053 \u5173\u95ed\u8fde\u63a5","title":"1. \u751f\u4ea7\u8005\u53d1\u9001\u6d88\u606f"},{"location":"software/middleware/rabbitmq/#2_2","text":"\u6d88\u8d39\u8005\u8fde\u63a5\u5230Rabbitmq Broker\uff0c \u5efa\u7acb\u4e00\u4e2a\u8fde\u63a5\uff0c\u5f00\u542f\u4e00\u4e2a\u4fe1\u9053 \u6d88\u8d39\u8005\u5411Rabbitmq Broker\u8bf7\u6c42\u6d88\u8d39\u76f8\u5e94\u961f\u5217\u4e2d\u7684\u6d88\u606f\uff0c\u53ef\u80fd\u4f1a\u8bbe\u7f6e\u76f8\u5e94\u7684\u56de\u8c03\u51fd\u6570\uff0c\u4ee5 \u53ca\u4e00\u4e9b\u51c6\u5907\u5de5\u4f5c \u7b49\u5f85Rabbitmq Broker\u56de\u5e94\u5e76\u6295\u9012\u76f8\u5e94\u961f\u5217\u4e2d\u7684\u6d88\u606f \u6d88\u8d39\u8005\u786e\u8ba4\u63a5\u6536\u5230\u7684\u6d88\u606f\u3001 Rabbitmq\u4ece\u961f\u5217\u4e2d\u5220\u9664\u5df2\u7ecf\u88ab\u786e\u8ba4\u7684\u6d88\u606f \u5173\u95ed\u4fe1\u9053 \u5173\u95ed\u8fde\u63a5","title":"2. \u6d88\u8d39\u8005\u63a5\u6536\u6d88\u606f"},{"location":"software/middleware/rabbitmq/#3-amqp","text":"AMQP\u534f\u8bae\u5305\u62ec\u4e09\u5c42 Module Layer\uff1a\u4f4d\u4e8e\u534f\u8bae\u6700\u9ad8\u5c42\uff0c\u4e3b\u8981\u5b9a\u4e49\u4e86\u4e00\u4e9b\u63d0\u4f9b\u7ed9\u5ba2\u6237\u7aef\u8c03\u7528\u7684\u547d\u4ee4\uff0c\u5ba2\u6237\u7aef\u53ef \u4ee5\u5229\u7528\u8fd9\u4e9b\u547d\u4ee4\u5b9e\u73b0\u81ea\u5df1\u7684\u4e1a\u52a1\u903b\u8f91\u3002 Session Layer\uff1a\u4f4d\u4e8e\u4e2d\u95f4\u5c42\uff0c\u4e3b\u8981\u8d1f\u8d23\u5c06\u5ba2\u6237\u7aef\u7684\u547d\u4ee4\u53d1\u9001\u7ed9\u670d\u52a1\u5668\uff0c\u518d\u5c06\u670d\u52a1\u5668\u7aef\u7684 \u5e94\u7b54\u8fd4\u56de\u7ed9\u5ba2\u6237\u7aef\uff0c\u4e3b\u8981\u4e3a\u5ba2\u6237\u7aef\u4e0e\u670d\u52a1\u5668\u76f4\u63a5\u7684\u901a\u4fe1\u63d0\u4f9b\u53ef\u9ad8\u6027\u540c\u6b65\u673a\u5236\u548c\u9519\u8bef\u5904\u7406 Transport Layer\uff1a\u4f4d\u4e8e\u6700\u5e95\u5c42\uff0c\u4e3b\u8981\u4f20\u8f93\u4e8c\u8fdb\u5236\u6570\u636e\u6d41\uff0c\u63d0\u4f9b\u5e27\u7684\u5904\u7406\u3001\u4fe1\u9053\u590d\u7528\u3001\u9519 \u8bef\u68c0\u6d4b\u548c\u6570\u636e\u8868\u793a","title":"3. AMQP\u534f\u8bae"},{"location":"software/middleware/rabbitmq/#_2","text":"\u5b89\u88c5pika 1 pip install pika \u4ee5\u5bb9\u5668\u65b9\u5f0f\u542f\u52a8\u4e00\u4e2arabbitmq 1 $ docker run -it --name rabbitmq -p 5672 :5672 -p 15672 :15672 -p 25672 :25672 rabbitmq:3.6.12","title":"\u4e8c\u3001\u4f7f\u7528"},{"location":"software/middleware/rabbitmq/#1-hello-word","text":"\u751f\u4ea7\u8005 1 2 3 4 5 6 7 8 9 10 11 12 13 import pika # \u5efa\u7acbTCP\u8fde\u63a5 connection = pika . BlockingConnection ( pika . ConnectionParameters ( 'localhost' )) # \u5efa\u7acb\u4e00\u4e2a\u4fe1\u9053 channel = connection . channel () # \u521b\u5efa\u4e00\u4e2a\u961f\u5217 channel . queue_declare ( queue = 'hello' ) # \u521b\u5efa\u4e00\u4e2a\u4ea4\u6362\u673a channel . basic_publish ( exchange = '' , routing_key = 'hello' , body = 'Hello World!' ) print ( \" [\u00d7] Sent 'Hello World!'\" ) # \u5173\u95ed\u8fde\u63a5 connection . close () \u67e5\u770brabbitmq\u4e2d\u7684\u961f\u5217 1 2 3 4 $ docker exec -it rabbitmq bash root@f6d1cc085307:/# rabbitmqctl list_queues Listing queues hello 1 \u6d88\u8d39\u8005 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 import pika connection = pika . BlockingConnection ( pika . ConnectionParameters ( host = 'localhost' ) channel = connection . channel () # \u4e00\u6b21\u518d\u5efa\u7acb\u961f\u5217\u3002\u5b98\u65b9\u5efa\u8bae\u5728\u6d88\u8d39\u548c\u751f\u4ea7\u8005\u90fd\u58f0\u660e\u5efa\u7acb\u4e00\u4e2a\u961f\u5217 channel . queue_declare ( queue = 'hello' ) # \u5b9a\u4e49\u4e00\u4e2a\u56de\u8c03\u51fd\u6570\u6765\u5904\u7406\u6d88\u606f\uff0c\u51fd\u6570\u683c\u5f0f\u56fa\u5b9a def callback ( ch , method , properties , body ): print ( \"[\u00d7] Receive %r \" % body ) # \u5b9a\u4e49\u4ece\u54ea\u4e2a\u961f\u5217\u63a5\u6536\u6d88\u606f\u4ee5\u53ca\u5904\u7406\u6d88\u606f\u7684\u51fd\u6570 channel . basic_consume ( callback , queue = 'hello' , no_ack = True ) print ( '[*] Waiting for messages. To exit press CTRL+C' ) # \u5f00\u59cb\u5904\u7406\u6d88\u606f channel . start_consuming () \u6267\u884c\u7ed3\u679c 1 2 3 4 5 $python3 send.py [ \u00d7 ] Sent 'Hello World!' $ python3 receive.py [ * ] Waiting for messages. To exit press CTRL+C [ \u00d7 ] Receive b 'Hello World!'","title":"1. Hello Word"},{"location":"software/middleware/rabbitmq/#queue","text":"\u961f\u5217\u7684\u4f5c\u7528\uff1a \u60f3\u8c61\u4e00\u4e2a\u573a\u666f\uff0c\u5982\u679c\u751f\u4ea7\u8005\u4ea7\u751f\u8bb8\u591a\u9700\u8981\u82b1\u5f88\u591a\u65f6\u95f4\u5904\u7406\u7684\u6570\u636e\u548c\u4efb\u52a1\uff0c\u91c7\u7528BIO\u7684\u6a21\u5f0f \u4ea4\u7ed9\u6d88\u8d39\u8005\u5904\u7406\u7684\u8bdd\uff0c\u751f\u4ea7\u8005\u9700\u8981\u7b49\u5f88\u957f\u65f6\u95f4\u76f4\u5230\u6d88\u8d39\u8005\u5904\u7406\u5b8c\u6d88\u606f\u518d\u7ee7\u7eed\u53d1\u9001\u4e0b\u4e00\u4e2a\u6d88\u606f\u3002 \u6709\u4e86\u961f\u5217\u4ee5\u540e\u751f\u4ea7\u8005\u53ea\u9700\u8981\u628a\u6570\u636e\u6254\u5230\u961f\u5217\u4e2d\u5c31\u53ef\u4ee5\u4e86\uff0c\u6d88\u8d39\u8005\u5b9a\u671f\u4ece\u961f\u5217\u4e2d\u53d6\u6570\u636e\u8fdb\u884c\u5904 \u7406\uff08\u6d88\u8d39\uff09\u3002\u5904\u7406\u5b8c\u4e00\u4e2a\u518d\u4ece\u961f\u5217\u4e2d\u53d6\u4e0b\u4e00\u4e2a\u8fdb\u884c\u5904\u7406\u3002\u5982\u679c\u6570\u636e\u5904\u7406\u7684\u65f6\u95f4\u592a\u957f\uff0c\u6211\u4eec\u53ef \u4ee5\u591a\u5efa\u51e0\u4e2a\u6d88\u8d39\u8005\u4e00\u8d77\u6d88\u8d39\u6570\u636e\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0crabbitmq\u4ee5\u8f6e\u8be2\u7684\u65b9\u5f0f\u628a\u6d88\u606f\u5206\u53d1\u7ed9\u6d88\u8d39\u8005\u3002","title":"Queue \u961f\u5217"},{"location":"software/middleware/rabbitmq/#1_4","text":"\u5728\u4e4b\u524d\u7684\u4ee3\u7801\u4e2d\uff0c\u4e00\u65e6rabbitmq\u628a\u6d88\u606f\u53d1\u7ed9\u6d88\u8d39\u8005\u5c31\u4f1a\u628a\u6d88\u8d39\u6807\u8bb0\u4e3a\u5220\u9664\uff0c\u5982\u679c\u6b64\u65f6\u6d88\u8d39\u8005 \u6302\u4e86\uff0c\u6d88\u606f\u5c31\u4f1a\u4e22\u5931\uff0c\u6211\u4eec\u5e0c\u671b\u5982\u679c\u56e0\u4e3a\u4e00\u4e2a\u6d88\u8d39\u8005\u6302\u4e86\u800c\u628a\u6ca1\u6709\u6ca1\u6709\u5904\u7406\u7684\u6d88\u606f\u4ea4\u7ed9\u53e6\u4e00 \u4e2a\u6d88\u8d39\u8005\u5904\u7406\u3002\u4e3a\u4e86\u4fdd\u8bc1\u6570\u636e\u4e0d\u4e22\u5931\uff0crabbitmq\u4f7f\u7528\u6d88\u606f\u786e\u8ba4\u673a\u5236\u4fdd\u8bc1\u6570\u636e\u4e0d\u4e22\u5931\u3002\u6d88\u8d39\u8005 \u5982\u679c\u5904\u7406\u5b8c\u6d88\u606f\u4f1a\u7ed9rabbitmq\u53d1\u9001\u4e00\u4e2aack\u3002 \u5982\u679c\u6d88\u8d39\u8005\u6302\u4e86\uff08TCP\u8fde\u63a5\u7aef\u53e3\uff0c\u4fe1\u9053\u5173\u95ed\uff09\uff0c\u6ca1\u6709\u53d1\u9001ack\uff0crabbitmq\u5c31\u8ba4\u4e3a\u6d88\u606f\u6ca1\u6709\u5904\u7406 \u7136\u540e\u628a\u6d88\u606f\u4ea4\u7ed9\u5176\u4ed6\u6d88\u8d39\u8005\u53bb\u5904\u7406\u3002 \u66f4\u6539\u540e\u7684\u4ee3\u7801 \u751f\u4ea7\u8005 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 import pika import sys # \u5efa\u7acbTCP\u8fde\u63a5 connection = pika . BlockingConnection ( pika . ConnectionParameters ( 'localhost' )) # \u5efa\u7acb\u4e00\u4e2a\u4fe1\u9053 channel = connection . channel () # \u521b\u5efa\u4e00\u4e2a\u961f\u5217 channel . queue_declare ( queue = 'hello' ) # \u5b9a\u4e49\u6d88\u606f\u5185\u5bb9 message = ' ' . join ( sys . argv [ 1 :]) or \"Hello World!\" # \u521b\u5efa\u4e00\u4e2a\u4ea4\u6362\u673a channel . basic_publish ( exchange = '' , routing_key = 'hello' , body = message ) print ( \" [\u00d7] Sent %r \" % message ) # \u5173\u95ed\u8fde\u63a5 connection . close () \u6d88\u8d39\u8005 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 import pika import time connection = pika . BlockingConnection ( pika . ConnectionParameters ( host = 'localhost' )) channel = connection . channel () # \u4e00\u6b21\u518d\u5efa\u7acb\u961f\u5217\u3002\u5b98\u65b9\u5efa\u8bae\u5728\u6d88\u8d39\u548c\u751f\u4ea7\u8005\u90fd\u58f0\u660e\u5efa\u7acb\u4e00\u4e2a\u961f\u5217 channel . queue_declare ( queue = 'hello' ) # \u5b9a\u4e49\u4e00\u4e2a\u56de\u8c03\u51fd\u6570\u6765\u5904\u7406\u6d88\u606f\uff0c\u51fd\u6570\u683c\u5f0f\u56fa\u5b9a def callback ( ch , method , properties , body ): print ( \"[\u00d7] Receive %r \" % body ) # \u8ba1\u7b97\u6d88\u606f\u957f\u5ea6\u6765\u6a21\u62df\u6d88\u8d39\u8005\u5904\u7406\u6d88\u606f\u9700\u8981\u7684\u65f6\u95f4 time . sleep ( len ( body )) print ( \"[\u00d7] Done\" ) # \u786e\u8ba4\u6d88\u606f\u5df2\u7ecf\u88ab\u5904\u7406 ch . basic_ack ( delivery_tag = method . delivery_tag ) # \u5b9a\u4e49\u4ece\u54ea\u4e2a\u961f\u5217\u63a5\u6536\u6d88\u606f\u4ee5\u53ca\u5904\u7406\u6d88\u606f\u7684\u51fd\u6570 channel . basic_consume ( callback , queue = 'hello' ) print ( '[*] Waiting for messages. To exit press CTRL+C' ) # \u5f00\u59cb\u5904\u7406\u6d88\u606f channel . start_consuming () \u6d4b\u8bd5 \u5f00\u7b2c1\u4e2ashell\u53d1\u9001\u6d88\u606f 1 2 3 # \u53d1\u9001\u4e00\u4e2a\u6d88\u606f $ python3 send.py [ \u00d7 ] Sent 'Hello World!' \u5f00\u7b2c2\u4e2ashell\u5904\u7406\u6d88\u606f\uff0c\u6d88\u606f\u6ca1\u5904\u7406\u5b8c\u76f4\u63a5\u7ed3\u675f\u8fdb\u884c 1 2 3 4 5 6 # \u6d88\u606f\u8fd8\u6ca1\u6709\u5904\u7406\u5b8c\u7684\u65f6\u5019\u628a\u8fdb\u7a0b\u7ed3\u675f\u6389 $ python3 receive.py [ * ] Waiting for messages. To exit press CTRL+C [ \u00d7 ] Receive b 'Hello World!' ^CTraceback ( most recent call last ) : ... \u5f00\u7b2c3\u4e2ashell\u7ee7\u7eed\u5904\u7406\u6d88\u606f 1 2 3 4 5 # \u6d88\u606f\u88ab\u8f6c\u5230\u53e6\u4e2a\u4e00\u6d88\u8d39\u8005\u8fdb\u884c\u5904\u7406 $ python3 receive.py [ * ] Waiting for messages. To exit press CTRL+C [ \u00d7 ] Receive b 'Hello World!' [ \u00d7 ] Done \u67e5\u770b\u672a\u88ab\u786e\u8ba4\u7684\u6d88\u606f 1 2 3 $ rabbitmqctl list_queues name messages_ready messages_unacknowledged Listing queues hello 0 5","title":"1. \u6d88\u606f\u786e\u8ba4"},{"location":"software/middleware/rabbitmq/#2_3","text":"\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0crabbitmq\u9000\u51fa\u4e4b\u540e\u961f\u5217\u548c\u6d88\u606f\u5c31\u4f1a\u4e22\u5931\u3002\u4e3a\u4e86\u4fdd\u8bc1\u6570\u636e\u4e0d\u4e22\u5931\u9700\u8981\u505a\u6570\u636e\u6301\u4e45\u5316\u3002 \u961f\u5217\u6301\u4e45\u5316 1 channel . queue_declare ( queue = 'hello' , durable = True ) \u6d88\u606f\u6301\u4e45\u5316 1 2 3 4 5 6 channel . basic_publish ( exchange = '' , routing_key = \"task_queue\" , body = message , properties = pika . BasicProperties ( delivery_mode = 2 , # make message persistent ))","title":"2. \u6d88\u606f\u6301\u4e45\u5316"},{"location":"software/middleware/rabbitmq/#3_2","text":"\u666e\u901a\u7684\u8f6e\u8be2\u7b56\u7565\u53ef\u80fd\u4f1a\u5bfc\u81f4\u8d1f\u8f7d\u4e0d\u5747\u8861\u3002Fair dispatch\u6709\u70b9\u52a0\u6743\u8f6e\u8be2\u7684\u610f\u601d\uff0c\u628a\u6d88\u606f\u5206\u53d1 \u7ed9\u4e0d\u592a\u5fd9\u7684\u6d88\u8d39\u8005 \u4f7f\u7528basic.qos\u6a21\u5f0f\u4ee4prefetch_count=1\u3002\u8ba9\u6d88\u8d39\u8005\u544a\u8bc9Rabbitmq\uff0c\u5728\u5f53\u524d\u7684\u6d88\u606f\u5904\u7406\u5b8c\u6bd5 \u5e76\u786e\u8ba4\u4e4b\u524d\u4e0d\u8981\u518d\u53d1\u6d88\u606f \u6700\u7ec8\u4ee3\u7801 \u751f\u4ea7\u8005 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 #!/usr/bin/env python import pika import sys connection = pika . BlockingConnection ( pika . ConnectionParameters ( host = 'localhost' )) channel = connection . channel () channel . queue_declare ( queue = 'task_queue' , durable = True ) message = ' ' . join ( sys . argv [ 1 :]) or \"Hello World!\" channel . basic_publish ( exchange = '' , routing_key = 'task_queue' , body = message , properties = pika . BasicProperties ( delivery_mode = 2 , # make message persistent )) print ( \" [x] Sent %r \" % message ) connection . close () \u6d88\u8d39\u8005 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 #!/usr/bin/env python import pika import time connection = pika . BlockingConnection ( pika . ConnectionParameters ( host = 'localhost' )) channel = connection . channel () channel . queue_declare ( queue = 'task_queue' , durable = True ) print ( ' [*] Waiting for messages. To exit press CTRL+C' ) def callback ( ch , method , properties , body ): print ( \" [x] Received %r \" % body ) time . sleep ( len ( body )) print ( \" [x] Done\" ) ch . basic_ack ( delivery_tag = method . delivery_tag ) channel . basic_qos ( prefetch_count = 1 ) channel . basic_consume ( callback , queue = 'task_queue' ) channel . start_consuming ()","title":"3. \u516c\u5e73\u5206\u53d1"},{"location":"software/middleware/rabbitmq/#3_3","text":"","title":"3. \u5206\u53d1\u4e0e\u8ba2\u9605"},{"location":"software/middleware/rabbitmq/#1_5","text":"\u4ea4\u6362\u5668\u4ece\u751f\u4ea7\u8005\u90a3\u91cc\u5c31\u6536\u6570\u636e\uff0c\u7136\u540e\u63a8\u9001\u7684\u961f\u5217 \u4ea4\u6362\u5668\u89c9\u5f97\u6d88\u606f\u662f\u5206\u53d1\u7ed9\u6307\u5b9a\u961f\u5217\uff0c\u8fd8\u662f\u591a\u4e2a\u961f\u5217\uff0c\u8fd8\u662f\u4e22\u5f03 \u4ea4\u6362\u5668\u7684\u7c7b\u578b\uff1adirect\u3001topic\u3001fanout\u3001header","title":"1. \u4ea4\u6362\u5668"},{"location":"software/middleware/rabbitmq/#2_4","text":"\u7528\u5b8c\u4e4b\u540e\u5c31\u5220\u9664\uff0c\u5b98\u65b9\u6587\u6863\u4ee5\u8bb0\u5f55\u65e5\u5fd7\u7684\u5b9e\u4f8b\u8bf4\u660e\u3002 \u4f7f\u7528fanout\u4ea4\u6362\u5668\uff0c\u6d88\u8d39\u8005\u8981\u63a5\u6536\u6240\u6709\u7684\u65e5\u5fd7\u6d88\u606f\uff0c \u6d88\u8d39\u8005\u60f3\u8981\u63a5\u6536\u7684\u6d88\u606f\u662f\u6700\u65b0\u7684\u6d88\u606f\u6d41\u800c\u4e0d\u662f\u65e7\u7684\u3002 \u4e3a\u4e86\u8fbe\u5230\u8fd9\u4e2a\u76ee\u7684\uff0c\u9700\u8981\u5e72\u4e24\u4ef6\u4e8b\uff1a \u65e0\u8bba\u4ec0\u4e48\u65f6\u5019\u8fde\u63a5rabbitmq\u65f6\uff0c\u9700\u8981\u4e00\u4e2a\u65b0\u7684\u3001\u7a7a\u7684\u961f\u5217-->\u521b\u5efa\u4e00\u4e2a\u968f\u673a\u961f\u5217 \u4e00\u65e6\u6d88\u8d39\u8005\u65ad\u5f00\u8fde\u63a5\uff0c\u5c31\u5220\u9664\u8fd9\u4e2a\u961f\u5217 \u6700\u7ec8\u4ee3\u7801 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 import pika import sys # \u5efa\u7acbTCP\u8fde\u63a5 connection = pika . BlockingConnection ( pika . ConnectionParameters ( 'localhost' )) # \u5efa\u7acb\u4e00\u4e2a\u4fe1\u9053 channel = connection . channel () # \u5efa\u7acb\u4e00\u4e2a\u4ea4\u6362\u5668\uff0c\u4ea4\u6362\u5668\u7684\u7c7b\u578b\u4e3afanout channel . exchange_declare ( exchange = 'logs' , exchange_type = 'fanout' ) # \u5b9a\u4e49\u6d88\u606f\u5185\u5bb9 message = ' ' . join ( sys . argv [ 1 :]) or \"Hello World!\" # \u521b\u5efa\u4e00\u4e2a\u4ea4\u6362\u673a channel . basic_publish ( exchange = 'logs' , routing_key = '' , # \u5728fanout\u6a21\u5f0f\u4e0b\uff0c\u8def\u7531\u952e\u88ab\u5ffd\u7565 body = message ) print ( \" [\u00d7] Sent %r \" % message ) # \u5173\u95ed\u8fde\u63a5 connection . close () 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 import pika import time connection = pika . BlockingConnection ( pika . ConnectionParameters ( host = 'localhost' )) channel = connection . channel () channel . exchange_declare ( exchange = 'logs' , exchange_type = 'fanout' ) # \u6d88\u8d39\u5b8c\u4e4b\u540e\u5220\u9664\u961f\u5217 result = channel . queue_declare ( exclusive = True ) # \u751f\u6210\u4e00\u4e2a\u968f\u673a\u961f\u5217 queue_name = result . method . queue channel . queue_bind ( exchange = 'logs' , queue = queue_name ) print ( '[*] Waiting for messages. To exit press CTRL+C' ) # \u5b9a\u4e49\u4e00\u4e2a\u56de\u8c03\u51fd\u6570\u6765\u5904\u7406\u6d88\u606f\uff0c\u51fd\u6570\u683c\u5f0f\u56fa\u5b9a def callback ( ch , method , properties , body ): print ( \"[\u00d7] Receive %r \" % body ) # \u5b9a\u4e49\u4ece\u54ea\u4e2a\u961f\u5217\u63a5\u6536\u6d88\u606f\u4ee5\u53ca\u5904\u7406\u6d88\u606f\u7684\u51fd\u6570 channel . basic_consume ( callback , queue = queue_name , no_ack = True ) # \u5f00\u59cb\u5904\u7406\u6d88\u606f channel . start_consuming () 1 2 3 4 # rabbitmqctl list_bindings Listing bindings exchange amq.gen-gFj_8p_zIA4a2rpIpTSYcA queue amq.gen-gFj_8p_zIA4a2rpIpTSYcA [] logs exchange amq.gen-gFj_8p_zIA4a2rpIpTSYcA queue amq.gen-gFj_8p_zIA4a2rpIpTSYcA []","title":"2. \u4e34\u65f6\u961f\u5217"},{"location":"software/middleware/rabbitmq/#4_2","text":"","title":"4. \u8def\u7531"},{"location":"software/middleware/rabbitmq/#1-binging","text":"\u7ed1\u5b9a\u628a\u4ea4\u6362\u5668\u548c\u961f\u5217\u5173\u8054\u8d77\u6765\uff0c\u961f\u5217\u53ef\u4ee5\u4ece\u4ea4\u6362\u5668\u90a3\u91cc\u53ea\u63a5\u6536\u81ea\u5df1\u201c\u611f\u5174\u8da3\u201d\u7684\u6d88\u606f","title":"1. Binging"},{"location":"software/middleware/rabbitmq/#2-direct","text":"fanout \u4ea4\u6362\u5668\u4f1a\u201c\u65e0\u8111\u201d\u7684\u628a\u6d88\u606f\u5e7f\u64ad\u7ed9\u6bcf\u4e2a\u6d88\u8d39\u8005\uff0c\u4f46\u662f\u6709\u65f6\u5019\u6211\u4eec\u5e76\u4e0d\u9700\u8981\u6240\u6709\u7684\u6d88\u606f \u6bd4\u5982\u4e0a\u9762\u7684log\u4f8b\u5b50\u4e2d\uff0c\u5047\u5982\u6d88\u8d39\u8005\u53ea\u60f3\u63a5\u6536\u9519\u8bef\u65e5\u5fd7\u65f6\u5c31\u9700\u8981\u7528direct \u4ea4\u6362\u5668\u6765\u5b9e\u73b0\u4e86 \u6700\u7ec8\u4ee3\u7801 \u751f\u4ea7\u8005 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 mport pika import sys connection = pika . BlockingConnection ( pika . ConnectionParameters ( 'localhost' )) channel = connection . channel () channel . exchange_declare ( exchange = 'logs' , exchange_type = 'direct' ) # \u5b9a\u4e49\u65e5\u5fd7\u7ea7\u522b severity = sys . argv [ 1 ] if len ( sys . argv ) > 1 else 'info' # \u6d88\u606f\u5185\u5bb9 message = ' ' . join ( sys . argv [ 2 :]) or \"Hello World!\" # \u521b\u5efa\u4e00\u4e2a\u4ea4\u6362\u673a channel . basic_publish ( exchange = 'logs' , routing_key = severity , # \u5728fanout\u6a21\u5f0f\u4e0b\uff0c\u8def\u7531\u952e\u88ab\u5ffd\u7565 body = message ) print ( \" [\u00d7] Sent %r : %r \" % ( severity , message )) connection . close () \u6d88\u8d39\u8005 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 import pika import sys connection = pika . BlockingConnection ( pika . ConnectionParameters ( host = 'localhost' )) channel = connection . channel () channel . exchange_declare ( exchange = 'logs' , exchange_type = 'direct' ) # \u6d88\u8d39\u5b8c\u4e4b\u540e\u5220\u9664\u961f\u5217 result = channel . queue_declare ( exclusive = True ) # \u751f\u6210\u4e00\u4e2a\u968f\u673a\u961f\u5217 queue_name = result . method . queue # \u6d88\u8d39\u8005\u63a5\u6536\u65e5\u5fd7\u7684\u7ea7\u522b severities = sys . argv [ 1 :] if not severities : sys . stderr . write ( \"Usage: %s [info] [warning] [error] \\n \" % sys . argv [ 0 ]) for severity in severities : channel . queue_bind ( exchange = 'logs' , queue = queue_name , routing_key = severity ) print ( '[*] Waiting for messages. To exit press CTRL+C' ) # \u5b9a\u4e49\u4e00\u4e2a\u56de\u8c03\u51fd\u6570\u6765\u5904\u7406\u6d88\u606f\uff0c\u51fd\u6570\u683c\u5f0f\u56fa\u5b9a def callback ( ch , method , properties , body ): print ( \"[\u00d7] %r : %r \" % ( method . routing_key , body )) # \u5b9a\u4e49\u4ece\u54ea\u4e2a\u961f\u5217\u63a5\u6536\u6d88\u606f\u4ee5\u53ca\u5904\u7406\u6d88\u606f\u7684\u51fd\u6570 channel . basic_consume ( callback , queue = queue_name , no_ack = True ) channel . start_consuming () \u9a8c\u8bc1\uff1a \u5f00\u56db\u4e2a\u7a97\u53e3\uff0c\u4e00\u4e2a\u53d1\u9001\uff0c\u4e09\u4e2a\u63a5\u6536 shell 1 1 2 3 4 5 6 # \u7b2c\u4e00\u6b21\u53d1\u9001info\u7ea7\u522b\u7684\u65e5\u5fd7 $ python3 send.py info hello [ \u00d7 ] Sent 'info' : 'hello' # \u7b2c\u4e8c\u6b21\u53d1\u9001warning\u7ea7\u522b\u7684\u65e5\u5fd7 $ python3 send.py warning world [ \u00d7 ] Sent 'warning' : 'world' shell 2 1 2 3 4 # \u53ea\u63a5\u6536info\u7ea7\u522b\u65e5\u5fd7\u7ea7\u522b\u7684\u6d88\u8d39\u8005\u90fd\u6536\u5230\u65e5\u5fd7 $ python3 receive.py info [ * ] Waiting for messages. To exit press CTRL+C [ \u00d7 ] 'info' :b 'hello' shell 3 1 2 3 4 # \u53ea\u5c31\u6536warning\u7ea7\u522b\u65e5\u5fd7\u7684\u6d88\u8d39\u8005\u53ea\u6536\u5230\u7b2c\u4e8c\u6b21\u53d1\u9001\u7684\u6d88\u606f $ python3 receive.py warning [ * ] Waiting for messages. To exit press CTRL+C [ \u00d7 ] 'warning' :b 'world' shell 4 1 2 3 4 # \u53ea\u63a5\u6536info\u7ea7\u522b\u65e5\u5fd7\u7ea7\u522b\u7684\u6d88\u8d39\u8005\u90fd\u6536\u5230\u65e5\u5fd7 $ python3 receive.py info [ * ] Waiting for messages. To exit press CTRL+C [ \u00d7 ] 'info' :b 'hello'","title":"2. Direct \u4ea4\u6362\u5668"},{"location":"software/middleware/rabbitmq/#5","text":"","title":"5. \u4e3b\u9898"},{"location":"software/middleware/rabbitmq/#6-rpc","text":"","title":"6. RPC"},{"location":"software/middleware/rabbitmq/#_3","text":"","title":"\u4e09\u3001\u8fd0\u7ef4"},{"location":"software/middleware/rabbitmq/#1_6","text":"","title":"1.\u5b89\u88c5"},{"location":"software/middleware/rabbitmq/#1_7","text":"","title":"1. \u7f16\u8bd1\u5b89\u88c5"},{"location":"software/middleware/rabbitmq/#11","text":"1 2 $ sudo apt update $ sudo apt install gcc make","title":"1.1. \u5b89\u88c5\u7f16\u8bd1\u5de5\u5177"},{"location":"software/middleware/rabbitmq/#12-ncurses","text":"1 2 3 4 5 6 $ wget http://ftp.gnu.org/gnu/ncurses/ncurses-6.1.tar.gz $ tar zxf ncurses-6.1.tar.gz $ cd ncurses-6.1 $ ./configure $ make $ sudo make install","title":"1.2. \u5b89\u88c5ncurses"},{"location":"software/middleware/rabbitmq/#13-openssl","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 $ wget https://www.openssl.org/source/old/1.0.2/openssl-1.0.2p.tar.gz $ sudo mkdir /usr/local/openssl $ tar zxf openssl-1.0.2p.tar.gz $ cd openssl-1.0.2p/ $ ./config --prefix = /usr/local/openssl #\u65b0\u7248\u672copenssl\u9ed8\u8ba4\u7f16\u8bd1\u51fa\u6765\u7684libcrypto.a\u662f\u6ca1\u6709\u52a0-fPIC\u53c2\u6570\u7684\uff0c\u5f53\u91cd\u5b9a\u4f4d\u88ab\u5f15\u7528\u7684\u4ee3\u7801 #\u6bb5\u6570\u636e\u5bf9\u8c61\u65f6\u51fa\u9519\u3002 #\u4fee\u6539openssl\u6e90\u7801\u7684Makefile #\u53c2\u8003\uff1ahttps://blog.csdn.net/erlib/article/details/20995947 #\u5728CFLAG=\u3000\u6dfb\u52a0\u3000-fPIC $ vi Makefile CC = gcc CFLAG = -fPIC ... $ make $ sudo make install","title":"1.3. \u5b89\u88c5openssl"},{"location":"software/middleware/rabbitmq/#14-erlang","text":"1 2 3 4 5 6 7 8 9 #\u4e0b\u8f7derlang\uff1ahttp://www.erlang.org/downloads/19.3 #\u5b89\u88c5\u6307\u5357\uff1ahttp://erlang.org/doc/installation_guide/INSTALL.html $ wget http://erlang.org/download/otp_src_19.3.tar.gz $ tar zxf otp_src_19.3.tar.gz $ sudo mkdir /usr/local/erlang $ cd otp_src_19.3/ $ ./configure --prefix = /usr/local/erlang/ --with-ssl = /usr/local/openssl $ make && sudo make install","title":"1.4. \u5b89\u88c5erlang\u73af\u5883"},{"location":"software/middleware/rabbitmq/#15-rabbitmq","text":"1 2 3 4 5 # rabbitmq\u4e0b\u8f7d\u5730\u5740\uff1ahttp://www.rabbitmq.com/releases/rabbitmq-server/ # \u4e0b\u8f7d\u9700\u8981\u5b89\u88c5\u7684\u7248\u672c\uff1a $ wget http://www.rabbitmq.com/releases/rabbitmq-server/v3.6.12/rabbitmq-server-generic-unix-3.6.12.tar.xz $ tar xJf rabbitmq-server-generic-unix-3.6.12.tar.xz $ sudo mv rabbitmq_server-3.6.12 /usr/local/rabbitmq","title":"1.5. \u5b89\u88c5rabbitmq"},{"location":"software/middleware/rabbitmq/#16","text":"1 2 3 4 5 6 $ cat /etc/profile export ERLANG_HOME = /usr/local/erlang export PATH = $ERLANG_HOME /bin: $PATH export RABBITMQ_HOME = /usr/local/rabbitmq export PATH = $RABBITMQ_HOME /sbin: $PATH $ source /etc/profile","title":"1.6. \u914d\u7f6e\u73af\u5883\u53d8\u91cf"},{"location":"software/middleware/rabbitmq/#17","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 $ rabbitmq-server -detached Warning: PID file not written ; -detached was passed. # \u4f7f\u7528-detached\u4e0d\u4f1a\u751f\u4ea7pid\u6587\u4ef6 # \u67e5\u770brabbitmq\u72b6\u6001 $ rabbitmqctl status Status of node rabbit@node1 [{ pid,2162 } , { running_applications, [{ rabbit, \"RabbitMQ\" , \"3.6.12\" } , { mnesia, \"MNESIA CXC 138 12\" , \"4.14.3\" } , { ranch, \"Socket acceptor pool for TCP protocols.\" , \"1.3.0\" } , { ssl, \"Erlang/OTP SSL application\" , \"8.1.1\" } , { public_key, \"Public key infrastructure\" , \"1.4\" } , { asn1, \"The Erlang ASN1 compiler version 4.0.4\" , \"4.0.4\" } , { rabbit_common, \"Modules shared by rabbitmq-server and rabbitmq-erlang-client\" , \"3.6.12\" } , { syntax_tools, \"Syntax tools\" , \"2.1.1\" } , { os_mon, \"CPO CXC 138 46\" , \"2.4.2\" } , { crypto, \"CRYPTO\" , \"3.7.3\" } , { xmerl, \"XML parser\" , \"1.3.13\" } , { compiler, \"ERTS CXC 138 10\" , \"7.0.4\" } , { sasl, \"SASL CXC 138 11\" , \"3.0.3\" } , { stdlib, \"ERTS CXC 138 10\" , \"3.3\" } , { kernel, \"ERTS CXC 138 10\" , \"5.2\" }]} , { os, { unix,linux }} , { erlang_version, \"Erlang/OTP 19 [erts-8.3] [source] [64-bit] [async-threads:64] [kernel-poll:true]\\n\" } , { memory, [{ connection_readers,0 } , { connection_writers,0 } , { connection_channels,0 } , { connection_other,0 } , { queue_procs,2600 } , { queue_slave_procs,0 } , { plugins,0 } , { other_proc,22505384 } , { metrics,42216 } , { mgmt_db,0 } , { mnesia,58288 } , { other_ets,1946128 } , { binary,52272 } , { msg_index,41080 } , { code,21412394 } , { atom,891849 } , { other_system,18227437 } , { total,65179648 }]} , { alarms, []} , { listeners, [{ clustering,25672, \"::\" } , { amqp,5672, \"::\" }]} , { vm_memory_calculation_strategy,rss } , { vm_memory_high_watermark,0.4 } , { vm_memory_limit,416343654 } , { disk_free_limit,50000000 } , { disk_free,6662619136 } , { file_descriptors, [{ total_limit,924 } , { total_used,2 } , { sockets_limit,829 } , { sockets_used,0 }]} , { processes, [{ limit,1048576 } , { used,151 }]} , { run_queue,0 } , { uptime,176 } , { kernel, { net_ticktime,60 }}] \u4ee5\u8fd9\u79cd\u65b9\u5f0f\u542f\u52a8\u65f6\uff0c\u5f53\u524d\u8282\u70b9\u4ee5rabbit@\u4e3b\u673a\u540d\u6765\u547d\u4ee4\u3002 \u6307\u5b9a\u8282\u70b9\u540d\u7684\u65b9\u6cd5 1 $ RABBITMQ_NODENAME = rabbit@\u540d\u79f0 rabbitmq-server -detached","title":"1.7. \u542f\u52a8\u670d\u52a1"},{"location":"software/middleware/rabbitmq/#2_5","text":"\u7565","title":"2. \u7f51\u7edc\u6e90\u5b89\u88c5"},{"location":"software/middleware/rabbitmq/#2_6","text":"","title":"2. \u7ba1\u7406"},{"location":"software/middleware/rabbitmq/#1_8","text":"\u67e5\u770b\u73b0\u6709\u7684\u865a\u62df\u4e3b\u673a 1 2 3 4 # \u67e5\u770b\u73b0\u6709\u7684\u865a\u62df\u4e3b\u673a $ rabbitmqctl list_vhosts # \u67e5\u770b\u662f\u5426\u4f7f\u7528\u4e86trace\u529f\u80fd $ rabbitmqctl list_vhosts name tracing \u6dfb\u52a0\u4e00\u4e2a\u865a\u62df\u4e3b\u673a 1 $ rabbitmqctl add_vhost { \u865a\u62df\u4e3b\u673a\u540d } \u5220\u9664\u4e00\u4e2a\u865a\u62df\u4e3b\u673a 1 $ rabbitmqctl delete_vhost { \u865a\u62df\u4e3b\u673a\u540d } \u67e5\u770b\u865a\u62df\u673a\u6743\u9650 1 $ rabbitmqctl list_permissions -p { \u865a\u62df\u4e3b\u673a\u540d } \u865a\u62df\u673a\u6743\u9650\u6388\u4e88 1 rabbitmqctl set_permissions -p { \u865a\u62df\u4e3b\u673a\u540d } { \u7528\u6237\u540d } \".*\" \".*\" \".*\" \u683c\u5f0f\uff1arabbitmqctl set_permissions [-p vhost] {user} {conf} {write} {read} vhost:\u6388\u4e88\u7528\u6237\u8bbf\u95ee\u6743\u9650\u7684vhost\u7684\u540d\u79f0 user\uff1a\u53ef\u4ee5\u8bbf\u95ee\u6307\u5b9avhost\u7684\u7528\u6237\u540d conf:\u7528\u4e8e\u5339\u914d\u7528\u6237\u5728\u54ea\u4e9b\u8d44\u6e90\u662f\u62e5\u6709\u53ef\u914d\u7f6e\u6743\u9650\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\uff08\u961f\u5217\u548c\u4ea4\u6362\u673a\u7684\u521b\u5efa\u53ca\u5220\u9664\u4e4b\u7c7b\uff09 write\uff1a\u7528\u4e8e\u5339\u914d\u7528\u6237\u5728\u54ea\u4e9b\u8d44\u6e90\u662f\u62e5\u6709\u53ef\u5199\u6743\u9650\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\uff08\u53d1\u5e03\u6d88\u606f\uff09 read\uff1a\u7528\u4e8e\u5339\u914d\u7528\u6237\u5728\u54ea\u4e9b\u8d44\u6e90\u662f\u62e5\u6709\u53ef\u8bfb\u6743\u9650\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\uff08\u8bfb\u53d6\u6d88\u606f\u548c\u6e05\u7a7a\u961f\u5217\uff09 \u67e5\u770b\u7528\u6237\u7684\u6743\u9650 1 $ rabbitmqctl list_user_permissions { USER }","title":"1. \u865a\u62df\u4e3b\u673a\u7ba1\u7406"},{"location":"software/middleware/rabbitmq/#2_7","text":"\u521b\u5efa\u7528\u6237\u5e76\u8bbe\u7f6e\u5bc6\u7801 1 $ rabbitmqctl add_user { username } { password } \u66f4\u6539\u5bc6\u7801 1 $ rabbitmqctl change_password { username } { new password } \u6e05\u9664\u5bc6\u7801 1 $ rabbitmqctl clear_password { username } \u67e5\u770b\u73b0\u6709\u7528\u6237 1 $ rabbitmqctl list_users \u8bbe\u7f6e\u7528\u6237\u89d2\u8272 1 2 3 4 5 6 7 $ rabbitmqctl set_user_tags { username } { roles } \u7528\u6237\u89d2\u8272\u7c7b\u578b\uff1a none: \u65e0\u4efb\u4f55\u89d2\u8272\uff0c\u65b0\u521b\u5efa\u7684\u7528\u6237\u89d2\u8272\u9ed8\u8ba4\u4e3anone management:\u53ef\u4ee5\u8bbf\u95eeweb\u7ba1\u7406\u754c\u9762 policymaker:\u5305\u542bmanagement\u7684\u6240\u6709\u6743\u9650\uff0c\u5e76\u53ef\u53ef\u4ee5\u7ba1\u7406\u7b56\u7565\u548c\u53c2\u6570 monitoring:\u5305\u542bmanagement\u7684\u6240\u6709\u6743\u9650\uff0c\u53ef\u4ee5\u770b\u5230\u6240\u6709\u8fde\u63a5\u3001\u4fe1\u9053\u53ca\u8282\u70b9\u76f8\u5173\u4fe1\u606f administrator: \u6700\u9ad8\u6743\u9650 \u9a8c\u8bc1\u7528\u6237\u662f\u5426\u80fd\u767b\u9646\u6210\u529f 1 $ rabbitmqctl authenticate_user { username } { password } \u5220\u9664\u7528\u6237 1 $ rabbitmqctl delete_user { username }","title":"2. \u7528\u6237\u7ba1\u7406"},{"location":"software/middleware/rabbitmq/#3-web","text":"\u67e5\u770b\u53ef\u7528\u63d2\u4ef6 1 2 $ rabbitmq-plugins list # [E*] \u4e3a\u663e\u5f0f\u542f\u52a8\uff1b[e*] \u4e3a\u9690\u5f0f\u542f\u52a8 \u63d2\u4ef6\u8def\u5f84\uff1a$RABBITMQ_HOME/plugins \u542f\u7528web\u7ba1\u7406\u63d2\u4ef6 1 2 3 $ rabbitmq-plugins enable rabbitmq_management $ netstat -lant | grep 15672 tcp 0 0 0 .0.0.0:15672 0 .0.0.0:* LISTEN \u521b\u5efa\u4e00\u4e2a\u5177\u6709\u7ba1\u7406\u5458\u8eab\u4efd\u7684\u7528\u6237 1 2 $ rabbitmqctl add_user admin admin $ rabbitmqctl set_user_tags admin administrator \u767b\u9646\u7ba1\u7406\u754c\u9762 http://serverip:15672 \u5173\u95ed\u63d2\u4ef6 1 $ rabbitmq-plugins disable rabbitmq_management","title":"3. WEB\u7aef\u7ba1\u7406"},{"location":"software/middleware/rabbitmq/#4_3","text":"\u505c\u6b62\u670d\u52a1 1 2 3 4 # \u505c\u6b62\u8fd0\u884cRabbitmq Erlang\u865a\u62df\u673a\u548cRabbitmq\u670d\u52a1\u5e94\u7528 $ rabbitmqctl stop # \u505c\u6b62\u8fd0\u884cRabbitmq Erlang\u865a\u62df\u673a\u548cRabbitmq\u670d\u52a1\u5e94\u7528\uff08\u963b\u585e\u76f4\u5230Erlang\u865a\u62df\u673a\u8fdb\u7a0b\u9000\u51fa\uff09 $ rabbitmqctl shutdown \u505c\u6b62Rabbitmq\u5e94\u7528(Erlang\u865a\u62df\u673a\u5904\u4e8e\u8fd0\u884c\u72b6\u6001) 1 $ rabbitmqctl stop_app \u542f\u52a8Rabbitmq\u5e94\u7528 1 $ rabbitmqctl start_app \u91cd\u7f6e\u8282\u70b9\uff0c\u8fd8\u539f\u5230\u6700\u521d\u72b6\u6001 1 $ rabbitmqctl reset \u65e5\u5fd7\u8f6c\u50a8 1 $ rabbitmqctl rotate_logs { \u540e\u7f00 }","title":"4. \u5e94\u7528\u7ba1\u7406"},{"location":"software/middleware/rabbitmq/#5_1","text":"\u961f\u5217\u72b6\u6001 \u683c\u5f0f\uff1arabbitmqctl list_queues [-p vhost] [queueinfoitem ...] 1 $ rabbitmqctl list_queues -p myvhost \u4ea4\u6362\u673a\u72b6\u6001 \u683c\u5f0f\uff1arabbitmqctl list_exchange [-p vhost] [exchangeinfoitem ...] 1 $ rabbitmqctl list_exchanges -p myvhost name type durable auto_delete internal arguments policy bind\u72b6\u6001 \u683c\u5f0f\uff1arabbitmqctl list bindings [-p vhost] [bindinginfoitem ...] 1 $ rabbitmqctl list_bindings -p myvhost -q \u8fde\u63a5\u72b6\u6001 \u683c\u5f0f\uff1arabbitmqctllist_connections [connectioninfoitem ...] 1 $ rabbitmqctl list_connections \u4fe1\u9053\u72b6\u6001 \u683c\u5f0f\uff1a rabbitmqctl list_channels [channelinfoitem ...] 1 $ rabbitmqctl list_channels \u6d88\u8d39\u8005\u72b6\u6001 \u683c\u5f0f\uff1arabbitmqctl list_consumers [-p vhost] 1 $ rabbitmqctl list_consumers -p / \u670d\u52a1\u72b6\u6001 1 2 3 4 5 6 7 8 # Broker \u72b6\u6001 $ rabbitmqctl status # \u8282\u70b9\u5065\u5eb7\u68c0\u6d4b $ rabbitmqctl node_health_check # \u73af\u5883\u53d8\u91cf\u540d\u79f0\u548c\u503c $ rabbitmqctl environment # \u751f\u6210\u670d\u52a1\u72b6\u6001\u62a5\u544a $ rabbitmqctl report > report.txt","title":"5. \u670d\u52a1\u72b6\u6001"},{"location":"software/middleware/rabbitmq/#3_4","text":"","title":"3. \u914d\u7f6e"},{"location":"software/middleware/rabbitmq/#1_9","text":"\u73af\u5883\u53d8\u91cf\u4f18\u5148\u7ea7\uff1aSHELL\u73af\u5883>rabbitmq-env.conf>\u9ed8\u8ba4\u914d\u7f6e rabbitmq-env.conf:\\$RABBITMQ_HOME/etc/rabbitmq/rabbitmq-env.conf \u9ed8\u8ba4\u914d\u7f6e\uff1a\\$RABBITMQ_HOME/sbin/rabbitmq-defaults","title":"1. \u73af\u5883\u53d8\u91cf"},{"location":"software/middleware/rabbitmq/#2_8","text":"\u914d\u7f6e\u6587\u4ef6\u793a\u4f8b\uff1ahttps://github.com/rabbitmq/rabbitmq-server/blob/v3.7.x/docs/rabbitmq.conf.example","title":"2. \u914d\u7f6e\u6587\u4ef6"},{"location":"software/middleware/rabbitmq/#3_5","text":"\u5185\u6838\u53c2\u6570 1 2 3 net.ipv4.tcp_fID_timeout = 5 net.core.somaxconn = 128 net.ipv4.tcp_max_syn_backlog = 4096","title":"3. \u4f18\u5316\u914d\u7f6e"},{"location":"software/middleware/rabbitmq/#4_4","text":"Rabbitmq\u96c6\u7fa4\u4e2d\u7684\u6240\u6709\u8282\u70b9\u90fd\u4f1a\u5907\u4efd\u6240\u6709\u5143\u6570\u636e\u4fe1\u606f\uff0c\u5305\u62ec: \u961f\u5217\u5143\u6570\u636e\uff1a\u961f\u5217\u7684\u540d\u79f0\u53ca\u5c5e\u6027 \u4ea4\u6362\u5668\uff1a\u4ea4\u6362\u5668\u7684\u540d\u79f0\u53ca\u5c5e\u6027 \u7ed1\u5b9a\u5173\u7cfb\u5143\u6570\u636e\uff1a\u4ea4\u6362\u5668\u4e0e\u961f\u5217\u6216\u8005\u4ea4\u6362\u5668\u4e0e\u4ea4\u6362\u5668\u4e4b\u95f4\u7684\u7ed1\u5b9a\u5173\u7cfb\uff1b vhost\u6570\u636e\uff1a\u4e3avhost\u5185\u7684\u961f\u5217\u3001\u4ea4\u6362\u5668\u548c\u7ed1\u5b9a\u63d0\u4f9b\u547d\u540d\u7a7a\u95f4\u53ca\u5b89\u5168\u5c5e\u6027\u3002 \u6d88\u606f\u4e0d\u4f1a\u5907\u4efd\uff08\u901a\u8fc7\u914d\u7f6e\u955c\u50cf\u961f\u5217\u53ef\u4ee5\u89e3\u51b3\uff09 :\u53ea\u4f1a\u5728\u5355\u8282\u70b9\u521b\u5efa\u961f\u5217\u5e76\u5305\u542b\u5b8c\u6574\u7684\u961f \u5217\u4fe1\u606f\uff08\u5143\u6570\u636e\u3001\u72b6\u6001\u3001\u5185\u5bb9\uff09\u3002","title":"4. \u96c6\u7fa4"},{"location":"software/middleware/rabbitmq/#1_10","text":"\u5b89\u88c5rabbitmq \u53c2\u7167\u4e00.1\u4e2d\u7684\u6b65\u9aa4\u5b89\u88c5\u4e09\u53f0rabbitmq\u670d\u52a1\u5668 \u914d\u7f6eDNS\u89e3\u6790 1 2 3 4 cat /etc/hosts 172 .16.10.101 node1 172 .16.10.102 node2 172 .16.10.103 node3 \u542f\u52a8node1 1 [ ubuntu@nodel:~$ rabbitmq-server -detached \u62f7\u8d1dnode1\u7684cookie\u6587\u4ef6\u5230node2\uff0cnode3 \u7f16\u8bd1\u5b89\u88c5\u7684cookie\u6587\u4ef6\u5728\u3000$HOME/.erlang.cookie 1 2 ubuntu@node1:~$ scp $HOME /.erlang.cookie ubuntu@node2:~/ ubuntu@node1:~$ scp $HOME /.erlang.cookie ubuntu@node3:~/ \u914d\u7f6e\u96c6\u7fa4 \u96c6\u7fa4\u914d\u7f6e\u7684\u65b9\u5f0f\uff1a rabbitmqctl \u6700\u5e38\u7528 rabbitmq.config rabbitmq-autocluster \u5c06node2\u52a0\u5165\u96c6\u7fa4 1 2 3 4 5 6 7 8 9 ubuntu@node2:~$ rabbitmq-server -detached ubuntu@node2:~$ rabbitmqctl stop_app Stopping rabbit application on node rabbit@node2 ubuntu@node2:~$ rabbitmqctl reset Resetting node rabbit@node2 ubuntu@node2:~$ rabbitmqctl join_cluster rabbit@node1 Clustering node rabbit@node2 with rabbit@node1 ubuntu@node2:~$ rabbitmqctl start_app Starting node rabbit@node2 \u5c06node3\u52a0\u5165\u96c6\u7fa4 1 2 3 4 5 6 7 8 9 ubuntu@node3:~$ rabbitmq-server -detached ubuntu@node3:~$ rabbitmqctl stop_app Stopping rabbit application on node rabbit@node3 ubuntu@node3:~$ rabbitmqctl reset Resetting node rabbit@node3 ubuntu@node3:~$ rabbitmqctl join_cluster rabbit@node1 Clustering node rabbit@node3 with rabbit@node1 ubuntu@node3:~$ rabbitmqctl start_app Starting node rabbit@node3 \u67e5\u770b\u96c6\u7fa4\u72b6\u6001 1 2 3 4 5 6 7 ubuntu@node1:~$ rabbitmqctl cluster_status Cluster status of node rabbit@node1 [{ nodes, [{ disc, [ rabbit@node1,rabbit@node2,rabbit@node3 ]}]} , { running_nodes, [ rabbit@node3,rabbit@node2,rabbit@node1 ]} , { cluster_name,<< \"rabbit@node1\" >> } , { partitions, []} , { alarms, [{ rabbit@node3, []} , { rabbit@node2, []} , { rabbit@node1, []}]}] \u5982\u679c\u5173\u95ed\u4e86\u96c6\u7fa4\u4e2d\u6240\u6709\u7684\u8282\u70b9\uff0c\u5219\u9700\u8981\u4fdd\u8bc1\u5728\u542f\u52a8\u7684\u65f6\u5019\u6700\u540e\u5173\u95ed\u7684\u90a3\u4e2a\u8282\u70b9\u662f\u7b2c\u4e00\u4e2a\u542f\u52a8 \u7684\u3002\u5982\u679c\u7b2c\u4e00\u4e2a\u8d77\u5230\u80fd\u591f\u7684\u4e0d\u662f\u6700\u540e\u5173\u95ed\u7684\u8282\u70b9\uff0c\u90a3\u4e48\u8fd9\u4e2a\u8282\u70b9\u4f1a\u7b49\u5f85\u6700\u540e\u5173\u95ed\u7684\u8282\u70b9\u542f\u52a8\u3002 \u9ed8\u8ba4\u91cd\u8bd510\u6b2130s\u4ee5\u7b49\u5f85\u6700\u540e\u5173\u95ed\u7684\u8282\u70b9\u542f\u52a8\u3002\u5728\u91cd\u8bd5\u5931\u8d25\u4e4b\u540e\uff0c\u5f53\u524d\u8282\u70b9\u4e5f\u4f1a\u56e0\u4e3a\u5931\u8d25\u800c \u5173\u95ed\u81ea\u8eab\u7684\u5e94\u7528\u3002\u5982\u679c\u6700\u540e\u4e00\u4e2a\u5173\u95ed\u7684\u8282\u70b9\u6700\u7ec8\u7531\u4e8e\u67d0\u4e9b\u5f02\u5e38\u800c\u65e0\u6cd5\u542f\u52a8\uff0c\u5219\u53ef\u4ee5\u901a\u8fc7rab bitmqctlforget_cluster_node \u547d\u4ee4\u6765\u5c06\u6b64\u8282\u70b9\u8e22\u51fa\u96c6\u7fa4\u3002 \u5982\u679c\u6240\u6709\u7684\u8282\u70b9\u56e0\u4e3a\u67d0\u4e9b\u56e0\u7d20(\u65ad\u7535\u7b49)\u5173\u95ed\uff0c\u90a3\u4e48\u96c6\u7fa4\u4e2d\u7684\u8282\u70b9\u4f1a\u8ba4\u4e3a\u8fd8\u6709\u5176\u4ed6\u8282\u70b9\u5728\u5176\u540e \u9762\u5173\u95ed\u3002\u9700\u8981\u8c03\u7528rabbitmqctl force_boot\u6765\u542f\u52a8\u4e00\u4e2a\u8282\u70b9\uff0c\u4e4b\u540e\u96c6\u7fa4\u624d\u80fd\u6b63\u5e38\u542f\u52a8\u3002","title":"1. \u96c6\u7fa4\u642d\u5efa"},{"location":"software/middleware/rabbitmq/#2_9","text":"","title":"2. \u96c6\u7fa4\u7ba1\u7406"},{"location":"software/middleware/rabbitmq/#1_11","text":"\u78c1\u76d8\u8282\u70b9 \u96c6\u7fa4\u4e2d\u81f3\u5c11\u8981\u67092\u4e2a\u78c1\u76d8\u8282\u70b9 \u5982\u679c\u53ea\u6709\u4e00\u4e2a\u78c1\u76d8\u8282\u70b9\uff0c\u5f53\u78c1\u76d8\u8282\u70b9\u5d29\u6e83\u65f6\uff0c\u76f4\u8fbe\u8be5\u8282\u70b9\u6062\u590d\u4e4b\u524d\u3002\u4e0d\u80fd\u6267\u884c\u521b\u5efa\u961f\u5217\u3001\u4ea4\u6362 \u5668\u3001\u7ed1\u5b9a\u5173\u7cfb\u3001\u7528\u6237\uff0c\u4ee5\u53ca\u6743\u9650\u66f4\u6539\u3001\u6dfb\u52a0\u6216\u5220\u9664\u96c6\u7fa4\u8282\u70b9\u7684\u64cd\u4f5c \u5185\u5b58\u8282\u70b9 \u5185\u5b58\u8282\u70b9\u552f\u4e00\u5b58\u50a8\u5230\u78c1\u76d8\u7684\u5143\u6570\u636e\u4fe1\u606f\u662f\u96c6\u7fa4\u53ea\u80fd\u602a\u78c1\u76d8\u8282\u70b9\u7684\u5730\u5740\u3002\u53ea\u8981\u5185\u5b58\u8282\u70b9\u53ef\u4ee5\u627e\u5230 \u81f3\u5c11\u4e00\u5757\u76d8\uff0c\u90a3\u4e48\u5b83\u5c31\u80fd\u5728\u91cd\u542f\u4ee5\u540e\u91cd\u65b0\u52a0\u5165\u96c6\u7fa4\u4e2d \u5355\u96c6\u7fa4\u8282\u70b9\u4e2d\u53ea\u6709\u78c1\u76d8\u7c7b\u578b\u7684\u8282\u70b9\uff0c\u5426\u5219\u91cd\u542f\u540e\u6570\u636e\u5c31\u4f1a\u4e22\u5931 \u52a0\u5165\u8282\u70b9\u65f6\u6307\u5b9a\u8282\u70b9\u7c7b\u578b 1 rabbitmqctl join_cluster rabbit@node1 --ram \u6539\u53d8\u8282\u70b9\u7c7b\u578b(\u9700\u8981\u5148stop_app) 1 ubuntu@node2:~$ rabbitmqctl change_cluster_node_type { disc | ram }","title":"1. \u96c6\u7fa4\u8282\u70b9\u7684\u7c7b\u578b"},{"location":"software/middleware/rabbitmq/#2_10","text":"\u5254\u9664\u8282\u70b9\u6709\u4e24\u79cd\u65b9\u5f0f\uff0c\u4ee5\u5254\u9664node2\u4e3a\u4f8b \u88ab\u52a8\u5254\u9664 \u5148\u5728node2\u5173\u95edrabbitmq\uff1a rabbitmqctl stop_app \u7136\u540e\u5728node1\u4e0a\u628anode2\u5254\u9664\uff1a rabbitmqctl forget_cluster_node rabbit@node2 \u4e3b\u52a8\u5254\u9664 \u505c\u6b62\u5e94\u7528\uff1arabbitmqctl stop_app \u91cd\u7f6erabbitmq \uff1arabbitmqctl reset","title":"2. \u5254\u9664\u5355\u4e2a\u8282\u70b9"},{"location":"software/middleware/rabbitmq/#3_6","text":"\u67e5\u770b\u96c6\u7fa4\u72b6\u6001 1 $ rabbitmqctl cluster_status \u4fee\u6539\u96c6\u7fa4\u8282\u70b9\u7c7b\u578b 1 2 # \u9700\u8981\u73b0\u505c\u6b62rabbitmq\u5e94\u7528\uff1arabbitmqctl stop_app $ rabbitmqctl change_cluster_node_type { disc | ram } \u5c06\u8282\u70b9\u4ece\u96c6\u7fa4\u4e2d\u5220\u9664 1 $ rabbitmqctl forget_cluster_node { \u8282\u70b9\u540d\u79f0 } \u542f\u52a8\u524d\u54a8\u8be2\u96c6\u7fa4\u8282\u70b9\u7684\u6700\u65b0\u4fe1\u606f 1 rabbitmqctl update_cluster_nodes { \u8282\u70b9\u540d\u79f0 } \u65ad\u7535\u540e\u91cd\u542f \u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u91cd\u542f\u7684\u7b2c\u4e00\u4e2a\u8282\u70b9\u5e94\u8be5\u662f\u6700\u540e\u5173\u95ed\u7684\u8282\u70b9 1 $ rabbitmqctl force_boot \u540c\u6b65\u961f\u5217 1 2 # \u524d\u63d0\u6761\u4ef6\u662f\u961f\u5217\u914d\u7f6e\u4e86\u955c\u50cf $ rabbitmqctl sync_queue queue \u8bbe\u7f6e\u96c6\u7fa4\u540d\u79f0 \u9ed8\u8ba4\u662f\u96c6\u7fa4\u4e2d\u7b2c\u4e00\u4e2a\u8282\u70b9\u7684\u540d\u79f0 1 $ rabbitmqctl set_cluster_name { name }","title":"3. \u603b\u7ed3"},{"location":"software/middleware/rabbitmq/#3_7","text":"\u901a\u8fc7HTTP API\u63d0\u4f9b\u76d1\u63a7\u6570\u636e \u901a\u8fc7\u5ba2\u6237\u7aef\u63d0\u4f9b\u76d1\u63a7\u6570\u636e \u5143\u6570\u636e\u7ba1\u7406\u4e0e\u76d1\u63a7","title":"3. \u96c6\u7fa4\u76d1\u63a7"},{"location":"software/middleware/rabbitmq/#4_5","text":"\u96c6\u7fa4\u4e2d\u7684\u6bcf\u4e2a\u8282\u70b9\u90fd\u53ef\u4ee5\u4fdd\u5b58\u5143\u6570\u636e\uff0c\u4f46\u662f\u6d88\u606f\u53ea\u5728\u5355\u8282\u70b9\u4e0a\u4fdd\u5b58\uff0c\u4f7f\u7528\u955c\u50cf\u961f\u5217\u53ef\u4ee5\u5c06\u961f\u5217\u955c\u50cf\u5230 \u96c6\u7fa4\u4e2d\u7684\u5176\u4ed6Broker\u4e0a\uff0c\u5982\u679c\u96c6\u7fa4\u4e2d\u7684\u4e00\u4e2a\u8282\u70b9\u5931\u6548\u4e86\uff0c\u961f\u5217\u80fd\u81ea\u52a8\u5207\u6362\u5230\u955c\u50cf\u4e2d\u7684\u53e6\u4e00\u4e2a\u8282\u70b9\u4e0a\u3002 \u955c\u50cf\u961f\u5217\u90fd\u5305\u542b\u4e00\u4e2amaster\u8282\u70b9\uff0c\u548c\u82e5\u5e72\u4e2a\u4ece\u8282\u70b9\u3002\u5982\u679cmaster\u7531\u4e8e\u67d0\u79cd\u539f\u56e0\u5931\u6548\uff0c\u90a3\u4e48\u8d44\u5386\u6700\u8001 \u7684\uff08\u52a0\u5165\u96c6\u7fa4\u65f6\u95f4\u6700\u957f\u7684\uff09slave\u4f1a\u88ab\u63d0\u5347\u4e3a\u65b0\u7684master\u3002\u53d1\u9001\u5230\u955c\u50cf\u961f\u5217\u7684\u6240\u6709\u6d88\u606f\u4f1a\u540c\u65f6\u53d1\u5f80 master\u548c\u6240\u6709\u7684slave\uff0c\u5982\u679c\u6b64\u65f6master\u6302\u4e86\uff0c\u6d88\u606f\u8fd8\u4f1a\u5728slave\u4e0a\u3002\u9664\u4e86\u53d1\u9001\u6d88\u606f\u5916\u7684\u6240\u6709\u52a8\u4f5c \u90fd\u53ea\u4f1a\u5411master\u53d1\u9001\uff0c\u7136\u540e\u518d\u7531master\u5c06\u547d\u4ee4\u6267\u884c\u7684\u7ed3\u679c\u5e7f\u64ad\u7ed9\u5404\u4e2aslave\u3002 \u6d88\u8d39\u8005\u8ba2\u9605\u7684\u6d88\u606f\u5b9e\u9645\u4e0a\u90fd\u662f\u4ecemaster\u83b7\u53d6\u6d88\u606f\uff0c\u6bd4\u5982\u6d88\u8d39\u8005\u8fde\u63a5\u5230salve \u6d88\u8d39\u8005\u4e0eslave\u5efa\u7acb\u8fde\u63a5-->\u6d88\u8d39\u8005\u53d1\u51faget\u8bf7\u6c42-->slave\u628a\u8bf7\u6c42\u8f6c\u7ed9master-->master\u51c6\u5907\u6570\u636e \u8fd4\u7ed9slave-->slave\u628a\u6570\u636e\u6295\u9012\u7ed9\u6d88\u8d39\u8005 \u4e8b\u5b9e\u4e0a\u961f\u5217\u7684master\u4e0d\u662f\u90fd\u5b58\u5728\u67d0\u4e00\u4e2a\u8282\u70b9\u4e0a\u7684\uff0c\u800c\u6bcf\u4e2a\u8282\u70b9\u4e0a\u65e2\u6709master\uff0c\u53c8\u6709slave\u3002\u961f\u5217\u7684 master\u662f\u5747\u5300\u5206\u5e03\u5728\u96c6\u7fa4\u4e2d\u7684\u5404\u4e2a\u8282\u70b9\u4e0a\u7684\u3002\uff08\u4e0d\u6070\u5f53\u7684\u6bd4\u4f8b\uff1a\u7c7b\u4f3c\u4e0e\u78c1\u76d8raid5\u7684\u90a3\u79cd\u5b58\u50a8) 1 $ rabbitmqctl set_policy ha-all \".*\" '{\"ha-mode\":\"all\",\"ha-sync-mode\":\"automatic\"}'","title":"4. \u961f\u5217\u955c\u50cf"},{"location":"software/middleware/rabbitmq/#5_2","text":"\u96c6\u7fa4\u914d\u7f6e\u955c\u50cf\u961f\u5217\u4e4b\u540e\u518d\u914d\u7f6e\u8d1f\u8f7d\u5747\u8861","title":"5. \u8d1f\u8f7d\u5747\u8861"},{"location":"software/middleware/rabbitmq/#1_12","text":"\u8d1f\u8f7d\u5747\u8861\u6d41\u7a0b\u7b97\u6cd5\uff1a \u8f6e\u8be2 \u52a0\u6743\u8f6e\u8be2 \u968f\u673a\u6cd5 \u52a0\u6743\u968f\u673a\u6cd5l \u6e90\u5730\u5740\u54c8\u5e0c \u6700\u5c0f\u8fde\u63a5\u6570\u6cd5","title":"1. \u5ba2\u6237\u7aef\u5185\u90e8\u5b9e\u73b0"},{"location":"software/middleware/rabbitmq/#2-haproxy","text":"","title":"2. \u4f7f\u7528HAProxy"},{"location":"software/middleware/rabbitmq/#1-haproxy","text":"1 2 3 4 5 6 7 8 $ sudo apt update && sudo apt install make gcc $ sudo apt install -y zlib1g-dev libpcre3-dev libssl-dev # \u76f4\u63a5\u4e0b\u8f7d\u88ab\u5899 $ wget http://www.haproxy.org/download/1.8/src/haproxy-1.8.19.tar.gz $ tar zxf haproxy-1.8.19.tar.gz $ sudo mkdir /usr/local/haproxy $ make TARGET = generic USE_PCRE = 1 USE_OPENSSL = 1 USE_ZLIB = 1 $ sodo make install PREFIX = /usr/loacal/haproxy","title":"1. \u5b89\u88c5haproxy"},{"location":"software/middleware/rabbitmq/#2_11","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 $ sudo mkdir /usr/loacl/haproxy $ cat /usr/loacl/haproxy/haproxy.cnf # \u5168\u5c40\u914d\u7f6e global log 127 .0.0.1 local0 info maxconn 4096 chroot /usr/local/haproxy user haproxy group haproxy daemon pidfile /tmp/haproxy.pid # \u9ed8\u8ba4\u914d\u7f6e defaults log global mode tcp option tcplog option dontlognull retries 3 maxconn 2000 timeout connect 5s timeout client 60s timeout server 60s # \u7ed1\u5b9a\u914d\u7f6e frontend rabbitmq bind *:5672 mode tcp default_backend rabbitmq_cluster backend rabbitmq_cluster mode tcp balance roundrobin server node1 172 .16.10.101:5672 check inter 5000 rise 2 fall 3 weight 1 server node2 172 .16.10.102:5672 check inter 5000 rise 2 fall 3 weight 1 server node3 172 .16.10.103:5672 check inter 5000 rise 2 fall 3 weight 1 # haproxy \u76d1\u63a7 listen monitor bind *:8100 mode http stats enable stats auth admin:admin stats refresh 5s stats uri /haproxy?stats # \u786e\u8ba4\u670d\u52a1\u542f\u52a8 $ netstat -lant | egrep \"(8100|5672)\" tcp 0 0 0 .0.0.0:8100 0 .0.0.0:* LISTEN tcp 0 0 0 .0.0.0:5672 0 .0.0.0:* LISTEN","title":"2. \u914d\u7f6e"},{"location":"software/middleware/rabbitmq/#3_8","text":"","title":"3. \u9a8c\u8bc1"},{"location":"software/middleware/rabbitmq/#3-keepalived","text":"\u5148\u6b20\u8005","title":"3. keepalived\u5b9e\u73b0\u9ad8\u53ef\u7528+\u8d1f\u8f7d\u5747\u8861"},{"location":"software/middleware/rabbitmq/#_4","text":"\u4ee5\u4e0a\u5185\u5bb9\u662f\u770b\u4e66+\u5b9e\u8df5\u505a\u7684\u4e00\u4e9b\u7b14\u8bb0\uff0c\u6700\u540e\u4e00\u90e8\u5206\u60f3\u5199\u9ad8\u53ef\u7528\u76f8\u5173\u7684\u5185\u5bb9\uff08keepalived\u7b49\uff09\uff0c\u4f46\u662f \u77e5\u8bc6\u50a8\u5907\u8fd8\u6ca1\u5230\u3002\u540e\u671f\u4f1a\u4e13\u95e8\u5199\u4e00\u7bc7\u5173\u4e8elvs\u3001keepalived\u76f8\u5173\u7684\u3002\u672c\u6765\u8fd8\u884c\u5199\u4e00\u4e9b\u5173\u4e8epython \u5ba2\u6237\u7aef\u4f7f\u7528rabbitmq\u7684\u6559\u7a0b\uff0c\u80fd\u529b\u6709\u9650\uff0c\u8fd8\u662f\u770b \u5b98\u65b9\u624b\u518c \u5427","title":"\u7ed3\u5c3e"},{"location":"web/%E5%8D%8F%E8%AE%AE/HTTP/","text":"","title":"HTTP"},{"location":"web/%E5%8D%8F%E8%AE%AE/RESTful/","text":"RESTful \u00b6 \u4e00\u3001\u5341\u6761\u89c4\u8303 \u00b6 1.\u6570\u636e\u7684\u5b89\u5168\u4fdd\u969c \u00b6 url\u94fe\u63a5\u4e00\u822c\u90fd\u91c7\u7528https\u534f\u8bae\u8fdb\u884c\u4f20\u8f93\uff08\u53ef\u4ee5\u63d0\u9ad8\u6570\u636e\u4ea4\u4e92\u8fc7\u7a0b\u4e2d\u7684\u5b89\u5168\u6027\uff09 2. \u63a5\u53e3\u7279\u5f81\u8868\u73b0 \u00b6 \u7528api\u5173\u952e\u5b57\u6807\u8bc6\u63a5\u53e3url 1 2 https://api.baidu.com https://www.baidu.com/api 3. \u591a\u6570\u636e\u7248\u672c\u5171\u5b58 \u00b6 \u5728url\u94fe\u63a5\u4e2d\u6807\u8bc6\u6570\u636e\u7248\u672c 1 2 https://api.baidu.com/v1 https://api.baidu.com/v2 url\u94fe\u63a5\u4e2d\u7684v1\u3001v2\u5c31\u662f\u4e0d\u540c\u6570\u636e\u7248\u672c\u7684\u4f53\u73b0\uff08\u53ea\u6709\u5728\u4e00\u79cd\u6570\u636e\u8d44\u6e90\u6709\u591a\u7248\u672c\u60c5\u51b5\u4e0b\uff09\u3002 4. \u6570\u636e\u5373\u662f\u8d44\u6e90\uff0c\u5747\u4f7f\u7528\u540d\u8bcd\uff08\u53ef\u590d\u6570\uff09 \u00b6 \u63a5\u53e3\u4e00\u822c\u90fd\u662f\u5b8c\u6210\u524d\u540e\u53f0\u6570\u636e\u7684\u4ea4\u4e92\uff0c\u4ea4\u4e92\u7684\u6570\u636e\u6211\u4eec\u79f0\u4e4b\u4e3a\u8d44\u6e90 1 2 3 https://api.baidu.com/users https://api.baidu.com/books https://api.baidu.com/book \u4e00\u822c\u63d0\u5021\u7528\u8d44\u6e90\u7684\u590d\u6570\u5f62\u5f0f\uff0c\u5728url\u94fe\u63a5\u4e2d\u5956\u52b1\u4e0d\u8981\u51fa\u73b0\u64cd\u4f5c\u8d44\u6e90\u7684\u52a8\u8bcd\uff0c\u9519\u8bef\u793a\u8303\uff1a https://api.baidu.com/delete-user \u7279\u6b8a\u7684\u63a5\u53e3\u53ef\u4ee5\u51fa\u73b0\u52a8\u8bcd\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u63a5\u53e3\u4e00\u822c\u6ca1\u6709\u4e00\u4e2a\u660e\u786e\u7684\u8d44\u6e90\uff0c\u6216\u662f\u52a8\u8bcd\u5c31\u662f\u63a5\u53e3\u7684\u6838\u5fc3\u542b\u4e49 1 2 https://api.baidu.com/place/search https://api.baidu.com/login 5. \u8d44\u6e90\u64cd\u4f5c\u7531\u8bf7\u6c42\u65b9\u5f0f\u51b3\u5b9a\uff08method\uff09 \u00b6 \u64cd\u4f5c\u8d44\u6e90\u4e00\u822c\u90fd\u4f1a\u6d89\u53ca\u5230\u589e\u5220\u6539\u67e5\uff0c\u6211\u4eec\u63d0\u4f9b\u8bf7\u6c42\u65b9\u5f0f\u6765\u6807\u8bc6\u589e\u5220\u6539\u67e5\u52a8\u4f5c 1 2 3 4 5 6 https://api.baidu.com/books - get\u8bf7\u6c42\uff1a\u83b7\u53d6\u6240\u6709\u4e66 https://api.baidu.com/books/1 - get\u8bf7\u6c42\uff1a\u83b7\u53d6\u4e3b\u952e\u4e3a1\u7684\u4e66 https://api.baidu.com/books - post\u8bf7\u6c42\uff1a\u65b0\u589e\u4e00\u672c\u4e66\u4e66 https://api.baidu.com/books/1 - put\u8bf7\u6c42\uff1a\u6574\u4f53\u4fee\u6539\u4e3b\u952e\u4e3a1\u7684\u4e66 https://api.baidu.com/books/1 - patch\u8bf7\u6c42\uff1a\u5c40\u90e8\u4fee\u6539\u4e3b\u952e\u4e3a1\u7684\u4e66 https://api.baidu.com/books/1 - delete\u8bf7\u6c42\uff1a\u5220\u9664\u4e3b\u952e\u4e3a1\u7684\u4e66 6.\u8fc7\u6ee4 \u00b6 \u901a\u8fc7\u5728url\u4e0a\u4f20\u53c2\u7684\u5f62\u5f0f\u4f20\u9012\u641c\u7d22\u6761\u4ef6 1 2 3 4 5 https://api.example.com/v1/zoos?limit=10\uff1a\u6307\u5b9a\u8fd4\u56de\u8bb0\u5f55\u7684\u6570\u91cf https://api.example.com/v1/zoos?offset=10\uff1a\u6307\u5b9a\u8fd4\u56de\u8bb0\u5f55\u7684\u5f00\u59cb\u4f4d\u7f6e https://api.example.com/v1/zoos?page=2&per_page=100\uff1a\u6307\u5b9a\u7b2c\u51e0\u9875\uff0c\u4ee5\u53ca\u6bcf\u9875\u7684\u8bb0\u5f55\u6570 https://api.example.com/v1/zoos?sortby=name&order=asc\uff1a\u6307\u5b9a\u8fd4\u56de\u7ed3\u679c\u6309\u7167\u54ea\u4e2a\u5c5e\u6027\u6392\u5e8f\uff0c\u4ee5\u53ca\u6392\u5e8f\u987a\u5e8f https://api.example.com/v1/zoos?animal_type_id=1\uff1a\u6307\u5b9a\u7b5b\u9009\u6761\u4ef6 7. \u54cd\u5e94\u72b6\u6001\u7801 \u00b6 7.1 \u6b63\u5e38\u54cd\u5e94 \u00b6 200\uff1a\u5e38\u89c4\u8bf7\u6c42 201\uff1a\u521b\u5efa\u6210\u529f 7.2 \u91cd\u5b9a\u5411\u54cd\u5e94 \u00b6 301\uff1a\u6c38\u4e45\u91cd\u5b9a\u5411 302\uff1a\u6682\u65f6\u91cd\u5b9a\u5411 7.3 \u5ba2\u6237\u7aef\u5f02\u5e38 \u00b6 403\uff1a\u8bf7\u6c42\u65e0\u6743\u9650 404\uff1a\u8bf7\u6c42\u8def\u5f84\u4e0d\u5b58\u5728 405\uff1a\u8bf7\u6c42\u65b9\u6cd5\u4e0d\u5b58\u5728 7.4 \u670d\u52a1\u5668\u5f02\u5e38 \u00b6 500\uff1a\u670d\u52a1\u5668\u5f02\u5e38 8. \u9519\u8bef\u5904\u7406 \u00b6 \u5e94\u8fd4\u56de\u9519\u8bef\u4fe1\u606f\uff0cerror\u5f53\u505akey 1 2 3 { error: \"\u65e0\u6743\u9650\u64cd\u4f5c\" } 9. \u8fd4\u56de\u7ed3\u679c \u00b6 \u9488\u5bf9\u4e0d\u540c\u64cd\u4f5c\uff0c\u670d\u52a1\u5668\u5411\u7528\u6237\u8fd4\u56de\u7684\u7ed3\u679c\u5e94\u8be5\u7b26\u5408\u4ee5\u4e0b\u89c4\u8303 1 2 3 4 5 6 GET /collection\uff1a\u8fd4\u56de\u8d44\u6e90\u5bf9\u8c61\u7684\u5217\u8868\uff08\u6570\u7ec4\uff09 GET /collection/resource\uff1a\u8fd4\u56de\u5355\u4e2a\u8d44\u6e90\u5bf9\u8c61 POST /collection\uff1a\u8fd4\u56de\u65b0\u751f\u6210\u7684\u8d44\u6e90\u5bf9\u8c61 PUT /collection/resource\uff1a\u8fd4\u56de\u5b8c\u6574\u7684\u8d44\u6e90\u5bf9\u8c61 PATCH /collection/resource\uff1a\u8fd4\u56de\u5b8c\u6574\u7684\u8d44\u6e90\u5bf9\u8c61 DELETE /collection/resource\uff1a\u8fd4\u56de\u4e00\u4e2a\u7a7a\u6587\u6863 10. Hypermedia API \u00b6 RESTful API\u6700\u597d\u505a\u5230Hypermedia\uff0c\u5373\u8fd4\u56de\u7ed3\u679c\u4e2d\u63d0\u4f9b\u94fe\u63a5\uff0c\u4f7f\u5f97\u7528\u6237\u4e0d\u67e5\u6587\u6863\uff0c\u4e5f\u77e5\u9053\u4e0b\u4e00\u6b65\u5e94\u8be5\u505a\u4ec0\u4e48\u3002 1 2 3 4 5 6 7 8 9 10 11 { \"status\" : 0 , \"msg\" : \"ok\" , \"results\" :[ { \"name\" : \"\u80af\u5fb7\u57fa(\u7f57\u9910\u5385)\" , \"img\" : \"https://image.baidu.com/kfc/001.png\" } ... ] }","title":"RESTful"},{"location":"web/%E5%8D%8F%E8%AE%AE/RESTful/#restful","text":"","title":"RESTful"},{"location":"web/%E5%8D%8F%E8%AE%AE/RESTful/#_1","text":"","title":"\u4e00\u3001\u5341\u6761\u89c4\u8303"},{"location":"web/%E5%8D%8F%E8%AE%AE/RESTful/#1","text":"url\u94fe\u63a5\u4e00\u822c\u90fd\u91c7\u7528https\u534f\u8bae\u8fdb\u884c\u4f20\u8f93\uff08\u53ef\u4ee5\u63d0\u9ad8\u6570\u636e\u4ea4\u4e92\u8fc7\u7a0b\u4e2d\u7684\u5b89\u5168\u6027\uff09","title":"1.\u6570\u636e\u7684\u5b89\u5168\u4fdd\u969c"},{"location":"web/%E5%8D%8F%E8%AE%AE/RESTful/#2","text":"\u7528api\u5173\u952e\u5b57\u6807\u8bc6\u63a5\u53e3url 1 2 https://api.baidu.com https://www.baidu.com/api","title":"2. \u63a5\u53e3\u7279\u5f81\u8868\u73b0"},{"location":"web/%E5%8D%8F%E8%AE%AE/RESTful/#3","text":"\u5728url\u94fe\u63a5\u4e2d\u6807\u8bc6\u6570\u636e\u7248\u672c 1 2 https://api.baidu.com/v1 https://api.baidu.com/v2 url\u94fe\u63a5\u4e2d\u7684v1\u3001v2\u5c31\u662f\u4e0d\u540c\u6570\u636e\u7248\u672c\u7684\u4f53\u73b0\uff08\u53ea\u6709\u5728\u4e00\u79cd\u6570\u636e\u8d44\u6e90\u6709\u591a\u7248\u672c\u60c5\u51b5\u4e0b\uff09\u3002","title":"3. \u591a\u6570\u636e\u7248\u672c\u5171\u5b58"},{"location":"web/%E5%8D%8F%E8%AE%AE/RESTful/#4","text":"\u63a5\u53e3\u4e00\u822c\u90fd\u662f\u5b8c\u6210\u524d\u540e\u53f0\u6570\u636e\u7684\u4ea4\u4e92\uff0c\u4ea4\u4e92\u7684\u6570\u636e\u6211\u4eec\u79f0\u4e4b\u4e3a\u8d44\u6e90 1 2 3 https://api.baidu.com/users https://api.baidu.com/books https://api.baidu.com/book \u4e00\u822c\u63d0\u5021\u7528\u8d44\u6e90\u7684\u590d\u6570\u5f62\u5f0f\uff0c\u5728url\u94fe\u63a5\u4e2d\u5956\u52b1\u4e0d\u8981\u51fa\u73b0\u64cd\u4f5c\u8d44\u6e90\u7684\u52a8\u8bcd\uff0c\u9519\u8bef\u793a\u8303\uff1a https://api.baidu.com/delete-user \u7279\u6b8a\u7684\u63a5\u53e3\u53ef\u4ee5\u51fa\u73b0\u52a8\u8bcd\uff0c\u56e0\u4e3a\u8fd9\u4e9b\u63a5\u53e3\u4e00\u822c\u6ca1\u6709\u4e00\u4e2a\u660e\u786e\u7684\u8d44\u6e90\uff0c\u6216\u662f\u52a8\u8bcd\u5c31\u662f\u63a5\u53e3\u7684\u6838\u5fc3\u542b\u4e49 1 2 https://api.baidu.com/place/search https://api.baidu.com/login","title":"4. \u6570\u636e\u5373\u662f\u8d44\u6e90\uff0c\u5747\u4f7f\u7528\u540d\u8bcd\uff08\u53ef\u590d\u6570\uff09"},{"location":"web/%E5%8D%8F%E8%AE%AE/RESTful/#5-method","text":"\u64cd\u4f5c\u8d44\u6e90\u4e00\u822c\u90fd\u4f1a\u6d89\u53ca\u5230\u589e\u5220\u6539\u67e5\uff0c\u6211\u4eec\u63d0\u4f9b\u8bf7\u6c42\u65b9\u5f0f\u6765\u6807\u8bc6\u589e\u5220\u6539\u67e5\u52a8\u4f5c 1 2 3 4 5 6 https://api.baidu.com/books - get\u8bf7\u6c42\uff1a\u83b7\u53d6\u6240\u6709\u4e66 https://api.baidu.com/books/1 - get\u8bf7\u6c42\uff1a\u83b7\u53d6\u4e3b\u952e\u4e3a1\u7684\u4e66 https://api.baidu.com/books - post\u8bf7\u6c42\uff1a\u65b0\u589e\u4e00\u672c\u4e66\u4e66 https://api.baidu.com/books/1 - put\u8bf7\u6c42\uff1a\u6574\u4f53\u4fee\u6539\u4e3b\u952e\u4e3a1\u7684\u4e66 https://api.baidu.com/books/1 - patch\u8bf7\u6c42\uff1a\u5c40\u90e8\u4fee\u6539\u4e3b\u952e\u4e3a1\u7684\u4e66 https://api.baidu.com/books/1 - delete\u8bf7\u6c42\uff1a\u5220\u9664\u4e3b\u952e\u4e3a1\u7684\u4e66","title":"5. \u8d44\u6e90\u64cd\u4f5c\u7531\u8bf7\u6c42\u65b9\u5f0f\u51b3\u5b9a\uff08method\uff09"},{"location":"web/%E5%8D%8F%E8%AE%AE/RESTful/#6","text":"\u901a\u8fc7\u5728url\u4e0a\u4f20\u53c2\u7684\u5f62\u5f0f\u4f20\u9012\u641c\u7d22\u6761\u4ef6 1 2 3 4 5 https://api.example.com/v1/zoos?limit=10\uff1a\u6307\u5b9a\u8fd4\u56de\u8bb0\u5f55\u7684\u6570\u91cf https://api.example.com/v1/zoos?offset=10\uff1a\u6307\u5b9a\u8fd4\u56de\u8bb0\u5f55\u7684\u5f00\u59cb\u4f4d\u7f6e https://api.example.com/v1/zoos?page=2&per_page=100\uff1a\u6307\u5b9a\u7b2c\u51e0\u9875\uff0c\u4ee5\u53ca\u6bcf\u9875\u7684\u8bb0\u5f55\u6570 https://api.example.com/v1/zoos?sortby=name&order=asc\uff1a\u6307\u5b9a\u8fd4\u56de\u7ed3\u679c\u6309\u7167\u54ea\u4e2a\u5c5e\u6027\u6392\u5e8f\uff0c\u4ee5\u53ca\u6392\u5e8f\u987a\u5e8f https://api.example.com/v1/zoos?animal_type_id=1\uff1a\u6307\u5b9a\u7b5b\u9009\u6761\u4ef6","title":"6.\u8fc7\u6ee4"},{"location":"web/%E5%8D%8F%E8%AE%AE/RESTful/#7","text":"","title":"7. \u54cd\u5e94\u72b6\u6001\u7801"},{"location":"web/%E5%8D%8F%E8%AE%AE/RESTful/#71","text":"200\uff1a\u5e38\u89c4\u8bf7\u6c42 201\uff1a\u521b\u5efa\u6210\u529f","title":"7.1 \u6b63\u5e38\u54cd\u5e94"},{"location":"web/%E5%8D%8F%E8%AE%AE/RESTful/#72","text":"301\uff1a\u6c38\u4e45\u91cd\u5b9a\u5411 302\uff1a\u6682\u65f6\u91cd\u5b9a\u5411","title":"7.2 \u91cd\u5b9a\u5411\u54cd\u5e94"},{"location":"web/%E5%8D%8F%E8%AE%AE/RESTful/#73","text":"403\uff1a\u8bf7\u6c42\u65e0\u6743\u9650 404\uff1a\u8bf7\u6c42\u8def\u5f84\u4e0d\u5b58\u5728 405\uff1a\u8bf7\u6c42\u65b9\u6cd5\u4e0d\u5b58\u5728","title":"7.3 \u5ba2\u6237\u7aef\u5f02\u5e38"},{"location":"web/%E5%8D%8F%E8%AE%AE/RESTful/#74","text":"500\uff1a\u670d\u52a1\u5668\u5f02\u5e38","title":"7.4 \u670d\u52a1\u5668\u5f02\u5e38"},{"location":"web/%E5%8D%8F%E8%AE%AE/RESTful/#8","text":"\u5e94\u8fd4\u56de\u9519\u8bef\u4fe1\u606f\uff0cerror\u5f53\u505akey 1 2 3 { error: \"\u65e0\u6743\u9650\u64cd\u4f5c\" }","title":"8. \u9519\u8bef\u5904\u7406"},{"location":"web/%E5%8D%8F%E8%AE%AE/RESTful/#9","text":"\u9488\u5bf9\u4e0d\u540c\u64cd\u4f5c\uff0c\u670d\u52a1\u5668\u5411\u7528\u6237\u8fd4\u56de\u7684\u7ed3\u679c\u5e94\u8be5\u7b26\u5408\u4ee5\u4e0b\u89c4\u8303 1 2 3 4 5 6 GET /collection\uff1a\u8fd4\u56de\u8d44\u6e90\u5bf9\u8c61\u7684\u5217\u8868\uff08\u6570\u7ec4\uff09 GET /collection/resource\uff1a\u8fd4\u56de\u5355\u4e2a\u8d44\u6e90\u5bf9\u8c61 POST /collection\uff1a\u8fd4\u56de\u65b0\u751f\u6210\u7684\u8d44\u6e90\u5bf9\u8c61 PUT /collection/resource\uff1a\u8fd4\u56de\u5b8c\u6574\u7684\u8d44\u6e90\u5bf9\u8c61 PATCH /collection/resource\uff1a\u8fd4\u56de\u5b8c\u6574\u7684\u8d44\u6e90\u5bf9\u8c61 DELETE /collection/resource\uff1a\u8fd4\u56de\u4e00\u4e2a\u7a7a\u6587\u6863","title":"9. \u8fd4\u56de\u7ed3\u679c"},{"location":"web/%E5%8D%8F%E8%AE%AE/RESTful/#10-hypermedia-api","text":"RESTful API\u6700\u597d\u505a\u5230Hypermedia\uff0c\u5373\u8fd4\u56de\u7ed3\u679c\u4e2d\u63d0\u4f9b\u94fe\u63a5\uff0c\u4f7f\u5f97\u7528\u6237\u4e0d\u67e5\u6587\u6863\uff0c\u4e5f\u77e5\u9053\u4e0b\u4e00\u6b65\u5e94\u8be5\u505a\u4ec0\u4e48\u3002 1 2 3 4 5 6 7 8 9 10 11 { \"status\" : 0 , \"msg\" : \"ok\" , \"results\" :[ { \"name\" : \"\u80af\u5fb7\u57fa(\u7f57\u9910\u5385)\" , \"img\" : \"https://image.baidu.com/kfc/001.png\" } ... ] }","title":"10. Hypermedia API"},{"location":"web/%E6%A1%86%E6%9E%B6/jQuery/","text":"","title":"jQuery"},{"location":"web/%E8%AF%AD%E8%A8%80/CSS/","text":"\u4e00\u3001CSS \u7b80\u4ecb\uff1a \u00b6 CSS \u6307\u5c42\u53e0\u6837\u5f0f\u8868 (Cascading Style Sheets)\uff0c\u7528\u6765\u8bbe\u7f6eHTML\u7684\u683c\u5f0f\u3002 \u8bed\u6cd5\uff1a 1 2 3 4 5 \u9009\u62e9\u5668 { \u5c5e\u6027:\u503c ; \u5c5e\u6027:\u503c } \u6ce8\u91ca\uff1a 1 2 // \u5355\u884c\u6ce8\u91ca /*\u591a\u884c\u6ce8\u91ca*/ \u4e8c\u3001CSS\u7684\u5f15\u5165\u65b9\u5f0f\uff1a\u884c\u5185\u5d4c\u3001\u5d4c\u5165\u5f0f\u3001\u94fe\u63a5\u5f0f\u3001\u5bfc\u5165\u5f0f \u00b6 1.\u884c\u5185\u5d4c\uff1a \u00b6 1 2 3 4 5 6 7 8 9 <! DOCTYPE html > < html lang = \"en\" > < head > < meta charset = \"UTF-8\" > </ head > < body > < p style = \"color: red\" > hello world </ p > </ body > </ html > 2.\u5d4c\u5165\u5f0f\uff1a \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 <!DOCTYPE html> < html > < head > < style > p { color : red ; } </ style > </ head > < body > < p > hello world </ p > </ body > </ html > 3. \u94fe\u63a5\u5f0f\uff1a \u00b6 1 2 3 4 5 6 7 8 9 <!DOCTYPE html> < html > < head > < link rel = \"stylesheet\" type = \"text/css\" href = \"mystyle.css\" > </ head > < body > < p > hello world </ p > </ body > </ html > css\u6587\u4ef6 1 2 3 4 // filename : mystyle . css p { color : red ; } 4. \u5bfc\u5165\u5f0f\uff1a \u00b6 1 2 3 4 5 6 7 8 9 10 11 <!DOCTYPE html> < html > < head > < style > @ import \"mystyle.css\" ; </ style > </ head > < body > < p > hello world </ p > </ body > </ html > css\u6587\u4ef6 1 2 3 4 // filename : mystyle . css p { color : red ; } \u4e09\u3001\u9009\u62e9\u5668 \u00b6 1.\u57fa\u672c\u9009\u62e9\u5668 \u00b6 1.1 \u901a\u7528\u9009\u62e9\u5668 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 <!doctype html> < html lang = \"en\" > < head > < meta charset = \"UTF-8\" > < style > { #html\u9875\u9762\u7684\u6240\u6709\u5143\u7d20# } * { color : red ; } </ style > </ head > < body > < h1 > hello </ h1 > < p > world </ p > </ body > </ html > 1.2 \u6807\u7b7e\u9009\u62e9\u5668 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 <!doctype html> < html lang = \"en\" > < head > < meta charset = \"UTF-8\" > < style > { #\u7ed9\u6240\u6709\u7684p\u6807\u7b7e\u6307\u5b9a\u6837\u5f0f# } p { color : red ; } </ style > </ head > < body > < h1 > hello </ h1 > < p > world </ p > </ body > </ html > 1.3 ID\u9009\u62e9\u5668 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 <!DOCTYPE html> < html lang = \"zh\" > < head > < meta charset = \"UTF-8\" > < style > { # \u4e3aid\u4e3aname\u7684HTML\u5143\u7d20\u6307\u5b9a\u7279\u5b9a\u7684\u6837\u5f0f\u3002# } # name { color : red ; } </ style > </ head > < body > < p > hello </ p > < p id = \"name\" > \u8bf8\u845b\u5b54\u660e </ p > </ body > </ html > 1.4 class\u9009\u62e9\u5668 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 <!doctype html> < html lang = \"en\" > < head > < meta charset = \"UTF-8\" > < style > . name { color : red ; } </ style > </ head > < body > < h3 > \u8bf8\u845b\u5144\u5f1f </ h3 > < p class = \"name\" > \u8bf8\u845b\u5b54\u660e </ p > < p class = \"name\" > \u8bf8\u845b\u5b50\u745c </ p > < p class = \"name\" > \u8bf8\u845b\u516c\u4f11 </ p > </ body > </ html > 2.\u7ec4\u5408\u9009\u62e9 \u00b6 2.1 \u540e\u4ee3\u9009\u62e9\u5668 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 <!DOCTYPE html> < html > < head lang = \"en\" > < meta charset = \"UTF-8\" > < style type = \"text/css\" > # food p { color : green ; } </ style > </ head > < body > < div id = \"food\" > < p > \u6c34\u679c\uff1a </ p > < div class = \"fruits\" > < p > \u82f9\u679c </ p > < p > \u9999\u8549 </ p > </ div > < p > \u751c\u54c1\uff1a </ p > < div class = \"dessert\" > < p > \u86cb\u7cd5 </ p > < p > \u5de7\u514b\u529b </ p > </ div > </ div > </ body > </ html > 2.2 \u5b50\u4ee3\u9009\u62e9\u5668 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 <!DOCTYPE html> < html > < head > < style type = \"text/css\" > # food > p { color : green ; } # food > div { font-size : 20 px ; } </ style > </ head > < body > < div id = \"food\" > < div class = \"fruits\" > < p > \u82f9\u679c </ p > < p > \u9999\u8549 </ p > </ div > < div class = \"dessert\" > < p > \u86cb\u7cd5 </ p > < p > \u5de7\u514b\u529b </ p > </ div > </ div > </ body > </ html > 2.3 \u53d8\u5f62\u9009\u62e9\u5668 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 <!DOCTYPE html> < html > < head > < style type = \"text/css\" > # fav , . fruits { color : red ; } </ style > </ head > < body > < p id = \"fav\" > Favourite </ p > < div id = \"food\" > < div class = \"fruits\" > < p > \u82f9\u679c </ p > < p > \u9999\u8549 </ p > </ div > < div class = \"dessert\" > < p > \u86cb\u7cd5 </ p > < p > \u5de7\u514b\u529b </ p > </ div > </ div > </ body > </ html > 2.4 \u6bd7\u90bb\u9009\u62e9\u5668 \u00b6 \u7d27\u63a5\u5728\u53e6\u4e00\u5143\u7d20\u540e\u7684\u5143\u7d20\uff0c\u4e14\u4e8c\u8005\u6709\u76f8\u540c\u7236\u5143\u7d20\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 <!DOCTYPE html> < html > < head > < style type = \"text/css\" > div + p { color : red ; } </ style > </ head > < body > < p > p 1 </ p > < div > < p > div1 </ p > </ div > < p > p 2 </ p > < p > p 3 </ p > </ body > </ html > 3. \u5c5e\u6027\u9009\u62e9\u5668 \u00b6 1 2 3 4 5 6 7 [ attribute ] [ target ] \u9009\u62e9\u6240\u6709\u5e26\u6709target\u5c5e\u6027\u5143\u7d20 [ attribute = value ] [ target = -blank ] \u9009\u62e9\u6240\u6709\u4f7f\u7528target = \"-blank\" \u7684\u5143\u7d20 [ attribute ~= value ] [ title ~= flower ] \u9009\u62e9\u6807\u9898\u5c5e\u6027\u5305\u542b\u5355\u8bcd \"flower\" \u7684\u6240\u6709\u5143\u7d20 [ attribute |= language ] [ lang |= en ] \u9009\u62e9\u4e00\u4e2alang\u5c5e\u6027\u7684\u8d77\u59cb\u503c = \"EN\" \u7684\u6240\u6709\u5143\u7d20 [ attribute ^= value ] a [ src ^= \"https\" ] \u9009\u62e9\u6bcf\u4e00\u4e2asrc\u5c5e\u6027\u7684\u503c\u4ee5 \"https\" \u5f00\u5934\u7684\u5143\u7d20 [ attribute $= value ] a [ src $= \".pdf\" ] \u9009\u62e9\u6bcf\u4e00\u4e2asrc\u5c5e\u6027\u7684\u503c\u4ee5 \".pdf\" \u7ed3\u5c3e\u7684\u5143\u7d20 [ attribute *= value ] a [ src *= \"runoob\" ] \u9009\u62e9\u6bcf\u4e00\u4e2asrc\u5c5e\u6027\u7684\u503c\u5305\u542b\u5b50\u5b57\u7b26\u4e32 \"runoob\" \u7684\u5143\u7d20 4. \u4f2a\u7c7b \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 <!DOCTYPE html> < html > < head > < meta charset = \"UTF-8\" > < title > Title </ title > < style > a : link { /* \u6ca1\u6709\u8bbf\u95ee\u8fc7\u7684\u8fde\u63a5 */ color : red ; } a : visited { /* \u5df2\u7ecf\u8bbf\u95ee\u8fc7\u7684\u989c\u8272 */ color : green ; } a : hover { /* \u9f20\u6807\u653e\u4e0a\u7684\u989c\u8272 */ color : yellow ; } a : active { /* \u9f20\u6807\u70b9\u51fb\u65f6\u7684\u989c\u8272 */ color : blue ; } p : after { /* \u4f4d\u4e8e\u5143\u7d20\u4e4b\u540e\u7684\u683c\u5f0f */ content : ' world' ; } p : before { /* \u4f4d\u4e8e\u5143\u7d20\u4e4b\u524d\u7684\u683c\u5f0f */ content : \"\u4f60\u597d \u4e16\u754c\" ; color : green ; } </ style > </ head > < body > < a href = \"https://www.baidu.com\" > \u767e\u5ea6\u4e00\u4e0b </ a > < p > hello </ p > </ body > </ html > \u56db\u3001\u5c5e\u6027 \u00b6 1. \u80cc\u666f\u5c5e\u6027 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 <!DOCTYPE html> < html > < head > < title > Title </ title > < style type = \"text/css\" > div { height : 1000 px ; background-color : gray ; background-image : url ( \"mayun.jpg\" ); background-repeat : no-repeat ; background-size : 200 px , 300 px ; background-position : center ; /* background-attachment:fixed; */ //\u53ef\u4ee5\u7b80\u5199\u4e3a\u4e0b\u9762\u7684\u683c\u5f0f // background : url ( \"mayun.jpg\" ) gray no-repeat center ; } </ style > </ head > < body > < div ></ div > </ body > </ html > 2. \u989c\u8272\u5c5e\u6027 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 <!DOCTYPE html> < html > < head > < title > Title </ title > < style type = \"text/css\" > h1 { color : #87CEEB ; /* color: red; */ /* color: rgb(255,255,0); */ /* color:rgba(255,0,0,0.2); */ opacity : 0.5 /* \u900f\u660e\u5ea6 */ } </ style > </ head > < body > < h1 > hello world </ h1 > </ body > </ html > 3. \u5b57\u4f53\u5c5e\u6027 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 <!DOCTYPE html> < html > < head > < title > Title </ title > < style type = \"text/css\" > h1 { font-family : \"Times New Roman\" , Times , serif ; font-size : 30 px ; font-style : italic ; font-weight : lighter ; } </ style > </ head > < body > < h1 > hello world </ h1 > </ body > </ html > font-weight\u7684\u5c5e\u6027\u503c normal \u9ed8\u8ba4\u503c\u3002\u5b9a\u4e49\u6807\u51c6\u7684\u5b57\u7b26\u3002 bold \u5b9a\u4e49\u7c97\u4f53\u5b57\u7b26\u3002 bolder \u5b9a\u4e49\u66f4\u7c97\u7684\u5b57\u7b26\u3002 lighter \u5b9a\u4e49\u66f4\u7ec6\u7684\u5b57\u7b26\u3002 100-900 \u5b9a\u4e49\u7531\u7c97\u5230\u7ec6\u7684\u5b57\u7b26\u3002400 \u7b49\u540c\u4e8e normal\uff0c\u800c 700 \u7b49\u540c\u4e8e bold\u3002 4. \u6587\u672c\u5c5e\u6027 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 <!DOCTYPE html> < html > < head > < title > Title </ title > < style type = \"text/css\" > p { color : green ; /* \u5b57\u4f53\u989c\u8272 */ direction : ltr ; /* \u5b57\u4f53\u65b9\u5411 rtl */ letter-spacing : 5 px ; /* \u5b57\u6bcd\u95f4\u9694 */ word-spacing : 30 px ; /* \u5355\u8bcd\u95f4\u9694 */ line-height : 30 px ; /* \u884c\u8ddd */ text-align : center ; /* \u4f4d\u7f6e\uff1aleft|right|justify */ text-decoration : line-through ; /* \u5220\u9664\u7ebf\uff1aoverline | underline */ text-transform : capitalize ; /* \u5927\u5c0f\u5199\uff1auppercase|lowercase */ } </ style > </ head > < body > < p > life is short, < br > you need python. </ p > </ body > </ html > 5. \u5185\u5916\u8fb9\u8ddd \u00b6 1. \u5916\u8fb9\u8ddd \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 margin : 10px 5px 15px 20px ; // \u4e0a\u8fb9\u8ddd\u662f 10px // \u53f3\u8fb9\u8ddd\u662f 5px // \u4e0b\u8fb9\u8ddd\u662f 15px // \u5de6\u8fb9\u8ddd\u662f 20px margin : 10px 5px 15px ; // \u4e0a\u8fb9\u8ddd\u662f 10px // \u53f3\u8fb9\u8ddd\u548c\u5de6\u8fb9\u8ddd\u662f 5px // \u4e0b\u8fb9\u8ddd\u662f 15px margin : 10px 5px ; // \u4e0a\u8fb9\u8ddd\u548c\u4e0b\u8fb9\u8ddd\u662f 10px // \u53f3\u8fb9\u8ddd\u548c\u5de6\u8fb9\u8ddd\u662f 5px margin : 10px ; // \u6240\u6709\u56db\u4e2a\u8fb9\u8ddd\u90fd\u662f 10px margin-bottom \u8bbe\u7f6e\u5143\u7d20\u7684\u4e0b\u5916\u8fb9\u8ddd margin-left \u8bbe\u7f6e\u5143\u7d20\u7684\u5de6\u5916\u8fb9\u8ddd margin-right \u8bbe\u7f6e\u5143\u7d20\u7684\u53f3\u5916\u8fb9\u8ddd margin-top \u8bbe\u7f6e\u5143\u7d20\u7684\u4e0a\u5916\u8fb9\u8ddd 2. \u5185\u8fb9\u8ddd \u00b6 padding \u4e0e margin \u76f8\u540c 6.\u8fb9\u6846 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 <!DOCTYPE html> < html > < head > < title > Title </ title > < style type = \"text/css\" > div { height : 200 px ; width : 200 px ; /* border:red solid 5px; */ border-bottom : red solid 5 px ; border-top : green dotted 5 px ; border-left : blue dashed 5 px ; border-right : gray double 5 px ; border-radius : 20 % ; } </ style > </ head > < body > < div > </ div > </ body > </ html > 7. \u5bbd\u9ad8\u8bbe\u7f6e \u00b6 height \u8bbe\u7f6e\u5143\u7d20\u7684\u9ad8\u5ea6\u3002 line-height \u8bbe\u7f6e\u884c\u9ad8\u3002 max-height \u8bbe\u7f6e\u5143\u7d20\u7684\u6700\u5927\u9ad8\u5ea6\u3002 min-height \u8bbe\u7f6e\u5143\u7d20\u7684\u6700\u5c0f\u9ad8\u5ea6\u3002 width \u8bbe\u7f6e\u5143\u7d20\u7684\u5bbd\u5ea6\u3002 max-width \u8bbe\u7f6e\u5143\u7d20\u7684\u6700\u5927\u5bbd\u5ea6\u3002 min-width \u8bbe\u7f6e\u5143\u7d20\u7684\u6700\u5c0f\u5bbd\u5ea6\u3002 8. display \u00b6 none \u6b64\u5143\u7d20\u4e0d\u4f1a\u88ab\u663e\u793a\u3002 block \u6b64\u5143\u7d20\u5c06\u663e\u793a\u4e3a\u5757\u7ea7\u5143\u7d20\uff0c\u6b64\u5143\u7d20\u524d\u540e\u4f1a\u5e26\u6709\u6362\u884c\u7b26\u3002 inline \u9ed8\u8ba4\u3002\u6b64\u5143\u7d20\u4f1a\u88ab\u663e\u793a\u4e3a\u5185\u8054\u5143\u7d20\uff0c\u5143\u7d20\u524d\u540e\u6ca1\u6709\u6362\u884c\u7b26\u3002 inline-bloc k \u884c\u5185\u5757\u5143\u7d20\u3002\uff08CSS2.1 \u65b0\u589e\u7684\u503c\uff09 \u4e94\u3001\u5143\u7d20\u4f4d\u7f6e \u00b6 1.\u6b63\u5e38\u6587\u6863\u6d41 \u00b6 \u5c06\u5143\u7d20\uff08\u6807\u7b7e\uff09\u5728\u8fdb\u884c\u6392\u7248\u5e03\u5c40\u7684\u65f6\u5019\u6309\u4ece\u5de6\u5230\u53f3\uff0c\u4ece\u4e0a\u5230\u4e0b\u7684\u987a\u5e8f\u8fdb\u884c\u6392\u7248 2. \u8131\u79bb\u6587\u6863\u6d41 \u00b6 \u5c06\u5143\u7d20\uff08\u6807\u7b7e\uff09\u4ece\u6587\u6863\u6d41\u4e2d\u53d6\u51fa\u8fdb\u884c\u8986\u76d6\uff0c\u5176\u4ed6\u5143\u7d20\u4f1a\u6309\u6587\u6863\u6d41\u4e2d\u4e0d\u5b58\u5728\u8be5\u5143\u7d20\u91cd\u65b0\u8fdb\u884c\u5e03\u5c40 \u975e\u5b8c\u5168\u8131\u79bb \uff1afloat\uff08\u6d6e\u52a8\uff09 \u5b8c\u5168\u8131\u79bb\uff1a position\uff08\u5b9a\u4f4d\uff09\u4e2d\u7684absolute,fixed 1. float \u00b6 float \u4f7f\u5143\u7d20\u5411\u5de6\u6216\u5411\u53f3\u79fb\u52a8\uff0c\u5176\u5468\u56f4\u7684\u5143\u7d20\u4e5f\u4f1a\u91cd\u65b0\u6392\u5217 \u5c5e\u6027\u503c\uff1aleft | right clear \u6307\u5b9a\u4e0d\u5141\u8bb8\u5143\u7d20\u5468\u56f4\u6709\u6d6e\u52a8\u5143\u7d20\u3002 \u5c5e\u6027\u503c\uff1aleft | right | both 2.position \u00b6 2.1 static \uff1a\u9ed8\u8ba4\u503c \u00b6 2.2 relative \uff1a\u76f8\u5bf9\u5176\u6b63\u5e38\u4f4d\u7f6e \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 <!DOCTYPE html> < html > < head > < title ></ title > < style type = \"text/css\" > # p2 { position : relative ; left : 20 px ; } </ style > </ head > < body > < p id = \"p1\" > hello world </ p > < p id = \"p2\" > hello world </ p > </ body > </ html > 2.3 fixed :\u4f4d\u7f6e\u76f8\u5bf9\u4e8e\u6d4f\u89c8\u5668\u7a97\u53e3\u662f\u56fa\u5b9a\u4f4d\u7f6e \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 <!DOCTYPE html> < html > < head > < title ></ title > < style type = \"text/css\" > a { position : fixed ; right : 100 px ; bottom : 100 px ; } </ style > </ head > < body > < div id = \"top\" style = \"height: 50px;background-color: green\" ></ div > < div id = \"content\" style = \"height: 1000px; background-color: gray\" > </ div > < a href = \"#top\" > \u8fd4\u56de\u9876\u90e8 </ a > </ body > </ html > 2.4 absolute \u00b6 \u5982\u679c\u5176\u7236\u7ea7\u7684position\u8bbe\u7f6e\u4e3a\u975estatic\uff0c\u5219\u6309\u7167\u7236\u7ea7\u7684\u4f4d\u7f6e\u8fdb\u884c\u79fb\u52a8\uff0c\u5982\u679c\u6ca1\u6709\u5c31\u7ee7\u7eed\u5411\u4e0a\u627e\uff0c\u5982\u679c\u90fd\u6ca1\u6709\u5c31\u6309html\u7684\u4f4d\u7f6e\u8fdb\u884c\u79fb\u52a8. \u5728\u4e0b\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u5982\u679cdiv1\u6ca1\u6709\u8bbe\u7f6eposition\u7684\u5c5e\u6027\uff0c\u90a3\u4e48div2\u5c31\u4f1a\u6309\u7167HTML\u7684\u76f8\u5bf9\u4f4d\u7f6e\u8fdb\u884c\u5b9a\u4f4d\uff0c\u5982\u679c\u8bbe\u7f6e\u4e86div1\u7684relative\uff0c\u90a3\u4e48div2\u624d\u4f1a\u6309\u7167div1\u7684\u4f4d\u7f6e\u8fdb\u884c\u5b9a\u4f4d\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 <!DOCTYPE html> < html > < head > < style type = \"text/css\" > /* #div1{ position: relative; } */ # div2 { position : absolute ; top : 100 px ; } </ style > </ head > < body > < div style = \"width: 300px;height: 200px;background-color: gray\" ></ div > < div id = \"div1\" style = \"width: 300px;height: 200px;background-color: green\" > < div id = \"div2\" style = \"width: 300px;height: 100px;background-color: red\" ></ div > </ div > </ body > </ html > 2.5 sticky \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 <!DOCTYPE html> < html > < head > < title ></ title > < style type = \"text/css\" > # div2 { position : -webkit- sticky ; position : sticky ; top : 0 ; } </ style > </ head > < body > < div id = \"div1\" style = \"height: 200px;background-color: gray\" ></ div > < div id = \"div2\" style = \"height: 100px;background-color: green\" ></ div > < div id = \"div3\" style = \"height: 800px;background-color: gray\" ></ div > </ body > </ html > \u516d\u3001\u5bfc\u822a\u680f \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 <!DOCTYPE html> < html > < head > < title > \u6211\u7684\u4e3b\u9875 </ title > < style type = \"text/css\" > /* \u5168\u5c40\u8bbe\u7f6e\uff0c\u53d6\u6d88\u5916\u8fb9\u6846 */ * { margin : 0 ; padding : 0 ; } /* \u9876\u90e8\u7684\u9ad8\u5ea6 \u548c\u80cc\u666f\u989c\u8272*/ . head { height : 44 px ; background-color : #2459a2 ; } . head-content { position : relative ; margin : auto ; width : 1024 px ; height : 44 px ; line-height : 44 px ; background-color : #2459a2 ; /* background-color: red; */ } . menu { margin-left : 50 px ; } . menu ul li , . login a { list-style-type : none ; display : inline-block ; float : left ; padding : 0 15 px ; } . head-content a { text-decoration : none ; color : white ; } . active { background-color : #006400 ; } . menu li : hover : not ( . active ), . login a : hover { background-color : gray ; } . login { /* background-color: blue; */ float : right ; margin-right : 50 px ; } </ style > </ head > < body > < div class = \"head\" > < div class = \"head-content\" > < div class = \"menu\" > < ul > < li class = \"active\" >< a href = \"#home\" > \u4e3b\u9875 </ a ></ li > < li >< a href = \"#news\" > \u65b0\u95fb </ a ></ li > < li >< a href = \"#blog\" > \u535a\u5ba2 </ a ></ li > < li >< a href = \"#bbs\" > \u8bba\u575b </ a ></ li > < li >< a href = \"#contact\" > \u8054\u7cfb </ a ></ li > < li >< a href = \"#about\" > \u5173\u4e8e </ a ></ li > </ ul > </ div > < div class = \"login\" > < a href = \"#login\" > \u6ce8\u518c </ a > < a href = \"#register\" > \u767b\u5f55 </ a > </ div > </ div > </ div > </ body > </ html > \u4e03\u3001\u4e0b\u62c9\u83dc\u5355 \u00b6","title":"CSS"},{"location":"web/%E8%AF%AD%E8%A8%80/CSS/#css","text":"CSS \u6307\u5c42\u53e0\u6837\u5f0f\u8868 (Cascading Style Sheets)\uff0c\u7528\u6765\u8bbe\u7f6eHTML\u7684\u683c\u5f0f\u3002 \u8bed\u6cd5\uff1a 1 2 3 4 5 \u9009\u62e9\u5668 { \u5c5e\u6027:\u503c ; \u5c5e\u6027:\u503c } \u6ce8\u91ca\uff1a 1 2 // \u5355\u884c\u6ce8\u91ca /*\u591a\u884c\u6ce8\u91ca*/","title":"\u4e00\u3001CSS \u7b80\u4ecb\uff1a"},{"location":"web/%E8%AF%AD%E8%A8%80/CSS/#css_1","text":"","title":"\u4e8c\u3001CSS\u7684\u5f15\u5165\u65b9\u5f0f\uff1a\u884c\u5185\u5d4c\u3001\u5d4c\u5165\u5f0f\u3001\u94fe\u63a5\u5f0f\u3001\u5bfc\u5165\u5f0f"},{"location":"web/%E8%AF%AD%E8%A8%80/CSS/#1","text":"1 2 3 4 5 6 7 8 9 <! DOCTYPE html > < html lang = \"en\" > < head > < meta charset = \"UTF-8\" > </ head > < body > < p style = \"color: red\" > hello world </ p > </ body > </ html >","title":"1.\u884c\u5185\u5d4c\uff1a"},{"location":"web/%E8%AF%AD%E8%A8%80/CSS/#2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 <!DOCTYPE html> < html > < head > < style > p { color : red ; } </ style > </ head > < body > < p > hello world </ p > </ body > </ html >","title":"2.\u5d4c\u5165\u5f0f\uff1a"},{"location":"web/%E8%AF%AD%E8%A8%80/CSS/#3","text":"1 2 3 4 5 6 7 8 9 <!DOCTYPE html> < html > < head > < link rel = \"stylesheet\" type = \"text/css\" href = \"mystyle.css\" > </ head > < body > < p > hello world </ p > </ body > </ html > css\u6587\u4ef6 1 2 3 4 // filename : mystyle . css p { color : red ; }","title":"3. \u94fe\u63a5\u5f0f\uff1a"},{"location":"web/%E8%AF%AD%E8%A8%80/CSS/#4","text":"1 2 3 4 5 6 7 8 9 10 11 <!DOCTYPE html> < html > < head > < style > @ import \"mystyle.css\" ; </ style > </ head > < body > < p > hello world </ p > </ body > </ html > css\u6587\u4ef6 1 2 3 4 // filename : mystyle . css p { color : red ; }","title":"4. \u5bfc\u5165\u5f0f\uff1a"},{"location":"web/%E8%AF%AD%E8%A8%80/CSS/#_1","text":"","title":"\u4e09\u3001\u9009\u62e9\u5668"},{"location":"web/%E8%AF%AD%E8%A8%80/CSS/#1_1","text":"","title":"1.\u57fa\u672c\u9009\u62e9\u5668"},{"location":"web/%E8%AF%AD%E8%A8%80/CSS/#11","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 <!doctype html> < html lang = \"en\" > < head > < meta charset = \"UTF-8\" > < style > { #html\u9875\u9762\u7684\u6240\u6709\u5143\u7d20# } * { color : red ; } </ style > </ head > < body > < h1 > hello </ h1 > < p > world </ p > </ body > </ html >","title":"1.1 \u901a\u7528\u9009\u62e9\u5668"},{"location":"web/%E8%AF%AD%E8%A8%80/CSS/#12","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 <!doctype html> < html lang = \"en\" > < head > < meta charset = \"UTF-8\" > < style > { #\u7ed9\u6240\u6709\u7684p\u6807\u7b7e\u6307\u5b9a\u6837\u5f0f# } p { color : red ; } </ style > </ head > < body > < h1 > hello </ h1 > < p > world </ p > </ body > </ html >","title":"1.2 \u6807\u7b7e\u9009\u62e9\u5668"},{"location":"web/%E8%AF%AD%E8%A8%80/CSS/#13-id","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 <!DOCTYPE html> < html lang = \"zh\" > < head > < meta charset = \"UTF-8\" > < style > { # \u4e3aid\u4e3aname\u7684HTML\u5143\u7d20\u6307\u5b9a\u7279\u5b9a\u7684\u6837\u5f0f\u3002# } # name { color : red ; } </ style > </ head > < body > < p > hello </ p > < p id = \"name\" > \u8bf8\u845b\u5b54\u660e </ p > </ body > </ html >","title":"1.3 ID\u9009\u62e9\u5668"},{"location":"web/%E8%AF%AD%E8%A8%80/CSS/#14-class","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 <!doctype html> < html lang = \"en\" > < head > < meta charset = \"UTF-8\" > < style > . name { color : red ; } </ style > </ head > < body > < h3 > \u8bf8\u845b\u5144\u5f1f </ h3 > < p class = \"name\" > \u8bf8\u845b\u5b54\u660e </ p > < p class = \"name\" > \u8bf8\u845b\u5b50\u745c </ p > < p class = \"name\" > \u8bf8\u845b\u516c\u4f11 </ p > </ body > </ html >","title":"1.4 class\u9009\u62e9\u5668"},{"location":"web/%E8%AF%AD%E8%A8%80/CSS/#2_1","text":"","title":"2.\u7ec4\u5408\u9009\u62e9"},{"location":"web/%E8%AF%AD%E8%A8%80/CSS/#21","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 <!DOCTYPE html> < html > < head lang = \"en\" > < meta charset = \"UTF-8\" > < style type = \"text/css\" > # food p { color : green ; } </ style > </ head > < body > < div id = \"food\" > < p > \u6c34\u679c\uff1a </ p > < div class = \"fruits\" > < p > \u82f9\u679c </ p > < p > \u9999\u8549 </ p > </ div > < p > \u751c\u54c1\uff1a </ p > < div class = \"dessert\" > < p > \u86cb\u7cd5 </ p > < p > \u5de7\u514b\u529b </ p > </ div > </ div > </ body > </ html >","title":"2.1 \u540e\u4ee3\u9009\u62e9\u5668"},{"location":"web/%E8%AF%AD%E8%A8%80/CSS/#22","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 <!DOCTYPE html> < html > < head > < style type = \"text/css\" > # food > p { color : green ; } # food > div { font-size : 20 px ; } </ style > </ head > < body > < div id = \"food\" > < div class = \"fruits\" > < p > \u82f9\u679c </ p > < p > \u9999\u8549 </ p > </ div > < div class = \"dessert\" > < p > \u86cb\u7cd5 </ p > < p > \u5de7\u514b\u529b </ p > </ div > </ div > </ body > </ html >","title":"2.2 \u5b50\u4ee3\u9009\u62e9\u5668"},{"location":"web/%E8%AF%AD%E8%A8%80/CSS/#23","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 <!DOCTYPE html> < html > < head > < style type = \"text/css\" > # fav , . fruits { color : red ; } </ style > </ head > < body > < p id = \"fav\" > Favourite </ p > < div id = \"food\" > < div class = \"fruits\" > < p > \u82f9\u679c </ p > < p > \u9999\u8549 </ p > </ div > < div class = \"dessert\" > < p > \u86cb\u7cd5 </ p > < p > \u5de7\u514b\u529b </ p > </ div > </ div > </ body > </ html >","title":"2.3 \u53d8\u5f62\u9009\u62e9\u5668"},{"location":"web/%E8%AF%AD%E8%A8%80/CSS/#24","text":"\u7d27\u63a5\u5728\u53e6\u4e00\u5143\u7d20\u540e\u7684\u5143\u7d20\uff0c\u4e14\u4e8c\u8005\u6709\u76f8\u540c\u7236\u5143\u7d20\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 <!DOCTYPE html> < html > < head > < style type = \"text/css\" > div + p { color : red ; } </ style > </ head > < body > < p > p 1 </ p > < div > < p > div1 </ p > </ div > < p > p 2 </ p > < p > p 3 </ p > </ body > </ html >","title":"2.4  \u6bd7\u90bb\u9009\u62e9\u5668"},{"location":"web/%E8%AF%AD%E8%A8%80/CSS/#3_1","text":"1 2 3 4 5 6 7 [ attribute ] [ target ] \u9009\u62e9\u6240\u6709\u5e26\u6709target\u5c5e\u6027\u5143\u7d20 [ attribute = value ] [ target = -blank ] \u9009\u62e9\u6240\u6709\u4f7f\u7528target = \"-blank\" \u7684\u5143\u7d20 [ attribute ~= value ] [ title ~= flower ] \u9009\u62e9\u6807\u9898\u5c5e\u6027\u5305\u542b\u5355\u8bcd \"flower\" \u7684\u6240\u6709\u5143\u7d20 [ attribute |= language ] [ lang |= en ] \u9009\u62e9\u4e00\u4e2alang\u5c5e\u6027\u7684\u8d77\u59cb\u503c = \"EN\" \u7684\u6240\u6709\u5143\u7d20 [ attribute ^= value ] a [ src ^= \"https\" ] \u9009\u62e9\u6bcf\u4e00\u4e2asrc\u5c5e\u6027\u7684\u503c\u4ee5 \"https\" \u5f00\u5934\u7684\u5143\u7d20 [ attribute $= value ] a [ src $= \".pdf\" ] \u9009\u62e9\u6bcf\u4e00\u4e2asrc\u5c5e\u6027\u7684\u503c\u4ee5 \".pdf\" \u7ed3\u5c3e\u7684\u5143\u7d20 [ attribute *= value ] a [ src *= \"runoob\" ] \u9009\u62e9\u6bcf\u4e00\u4e2asrc\u5c5e\u6027\u7684\u503c\u5305\u542b\u5b50\u5b57\u7b26\u4e32 \"runoob\" \u7684\u5143\u7d20","title":"3. \u5c5e\u6027\u9009\u62e9\u5668"},{"location":"web/%E8%AF%AD%E8%A8%80/CSS/#4_1","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 <!DOCTYPE html> < html > < head > < meta charset = \"UTF-8\" > < title > Title </ title > < style > a : link { /* \u6ca1\u6709\u8bbf\u95ee\u8fc7\u7684\u8fde\u63a5 */ color : red ; } a : visited { /* \u5df2\u7ecf\u8bbf\u95ee\u8fc7\u7684\u989c\u8272 */ color : green ; } a : hover { /* \u9f20\u6807\u653e\u4e0a\u7684\u989c\u8272 */ color : yellow ; } a : active { /* \u9f20\u6807\u70b9\u51fb\u65f6\u7684\u989c\u8272 */ color : blue ; } p : after { /* \u4f4d\u4e8e\u5143\u7d20\u4e4b\u540e\u7684\u683c\u5f0f */ content : ' world' ; } p : before { /* \u4f4d\u4e8e\u5143\u7d20\u4e4b\u524d\u7684\u683c\u5f0f */ content : \"\u4f60\u597d \u4e16\u754c\" ; color : green ; } </ style > </ head > < body > < a href = \"https://www.baidu.com\" > \u767e\u5ea6\u4e00\u4e0b </ a > < p > hello </ p > </ body > </ html >","title":"4. \u4f2a\u7c7b"},{"location":"web/%E8%AF%AD%E8%A8%80/CSS/#_2","text":"","title":"\u56db\u3001\u5c5e\u6027"},{"location":"web/%E8%AF%AD%E8%A8%80/CSS/#1_2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 <!DOCTYPE html> < html > < head > < title > Title </ title > < style type = \"text/css\" > div { height : 1000 px ; background-color : gray ; background-image : url ( \"mayun.jpg\" ); background-repeat : no-repeat ; background-size : 200 px , 300 px ; background-position : center ; /* background-attachment:fixed; */ //\u53ef\u4ee5\u7b80\u5199\u4e3a\u4e0b\u9762\u7684\u683c\u5f0f // background : url ( \"mayun.jpg\" ) gray no-repeat center ; } </ style > </ head > < body > < div ></ div > </ body > </ html >","title":"1. \u80cc\u666f\u5c5e\u6027"},{"location":"web/%E8%AF%AD%E8%A8%80/CSS/#2_2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 <!DOCTYPE html> < html > < head > < title > Title </ title > < style type = \"text/css\" > h1 { color : #87CEEB ; /* color: red; */ /* color: rgb(255,255,0); */ /* color:rgba(255,0,0,0.2); */ opacity : 0.5 /* \u900f\u660e\u5ea6 */ } </ style > </ head > < body > < h1 > hello world </ h1 > </ body > </ html >","title":"2. \u989c\u8272\u5c5e\u6027"},{"location":"web/%E8%AF%AD%E8%A8%80/CSS/#3_2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 <!DOCTYPE html> < html > < head > < title > Title </ title > < style type = \"text/css\" > h1 { font-family : \"Times New Roman\" , Times , serif ; font-size : 30 px ; font-style : italic ; font-weight : lighter ; } </ style > </ head > < body > < h1 > hello world </ h1 > </ body > </ html > font-weight\u7684\u5c5e\u6027\u503c normal \u9ed8\u8ba4\u503c\u3002\u5b9a\u4e49\u6807\u51c6\u7684\u5b57\u7b26\u3002 bold \u5b9a\u4e49\u7c97\u4f53\u5b57\u7b26\u3002 bolder \u5b9a\u4e49\u66f4\u7c97\u7684\u5b57\u7b26\u3002 lighter \u5b9a\u4e49\u66f4\u7ec6\u7684\u5b57\u7b26\u3002 100-900 \u5b9a\u4e49\u7531\u7c97\u5230\u7ec6\u7684\u5b57\u7b26\u3002400 \u7b49\u540c\u4e8e normal\uff0c\u800c 700 \u7b49\u540c\u4e8e bold\u3002","title":"3. \u5b57\u4f53\u5c5e\u6027"},{"location":"web/%E8%AF%AD%E8%A8%80/CSS/#4_2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 <!DOCTYPE html> < html > < head > < title > Title </ title > < style type = \"text/css\" > p { color : green ; /* \u5b57\u4f53\u989c\u8272 */ direction : ltr ; /* \u5b57\u4f53\u65b9\u5411 rtl */ letter-spacing : 5 px ; /* \u5b57\u6bcd\u95f4\u9694 */ word-spacing : 30 px ; /* \u5355\u8bcd\u95f4\u9694 */ line-height : 30 px ; /* \u884c\u8ddd */ text-align : center ; /* \u4f4d\u7f6e\uff1aleft|right|justify */ text-decoration : line-through ; /* \u5220\u9664\u7ebf\uff1aoverline | underline */ text-transform : capitalize ; /* \u5927\u5c0f\u5199\uff1auppercase|lowercase */ } </ style > </ head > < body > < p > life is short, < br > you need python. </ p > </ body > </ html >","title":"4. \u6587\u672c\u5c5e\u6027"},{"location":"web/%E8%AF%AD%E8%A8%80/CSS/#5","text":"","title":"5. \u5185\u5916\u8fb9\u8ddd"},{"location":"web/%E8%AF%AD%E8%A8%80/CSS/#1_3","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 margin : 10px 5px 15px 20px ; // \u4e0a\u8fb9\u8ddd\u662f 10px // \u53f3\u8fb9\u8ddd\u662f 5px // \u4e0b\u8fb9\u8ddd\u662f 15px // \u5de6\u8fb9\u8ddd\u662f 20px margin : 10px 5px 15px ; // \u4e0a\u8fb9\u8ddd\u662f 10px // \u53f3\u8fb9\u8ddd\u548c\u5de6\u8fb9\u8ddd\u662f 5px // \u4e0b\u8fb9\u8ddd\u662f 15px margin : 10px 5px ; // \u4e0a\u8fb9\u8ddd\u548c\u4e0b\u8fb9\u8ddd\u662f 10px // \u53f3\u8fb9\u8ddd\u548c\u5de6\u8fb9\u8ddd\u662f 5px margin : 10px ; // \u6240\u6709\u56db\u4e2a\u8fb9\u8ddd\u90fd\u662f 10px margin-bottom \u8bbe\u7f6e\u5143\u7d20\u7684\u4e0b\u5916\u8fb9\u8ddd margin-left \u8bbe\u7f6e\u5143\u7d20\u7684\u5de6\u5916\u8fb9\u8ddd margin-right \u8bbe\u7f6e\u5143\u7d20\u7684\u53f3\u5916\u8fb9\u8ddd margin-top \u8bbe\u7f6e\u5143\u7d20\u7684\u4e0a\u5916\u8fb9\u8ddd","title":"1. \u5916\u8fb9\u8ddd"},{"location":"web/%E8%AF%AD%E8%A8%80/CSS/#2_3","text":"padding \u4e0e margin \u76f8\u540c","title":"2. \u5185\u8fb9\u8ddd"},{"location":"web/%E8%AF%AD%E8%A8%80/CSS/#6","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 <!DOCTYPE html> < html > < head > < title > Title </ title > < style type = \"text/css\" > div { height : 200 px ; width : 200 px ; /* border:red solid 5px; */ border-bottom : red solid 5 px ; border-top : green dotted 5 px ; border-left : blue dashed 5 px ; border-right : gray double 5 px ; border-radius : 20 % ; } </ style > </ head > < body > < div > </ div > </ body > </ html >","title":"6.\u8fb9\u6846"},{"location":"web/%E8%AF%AD%E8%A8%80/CSS/#7","text":"height \u8bbe\u7f6e\u5143\u7d20\u7684\u9ad8\u5ea6\u3002 line-height \u8bbe\u7f6e\u884c\u9ad8\u3002 max-height \u8bbe\u7f6e\u5143\u7d20\u7684\u6700\u5927\u9ad8\u5ea6\u3002 min-height \u8bbe\u7f6e\u5143\u7d20\u7684\u6700\u5c0f\u9ad8\u5ea6\u3002 width \u8bbe\u7f6e\u5143\u7d20\u7684\u5bbd\u5ea6\u3002 max-width \u8bbe\u7f6e\u5143\u7d20\u7684\u6700\u5927\u5bbd\u5ea6\u3002 min-width \u8bbe\u7f6e\u5143\u7d20\u7684\u6700\u5c0f\u5bbd\u5ea6\u3002","title":"7. \u5bbd\u9ad8\u8bbe\u7f6e"},{"location":"web/%E8%AF%AD%E8%A8%80/CSS/#8-display","text":"none \u6b64\u5143\u7d20\u4e0d\u4f1a\u88ab\u663e\u793a\u3002 block \u6b64\u5143\u7d20\u5c06\u663e\u793a\u4e3a\u5757\u7ea7\u5143\u7d20\uff0c\u6b64\u5143\u7d20\u524d\u540e\u4f1a\u5e26\u6709\u6362\u884c\u7b26\u3002 inline \u9ed8\u8ba4\u3002\u6b64\u5143\u7d20\u4f1a\u88ab\u663e\u793a\u4e3a\u5185\u8054\u5143\u7d20\uff0c\u5143\u7d20\u524d\u540e\u6ca1\u6709\u6362\u884c\u7b26\u3002 inline-bloc k \u884c\u5185\u5757\u5143\u7d20\u3002\uff08CSS2.1 \u65b0\u589e\u7684\u503c\uff09","title":"8. display"},{"location":"web/%E8%AF%AD%E8%A8%80/CSS/#_3","text":"","title":"\u4e94\u3001\u5143\u7d20\u4f4d\u7f6e"},{"location":"web/%E8%AF%AD%E8%A8%80/CSS/#1_4","text":"\u5c06\u5143\u7d20\uff08\u6807\u7b7e\uff09\u5728\u8fdb\u884c\u6392\u7248\u5e03\u5c40\u7684\u65f6\u5019\u6309\u4ece\u5de6\u5230\u53f3\uff0c\u4ece\u4e0a\u5230\u4e0b\u7684\u987a\u5e8f\u8fdb\u884c\u6392\u7248","title":"1.\u6b63\u5e38\u6587\u6863\u6d41"},{"location":"web/%E8%AF%AD%E8%A8%80/CSS/#2_4","text":"\u5c06\u5143\u7d20\uff08\u6807\u7b7e\uff09\u4ece\u6587\u6863\u6d41\u4e2d\u53d6\u51fa\u8fdb\u884c\u8986\u76d6\uff0c\u5176\u4ed6\u5143\u7d20\u4f1a\u6309\u6587\u6863\u6d41\u4e2d\u4e0d\u5b58\u5728\u8be5\u5143\u7d20\u91cd\u65b0\u8fdb\u884c\u5e03\u5c40 \u975e\u5b8c\u5168\u8131\u79bb \uff1afloat\uff08\u6d6e\u52a8\uff09 \u5b8c\u5168\u8131\u79bb\uff1a position\uff08\u5b9a\u4f4d\uff09\u4e2d\u7684absolute,fixed","title":"2. \u8131\u79bb\u6587\u6863\u6d41"},{"location":"web/%E8%AF%AD%E8%A8%80/CSS/#1-float","text":"float \u4f7f\u5143\u7d20\u5411\u5de6\u6216\u5411\u53f3\u79fb\u52a8\uff0c\u5176\u5468\u56f4\u7684\u5143\u7d20\u4e5f\u4f1a\u91cd\u65b0\u6392\u5217 \u5c5e\u6027\u503c\uff1aleft | right clear \u6307\u5b9a\u4e0d\u5141\u8bb8\u5143\u7d20\u5468\u56f4\u6709\u6d6e\u52a8\u5143\u7d20\u3002 \u5c5e\u6027\u503c\uff1aleft | right | both","title":"1. float"},{"location":"web/%E8%AF%AD%E8%A8%80/CSS/#2position","text":"","title":"2.position"},{"location":"web/%E8%AF%AD%E8%A8%80/CSS/#21static","text":"","title":"2.1static\uff1a\u9ed8\u8ba4\u503c"},{"location":"web/%E8%AF%AD%E8%A8%80/CSS/#22relative","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 <!DOCTYPE html> < html > < head > < title ></ title > < style type = \"text/css\" > # p2 { position : relative ; left : 20 px ; } </ style > </ head > < body > < p id = \"p1\" > hello world </ p > < p id = \"p2\" > hello world </ p > </ body > </ html >","title":"2.2relative\uff1a\u76f8\u5bf9\u5176\u6b63\u5e38\u4f4d\u7f6e"},{"location":"web/%E8%AF%AD%E8%A8%80/CSS/#23-fixed","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 <!DOCTYPE html> < html > < head > < title ></ title > < style type = \"text/css\" > a { position : fixed ; right : 100 px ; bottom : 100 px ; } </ style > </ head > < body > < div id = \"top\" style = \"height: 50px;background-color: green\" ></ div > < div id = \"content\" style = \"height: 1000px; background-color: gray\" > </ div > < a href = \"#top\" > \u8fd4\u56de\u9876\u90e8 </ a > </ body > </ html >","title":"2.3 fixed:\u4f4d\u7f6e\u76f8\u5bf9\u4e8e\u6d4f\u89c8\u5668\u7a97\u53e3\u662f\u56fa\u5b9a\u4f4d\u7f6e"},{"location":"web/%E8%AF%AD%E8%A8%80/CSS/#24-absolute","text":"\u5982\u679c\u5176\u7236\u7ea7\u7684position\u8bbe\u7f6e\u4e3a\u975estatic\uff0c\u5219\u6309\u7167\u7236\u7ea7\u7684\u4f4d\u7f6e\u8fdb\u884c\u79fb\u52a8\uff0c\u5982\u679c\u6ca1\u6709\u5c31\u7ee7\u7eed\u5411\u4e0a\u627e\uff0c\u5982\u679c\u90fd\u6ca1\u6709\u5c31\u6309html\u7684\u4f4d\u7f6e\u8fdb\u884c\u79fb\u52a8. \u5728\u4e0b\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u5982\u679cdiv1\u6ca1\u6709\u8bbe\u7f6eposition\u7684\u5c5e\u6027\uff0c\u90a3\u4e48div2\u5c31\u4f1a\u6309\u7167HTML\u7684\u76f8\u5bf9\u4f4d\u7f6e\u8fdb\u884c\u5b9a\u4f4d\uff0c\u5982\u679c\u8bbe\u7f6e\u4e86div1\u7684relative\uff0c\u90a3\u4e48div2\u624d\u4f1a\u6309\u7167div1\u7684\u4f4d\u7f6e\u8fdb\u884c\u5b9a\u4f4d\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 <!DOCTYPE html> < html > < head > < style type = \"text/css\" > /* #div1{ position: relative; } */ # div2 { position : absolute ; top : 100 px ; } </ style > </ head > < body > < div style = \"width: 300px;height: 200px;background-color: gray\" ></ div > < div id = \"div1\" style = \"width: 300px;height: 200px;background-color: green\" > < div id = \"div2\" style = \"width: 300px;height: 100px;background-color: red\" ></ div > </ div > </ body > </ html >","title":"2.4 absolute"},{"location":"web/%E8%AF%AD%E8%A8%80/CSS/#25-sticky","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 <!DOCTYPE html> < html > < head > < title ></ title > < style type = \"text/css\" > # div2 { position : -webkit- sticky ; position : sticky ; top : 0 ; } </ style > </ head > < body > < div id = \"div1\" style = \"height: 200px;background-color: gray\" ></ div > < div id = \"div2\" style = \"height: 100px;background-color: green\" ></ div > < div id = \"div3\" style = \"height: 800px;background-color: gray\" ></ div > </ body > </ html >","title":"2.5 sticky"},{"location":"web/%E8%AF%AD%E8%A8%80/CSS/#_4","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 <!DOCTYPE html> < html > < head > < title > \u6211\u7684\u4e3b\u9875 </ title > < style type = \"text/css\" > /* \u5168\u5c40\u8bbe\u7f6e\uff0c\u53d6\u6d88\u5916\u8fb9\u6846 */ * { margin : 0 ; padding : 0 ; } /* \u9876\u90e8\u7684\u9ad8\u5ea6 \u548c\u80cc\u666f\u989c\u8272*/ . head { height : 44 px ; background-color : #2459a2 ; } . head-content { position : relative ; margin : auto ; width : 1024 px ; height : 44 px ; line-height : 44 px ; background-color : #2459a2 ; /* background-color: red; */ } . menu { margin-left : 50 px ; } . menu ul li , . login a { list-style-type : none ; display : inline-block ; float : left ; padding : 0 15 px ; } . head-content a { text-decoration : none ; color : white ; } . active { background-color : #006400 ; } . menu li : hover : not ( . active ), . login a : hover { background-color : gray ; } . login { /* background-color: blue; */ float : right ; margin-right : 50 px ; } </ style > </ head > < body > < div class = \"head\" > < div class = \"head-content\" > < div class = \"menu\" > < ul > < li class = \"active\" >< a href = \"#home\" > \u4e3b\u9875 </ a ></ li > < li >< a href = \"#news\" > \u65b0\u95fb </ a ></ li > < li >< a href = \"#blog\" > \u535a\u5ba2 </ a ></ li > < li >< a href = \"#bbs\" > \u8bba\u575b </ a ></ li > < li >< a href = \"#contact\" > \u8054\u7cfb </ a ></ li > < li >< a href = \"#about\" > \u5173\u4e8e </ a ></ li > </ ul > </ div > < div class = \"login\" > < a href = \"#login\" > \u6ce8\u518c </ a > < a href = \"#register\" > \u767b\u5f55 </ a > </ div > </ div > </ div > </ body > </ html >","title":"\u516d\u3001\u5bfc\u822a\u680f"},{"location":"web/%E8%AF%AD%E8%A8%80/CSS/#_5","text":"","title":"\u4e03\u3001\u4e0b\u62c9\u83dc\u5355"},{"location":"web/%E8%AF%AD%E8%A8%80/JavaScript/","text":"JavaScript \u662f\u4e00\u79cd\u89e3\u91ca\u6027\u7684\u3001\u8de8\u5e73\u53f0\u7684\u3001\u57fa\u4e8e\u5bf9\u8c61\u7684\u811a\u672c\u8bed\u8a00\uff0c\u4e00\u822c\u7528\u4e8e\u5ba2\u6237\u7aef\u6765\u7ed9HTML\u9875\u9762\u589e\u52a0\u52a8\u6001\u7684\u529f\u80fd\u3002 \u7ec4\u6210\uff1a ECMAScript\uff0c\u63cf\u8ff0\u4e86\u8be5\u8bed\u8a00\u7684\u8bed\u6cd5\u548c\u57fa\u672c\u5bf9\u8c61 DOM \u6587\u6863\u5bf9\u8c61\u6a21\u578b\uff0c\u63cf\u8ff0\u5904\u7406\u7f51\u9875\u5185\u5bb9\u7684\u65b9\u6cd5\u548c\u63a5\u53e3 BOM \u6d4f\u89c8\u5668\u5bf9\u8c61\u6a21\u578b\uff0c\u63cf\u8ff0\u4e0e\u6d4f\u89c8\u5668\u8fdb\u884c\u4ea4\u4e92\u7684\u65b9\u6cd5\u548c\u63a5\u53e3\u3002 \u4e00\u3001JavaScript \u00b6 1. js\u7684\u5f15\u5165\u65b9\u5f0f \u00b6 \u653e\u5728HTML\u7684 \u90e8\u5206 \u653e\u5728HTML\u7684 \u90e8\u5206 \u4ece\u5916\u90e8\u6587\u4ef6\u5f15\u5165 1 < script src = \"myScript.js\" ></ script > 2. \u53d8\u91cf \u00b6 1. \u53d8\u91cf\u7684\u58f0\u660e \u00b6 \u4f7f\u7528\u201cvar\u201d\u5173\u952e\u5b57\u6765\u58f0\u660e\u53d8\u91cf \u58f0\u660e\u65f6\u8d4b\u503c var x=1 \u6216\u5148\u58f0\u660e\u540e\u8d4b\u503c\uff1a var x; x=1 \u5bf9\u4e8e\u6ca1\u6709\u8d4b\u503c\u7684\u53d8\u91cf\uff0c\u5176\u503c\u4e3a\uff1a undefined 2. \u53d8\u91cf\u7684\u547d\u540d\u89c4\u5219 \u00b6 \u82f1\u6587\u5b57\u6bcd\u3001\u6570\u5b57\u3001\u4e0b\u5212\u7ebf 3. \u53d8\u91cf\u540d\u683c\u5f0f \u00b6 \u5308\u7259\u5229\u547d\u540d\u6cd5\uff1a\u53d8\u91cf\u540d=\u7c7b\u578b+\u5bf9\u8c61\u63cf\u8ff0 var sname=\"hello\"; var nage=18 \u9a7c\u5cf0\u547d\u540d\u6cd5 \u5168\u90e8\u5c0f\u5199\uff0c\u5355\u8bcd\u7528\u4e0b\u5212\u7ebf\u5206\u5272 \u6bcf\u4e2a\u5355\u8bcd\u9996\u5b57\u6bcd\u5927\u5199 \u9996\u5b57\u6bcd\u5c0f\u5199\uff0c\u5176\u4ed6\u5355\u8bcd\u9996\u5b57\u6bcd\u5927\u5199 4. \u4f5c\u7528\u57df \u00b6 \u5c40\u90e8\u4f5c\u7528\u57df\uff1a\u51fd\u6570\u5185\u90e8\u5b9a\u4e49 \u5168\u5c40\u4f5c\u7528\u57df\uff1a\u51fd\u6570\u5916\u5b9a\u4e49 \u4f18\u5148\u7ea7\uff1a\u5c40\u90e8\u53d8\u91cf>\u5168\u5c40\u53d8\u91cf 3. \u8fd0\u7b97\u7b26 \u00b6 3.1 \u7b97\u6570\u8fd0\u7b97\u7b26 + - * % ++ -- \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 /* var a=1 b = a++ //\u5148\u8d4b\u503c\u540e\u52a0\u51cf alert(b) //b=1 alert(a) //a=2 */ /* var a=1 b=++a //\u5148\u52a0\u51cf\u540e\u8d4b\u503c alert(b) //b=2 alert(a) //a=2 */ /* var x=1 alert(x++) x=x+1 \u5148\u8d4b\u503c\uff0cx=1 alert\u7ed3\u679c\u4e3a1 \uff0c\u6267\u884c\u5b8c\u6210\u540ex=2 alert(++x) \u6b64\u65f6x=2\uff0c\u5148\u52a0\u51cf\u540e\u8d4b\u503c\uff0calert\u7ed3\u679c\u4e3a3 x=3 alert(--x) \u5148\u52a0\u51cf\uff0c\u540e\u8d4b\u503c\uff0c\u6b64\u65f6alert\u7ed3\u679c\u4e3a2 alert(x--) */ 3.2 \u8d4b\u503c\u8fd0\u7b97\u7b26 +=\u3001-=\u3001 *=\u3001 /=\u3001 %= \u00b6 3.3 \u5173\u7cfb\u8fd0\u7b97\u7b26 ==\u3001!=\u3001=== \u00b6 1 2 3 alert ( 2 == \"2\" ) --> true alert ( 2 === \"2\" ) --> flase === \u4e0d\u8fdb\u884c\u6570\u636e\u8f6c\u6362 \uff0c \u76f4\u63a5\u8fdb\u884c\u6bd4\u8f83 1 2 3 4 5 6 var s = \"hello\" alert ( typeof ( s )) // typeof:\u53ea\u80fd\u5224\u65ad\u57fa\u7840\u6570\u636e\u7c7b\u578b,\u5bf9\u4e8e\u5bf9\u8c61\u65e0\u6cd5\u51c6\u786e\u5224\u65ad\u5177\u4f53\u662f\u4ec0\u4e48\u5bf9\u8c61 var s2 = new String ( \"hello\" ) alert ( typeof ( s2 )) alert ( s2 instanceof String ); 3.4 \u903b\u8f91\u8fd0\u7b97\u7b26 \uff01\u3001&&\u3001|| \u00b6 3.5 \u4f4d\u8fd0\u7b97\u7b26 ~\u3001&\u3001|\u3001^\u3001<<\u3001>> \u00b6 3.5 \u4e00\u5143\u52a0\u51cf\u6cd5\uff1a \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 <!-- \u4e00\u5143\u52a0\u51cf\u6cd5 --> var a = 3 b =+ a alert ( b ) alert ( typeof ( b )) <!-- \u53ef\u4ee5\u5bf9\u6570\u636e\u7c7b\u578b\u8fdb\u884c\u8f6c\u6362 --> var a = \"3\" b =+ a alert ( b ) alert ( typeof ( b )) <!-- \u6709\u975e\u6570\u5b57\u7c7b\u578b \uff0c \u8f6c\u6362\u5931\u8d25 --> var a = \"3a\" b =+ a alert ( b ) alert ( typeof ( b )) 4. \u57fa\u672c\u6570\u636e\u7c7b\u578b \u00b6 number string Boolean null undefined 5. \u6d41\u7a0b\u8bed\u53e5 \u00b6 5.1 while \u00b6 1 2 3 4 5 6 7 8 < script type = \"text/javascript\" > i = 0 while ( i < 5 ) { // statement console . log ( i ) i ++ } < /script> 5.2 do while \u00b6 1 2 3 4 5 6 7 < script type = \"text/javascript\" > i = 0 do { //\u81f3\u5c11\u6267\u884c\u4e00\u6b21\u5faa\u73af console . log ( i ) i ++ } while ( i < 5 ); < /script> 5.3 for \u00b6 1 2 3 4 5 < script type = \"text/javascript\" > for ( var i = 0 ; i < 5 ; i ++ ) { console . log ( i ) } < /script> 5.4 for in \u00b6 1 2 3 4 5 < script type = \"text/javascript\" > for ( i in [ 1 , 2 , 3 , 4 ]) { console . log ( i ) } < /script> 5.5 if else \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 </ html > < head > < meta charset = \"utf-8\" > < title > JavaScript </ title > </ head > < body > < script type = \"text/javascript\" > var d = new Date (); var time = d . getHours (); if ( time < 10 ) { document . write ( \"<b>\u65e9\u4e0a\u597d</b>\" ); } else if ( time >= 10 && time < 14 ) { document . write ( \"<b>\u4e2d\u5348\u597d</b>\" ); } else { document . write ( \"<b>\u4e0b\u5348\u597d!</b>\" ); } </ script > </ body > </ html > 5.6 switch \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 <!DOCTYPE html> < html > < head > < meta charset = \"utf-8\" > < title > JavaScript </ title > </ head > < body > < button onclick = \"myFunction()\" > \u4eca\u5929\u662f\u5468\u51e0\uff1f </ button > < p id = \"demo\" ></ p > < script > function myFunction (){ var x ; var d = new Date (). getDay (); switch ( d ){ case 0 : x = \"\u4eca\u5929\u662f\u661f\u671f\u65e5\" ; break ; case 1 : x = \"\u4eca\u5929\u662f\u661f\u671f\u4e00\" ; break ; case 2 : x = \"\u4eca\u5929\u662f\u661f\u671f\u4e8c\" ; break ; case 3 : x = \"\u4eca\u5929\u662f\u661f\u671f\u4e09\" ; break ; case 4 : x = \"\u4eca\u5929\u662f\u661f\u671f\u56db\" ; break ; case 5 : x = \"\u4eca\u5929\u662f\u661f\u671f\u4e94\" ; break ; case 6 : x = \"\u4eca\u5929\u662f\u661f\u671f\u516d\" ; break ; } document . getElementById ( \"demo\" ). innerHTML = x ; } </ script > </ body > </ html > 5.7 \u5f02\u5e38\u5904\u7406 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 function func (argument) { try { console.log('hello') if(true){ throw \"\u4e3b\u52a8\u629b\u51fa\u9519\u8bef\" } } catch(e) { alert(e); } finally { console.log(\"\u6267\u884c\u5b8c\u6bd5\") } } func() 5.8 continue \u3001 break \u3001 default \u00b6 6. \u5bf9\u8c61 \u00b6 6.1 Number \u00b6 1 2 3 4 5 6 var num = new Number ( 15 ) console . log ( num ) console . log ( num . toString ()) //\u6570\u5b57\u8f6c\u5b57\u7b26\u4e32 console . log ( num . toString ( 2 )) //\u6570\u5b57\u8f6c2\u8fdb\u5236 console . log ( num . toString ( 8 )) //\u6570\u5b57\u8f6c8\u8fdb\u5236 console . log ( num . toString ( 16 )) //\u6570\u5b57\u8f6c16\u8fdb\u5236 6.2 String \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 var str1 = new String ( \"hello\" ); var str2 = \" world\" ; //\u5c5e\u6027 console . log ( str1 . length ); //\u5b57\u7b26\u4e32\u7684\u957f\u5ea6 // \u65b9\u6cd5 //\u83b7\u53d6\u6307\u5b9a\u5b57\u7b26\u4e32 console . log ( str1 . charAt ( '1' )); //\u8fd4\u56de\u5728\u6307\u5b9a\u4f4d\u7f6e\u7684\u5b57\u7b26\u3002 //\u67e5\u627e console . log ( str1 . indexOf ( 'l' )); //\u8fd4\u56de\u67d0\u4e2a\u6307\u5b9a\u7684\u5b57\u7b26\u4e32\u503c\u5728\u5b57\u7b26\u4e32\u4e2d\u9996\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u3002 console . log ( str1 . lastIndexOf ( 'l' )); //\u4ece\u540e\u5411\u524d\u641c\u7d22\u5b57\u7b26\u4e32\uff0c\u5e76\u4ece\u8d77\u59cb\u4f4d\u7f6e\uff080\uff09\u5f00\u59cb\u8ba1\u7b97\u8fd4\u56de\u5b57\u7b26\u4e32\u6700\u540e\u51fa\u73b0\u7684\u4f4d\u7f6e\u3002 console . log ( str1 . replace ( 'e' , 'a' )); //\u66ff\u6362 console . log ( str1 . slice ( 1 , 3 )); //\u5207\u7247[start,end) console . log ( str1 . substring ( 1 , 3 )) //\u548cslice\u76f8\u540c console . log ( str . split ( \" \" )); //\u628a\u5b57\u7b26\u4e32\u5206\u5272\u4e3a\u5b57\u7b26\u4e32\u6570\u7ec4\u3002 console . log ( str1 . substr ( 1 , 3 )) //\u4ece\u8d77\u59cb\u7d22\u5f15\u53f7\u63d0\u53d6\u5b57\u7b26\u4e32\u4e2d\u6307\u5b9a\u6570\u76ee\u7684\u5b57\u7b26 (index,num) //\u5927\u5c0f\u5199\u8f6c\u6362 console . log ( \"HELLO\" . toLowerCase ( str1 )) //\u8f6c\u5c0f\u5199 console . log ( \"hello\" . toUpperCase ( str1 )) //\u8f6c\u5927\u5199 //\u7f16\u6392\u65b9\u6cd5 document . write ( s . italics ()); document . write ( s . bold ()); document . write ( s . anchor ()); console . log ( \" hello \" . trim ()) //\u53bb\u9664\u5b57\u7b26\u4e32\u4e24\u8fb9\u7684\u7a7a\u767d var str = str1 . concat ( str2 ); //\u5b57\u7b26\u4e32\u62fc\u63a5 console . log ( str ); 6.3 Array \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 //\u58f0\u660e var cars = [ \"Volvo\" , \"Saab\" , \"BMW\" ]; //\u65b9\u6cd5\u4e00 var arr1 = [ 1 , 2 , 3 , 4 ]; //\u65b9\u6cd5\u4e8c var arr3 = new Array (); //\u65b9\u6cd5\u4e09 var arr4 = new Array ( 3 ,); //\u521d\u59cb\u5316\u4e00\u4e2a\u957f\u5ea6\u4e3a3\u7684\u6570\u7ec4\uff0c\u8be5\u6570\u7ec4\u53ef\u53d8\u957f //\u5c5e\u6027 console . log ( cars . length ) //\u65b9\u6cd5\uff1a //\u63d2\u5165\u548c\u5220\u9664 console . log ([ 1 , 2 , 3 ]. concat ([ 4 , 5 , 6 ])) //\u6570\u5b57\u5408\u5e76 console . log ( cars . join ( \"#\" )) console . log ( cars . pop ()) //\u5220\u9664\u6700\u540e\u4e00\u4e2a\u5143\u7d20 console . log ( cars . push ( 'jeep' )) //\u6570\u7ec4\u7684\u672b\u5c3e\u6dfb\u52a0\u4e00\u4e2a\u6216\u66f4\u591a\u5143\u7d20\uff0c\u5e76\u8fd4\u56de\u65b0\u7684\u957f\u5ea6 console . log ( cars . shift ()) //\u5220\u9664\u5e76\u8fd4\u56de\u6570\u7ec4\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20 console . log ( cars . unshift ( 'abc' )) //\u5411\u6570\u7ec4\u7684\u5f00\u5934\u6dfb\u52a0\u4e00\u4e2a\u6216\u66f4\u591a\u5143\u7d20\uff0c\u5e76\u8fd4\u56de\u65b0\u7684\u957f\u5ea6\u3002 console . log ( cars ) //\u6392\u5e8f console . log ( cars . reverse ()) //\u53cd\u8f6c\u6570\u7ec4\u987a\u5e8f console . log ( cars . sort ()) //\u6570\u7ec4\u6392\u5e8f console . log ( cars . toString ()) //\u6570\u7ec4\u8f6c\u5b57\u7b26\u4e32 6.4 Boolean \u00b6 1 2 3 4 //\u65b9\u6cd5 var bool = new Boolean ( 1 ); console . log ( bool . toString ()) console . log ( bool . valueOf ()) 6.5 Date \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 //\u65f6\u95f4\u521b\u5efa var today = new Date () var d1 = new Date ( \"October 13, 1975 11:13:00\" ) var d2 = new Date ( 79 , 5 , 24 ) var d3 = new Date ( 79 , 5 , 24 , 11 , 33 , 0 ) console . log ( today ) console . log ( d1 ) console . log ( d2 ) console . log ( d3 ) //\u65b9\u6cd5 y = today . getFullYear () m = today . getMonth () d = today . getDate () H = today . getHours () M = today . getMinutes () S = today . getSeconds () console . log ( y + '\u5e74' + m + '\u6708' + d + '\u65e5' + \" \" + H + \":\" + M + \":\" + S ) console . log ( today . getTime ()) 6.6 Mtch \u00b6 1 2 3 4 5 console . log ( Math . abs ( - 2 )) console . log ( Math . max ( 1 , 3 , 5 )) console . log ( Math . min ( 1 , 3 , 5 )) console . log ( Math . random ()) //[0.0,1.0)\u968f\u673a\u6570 console . log ( Math . round ( 2.5 )); //\u56db\u820d\u4e94\u5165 6.7 RedExp \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 //\u8bed\u6cd5 // var patt=new RegExp(pattern,modifiers); // \u6216\u8005\u66f4\u7b80\u5355\u7684\u65b9\u5f0f: // var patt=/pattern/modifiers; /* \u4fee\u9970\u7b26 i \u6267\u884c\u5bf9\u5927\u5c0f\u5199\u4e0d\u654f\u611f\u7684\u5339\u914d\u3002 g \u6267\u884c\u5168\u5c40\u5339\u914d\uff08\u67e5\u627e\u6240\u6709\u5339\u914d\u800c\u975e\u5728\u627e\u5230\u7b2c\u4e00\u4e2a\u5339\u914d\u540e\u505c\u6b62\uff09\u3002 m \u6267\u884c\u591a\u884c\u5339\u914d\u3002 */ var str = \"hello world\" console . log ( str . search ( \"o\" )) //\u8fd4\u56de\u7b2c\u4e00\u4e2a\u5339\u914d\u7684\u7d22\u5f15\u503c console . log ( str . search ( \"a\" )) //\u6ca1\u627e\u5230\u8fd4\u56de-1 console . log ( str . match ( /o/g )); console . log ( /hello/g . test ( str )) 7. \u51fd\u6570 \u00b6 7.1\u51fd\u6570\u521b\u5efa\u7684\u4e09\u79cd\u65b9\u6cd5 \u00b6 \u65b9\u6cd5\u4e00 1 2 3 4 function func ( argument ) { return \"hello\" } console . log ( func ()) \u65b9\u6cd5\u4e8c\uff1a\u6784\u9020\u51fd\u6570 var func = new Function(\"\u53c2\u65701\", \"\u53c2\u65702\", \"\u51fd\u6570\u4f53\") 1 2 var func = new Function ( \"a\" , \"b\" , \"return a+b\" ) console . log ( func ( 1 , 2 )) \u65b9\u6cd5\u4e09 \u533f\u540d\u51fd\u6570(\u51fd\u6570\u8868\u8fbe\u5f0f) 1 console . log ( function ( x , y ){ return x + y }( 3 , 5 )) 7.2 \u51fd\u6570\u8c03\u7528 \u00b6 this \u5173\u952e\u5b57:\u4e00\u822c\u800c\u8a00\uff0c\u5728Javascript\u4e2d\uff0cthis\u6307\u5411\u51fd\u6570\u6267\u884c\u65f6\u7684\u5f53\u524d\u5bf9\u8c61\u3002 1 2 3 4 5 6 void () // void\u7684\u4f5c\u7528:\u963b\u62e6\u65b9\u6cd5\u7684\u8fd4\u56de\u503c function f () { return 8 } alert ( void ( f ())) 7.3\u53c2\u6570 \u00b6 arguments\u5bf9\u8c61 1 2 3 4 5 6 7 //\u904d\u5386\u4f20\u5165\u7684\u53c2\u6570 function func () { for ( var i = 0 ; i < arguments . length ; i ++ ) { console . log ( arguments [ i ]) } } func ( 1 , 2 , 3 , 4 , 5 ) \u4e8c\u3001DOM \u00b6 1. \u4ecb\u7ecd \u00b6 DOM \uff08Document Object Model\uff0c\u6587\u6863\u5bf9\u8c61\u6a21\u578b\uff09:W3C\u5b9a\u4e49\u7684\u8bbf\u95eeHTML\u548cXML\u6587\u6863\u7684\u6807\u51c6 DOM\u7ec4\u6210\uff1a 1. \u6838\u5fc3DOM \uff1a\u9488\u5bf9\u4efb\u4f55\u7ed3\u6784\u5316\u6587\u6863\u7684\u6807\u51c6\u6a21\u578b 2. XML DOM \uff1a\u9488\u5bf9 XML \u6587\u6863\u7684\u6807\u51c6\u6a21\u578b 3. HTML DOM \uff1a\u9488\u5bf9 HTML \u6587\u6863\u7684\u6807\u51c6\u6a21\u578b 2.\u8282\u70b9 \u00b6 1 2 3 4 5 1. \u6587\u6863\u8282\u70b9 2. \u5143\u7d20\u8282\u70b9 3. \u6587\u672c\u8282\u70b9 4. \u5c5e\u6027\u8282\u70b9 5. \u6ce8\u91ca\u8282\u70b9 3. \u5c5e\u6027 \u00b6 3.1\u81ea\u8eab\u5c5e\u6027 \u00b6 nodeName nodeValue nodeType 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 <!DOCTYPE html> < html > < head > < title ></ title > </ head > < body > < div id = \"h\" > < p > hello </ p > < p > world </ p > </ div > < script type = \"text/javascript\" > console . log ( document . getElementById ( \"h\" ). nodeName ) console . log ( document . getElementById ( \"h\" ). nodeValue ) console . log ( document . getElementById ( \"h\" ). nodeType ) console . log ( document . getElementById ( \"h\" ). innerHTML ) </ script > </ body > </ html > 3.2\u5bfc\u822a\u5c5e\u6027 \u00b6 \u7b2c\u4e00\u7c7b\uff1a\u4e0d\u5efa\u8bae\u4f7f\u7528\uff0c\u5982\u679c\u4e24\u4e2a\u5143\u7d20\u4e4b\u95f4\u6709\u6587\u672c\uff08\u7a7a\u683c\u6216\u6362\u884c\uff09\u4f1a\u628a\u6587\u672c\u4f5c\u4e3a\u4e0b\u4e00\u4e2a\u5143\u7d20 parentNode \u2606 firstChild lastChild nextSibling previousSibling\u3000\u3000\u3000 \u7b2c\u4e8c\u7c7b\uff1a\u5efa\u8bae\u4f7f\u7528 1.getElementById(\"div1\") 2. firstElementChild 3. lastElementChild; 4. nextElementSibling; 4. \u5168\u5c40\u67e5\u627e\u4e0e\u5c40\u90e8\u67e5\u627e \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 <!DOCTYPE html> < html > < head > < meta charset = \"utf-8\" > < title > JavaScript </ title > </ head > < body > < div id = \"div1\" > < div class = \"div2\" > hello </ div > < div class = \"div3\" name = \"name\" > world < p > \u4f60\u597d \u4e16\u754c\uff01 </ p > < p class = \"ppp\" > hello html </ p > </ div > < p > hello world </ p > </ div > < script > // \u5168\u5c40\u67e5\u627e // \u901a\u8fc7id\u67e5\u627e var e = document . getElementById ( \"div1\" ) // \u901a\u8fc7class\u67e5\u627e var ele = document . getElementsByClassName ( \"div2\" )[ 0 ] //\u7ed3\u679c\u662f\u4e00\u4e2a\u6570\u7ec4 var ele2 = ele . nextElementSibling ; alert ( ele2 . innerHTML ) //\u901a\u8fc7\u6807\u7b7e\u67e5\u627e var ele3 = document . getElementsByTagName ( \"p\" ); alert ( ele3 [ 0 ]. innerHTML ) //\u901a\u8fc7name\u67e5\u627e ele4 = document . getElementsByName ( \"name\" ) console . log ( ele4 [ 0 ]. innerHTML ) //\u5c40\u90e8\u67e5\u627e //\u901a\u8fc7tag var ele5 = document . getElementsByClassName ( \"div3\" ); var ele6 = ele5 [ 0 ]. getElementsByTagName ( \"p\" ) console . log ( ele6 [ 0 ]. innerHTML ) //\u901a\u8fc7class var ele7 = ele5 [ 0 ]. getElementsByClassName ( \"ppp\" ) console . log ( ele7 [ 0 ]. innerHTML ) //\u4e0d\u53ef\u4ee5\u901a\u8fc7id\u548cname\u8fdb\u884c\u5c40\u90e8\u67e5\u627e </ script > </ body > </ html > 5. DOM \u4fee\u6539\u3001\u6dfb\u52a0\u3001\u5220\u9664 \u00b6 5.1\u521b\u5efaHTML\u5185\u5bb9\u5e76\u6539\u53d8\u6837\u5f0f \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 <!DOCTYPE html> < html > < head > < title ></ title > </ head > < body > < p id = \"p1\" ></ p > < script type = \"text/javascript\" > document . getElementById ( \"p1\" ). innerHTML = \"hello world\" //\u521b\u5efa\u5185\u5bb9 document . getElementById ( \"p1\" ). style . color = 'blue' ; //\u66f4\u6539\u6837\u5f0f </ script > </ body > </ html > 5.2 \u6dfb\u52a0\u65b0\u7684\u5143\u7d20:appendChild() \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 < script > //\u521b\u5efa <p> \u5143\u7d20: var para = document . createElement ( \"p\" ); // <p> \u5143\u7d20\u6dfb\u52a0\u6587\u672c\u8282\u70b9 var node = document . createTextNode ( \"\u8fd9\u662f\u4e00\u4e2a\u65b0\u7684\u6bb5\u843d\u3002\" ); //\u5c06\u6587\u672c\u8282\u70b9\u6dfb\u52a0\u5230 <p> \u5143\u7d20\u4e2d\uff1a para . appendChild ( node ); //\u67e5\u627e\u5df2\u5b58\u5728\u7684\u5143\u7d20 var element = document . getElementById ( \"div1\" ); //\u6dfb\u52a0\u5230\u5df2\u5b58\u5728\u7684\u5143\u7d20\u4e2d: element . appendChild ( para ); </ script > 5.3 \u63d2\u5165\u5230\u5df2\u6709\u5143\u7d20\u4e4b\u524d insertBefore() \u00b6 5.4 \u79fb\u9664\u5143\u7d20: removeChild() \u00b6 5.5 \u66ff\u6362\u5143\u7d20: replaceChild() \u00b6 6.\u4e8b\u4ef6 \u00b6 6.1 \u9f20\u6807\u4e8b\u4ef6 \u00b6 1 2 3 4 5 6 < p onclick = \"alert('\u5355\u51fb')\" > \u5355\u51fb\u9f20\u6807 < /p> < p ondblclick = \"alert('\u53cc\u51fb')\" > \u53cc\u51fb\u9f20\u6807 < /p> < p onmousedown = \"alert('\u9f20\u6807\u6309\u4e0b')\" > \u9f20\u6807\u6309\u4e0b < /p> < p onmouseup = \"alert('\u9f20\u6807\u677e\u5f00')\" > \u9f20\u6807\u677e\u5f00 < /p> < p onmouseover = \"alert('\u653e\u4e0a\u9f20\u6807')\" > \u9f20\u6807\u79fb\u5230\u5143\u7d20\u4e4b\u4e0a \u3002 < /p> < p onmouseout = \"alert('\u79fb\u5f00\u9f20\u6807')\" > \u9f20\u6807\u79fb\u5f00 < /p> 6.2 \u6846\u67b6/\u5bf9\u8c61\u4e8b\u4ef6 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 <!DOCTYPE html> < html > < head > < title ></ title > < meta charset = \"utf-8\" > < script type = \"text/javascript\" > window . onload = function () { //\u628ajs\u4ee3\u7801\u5199\u5728\u5934\u90e8\uff0c\u7b49\u9875\u9762\u52a0\u8f7d\u5b8c\u4e4b\u540e\u6267\u884c } </ script > </ head > < body > </ body > </ html > 6.3 \u8868\u5355\u4e8b\u4ef6 \u00b6 onfocus\u4e0eonblur onsubmit onchange \u4e09\u3001BOM\uff08Browser Object Model\uff0c\u6d4f\u89c8\u5668\u5bf9\u8c61\u6a21\u578b\uff09 \u00b6 1. Window\u5bf9\u8c61 \u00b6 \u8868\u793a\u6d4f\u89c8\u5668\u7a97\u53e3 1 2 3 4 5 6 7 8 9 10 11 12 13 \u5c5e\u6027 \uff1a < script > var w = window . innerWidth || document . documentElement . clientWidth || document . body . clientWidth ; var h = window . innerHeight || document . documentElement . clientHeight || document . body . clientHeight ; x = document . getElementById ( \"demo\" ); x . innerHTML = \"\u6d4f\u89c8\u5668window\u5bbd\u5ea6: \" + w + \", \u9ad8\u5ea6: \" + h + \"\u3002\" < /script> \u65b9\u6cd5 \uff1a window . alert ( \"sometext\" ); window.confirm(\"sometext\"); \u4f8b\uff1a r=window.confirm(\"\u662f\u5426\u53d6\u6d88\uff1f\") \u8ba1\u65f6\u4e8b\u4ef6 setInterval clearInterval setTimeout clearTimeout 2. Screen\u5bf9\u8c61 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 < script > document . write ( \"\u603b\u5bbd\u5ea6/\u9ad8\u5ea6: \" ); document . write ( screen . width + \"*\" + screen . height ); document . write ( \"<br>\" ); document . write ( \"\u53ef\u7528\u5bbd\u5ea6/\u9ad8\u5ea6: \" ); document . write ( screen . availWidth + \"*\" + screen . availHeight ); document . write ( \"<br>\" ); document . write ( \"\u8272\u5f69\u6df1\u5ea6: \" ); document . write ( screen . colorDepth ); document . write ( \"<br>\" ); document . write ( \"\u8272\u5f69\u5206\u8fa8\u7387: \" ); document . write ( screen . pixelDepth ); < /script> 3. Location\u5bf9\u8c61 \u00b6 1 2 3 4 5 6 7 8 location . hostname \u8fd4\u56de web \u4e3b\u673a\u7684\u57df\u540d location . pathname \u8fd4\u56de\u5f53\u524d\u9875\u9762\u7684\u8def\u5f84\u548c\u6587\u4ef6\u540d location . port \u8fd4\u56de web \u4e3b\u673a\u7684\u7aef\u53e3 \uff08 80 \u6216 443 \uff09 location . protocol \u8fd4\u56de\u6240\u4f7f\u7528\u7684 web \u534f\u8bae \uff08 http : // \u6216 https://\uff09 location . href \u5c5e\u6027\u8fd4\u56de\u5f53\u524d\u9875\u9762\u7684 URL \u3002 location . pathname \u5c5e\u6027\u8fd4\u56de URL \u7684\u8def\u5f84\u540d \u3002 location . assign () \u65b9\u6cd5\u52a0\u8f7d\u65b0\u7684\u6587\u6863 \u3002 location . reload () \u5237\u65b0 4. History\u5bf9\u8c61 \u00b6 1 2 3 4 history . length \u8fd4\u56de\u5386\u53f2\u5217\u8868\u4e2d\u7684\u7f51\u5740\u6570 history . back () \u52a0\u8f7d history \u5217\u8868\u4e2d\u7684\u524d\u4e00\u4e2a URL history . forward () \u52a0\u8f7d history \u5217\u8868\u4e2d\u7684\u4e0b\u4e00\u4e2a URL history . go ( Number | URL ) \u52a0\u8f7d history \u5217\u8868\u4e2d\u7684\u67d0\u4e2a\u5177\u4f53\u9875\u9762","title":"JavaScript"},{"location":"web/%E8%AF%AD%E8%A8%80/JavaScript/#javascript","text":"","title":"\u4e00\u3001JavaScript"},{"location":"web/%E8%AF%AD%E8%A8%80/JavaScript/#1-js","text":"\u653e\u5728HTML\u7684 \u90e8\u5206 \u653e\u5728HTML\u7684 \u90e8\u5206 \u4ece\u5916\u90e8\u6587\u4ef6\u5f15\u5165 1 < script src = \"myScript.js\" ></ script >","title":"1. js\u7684\u5f15\u5165\u65b9\u5f0f"},{"location":"web/%E8%AF%AD%E8%A8%80/JavaScript/#2","text":"","title":"2. \u53d8\u91cf"},{"location":"web/%E8%AF%AD%E8%A8%80/JavaScript/#1","text":"\u4f7f\u7528\u201cvar\u201d\u5173\u952e\u5b57\u6765\u58f0\u660e\u53d8\u91cf \u58f0\u660e\u65f6\u8d4b\u503c var x=1 \u6216\u5148\u58f0\u660e\u540e\u8d4b\u503c\uff1a var x; x=1 \u5bf9\u4e8e\u6ca1\u6709\u8d4b\u503c\u7684\u53d8\u91cf\uff0c\u5176\u503c\u4e3a\uff1a undefined","title":"1. \u53d8\u91cf\u7684\u58f0\u660e"},{"location":"web/%E8%AF%AD%E8%A8%80/JavaScript/#2_1","text":"\u82f1\u6587\u5b57\u6bcd\u3001\u6570\u5b57\u3001\u4e0b\u5212\u7ebf","title":"2. \u53d8\u91cf\u7684\u547d\u540d\u89c4\u5219"},{"location":"web/%E8%AF%AD%E8%A8%80/JavaScript/#3","text":"\u5308\u7259\u5229\u547d\u540d\u6cd5\uff1a\u53d8\u91cf\u540d=\u7c7b\u578b+\u5bf9\u8c61\u63cf\u8ff0 var sname=\"hello\"; var nage=18 \u9a7c\u5cf0\u547d\u540d\u6cd5 \u5168\u90e8\u5c0f\u5199\uff0c\u5355\u8bcd\u7528\u4e0b\u5212\u7ebf\u5206\u5272 \u6bcf\u4e2a\u5355\u8bcd\u9996\u5b57\u6bcd\u5927\u5199 \u9996\u5b57\u6bcd\u5c0f\u5199\uff0c\u5176\u4ed6\u5355\u8bcd\u9996\u5b57\u6bcd\u5927\u5199","title":"3. \u53d8\u91cf\u540d\u683c\u5f0f"},{"location":"web/%E8%AF%AD%E8%A8%80/JavaScript/#4","text":"\u5c40\u90e8\u4f5c\u7528\u57df\uff1a\u51fd\u6570\u5185\u90e8\u5b9a\u4e49 \u5168\u5c40\u4f5c\u7528\u57df\uff1a\u51fd\u6570\u5916\u5b9a\u4e49 \u4f18\u5148\u7ea7\uff1a\u5c40\u90e8\u53d8\u91cf>\u5168\u5c40\u53d8\u91cf","title":"4. \u4f5c\u7528\u57df"},{"location":"web/%E8%AF%AD%E8%A8%80/JavaScript/#3_1","text":"","title":"3. \u8fd0\u7b97\u7b26"},{"location":"web/%E8%AF%AD%E8%A8%80/JavaScript/#31-","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 /* var a=1 b = a++ //\u5148\u8d4b\u503c\u540e\u52a0\u51cf alert(b) //b=1 alert(a) //a=2 */ /* var a=1 b=++a //\u5148\u52a0\u51cf\u540e\u8d4b\u503c alert(b) //b=2 alert(a) //a=2 */ /* var x=1 alert(x++) x=x+1 \u5148\u8d4b\u503c\uff0cx=1 alert\u7ed3\u679c\u4e3a1 \uff0c\u6267\u884c\u5b8c\u6210\u540ex=2 alert(++x) \u6b64\u65f6x=2\uff0c\u5148\u52a0\u51cf\u540e\u8d4b\u503c\uff0calert\u7ed3\u679c\u4e3a3 x=3 alert(--x) \u5148\u52a0\u51cf\uff0c\u540e\u8d4b\u503c\uff0c\u6b64\u65f6alert\u7ed3\u679c\u4e3a2 alert(x--) */","title":"3.1 \u7b97\u6570\u8fd0\u7b97\u7b26 + - * % ++ --"},{"location":"web/%E8%AF%AD%E8%A8%80/JavaScript/#32-","text":"","title":"3.2 \u8d4b\u503c\u8fd0\u7b97\u7b26 +=\u3001-=\u3001 *=\u3001 /=\u3001 %="},{"location":"web/%E8%AF%AD%E8%A8%80/JavaScript/#33","text":"1 2 3 alert ( 2 == \"2\" ) --> true alert ( 2 === \"2\" ) --> flase === \u4e0d\u8fdb\u884c\u6570\u636e\u8f6c\u6362 \uff0c \u76f4\u63a5\u8fdb\u884c\u6bd4\u8f83 1 2 3 4 5 6 var s = \"hello\" alert ( typeof ( s )) // typeof:\u53ea\u80fd\u5224\u65ad\u57fa\u7840\u6570\u636e\u7c7b\u578b,\u5bf9\u4e8e\u5bf9\u8c61\u65e0\u6cd5\u51c6\u786e\u5224\u65ad\u5177\u4f53\u662f\u4ec0\u4e48\u5bf9\u8c61 var s2 = new String ( \"hello\" ) alert ( typeof ( s2 )) alert ( s2 instanceof String );","title":"3.3 \u5173\u7cfb\u8fd0\u7b97\u7b26 ==\u3001!=\u3001==="},{"location":"web/%E8%AF%AD%E8%A8%80/JavaScript/#34-ampamp","text":"","title":"3.4 \u903b\u8f91\u8fd0\u7b97\u7b26 \uff01\u3001&amp;amp;&amp;amp;\u3001||"},{"location":"web/%E8%AF%AD%E8%A8%80/JavaScript/#35-ampltltgtgt","text":"","title":"3.5 \u4f4d\u8fd0\u7b97\u7b26 ~\u3001&amp;amp;\u3001|\u3001^\u3001&amp;lt;&amp;lt;\u3001&amp;gt;&amp;gt;"},{"location":"web/%E8%AF%AD%E8%A8%80/JavaScript/#35","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 <!-- \u4e00\u5143\u52a0\u51cf\u6cd5 --> var a = 3 b =+ a alert ( b ) alert ( typeof ( b )) <!-- \u53ef\u4ee5\u5bf9\u6570\u636e\u7c7b\u578b\u8fdb\u884c\u8f6c\u6362 --> var a = \"3\" b =+ a alert ( b ) alert ( typeof ( b )) <!-- \u6709\u975e\u6570\u5b57\u7c7b\u578b \uff0c \u8f6c\u6362\u5931\u8d25 --> var a = \"3a\" b =+ a alert ( b ) alert ( typeof ( b ))","title":"3.5 \u4e00\u5143\u52a0\u51cf\u6cd5\uff1a"},{"location":"web/%E8%AF%AD%E8%A8%80/JavaScript/#4_1","text":"number string Boolean null undefined","title":"4. \u57fa\u672c\u6570\u636e\u7c7b\u578b"},{"location":"web/%E8%AF%AD%E8%A8%80/JavaScript/#5","text":"","title":"5. \u6d41\u7a0b\u8bed\u53e5"},{"location":"web/%E8%AF%AD%E8%A8%80/JavaScript/#51-while","text":"1 2 3 4 5 6 7 8 < script type = \"text/javascript\" > i = 0 while ( i < 5 ) { // statement console . log ( i ) i ++ } < /script>","title":"5.1 while"},{"location":"web/%E8%AF%AD%E8%A8%80/JavaScript/#52-do-while","text":"1 2 3 4 5 6 7 < script type = \"text/javascript\" > i = 0 do { //\u81f3\u5c11\u6267\u884c\u4e00\u6b21\u5faa\u73af console . log ( i ) i ++ } while ( i < 5 ); < /script>","title":"5.2 do while"},{"location":"web/%E8%AF%AD%E8%A8%80/JavaScript/#53-for","text":"1 2 3 4 5 < script type = \"text/javascript\" > for ( var i = 0 ; i < 5 ; i ++ ) { console . log ( i ) } < /script>","title":"5.3 for"},{"location":"web/%E8%AF%AD%E8%A8%80/JavaScript/#54-for-in","text":"1 2 3 4 5 < script type = \"text/javascript\" > for ( i in [ 1 , 2 , 3 , 4 ]) { console . log ( i ) } < /script>","title":"5.4 for in"},{"location":"web/%E8%AF%AD%E8%A8%80/JavaScript/#55-if-else","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 </ html > < head > < meta charset = \"utf-8\" > < title > JavaScript </ title > </ head > < body > < script type = \"text/javascript\" > var d = new Date (); var time = d . getHours (); if ( time < 10 ) { document . write ( \"<b>\u65e9\u4e0a\u597d</b>\" ); } else if ( time >= 10 && time < 14 ) { document . write ( \"<b>\u4e2d\u5348\u597d</b>\" ); } else { document . write ( \"<b>\u4e0b\u5348\u597d!</b>\" ); } </ script > </ body > </ html >","title":"5.5 if else"},{"location":"web/%E8%AF%AD%E8%A8%80/JavaScript/#56-switch","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 <!DOCTYPE html> < html > < head > < meta charset = \"utf-8\" > < title > JavaScript </ title > </ head > < body > < button onclick = \"myFunction()\" > \u4eca\u5929\u662f\u5468\u51e0\uff1f </ button > < p id = \"demo\" ></ p > < script > function myFunction (){ var x ; var d = new Date (). getDay (); switch ( d ){ case 0 : x = \"\u4eca\u5929\u662f\u661f\u671f\u65e5\" ; break ; case 1 : x = \"\u4eca\u5929\u662f\u661f\u671f\u4e00\" ; break ; case 2 : x = \"\u4eca\u5929\u662f\u661f\u671f\u4e8c\" ; break ; case 3 : x = \"\u4eca\u5929\u662f\u661f\u671f\u4e09\" ; break ; case 4 : x = \"\u4eca\u5929\u662f\u661f\u671f\u56db\" ; break ; case 5 : x = \"\u4eca\u5929\u662f\u661f\u671f\u4e94\" ; break ; case 6 : x = \"\u4eca\u5929\u662f\u661f\u671f\u516d\" ; break ; } document . getElementById ( \"demo\" ). innerHTML = x ; } </ script > </ body > </ html >","title":"5.6 switch"},{"location":"web/%E8%AF%AD%E8%A8%80/JavaScript/#57","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 function func (argument) { try { console.log('hello') if(true){ throw \"\u4e3b\u52a8\u629b\u51fa\u9519\u8bef\" } } catch(e) { alert(e); } finally { console.log(\"\u6267\u884c\u5b8c\u6bd5\") } } func()","title":"5.7 \u5f02\u5e38\u5904\u7406"},{"location":"web/%E8%AF%AD%E8%A8%80/JavaScript/#58continuebreakdefault","text":"","title":"5.8continue\u3001break\u3001default"},{"location":"web/%E8%AF%AD%E8%A8%80/JavaScript/#6","text":"","title":"6. \u5bf9\u8c61"},{"location":"web/%E8%AF%AD%E8%A8%80/JavaScript/#61-number","text":"1 2 3 4 5 6 var num = new Number ( 15 ) console . log ( num ) console . log ( num . toString ()) //\u6570\u5b57\u8f6c\u5b57\u7b26\u4e32 console . log ( num . toString ( 2 )) //\u6570\u5b57\u8f6c2\u8fdb\u5236 console . log ( num . toString ( 8 )) //\u6570\u5b57\u8f6c8\u8fdb\u5236 console . log ( num . toString ( 16 )) //\u6570\u5b57\u8f6c16\u8fdb\u5236","title":"6.1 Number"},{"location":"web/%E8%AF%AD%E8%A8%80/JavaScript/#62-string","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 var str1 = new String ( \"hello\" ); var str2 = \" world\" ; //\u5c5e\u6027 console . log ( str1 . length ); //\u5b57\u7b26\u4e32\u7684\u957f\u5ea6 // \u65b9\u6cd5 //\u83b7\u53d6\u6307\u5b9a\u5b57\u7b26\u4e32 console . log ( str1 . charAt ( '1' )); //\u8fd4\u56de\u5728\u6307\u5b9a\u4f4d\u7f6e\u7684\u5b57\u7b26\u3002 //\u67e5\u627e console . log ( str1 . indexOf ( 'l' )); //\u8fd4\u56de\u67d0\u4e2a\u6307\u5b9a\u7684\u5b57\u7b26\u4e32\u503c\u5728\u5b57\u7b26\u4e32\u4e2d\u9996\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u3002 console . log ( str1 . lastIndexOf ( 'l' )); //\u4ece\u540e\u5411\u524d\u641c\u7d22\u5b57\u7b26\u4e32\uff0c\u5e76\u4ece\u8d77\u59cb\u4f4d\u7f6e\uff080\uff09\u5f00\u59cb\u8ba1\u7b97\u8fd4\u56de\u5b57\u7b26\u4e32\u6700\u540e\u51fa\u73b0\u7684\u4f4d\u7f6e\u3002 console . log ( str1 . replace ( 'e' , 'a' )); //\u66ff\u6362 console . log ( str1 . slice ( 1 , 3 )); //\u5207\u7247[start,end) console . log ( str1 . substring ( 1 , 3 )) //\u548cslice\u76f8\u540c console . log ( str . split ( \" \" )); //\u628a\u5b57\u7b26\u4e32\u5206\u5272\u4e3a\u5b57\u7b26\u4e32\u6570\u7ec4\u3002 console . log ( str1 . substr ( 1 , 3 )) //\u4ece\u8d77\u59cb\u7d22\u5f15\u53f7\u63d0\u53d6\u5b57\u7b26\u4e32\u4e2d\u6307\u5b9a\u6570\u76ee\u7684\u5b57\u7b26 (index,num) //\u5927\u5c0f\u5199\u8f6c\u6362 console . log ( \"HELLO\" . toLowerCase ( str1 )) //\u8f6c\u5c0f\u5199 console . log ( \"hello\" . toUpperCase ( str1 )) //\u8f6c\u5927\u5199 //\u7f16\u6392\u65b9\u6cd5 document . write ( s . italics ()); document . write ( s . bold ()); document . write ( s . anchor ()); console . log ( \" hello \" . trim ()) //\u53bb\u9664\u5b57\u7b26\u4e32\u4e24\u8fb9\u7684\u7a7a\u767d var str = str1 . concat ( str2 ); //\u5b57\u7b26\u4e32\u62fc\u63a5 console . log ( str );","title":"6.2 String"},{"location":"web/%E8%AF%AD%E8%A8%80/JavaScript/#63-array","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 //\u58f0\u660e var cars = [ \"Volvo\" , \"Saab\" , \"BMW\" ]; //\u65b9\u6cd5\u4e00 var arr1 = [ 1 , 2 , 3 , 4 ]; //\u65b9\u6cd5\u4e8c var arr3 = new Array (); //\u65b9\u6cd5\u4e09 var arr4 = new Array ( 3 ,); //\u521d\u59cb\u5316\u4e00\u4e2a\u957f\u5ea6\u4e3a3\u7684\u6570\u7ec4\uff0c\u8be5\u6570\u7ec4\u53ef\u53d8\u957f //\u5c5e\u6027 console . log ( cars . length ) //\u65b9\u6cd5\uff1a //\u63d2\u5165\u548c\u5220\u9664 console . log ([ 1 , 2 , 3 ]. concat ([ 4 , 5 , 6 ])) //\u6570\u5b57\u5408\u5e76 console . log ( cars . join ( \"#\" )) console . log ( cars . pop ()) //\u5220\u9664\u6700\u540e\u4e00\u4e2a\u5143\u7d20 console . log ( cars . push ( 'jeep' )) //\u6570\u7ec4\u7684\u672b\u5c3e\u6dfb\u52a0\u4e00\u4e2a\u6216\u66f4\u591a\u5143\u7d20\uff0c\u5e76\u8fd4\u56de\u65b0\u7684\u957f\u5ea6 console . log ( cars . shift ()) //\u5220\u9664\u5e76\u8fd4\u56de\u6570\u7ec4\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20 console . log ( cars . unshift ( 'abc' )) //\u5411\u6570\u7ec4\u7684\u5f00\u5934\u6dfb\u52a0\u4e00\u4e2a\u6216\u66f4\u591a\u5143\u7d20\uff0c\u5e76\u8fd4\u56de\u65b0\u7684\u957f\u5ea6\u3002 console . log ( cars ) //\u6392\u5e8f console . log ( cars . reverse ()) //\u53cd\u8f6c\u6570\u7ec4\u987a\u5e8f console . log ( cars . sort ()) //\u6570\u7ec4\u6392\u5e8f console . log ( cars . toString ()) //\u6570\u7ec4\u8f6c\u5b57\u7b26\u4e32","title":"6.3 Array"},{"location":"web/%E8%AF%AD%E8%A8%80/JavaScript/#64-boolean","text":"1 2 3 4 //\u65b9\u6cd5 var bool = new Boolean ( 1 ); console . log ( bool . toString ()) console . log ( bool . valueOf ())","title":"6.4 Boolean"},{"location":"web/%E8%AF%AD%E8%A8%80/JavaScript/#65-date","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 //\u65f6\u95f4\u521b\u5efa var today = new Date () var d1 = new Date ( \"October 13, 1975 11:13:00\" ) var d2 = new Date ( 79 , 5 , 24 ) var d3 = new Date ( 79 , 5 , 24 , 11 , 33 , 0 ) console . log ( today ) console . log ( d1 ) console . log ( d2 ) console . log ( d3 ) //\u65b9\u6cd5 y = today . getFullYear () m = today . getMonth () d = today . getDate () H = today . getHours () M = today . getMinutes () S = today . getSeconds () console . log ( y + '\u5e74' + m + '\u6708' + d + '\u65e5' + \" \" + H + \":\" + M + \":\" + S ) console . log ( today . getTime ())","title":"6.5 Date"},{"location":"web/%E8%AF%AD%E8%A8%80/JavaScript/#66-mtch","text":"1 2 3 4 5 console . log ( Math . abs ( - 2 )) console . log ( Math . max ( 1 , 3 , 5 )) console . log ( Math . min ( 1 , 3 , 5 )) console . log ( Math . random ()) //[0.0,1.0)\u968f\u673a\u6570 console . log ( Math . round ( 2.5 )); //\u56db\u820d\u4e94\u5165","title":"6.6 Mtch"},{"location":"web/%E8%AF%AD%E8%A8%80/JavaScript/#67-redexp","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 //\u8bed\u6cd5 // var patt=new RegExp(pattern,modifiers); // \u6216\u8005\u66f4\u7b80\u5355\u7684\u65b9\u5f0f: // var patt=/pattern/modifiers; /* \u4fee\u9970\u7b26 i \u6267\u884c\u5bf9\u5927\u5c0f\u5199\u4e0d\u654f\u611f\u7684\u5339\u914d\u3002 g \u6267\u884c\u5168\u5c40\u5339\u914d\uff08\u67e5\u627e\u6240\u6709\u5339\u914d\u800c\u975e\u5728\u627e\u5230\u7b2c\u4e00\u4e2a\u5339\u914d\u540e\u505c\u6b62\uff09\u3002 m \u6267\u884c\u591a\u884c\u5339\u914d\u3002 */ var str = \"hello world\" console . log ( str . search ( \"o\" )) //\u8fd4\u56de\u7b2c\u4e00\u4e2a\u5339\u914d\u7684\u7d22\u5f15\u503c console . log ( str . search ( \"a\" )) //\u6ca1\u627e\u5230\u8fd4\u56de-1 console . log ( str . match ( /o/g )); console . log ( /hello/g . test ( str ))","title":"6.7 RedExp"},{"location":"web/%E8%AF%AD%E8%A8%80/JavaScript/#7","text":"","title":"7. \u51fd\u6570"},{"location":"web/%E8%AF%AD%E8%A8%80/JavaScript/#71","text":"\u65b9\u6cd5\u4e00 1 2 3 4 function func ( argument ) { return \"hello\" } console . log ( func ()) \u65b9\u6cd5\u4e8c\uff1a\u6784\u9020\u51fd\u6570 var func = new Function(\"\u53c2\u65701\", \"\u53c2\u65702\", \"\u51fd\u6570\u4f53\") 1 2 var func = new Function ( \"a\" , \"b\" , \"return a+b\" ) console . log ( func ( 1 , 2 )) \u65b9\u6cd5\u4e09 \u533f\u540d\u51fd\u6570(\u51fd\u6570\u8868\u8fbe\u5f0f) 1 console . log ( function ( x , y ){ return x + y }( 3 , 5 ))","title":"7.1\u51fd\u6570\u521b\u5efa\u7684\u4e09\u79cd\u65b9\u6cd5"},{"location":"web/%E8%AF%AD%E8%A8%80/JavaScript/#72","text":"this \u5173\u952e\u5b57:\u4e00\u822c\u800c\u8a00\uff0c\u5728Javascript\u4e2d\uff0cthis\u6307\u5411\u51fd\u6570\u6267\u884c\u65f6\u7684\u5f53\u524d\u5bf9\u8c61\u3002 1 2 3 4 5 6 void () // void\u7684\u4f5c\u7528:\u963b\u62e6\u65b9\u6cd5\u7684\u8fd4\u56de\u503c function f () { return 8 } alert ( void ( f ()))","title":"7.2 \u51fd\u6570\u8c03\u7528"},{"location":"web/%E8%AF%AD%E8%A8%80/JavaScript/#73","text":"arguments\u5bf9\u8c61 1 2 3 4 5 6 7 //\u904d\u5386\u4f20\u5165\u7684\u53c2\u6570 function func () { for ( var i = 0 ; i < arguments . length ; i ++ ) { console . log ( arguments [ i ]) } } func ( 1 , 2 , 3 , 4 , 5 )","title":"7.3\u53c2\u6570"},{"location":"web/%E8%AF%AD%E8%A8%80/JavaScript/#dom","text":"","title":"\u4e8c\u3001DOM"},{"location":"web/%E8%AF%AD%E8%A8%80/JavaScript/#1_1","text":"DOM \uff08Document Object Model\uff0c\u6587\u6863\u5bf9\u8c61\u6a21\u578b\uff09:W3C\u5b9a\u4e49\u7684\u8bbf\u95eeHTML\u548cXML\u6587\u6863\u7684\u6807\u51c6 DOM\u7ec4\u6210\uff1a 1. \u6838\u5fc3DOM \uff1a\u9488\u5bf9\u4efb\u4f55\u7ed3\u6784\u5316\u6587\u6863\u7684\u6807\u51c6\u6a21\u578b 2. XML DOM \uff1a\u9488\u5bf9 XML \u6587\u6863\u7684\u6807\u51c6\u6a21\u578b 3. HTML DOM \uff1a\u9488\u5bf9 HTML \u6587\u6863\u7684\u6807\u51c6\u6a21\u578b","title":"1. \u4ecb\u7ecd"},{"location":"web/%E8%AF%AD%E8%A8%80/JavaScript/#2_2","text":"1 2 3 4 5 1. \u6587\u6863\u8282\u70b9 2. \u5143\u7d20\u8282\u70b9 3. \u6587\u672c\u8282\u70b9 4. \u5c5e\u6027\u8282\u70b9 5. \u6ce8\u91ca\u8282\u70b9","title":"2.\u8282\u70b9"},{"location":"web/%E8%AF%AD%E8%A8%80/JavaScript/#3_2","text":"","title":"3. \u5c5e\u6027"},{"location":"web/%E8%AF%AD%E8%A8%80/JavaScript/#31","text":"nodeName nodeValue nodeType 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 <!DOCTYPE html> < html > < head > < title ></ title > </ head > < body > < div id = \"h\" > < p > hello </ p > < p > world </ p > </ div > < script type = \"text/javascript\" > console . log ( document . getElementById ( \"h\" ). nodeName ) console . log ( document . getElementById ( \"h\" ). nodeValue ) console . log ( document . getElementById ( \"h\" ). nodeType ) console . log ( document . getElementById ( \"h\" ). innerHTML ) </ script > </ body > </ html >","title":"3.1\u81ea\u8eab\u5c5e\u6027"},{"location":"web/%E8%AF%AD%E8%A8%80/JavaScript/#32","text":"\u7b2c\u4e00\u7c7b\uff1a\u4e0d\u5efa\u8bae\u4f7f\u7528\uff0c\u5982\u679c\u4e24\u4e2a\u5143\u7d20\u4e4b\u95f4\u6709\u6587\u672c\uff08\u7a7a\u683c\u6216\u6362\u884c\uff09\u4f1a\u628a\u6587\u672c\u4f5c\u4e3a\u4e0b\u4e00\u4e2a\u5143\u7d20 parentNode \u2606 firstChild lastChild nextSibling previousSibling\u3000\u3000\u3000 \u7b2c\u4e8c\u7c7b\uff1a\u5efa\u8bae\u4f7f\u7528 1.getElementById(\"div1\") 2. firstElementChild 3. lastElementChild; 4. nextElementSibling;","title":"3.2\u5bfc\u822a\u5c5e\u6027"},{"location":"web/%E8%AF%AD%E8%A8%80/JavaScript/#4_2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 <!DOCTYPE html> < html > < head > < meta charset = \"utf-8\" > < title > JavaScript </ title > </ head > < body > < div id = \"div1\" > < div class = \"div2\" > hello </ div > < div class = \"div3\" name = \"name\" > world < p > \u4f60\u597d \u4e16\u754c\uff01 </ p > < p class = \"ppp\" > hello html </ p > </ div > < p > hello world </ p > </ div > < script > // \u5168\u5c40\u67e5\u627e // \u901a\u8fc7id\u67e5\u627e var e = document . getElementById ( \"div1\" ) // \u901a\u8fc7class\u67e5\u627e var ele = document . getElementsByClassName ( \"div2\" )[ 0 ] //\u7ed3\u679c\u662f\u4e00\u4e2a\u6570\u7ec4 var ele2 = ele . nextElementSibling ; alert ( ele2 . innerHTML ) //\u901a\u8fc7\u6807\u7b7e\u67e5\u627e var ele3 = document . getElementsByTagName ( \"p\" ); alert ( ele3 [ 0 ]. innerHTML ) //\u901a\u8fc7name\u67e5\u627e ele4 = document . getElementsByName ( \"name\" ) console . log ( ele4 [ 0 ]. innerHTML ) //\u5c40\u90e8\u67e5\u627e //\u901a\u8fc7tag var ele5 = document . getElementsByClassName ( \"div3\" ); var ele6 = ele5 [ 0 ]. getElementsByTagName ( \"p\" ) console . log ( ele6 [ 0 ]. innerHTML ) //\u901a\u8fc7class var ele7 = ele5 [ 0 ]. getElementsByClassName ( \"ppp\" ) console . log ( ele7 [ 0 ]. innerHTML ) //\u4e0d\u53ef\u4ee5\u901a\u8fc7id\u548cname\u8fdb\u884c\u5c40\u90e8\u67e5\u627e </ script > </ body > </ html >","title":"4. \u5168\u5c40\u67e5\u627e\u4e0e\u5c40\u90e8\u67e5\u627e"},{"location":"web/%E8%AF%AD%E8%A8%80/JavaScript/#5-dom","text":"","title":"5. DOM \u4fee\u6539\u3001\u6dfb\u52a0\u3001\u5220\u9664"},{"location":"web/%E8%AF%AD%E8%A8%80/JavaScript/#51html","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 <!DOCTYPE html> < html > < head > < title ></ title > </ head > < body > < p id = \"p1\" ></ p > < script type = \"text/javascript\" > document . getElementById ( \"p1\" ). innerHTML = \"hello world\" //\u521b\u5efa\u5185\u5bb9 document . getElementById ( \"p1\" ). style . color = 'blue' ; //\u66f4\u6539\u6837\u5f0f </ script > </ body > </ html >","title":"5.1\u521b\u5efaHTML\u5185\u5bb9\u5e76\u6539\u53d8\u6837\u5f0f"},{"location":"web/%E8%AF%AD%E8%A8%80/JavaScript/#52-appendchild","text":"1 2 3 4 5 6 7 8 9 10 11 12 < script > //\u521b\u5efa <p> \u5143\u7d20: var para = document . createElement ( \"p\" ); // <p> \u5143\u7d20\u6dfb\u52a0\u6587\u672c\u8282\u70b9 var node = document . createTextNode ( \"\u8fd9\u662f\u4e00\u4e2a\u65b0\u7684\u6bb5\u843d\u3002\" ); //\u5c06\u6587\u672c\u8282\u70b9\u6dfb\u52a0\u5230 <p> \u5143\u7d20\u4e2d\uff1a para . appendChild ( node ); //\u67e5\u627e\u5df2\u5b58\u5728\u7684\u5143\u7d20 var element = document . getElementById ( \"div1\" ); //\u6dfb\u52a0\u5230\u5df2\u5b58\u5728\u7684\u5143\u7d20\u4e2d: element . appendChild ( para ); </ script >","title":"5.2 \u6dfb\u52a0\u65b0\u7684\u5143\u7d20:appendChild()"},{"location":"web/%E8%AF%AD%E8%A8%80/JavaScript/#53-insertbefore","text":"","title":"5.3 \u63d2\u5165\u5230\u5df2\u6709\u5143\u7d20\u4e4b\u524dinsertBefore()"},{"location":"web/%E8%AF%AD%E8%A8%80/JavaScript/#54-removechild","text":"","title":"5.4 \u79fb\u9664\u5143\u7d20:removeChild()"},{"location":"web/%E8%AF%AD%E8%A8%80/JavaScript/#55-replacechild","text":"","title":"5.5 \u66ff\u6362\u5143\u7d20:replaceChild()"},{"location":"web/%E8%AF%AD%E8%A8%80/JavaScript/#6_1","text":"","title":"6.\u4e8b\u4ef6"},{"location":"web/%E8%AF%AD%E8%A8%80/JavaScript/#61","text":"1 2 3 4 5 6 < p onclick = \"alert('\u5355\u51fb')\" > \u5355\u51fb\u9f20\u6807 < /p> < p ondblclick = \"alert('\u53cc\u51fb')\" > \u53cc\u51fb\u9f20\u6807 < /p> < p onmousedown = \"alert('\u9f20\u6807\u6309\u4e0b')\" > \u9f20\u6807\u6309\u4e0b < /p> < p onmouseup = \"alert('\u9f20\u6807\u677e\u5f00')\" > \u9f20\u6807\u677e\u5f00 < /p> < p onmouseover = \"alert('\u653e\u4e0a\u9f20\u6807')\" > \u9f20\u6807\u79fb\u5230\u5143\u7d20\u4e4b\u4e0a \u3002 < /p> < p onmouseout = \"alert('\u79fb\u5f00\u9f20\u6807')\" > \u9f20\u6807\u79fb\u5f00 < /p>","title":"6.1 \u9f20\u6807\u4e8b\u4ef6"},{"location":"web/%E8%AF%AD%E8%A8%80/JavaScript/#62","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 <!DOCTYPE html> < html > < head > < title ></ title > < meta charset = \"utf-8\" > < script type = \"text/javascript\" > window . onload = function () { //\u628ajs\u4ee3\u7801\u5199\u5728\u5934\u90e8\uff0c\u7b49\u9875\u9762\u52a0\u8f7d\u5b8c\u4e4b\u540e\u6267\u884c } </ script > </ head > < body > </ body > </ html >","title":"6.2 \u6846\u67b6/\u5bf9\u8c61\u4e8b\u4ef6"},{"location":"web/%E8%AF%AD%E8%A8%80/JavaScript/#63","text":"onfocus\u4e0eonblur onsubmit onchange","title":"6.3 \u8868\u5355\u4e8b\u4ef6"},{"location":"web/%E8%AF%AD%E8%A8%80/JavaScript/#bombrowser-object-model","text":"","title":"\u4e09\u3001BOM\uff08Browser Object Model\uff0c\u6d4f\u89c8\u5668\u5bf9\u8c61\u6a21\u578b\uff09"},{"location":"web/%E8%AF%AD%E8%A8%80/JavaScript/#1-window","text":"\u8868\u793a\u6d4f\u89c8\u5668\u7a97\u53e3 1 2 3 4 5 6 7 8 9 10 11 12 13 \u5c5e\u6027 \uff1a < script > var w = window . innerWidth || document . documentElement . clientWidth || document . body . clientWidth ; var h = window . innerHeight || document . documentElement . clientHeight || document . body . clientHeight ; x = document . getElementById ( \"demo\" ); x . innerHTML = \"\u6d4f\u89c8\u5668window\u5bbd\u5ea6: \" + w + \", \u9ad8\u5ea6: \" + h + \"\u3002\" < /script> \u65b9\u6cd5 \uff1a window . alert ( \"sometext\" ); window.confirm(\"sometext\"); \u4f8b\uff1a r=window.confirm(\"\u662f\u5426\u53d6\u6d88\uff1f\") \u8ba1\u65f6\u4e8b\u4ef6 setInterval clearInterval setTimeout clearTimeout","title":"1. Window\u5bf9\u8c61"},{"location":"web/%E8%AF%AD%E8%A8%80/JavaScript/#2-screen","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 < script > document . write ( \"\u603b\u5bbd\u5ea6/\u9ad8\u5ea6: \" ); document . write ( screen . width + \"*\" + screen . height ); document . write ( \"<br>\" ); document . write ( \"\u53ef\u7528\u5bbd\u5ea6/\u9ad8\u5ea6: \" ); document . write ( screen . availWidth + \"*\" + screen . availHeight ); document . write ( \"<br>\" ); document . write ( \"\u8272\u5f69\u6df1\u5ea6: \" ); document . write ( screen . colorDepth ); document . write ( \"<br>\" ); document . write ( \"\u8272\u5f69\u5206\u8fa8\u7387: \" ); document . write ( screen . pixelDepth ); < /script>","title":"2. Screen\u5bf9\u8c61"},{"location":"web/%E8%AF%AD%E8%A8%80/JavaScript/#3-location","text":"1 2 3 4 5 6 7 8 location . hostname \u8fd4\u56de web \u4e3b\u673a\u7684\u57df\u540d location . pathname \u8fd4\u56de\u5f53\u524d\u9875\u9762\u7684\u8def\u5f84\u548c\u6587\u4ef6\u540d location . port \u8fd4\u56de web \u4e3b\u673a\u7684\u7aef\u53e3 \uff08 80 \u6216 443 \uff09 location . protocol \u8fd4\u56de\u6240\u4f7f\u7528\u7684 web \u534f\u8bae \uff08 http : // \u6216 https://\uff09 location . href \u5c5e\u6027\u8fd4\u56de\u5f53\u524d\u9875\u9762\u7684 URL \u3002 location . pathname \u5c5e\u6027\u8fd4\u56de URL \u7684\u8def\u5f84\u540d \u3002 location . assign () \u65b9\u6cd5\u52a0\u8f7d\u65b0\u7684\u6587\u6863 \u3002 location . reload () \u5237\u65b0","title":"3. Location\u5bf9\u8c61"},{"location":"web/%E8%AF%AD%E8%A8%80/JavaScript/#4-history","text":"1 2 3 4 history . length \u8fd4\u56de\u5386\u53f2\u5217\u8868\u4e2d\u7684\u7f51\u5740\u6570 history . back () \u52a0\u8f7d history \u5217\u8868\u4e2d\u7684\u524d\u4e00\u4e2a URL history . forward () \u52a0\u8f7d history \u5217\u8868\u4e2d\u7684\u4e0b\u4e00\u4e2a URL history . go ( Number | URL ) \u52a0\u8f7d history \u5217\u8868\u4e2d\u7684\u67d0\u4e2a\u5177\u4f53\u9875\u9762","title":"4. History\u5bf9\u8c61"},{"location":"web/%E8%AF%AD%E8%A8%80/html/","text":"\u4e00\u3001HTML \u00b6 \u4e00\u3001\u57fa\u672c\u6982\u5ff5 \u00b6 HTML\uff1a\u8d85\u6587\u672c\u6807\u8bb0\u8bed\u8a00\uff08HyperText Markup Language\uff09\u662f\u4e00\u79cd\u7528\u4e8e\u521b\u5efa\u7f51\u9875\u7684\u6807\u51c6\u6807\u8bb0\u8bed\u8a00\u3002 HTML\u6587\u6863\u7684\u540e\u7f00\u540d\uff1a.html \u6216 .htm \u6807\u7b7e\uff1a\u7531\u5c16\u62ec\u53f7\u5305\u56f4\u7684\u5173\u952e\u8bcd\uff0c\u6bd4\u5982 <html> \u5143\u7d20\uff1a\u4ece\u5f00\u59cb\u6807\u7b7e\uff08start tag\uff09\u5230\u7ed3\u675f\u6807\u7b7e\uff08end tag\uff09\u7684\u6240\u6709\u4ee3\u7801\u3002\u6bd4\u5982\uff1a <p>hello world</p> \u7a7a\u5143\u7d20\uff1a\u5728\u5f00\u59cb\u6807\u7b7e\u4e2d\u8fdb\u884c\u5173\u95ed\u3002\u4f8b\u5982\uff1a\u6362\u884c <br/> \u57fa\u672c\u683c\u5f0f\uff1a 1 2 3 4 5 6 7 8 9 <!DOCTYPE html> <!--\u58f0\u660eHTML5\u6587\u6863--> < html > <!--\u6839\u5143\u7d20--> < head > <!-- \u5143\u6570\u636e --> </ head > < body > <!-- \u9875\u9762\u5185\u5bb9 --> </ body > </ html > 7.\u6ce8\u91ca\u683c\u5f0f\uff1a 1 <!-- \u6ce8\u91ca\u5185\u5bb9 --> \u4e8c\u3001HTML\u5c5e\u6027 \u00b6 \u5c5e\u6027\u53ef\u4ee5\u5728\u5143\u7d20\u4e2d\u6dfb\u52a0\u9644\u52a0\u4fe1\u606f\uff0c\u4e00\u822c\u4f4d\u4e8e\u5f00\u59cb\u6807\u7b7e\uff0c\u4ee5\u952e\u503c\u5bf9\u7684\u5f62\u5f0f\u5b58\u5728\u3002 \u4f8b\u5982\uff1a <a href=\"http://www.baidu.com\">\u767e\u5ea6\u4e00\u4e0b</a> \u5e38\u7528\u5c5e\u6027\uff1a class \u4e3ahtml\u5143\u7d20\u5b9a\u4e49\u4e00\u4e2a\u6216\u591a\u4e2a\u7c7b\u540d\uff08classname\uff09(\u7c7b\u540d\u4ece\u6837\u5f0f\u6587\u4ef6\u5f15\u5165) id \u5b9a\u4e49\u5143\u7d20\u7684\u552f\u4e00id style \u89c4\u5b9a\u5143\u7d20\u7684\u884c\u5185\u6837\u5f0f\uff08inline style\uff09 title \u63cf\u8ff0\u4e86\u5143\u7d20\u7684\u989d\u5916\u4fe1\u606f (\u4f5c\u4e3a\u5de5\u5177\u6761\u4f7f\u7528) \u4e09\u3001 <head> \u6807\u7b7e \u00b6 1. <title> \u00b6 1 < title > \u6211\u662f\u6807\u9898 </ title > <title> \u6807\u7b7e\u7684\u4f5c\u7528\uff1a 1.\u663e\u793a\u5728\u6d4f\u89c8\u5668\u5de5\u5177\u680f\u4e0a 2.\u7f51\u9875\u88ab\u6536\u85cf\u65f6\u9ed8\u8ba4\u7684\u540d\u5b57 2. <base> \u6307\u5b9a\u4e86HTML\u6587\u6863\u4e2d\u6240\u6709\u7684\u94fe\u63a5\u6807\u7b7e\u7684\u9ed8\u8ba4\u94fe\u63a5: \u00b6 3. <link> \u94fe\u63a5\u5230\u6837\u5f0f\u8868 \u00b6 \u4f8b\uff1a\u4ece\u5916\u90e8\u6587\u4ef6\u5f15\u5165css\u6837\u5f0f 1 < link rel = \"stylesheet\" type = \"text/css\" href = \"css.css\" > 4. <style> \u6dfb\u52a0css\u6837\u5f0f \u00b6 5. <meta> \u5143\u6570\u636e 5.1 \u4e3a\u641c\u7d22\u5f15\u64ce\u6dfb\u52a0\u5173\u952e\u8bcd\uff0c\u901a\u8fc7\u6d4f\u89c8\u5668\u641c\u7d22\u8fd9\u4e9b\u5173\u952e\u8bcd\u5c31\u80fd\u627e\u5230\u8fd9\u4e2aHTML\u6587\u6863 \u4f8b\uff1a 1 < meta name = \"keywords\" content = \"HTML, CSS, XML, XHTML, JavaScript\" > 5.2 \u63cf\u8ff0\u7f51\u9875\u7684\u5185\u5bb9 \u4f8b\uff1a 1 < meta name = \"keywords\" content = \"HTML, CSS, XML, XHTML, JavaScript\" > 5.3 \u5b9a\u4e49\u7f51\u9875\u7684\u4f5c\u8005 \u4f8b\uff1a 1 < meta name = \"author\" content = \"Name\" > 5.4 \u7f16\u7801\u683c\u5f0f \u4f8b\uff1a 1 < meta charset = \"utf-8\" > 6. <script> \u5b9a\u4e49JavaScript\u811a\u672c \u56db\u3001 <body> \u6807\u7b7e \u00b6 1. <h> \u6807\u7b7e\uff1a\u6807\u9898 6\u4e2a\u7ea7\u522b\uff1a <h1> - <h6> 1 2 3 4 5 6 7 8 9 10 11 12 13 14 <!DOCTYPE html> < html > < head > < title > </ title > </ head > < body > < h1 > \u6807\u98981 </ h1 > < h2 > \u6807\u98982 </ h2 > < h3 > \u6807\u98983 </ h3 > < h4 > \u6807\u98984 </ h4 > < h5 > \u6807\u98985 </ h5 > < h6 > \u6807\u98986 </ h6 > </ body > </ html > 2. <hr> \u6807\u7b7e:\u6c34\u5e73\u7ebf 3. <br> \u6807\u7b7e:\u6362\u884c 4. <p> \u6807\u7b7e\uff1a\u6bb5\u843d 5.\u6587\u672c\u683c\u5f0f\u5316 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 < b > \u52a0\u7c97\u6587\u672c </ b >< br > < strong > \u52a0\u7c97\u6587\u672c </ strong >< br > < big > \u6587\u672c\u653e\u5927 </ big >< br > < small > \u6587\u672c\u7f29\u5c0f </ small >< br > < i > \u659c\u4f53\u6587\u672c </ i >< br > < em > \u659c\u4f53\u6587\u672c </ em >< br > < sub > \u4e0b </ sub > \u6807 < br > \u6807 < sup > \u4e0a </ sup >< br > < pre > \u7a7a \u683c </ pre > < del > \u5220\u9664\u6548\u679c </ del > <!-- \u8ba1\u7b97\u673a/\u7f16\u7a0b\u4ee3\u7801\u6837\u5f0f --> < code > \u8ba1\u7b97\u673a\u8f93\u51fa </ code >< br > < kbd > \u952e\u76d8\u8f93\u5165 </ kbd >< br > < tt > \u6253\u5b57\u673a\u6587\u672c </ tt >< br > < samp > \u8ba1\u7b97\u673a\u4ee3\u7801\u6837\u672c </ samp >< br > < var > \u8ba1\u7b97\u673a\u53d8\u91cf </ var >< br > < address > \u5730\u5740\uff1a\u77f3\u5bb6\u5e84 \u6cb3\u5317 \u4e2d\u56fd </ address > < p >< bdo dir = \"rtl\" > \u5012\u53d9\u663e\u793a </ bdo ></ p > 6. <a> \u6807\u7b7e\uff1a\u94fe\u63a5 1 < a href = \"http://www.baidu.com\" > \u767e\u5ea6\u4e00\u4e0b </ a > \u5c5e\u6027\uff1a\u5728\u65b0\u7a97\u53e3\u6253\u5f00 1 < a href = \"http://www.baidu.com/\" target = \"_blank\" > \u767e\u5ea6\u4e00\u4e0b </ a > <a> \u6807\u7b7e\u7684\u4f5c\u7528\uff1a \u94fe\u63a5\uff1a \u767e\u5ea6\u4e00\u4e0b \u951a\uff1a \u8f6c\u5230id\u4e3atips\u7684\u90e8\u5206 7. <img> \u6807\u7b7e\uff1a\u56fe\u50cf 1 < img src = \"mayun.jpg\" title = \"\u9a6c\u4e91\" alt = \"Ma Yun\" height = \"140\" width = \"121\" > title\u5c5e\u6027\uff1a\u5f53\u9f20\u6807\u653e\u5728\u56fe\u7247\u4e0a\u7684\u65f6\u5019\u663e\u793a\u7684\u5185\u5bb9 alt \u5c5e\u6027\uff1a\u5f53\u56fe\u7247\u52a0\u8f7d\u5931\u8d25\u7684\u65f6\u5019\u663e\u793a\u7684\u5c5e\u6027 height width\u5c5e\u6027\uff1a\u8bbe\u7f6e\u56fe\u7247\u7684\u9ad8\u548c\u5bbd 8. <table> \u6807\u7b7e\uff1a\u8868\u683c 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 < table border = \"1\" > < caption > \u8868\u683c\u6807\u9898 </ caption > < tr > < th > \u59d3\u540d </ th > < th > \u6027\u522b </ th > </ tr > < tr > < td > \u66f9\u64cd </ td > < td > \u7537 </ td > </ tr > < tr > < td > \u8c82\u8749 </ td > < td > \u5973 </ td > </ tr > </ table > \u5e38\u7528\u6807\u7b7e: <table> \u5b9a\u4e49\u8868\u683c <caption> \u5b9a\u4e49\u8868\u683c\u6807\u9898 <th> \u5b9a\u4e49\u8868\u5934(\u6587\u672c\u52a0\u7c97) <tr> \u5b9a\u4e49\u884c <td> \u5b9a\u4e49\u5185\u5bb9 \u5e38\u7528\u5c5e\u6027\uff1a border=\"1\" \u5b9a\u4e49\u8868\u683c\u8fb9\u6846 colspan=\"2\" \u8de82\u884c rowspan=\"2\" \u8de82\u5217 9 <ul> <ol> \u6807\u7b7e\uff1a\u5217\u8868 \u00b6 9.1 <ul> \u65e0\u5e8f\u5217\u8868\uff1a\u7528\u70b9\u6807\u8bb0\u987a\u5e8f 1 2 3 4 < ul > \u3000\u3000 < li > \u5496\u5561 </ li > \u3000\u3000 < li > \u725b\u5976 </ li > \u3000\u3000 </ ul > 9.2 <ol> \u6709\u5e8f\u5217\u8868\uff1a\u7528\u963f\u62c9\u4f2f\u6570\u5b57\u6807\u8bb0\u987a\u5e8f 1 2 3 4 < ol > < li > \u7eff\u8336 </ li > < li > \u7ea2\u8336 </ li > </ ol > <ol> \u5c5e\u6027\uff1atype=\"A\"|\"a\"|\"I\"|\"i\" 9.3 <dl> \u81ea\u5b9a\u4e49\u5217\u8868 1 2 3 4 < dl > < dt > \u4e00\u7ea7\u5185\u5bb9 </ dt > < dd > \u4e8c\u7ea7\u5185\u5bb9 </ dd > </ dl > 10. <div> \u6807\u7b7e <div> \u5143\u7d20\u6ca1\u6709\u7279\u5b9a\u7684\u542b\u4e49\uff0c\u5e38\u7528\u4e8e\u6587\u6863\u5e03\u5c40\u3002 11. <span> \u6807\u7b7e \u6ca1\u6709\u7279\u5b9a\u7684\u542b\u4e49\uff0c\u7528\u4e8e\u4e3a\u90e8\u5206\u6587\u672c\u8bbe\u7f6e\u6837\u5f0f\u5c5e\u6027 12. <form> \u6807\u7b7e:\u8868\u5355 12.1 <input> 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 \u3000\u3000\u3000\u3000 < form > \u3000\u3000\u3000\u3000\u3000 <!-- \u6587\u672c --> <!-- value \u5c5e\u6027\u503c\u4e3a\u6587\u672c\u6846\u4e2d\u7684\u9ed8\u8ba4\u503c --> username: < input type = \"text\" name = \"username\" value = \"\u8bf7\u8f93\u5165\u7528\u6237\u540d\" >< br > <!-- \u5bc6\u7801 --> password: < input type = \"password\" name = \"password\" >< br > <!-- \u5355\u9009 --> < input type = \"radio\" name = \"sex\" value = \"male\" > \u7537 < br > < input type = \"radio\" name = \"sex\" value = \"femail\" > \u5973 < br > <!-- \u590d\u9009 --> < input type = \"checkbox\" name = \"language\" value = \"Bike\" > Java < br > < input type = \"checkbox\" name = \"language\" value = \"Car\" > Python < br > < input type = \"checkbox\" name = \"language\" value = \"Car\" > JavaScript < br > <!-- \u63d0\u4ea4 --> < input type = \"submit\" value = \"\u63d0\u4ea4\" > <!-- \u91cd\u7f6e --> < input type = \"reset\" value = \"\u91cd\u7f6e\" > </ form > 12.2 <select> 1 2 3 4 5 6 < select name = \"city\" > < option value = \"beijing\" > \u5317\u4eac </ option > < option value = \"shanghai\" > \u4e0a\u6d77 </ option > < option value = \"shenzhen\" > \u6df1\u5733 </ option > < option value = \"xian\" selected > \u897f\u5b89 </ option > \u3000\u3000 </ select > 13 <textarea> \u591a\u884c\u6587\u672c 1 2 3 < textarea rows = \"10\" cols = \"10\" > \u3000\u3000\u9ed8\u8ba4\u6587\u672c\u5185\u5bb9 \u3000\u3000 </ textarea > 14 <iframe> \u6807\u7b7e:\u6846\u67b6 \u53ef\u4ee5\u5728\u540c\u4e00\u4e2a\u6d4f\u89c8\u5668\u7a97\u53e3\u63d2\u5165\u5176\u4ed6HTML\u9875\u9762 1 < iframe src = \"http://www.baidu.com\" width = \"900\" height = \"300\" frameborder = \"0\" ></ iframe > \u56db\u3001\u5757\u7ea7\u6807\u7b7e\u4e0e\u5185\u8054\u6807\u7b7e 1.\u5757\u7ea7\u6807\u7b7e\uff1a\u81ea\u52a8\u5730\u5728\u5143\u7d20\u7684\u524d\u540e\u6dfb\u52a0\u7a7a\u884c 1 \u3000\u3000 < div ></ div > < p ></ p > < h1 ></ h1 > < ul ></ ul > < ol ></ ol > < dl ></ dl > 2.\u5185\u8054\u6807\u7b7e\uff1a 1 \u3000\u3000 < a ></ a > < img > < input > < span ></ span > < select ></ select > < textarea ></ textarea >","title":"HTML"},{"location":"web/%E8%AF%AD%E8%A8%80/html/#html","text":"","title":"\u4e00\u3001HTML"},{"location":"web/%E8%AF%AD%E8%A8%80/html/#_1","text":"HTML\uff1a\u8d85\u6587\u672c\u6807\u8bb0\u8bed\u8a00\uff08HyperText Markup Language\uff09\u662f\u4e00\u79cd\u7528\u4e8e\u521b\u5efa\u7f51\u9875\u7684\u6807\u51c6\u6807\u8bb0\u8bed\u8a00\u3002 HTML\u6587\u6863\u7684\u540e\u7f00\u540d\uff1a.html \u6216 .htm \u6807\u7b7e\uff1a\u7531\u5c16\u62ec\u53f7\u5305\u56f4\u7684\u5173\u952e\u8bcd\uff0c\u6bd4\u5982 <html> \u5143\u7d20\uff1a\u4ece\u5f00\u59cb\u6807\u7b7e\uff08start tag\uff09\u5230\u7ed3\u675f\u6807\u7b7e\uff08end tag\uff09\u7684\u6240\u6709\u4ee3\u7801\u3002\u6bd4\u5982\uff1a <p>hello world</p> \u7a7a\u5143\u7d20\uff1a\u5728\u5f00\u59cb\u6807\u7b7e\u4e2d\u8fdb\u884c\u5173\u95ed\u3002\u4f8b\u5982\uff1a\u6362\u884c <br/> \u57fa\u672c\u683c\u5f0f\uff1a 1 2 3 4 5 6 7 8 9 <!DOCTYPE html> <!--\u58f0\u660eHTML5\u6587\u6863--> < html > <!--\u6839\u5143\u7d20--> < head > <!-- \u5143\u6570\u636e --> </ head > < body > <!-- \u9875\u9762\u5185\u5bb9 --> </ body > </ html > 7.\u6ce8\u91ca\u683c\u5f0f\uff1a 1 <!-- \u6ce8\u91ca\u5185\u5bb9 -->","title":"\u4e00\u3001\u57fa\u672c\u6982\u5ff5"},{"location":"web/%E8%AF%AD%E8%A8%80/html/#html_1","text":"\u5c5e\u6027\u53ef\u4ee5\u5728\u5143\u7d20\u4e2d\u6dfb\u52a0\u9644\u52a0\u4fe1\u606f\uff0c\u4e00\u822c\u4f4d\u4e8e\u5f00\u59cb\u6807\u7b7e\uff0c\u4ee5\u952e\u503c\u5bf9\u7684\u5f62\u5f0f\u5b58\u5728\u3002 \u4f8b\u5982\uff1a <a href=\"http://www.baidu.com\">\u767e\u5ea6\u4e00\u4e0b</a> \u5e38\u7528\u5c5e\u6027\uff1a class \u4e3ahtml\u5143\u7d20\u5b9a\u4e49\u4e00\u4e2a\u6216\u591a\u4e2a\u7c7b\u540d\uff08classname\uff09(\u7c7b\u540d\u4ece\u6837\u5f0f\u6587\u4ef6\u5f15\u5165) id \u5b9a\u4e49\u5143\u7d20\u7684\u552f\u4e00id style \u89c4\u5b9a\u5143\u7d20\u7684\u884c\u5185\u6837\u5f0f\uff08inline style\uff09 title \u63cf\u8ff0\u4e86\u5143\u7d20\u7684\u989d\u5916\u4fe1\u606f (\u4f5c\u4e3a\u5de5\u5177\u6761\u4f7f\u7528)","title":"\u4e8c\u3001HTML\u5c5e\u6027"},{"location":"web/%E8%AF%AD%E8%A8%80/html/#ltheadgt","text":"","title":"\u4e09\u3001&amp;lt;head&amp;gt;\u6807\u7b7e"},{"location":"web/%E8%AF%AD%E8%A8%80/html/#1lttitlegt","text":"1 < title > \u6211\u662f\u6807\u9898 </ title > <title> \u6807\u7b7e\u7684\u4f5c\u7528\uff1a 1.\u663e\u793a\u5728\u6d4f\u89c8\u5668\u5de5\u5177\u680f\u4e0a 2.\u7f51\u9875\u88ab\u6536\u85cf\u65f6\u9ed8\u8ba4\u7684\u540d\u5b57","title":"1.&amp;lt;title&amp;gt;"},{"location":"web/%E8%AF%AD%E8%A8%80/html/#2ltbasegt-html","text":"","title":"2.&amp;lt;base&amp;gt; \u6307\u5b9a\u4e86HTML\u6587\u6863\u4e2d\u6240\u6709\u7684\u94fe\u63a5\u6807\u7b7e\u7684\u9ed8\u8ba4\u94fe\u63a5:"},{"location":"web/%E8%AF%AD%E8%A8%80/html/#3ltlinkgt","text":"\u4f8b\uff1a\u4ece\u5916\u90e8\u6587\u4ef6\u5f15\u5165css\u6837\u5f0f 1 < link rel = \"stylesheet\" type = \"text/css\" href = \"css.css\" >","title":"3.&amp;lt;link&amp;gt; \u94fe\u63a5\u5230\u6837\u5f0f\u8868"},{"location":"web/%E8%AF%AD%E8%A8%80/html/#4ltstylegt-css","text":"5. <meta> \u5143\u6570\u636e 5.1 \u4e3a\u641c\u7d22\u5f15\u64ce\u6dfb\u52a0\u5173\u952e\u8bcd\uff0c\u901a\u8fc7\u6d4f\u89c8\u5668\u641c\u7d22\u8fd9\u4e9b\u5173\u952e\u8bcd\u5c31\u80fd\u627e\u5230\u8fd9\u4e2aHTML\u6587\u6863 \u4f8b\uff1a 1 < meta name = \"keywords\" content = \"HTML, CSS, XML, XHTML, JavaScript\" > 5.2 \u63cf\u8ff0\u7f51\u9875\u7684\u5185\u5bb9 \u4f8b\uff1a 1 < meta name = \"keywords\" content = \"HTML, CSS, XML, XHTML, JavaScript\" > 5.3 \u5b9a\u4e49\u7f51\u9875\u7684\u4f5c\u8005 \u4f8b\uff1a 1 < meta name = \"author\" content = \"Name\" > 5.4 \u7f16\u7801\u683c\u5f0f \u4f8b\uff1a 1 < meta charset = \"utf-8\" > 6. <script> \u5b9a\u4e49JavaScript\u811a\u672c","title":"4.&amp;lt;style&amp;gt; \u6dfb\u52a0css\u6837\u5f0f"},{"location":"web/%E8%AF%AD%E8%A8%80/html/#ltbodygt","text":"1. <h> \u6807\u7b7e\uff1a\u6807\u9898 6\u4e2a\u7ea7\u522b\uff1a <h1> - <h6> 1 2 3 4 5 6 7 8 9 10 11 12 13 14 <!DOCTYPE html> < html > < head > < title > </ title > </ head > < body > < h1 > \u6807\u98981 </ h1 > < h2 > \u6807\u98982 </ h2 > < h3 > \u6807\u98983 </ h3 > < h4 > \u6807\u98984 </ h4 > < h5 > \u6807\u98985 </ h5 > < h6 > \u6807\u98986 </ h6 > </ body > </ html > 2. <hr> \u6807\u7b7e:\u6c34\u5e73\u7ebf 3. <br> \u6807\u7b7e:\u6362\u884c 4. <p> \u6807\u7b7e\uff1a\u6bb5\u843d 5.\u6587\u672c\u683c\u5f0f\u5316 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 < b > \u52a0\u7c97\u6587\u672c </ b >< br > < strong > \u52a0\u7c97\u6587\u672c </ strong >< br > < big > \u6587\u672c\u653e\u5927 </ big >< br > < small > \u6587\u672c\u7f29\u5c0f </ small >< br > < i > \u659c\u4f53\u6587\u672c </ i >< br > < em > \u659c\u4f53\u6587\u672c </ em >< br > < sub > \u4e0b </ sub > \u6807 < br > \u6807 < sup > \u4e0a </ sup >< br > < pre > \u7a7a \u683c </ pre > < del > \u5220\u9664\u6548\u679c </ del > <!-- \u8ba1\u7b97\u673a/\u7f16\u7a0b\u4ee3\u7801\u6837\u5f0f --> < code > \u8ba1\u7b97\u673a\u8f93\u51fa </ code >< br > < kbd > \u952e\u76d8\u8f93\u5165 </ kbd >< br > < tt > \u6253\u5b57\u673a\u6587\u672c </ tt >< br > < samp > \u8ba1\u7b97\u673a\u4ee3\u7801\u6837\u672c </ samp >< br > < var > \u8ba1\u7b97\u673a\u53d8\u91cf </ var >< br > < address > \u5730\u5740\uff1a\u77f3\u5bb6\u5e84 \u6cb3\u5317 \u4e2d\u56fd </ address > < p >< bdo dir = \"rtl\" > \u5012\u53d9\u663e\u793a </ bdo ></ p > 6. <a> \u6807\u7b7e\uff1a\u94fe\u63a5 1 < a href = \"http://www.baidu.com\" > \u767e\u5ea6\u4e00\u4e0b </ a > \u5c5e\u6027\uff1a\u5728\u65b0\u7a97\u53e3\u6253\u5f00 1 < a href = \"http://www.baidu.com/\" target = \"_blank\" > \u767e\u5ea6\u4e00\u4e0b </ a > <a> \u6807\u7b7e\u7684\u4f5c\u7528\uff1a \u94fe\u63a5\uff1a \u767e\u5ea6\u4e00\u4e0b \u951a\uff1a \u8f6c\u5230id\u4e3atips\u7684\u90e8\u5206 7. <img> \u6807\u7b7e\uff1a\u56fe\u50cf 1 < img src = \"mayun.jpg\" title = \"\u9a6c\u4e91\" alt = \"Ma Yun\" height = \"140\" width = \"121\" > title\u5c5e\u6027\uff1a\u5f53\u9f20\u6807\u653e\u5728\u56fe\u7247\u4e0a\u7684\u65f6\u5019\u663e\u793a\u7684\u5185\u5bb9 alt \u5c5e\u6027\uff1a\u5f53\u56fe\u7247\u52a0\u8f7d\u5931\u8d25\u7684\u65f6\u5019\u663e\u793a\u7684\u5c5e\u6027 height width\u5c5e\u6027\uff1a\u8bbe\u7f6e\u56fe\u7247\u7684\u9ad8\u548c\u5bbd 8. <table> \u6807\u7b7e\uff1a\u8868\u683c 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 < table border = \"1\" > < caption > \u8868\u683c\u6807\u9898 </ caption > < tr > < th > \u59d3\u540d </ th > < th > \u6027\u522b </ th > </ tr > < tr > < td > \u66f9\u64cd </ td > < td > \u7537 </ td > </ tr > < tr > < td > \u8c82\u8749 </ td > < td > \u5973 </ td > </ tr > </ table > \u5e38\u7528\u6807\u7b7e: <table> \u5b9a\u4e49\u8868\u683c <caption> \u5b9a\u4e49\u8868\u683c\u6807\u9898 <th> \u5b9a\u4e49\u8868\u5934(\u6587\u672c\u52a0\u7c97) <tr> \u5b9a\u4e49\u884c <td> \u5b9a\u4e49\u5185\u5bb9 \u5e38\u7528\u5c5e\u6027\uff1a border=\"1\" \u5b9a\u4e49\u8868\u683c\u8fb9\u6846 colspan=\"2\" \u8de82\u884c rowspan=\"2\" \u8de82\u5217","title":"\u56db\u3001&amp;lt;body&amp;gt;\u6807\u7b7e"},{"location":"web/%E8%AF%AD%E8%A8%80/html/#9-ltulgt-ltolgt","text":"9.1 <ul> \u65e0\u5e8f\u5217\u8868\uff1a\u7528\u70b9\u6807\u8bb0\u987a\u5e8f 1 2 3 4 < ul > \u3000\u3000 < li > \u5496\u5561 </ li > \u3000\u3000 < li > \u725b\u5976 </ li > \u3000\u3000 </ ul > 9.2 <ol> \u6709\u5e8f\u5217\u8868\uff1a\u7528\u963f\u62c9\u4f2f\u6570\u5b57\u6807\u8bb0\u987a\u5e8f 1 2 3 4 < ol > < li > \u7eff\u8336 </ li > < li > \u7ea2\u8336 </ li > </ ol > <ol> \u5c5e\u6027\uff1atype=\"A\"|\"a\"|\"I\"|\"i\" 9.3 <dl> \u81ea\u5b9a\u4e49\u5217\u8868 1 2 3 4 < dl > < dt > \u4e00\u7ea7\u5185\u5bb9 </ dt > < dd > \u4e8c\u7ea7\u5185\u5bb9 </ dd > </ dl > 10. <div> \u6807\u7b7e <div> \u5143\u7d20\u6ca1\u6709\u7279\u5b9a\u7684\u542b\u4e49\uff0c\u5e38\u7528\u4e8e\u6587\u6863\u5e03\u5c40\u3002 11. <span> \u6807\u7b7e \u6ca1\u6709\u7279\u5b9a\u7684\u542b\u4e49\uff0c\u7528\u4e8e\u4e3a\u90e8\u5206\u6587\u672c\u8bbe\u7f6e\u6837\u5f0f\u5c5e\u6027 12. <form> \u6807\u7b7e:\u8868\u5355 12.1 <input> 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 \u3000\u3000\u3000\u3000 < form > \u3000\u3000\u3000\u3000\u3000 <!-- \u6587\u672c --> <!-- value \u5c5e\u6027\u503c\u4e3a\u6587\u672c\u6846\u4e2d\u7684\u9ed8\u8ba4\u503c --> username: < input type = \"text\" name = \"username\" value = \"\u8bf7\u8f93\u5165\u7528\u6237\u540d\" >< br > <!-- \u5bc6\u7801 --> password: < input type = \"password\" name = \"password\" >< br > <!-- \u5355\u9009 --> < input type = \"radio\" name = \"sex\" value = \"male\" > \u7537 < br > < input type = \"radio\" name = \"sex\" value = \"femail\" > \u5973 < br > <!-- \u590d\u9009 --> < input type = \"checkbox\" name = \"language\" value = \"Bike\" > Java < br > < input type = \"checkbox\" name = \"language\" value = \"Car\" > Python < br > < input type = \"checkbox\" name = \"language\" value = \"Car\" > JavaScript < br > <!-- \u63d0\u4ea4 --> < input type = \"submit\" value = \"\u63d0\u4ea4\" > <!-- \u91cd\u7f6e --> < input type = \"reset\" value = \"\u91cd\u7f6e\" > </ form > 12.2 <select> 1 2 3 4 5 6 < select name = \"city\" > < option value = \"beijing\" > \u5317\u4eac </ option > < option value = \"shanghai\" > \u4e0a\u6d77 </ option > < option value = \"shenzhen\" > \u6df1\u5733 </ option > < option value = \"xian\" selected > \u897f\u5b89 </ option > \u3000\u3000 </ select > 13 <textarea> \u591a\u884c\u6587\u672c 1 2 3 < textarea rows = \"10\" cols = \"10\" > \u3000\u3000\u9ed8\u8ba4\u6587\u672c\u5185\u5bb9 \u3000\u3000 </ textarea > 14 <iframe> \u6807\u7b7e:\u6846\u67b6 \u53ef\u4ee5\u5728\u540c\u4e00\u4e2a\u6d4f\u89c8\u5668\u7a97\u53e3\u63d2\u5165\u5176\u4ed6HTML\u9875\u9762 1 < iframe src = \"http://www.baidu.com\" width = \"900\" height = \"300\" frameborder = \"0\" ></ iframe > \u56db\u3001\u5757\u7ea7\u6807\u7b7e\u4e0e\u5185\u8054\u6807\u7b7e 1.\u5757\u7ea7\u6807\u7b7e\uff1a\u81ea\u52a8\u5730\u5728\u5143\u7d20\u7684\u524d\u540e\u6dfb\u52a0\u7a7a\u884c 1 \u3000\u3000 < div ></ div > < p ></ p > < h1 ></ h1 > < ul ></ ul > < ol ></ ol > < dl ></ dl > 2.\u5185\u8054\u6807\u7b7e\uff1a 1 \u3000\u3000 < a ></ a > < img > < input > < span ></ span > < select ></ select > < textarea ></ textarea >","title":"9 &amp;lt;ul&amp;gt; &amp;lt;ol&amp;gt; \u6807\u7b7e\uff1a\u5217\u8868"},{"location":"web/%E8%BD%AF%E4%BB%B6/Nginx/","text":"Nginx\u8d1f\u8f7d\u5747\u8861 \u00b6 Nginx\u652f\u6301\u4e03\u5c42\u8d1f\u8f7d\uff08HTTP\uff09\u548c\u56db\u5c42\u8d1f\u8f7d\uff08TCP and UDP\uff09\uff0c\u8fd9\u91cc\u4e3b\u8981\u4ecb\u7ecdHTTP\u8d1f\u8f7d \u5b9e\u73b0\u65b9\u6cd5\uff1a\u5229\u7528Nginx\u53cd\u5411\u4ee3\u7406\u7684\u529f\u80fd\u5b9e\u73b0\u540e\u7aef\u670d\u52a1\u7684\u8d1f\u8f7d\u5747\u8861 \u6307\u4ee4\uff1aproxy_pass\u3001upstream \u4e00\u3001\u8d1f\u8f7d\u5747\u8861\u7b56\u7565 \u00b6 Nginx\u8d1f\u8f7d\u5747\u8861\u6a21\u5f0f\u67096\u79cd\uff08\u5f00\u6e90\u72484\u79cd+Plus\u72482\u79cd\uff09 \u8f6e\u8be2(Round Robin) \u9ed8\u8ba4\u65b9\u5f0f\uff0c\u8bf7\u6c42\u5728\u540e\u7aef\u670d\u52a1\u5668\u4f9d\u6b21\u8f6e\u8be2\uff0c\u901a\u8fc7weights\u53c2\u6570\u6539\u53d8\u8f6e\u8be2\u7684\u6743\u91cd\u3002 1 2 3 4 upstream backend { server backend1.example.com ; server backend2.example.com ; } \u6700\u5c11\u8fde\u63a5\u6570(Least Connections) \u5ba2\u6237\u7aef\u8bf7\u6c42\u53d1\u7ed9\u8fde\u63a5\u6570\u6700\u5c11\u7684\u670d\u52a1\u5668\uff0c\u540c\u65f6\u53ef\u4ee5\u901a\u8fc7weight\u6307\u5b9a\u6743\u91cd 1 2 3 4 5 upstream backend { least_conn ; server backend1.example.com ; server backend2.example.com ; } IP\u54c8\u5e0c(IP Hash) \u6839\u636e\u5ba2\u6237\u7aef\u7684IP\u5730\u5740\u89c9\u5f97\u53d1\u7ed9\u540e\u7aef\u7684\u54ea\u4e2a\u670d\u52a1\u5668\uff0c\u540c\u4e00IP\u5730\u5740\u7684\u8bf7\u6c42\u90fd\u53d1\u7ed9\u540e\u7aef\u7684\u540c\u4e00\u670d\u52a1\u5668\uff0c\u9664\u975e\u540e\u7aef\u670d\u52a1\u5668\u4e0d\u53ef\u7528\u3002 1 2 3 4 5 upstream backend { ip_hash ; server backend1.example.com ; server backend2.example.com ; } \u81ea\u5b9a\u4e49\u54c8\u5e0c(Generic Hash,1.7.2\u4ee5\u4e0a) 1 2 3 4 5 upstream backend { ea hash $request_uri consistent ; server backend1.example.com ; server backend2.example.com ; } \u6700\u77ed\u54cd\u5e94\u65f6\u95f4(Least Time,1.7.10\u4ee5\u4e0a) \u8bf7\u6c42\u53d1\u7ed9\u54cd\u5e94\u65f6\u95f4\u6700\u77ed\u548c\u8fde\u63a5\u6570\u6700\u5c11\u7684\u670d\u52a1\u5668\u3002 \u968f\u673a\u9009\u62e9(Random\uff0c1.15.1\u4ee5\u4e0a) \u6839\u636e\u968f\u673a\u7b56\u7565\u9009\u62e9\u540e\u7aef\u670d\u52a1\u5668 \u4e8c\u3001\u540e\u7aef\u670d\u52a1\u5668\u914d\u7f6e \u00b6 1 2 3 upstream name { server address [parameters]; } 1 2 3 4 5 6 7 8 \u53c2\u6570\uff1a weight\uff1a \u8bbe\u7f6e\u670d\u52a1\u5668\u6743\u91cd\uff0c\u9ed8\u8ba4\u4e3a1\u3002\u4f8b\uff1aweight=1\uff1b max_fails:\u8bbe\u7f6e\u4e0e\u88ab\u4ee3\u7406\u670d\u52a1\u5668\u8fde\u63a5\u5931\u8d25\u7684\u6b21\u6570\uff0c\u9ed8\u8ba4\u4e3a1\u3002\u4f8b\uff1amax_fails=3 fail_timeout\uff1a\u8fde\u63a5\u8d85\u65f6\u65f6\u95f4\uff0c\u9ed8\u8ba4\u4e3a10s\u3002\u4f8b\uff1afail_timeout=5 backup\uff1a\u628a\u88ab\u4ee3\u7406\u670d\u52a1\u5668\u6807\u8bb0\u4e3a\u5907\u4efd\u670d\u52a1\u5668\uff0c\u5f53\u4e3b\u670d\u52a1\u5668\u5b95\u673a\u4e4b\u540e\u542f\u7528 down\uff1a\u628a\u88ab\u4ee3\u7406\u670d\u52a1\u5668\u6807\u8bb0\u4e3a\u4e0d\u53ef\u7528\u72b6\u6001 slow_start\uff1a\u6162\u542f\u52a8\uff0c\u670d\u52a1\u5728\u542f\u52a8\u540e\u7ecf\u8fc7\u4e00\u6bb5\u65f6\u95f4\u624d\u6807\u8bb0\u4e3a\u53ef\u7528\uff0c\u9ed8\u8ba4\u4e3a0\uff08\u7981\u7528\uff09**\u6ce8\u610f**\uff1a\u4e0d\u80fd\u4e0ehash\u548cip_hash\u4e00\u8d77\u4f7f\u7528 max_conns\uff081.29~1.11.5\uff0c\u5546\u4e1a\u7248\u4e2d\uff09\uff1a\u9650\u5236\u548c\u88ab\u4ee3\u7406\u670d\u52a1\u5668\u7684\u6700\u5927\u6d3b\u52a8\u8fde\u63a5\uff0c\u9ed8\u8ba4\u4e3a0\uff0c\u4e0d\u9650\u5236\u3002\u4f8b\uff1amax_conns=25 \u4e09\u3001\u914d\u7f6e\u5b9e\u4f8b \u00b6 \u5bf9\u6240\u6709\u8bf7\u6c42\u5b9e\u73b0\u4e00\u822c\u8f6e\u8be2\u89c4\u5219\u7684\u8d1f\u8f7d\u5747\u8861\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 upstream patapi { server 192 .168.1.130:9900 ; server 192 .168.1.131:9901 ; } server { listen 9988 ; location / { proxy_pass http://patapi ; ... } } \u5bf9\u6240\u6709\u8bf7\u6c42\u5b9e\u73b0\u52a0\u6743\u8f6e\u8be2\u89c4\u5219\u7684\u8d1f\u8f7d\u5747\u8861 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 upstream patapi { server 192 .168.1.130:9900 weight = 5 ; server 192 .168.1.131:9901 weight = 2 ; } server { listen 9988 ; location / { proxy_pass http://patapi ; ... } } https://docs.nginx.com/nginx/admin-guide/load-balancer/http-load-balancer/#metho_hasj Nginx rewrite \u00b6 \u5b98\u65b9\u94fe\u63a5\uff1ahttp://nginx.org/en/docs/http/ngx_http_rewrite_module.html#rewrite \u6a21\u5757\uff1angx_http_rewrite_module \u529f\u80fd\uff1a\u5b9e\u73b0URL\u91cd\u5199 \u4f9d\u8d56\uff1a\u4f9d\u8d56PCRE(Perl Compatible Regular Expressions) \u8f6c\u53d1\u4e0e\u91cd\u5199\u7684\u533a\u522b\uff1a \u00b6 \u533a\u522b \u91cd\u5199 \u8f6c\u53d1 \u5ba2\u6237\u7aef\u6d4f\u89c8\u5668\u5730\u5740\u680f\u4e2d\u7684\u5730\u5740 \u6539\u53d8(\u53d8\u4e3a\u771f\u5b9e\u63d0\u4f9b\u670d\u52a1\u7684\u5730\u5740) \u4e0d\u53d8 \u8bf7\u6c42\u6b21\u6570 \u4e24\u6b21 \u4e00\u6b21 \u4f4d\u7f6e \u6ca1\u6709\u9650\u5236 \u540c\u4e00\u7ad9\u70b9\u9879\u76ee\u5185 \u8f6c\u53d1\u5230\u7684\u9875\u9762\u8def\u5f84\u540d\u8868\u793a \u5b8c\u6574\u7684\u8def\u5f84\u540d \u53ef\u4ee5\u4e0d\u7528\u5168\u8def\u5f84\u540d request\u8303\u56f4\u5185\u5c5e\u6027\u7684\u4f20\u9012 \u4e0d\u53ef\u4ee5 \u53ef\u4ee5\u4f20\u9012\u7ed9\u65b0\u9875\u9762 \u901f\u5ea6 \u6162 \u5757 \u914d\u7f6e\u6307\u4ee4 \u00b6 1. if \u00b6 \u4f4d\u7f6e\uff1aserver, location \u8bed\u6cd5\uff1a if (condition) { ... } condition\u7684\u683c\u5f0f\uff1a \u53d8\u91cf\u540d\uff1a\u5982\u679c\u53d8\u91cf\u7684\u503c\u4e3a\u7a7a\u5b57\u7b26\u4e32\u6216\u201c 0 \u201d\uff0c\u5219\u4e3afalse ; \u4f7f\u7528\u201c =\u201d\u548c\u201c !=\u201d\u8fd0\u7b97\u7b26\u6bd4\u8f83\u53d8\u91cf\u548c\u5b57\u7b26\u4e32; 1 2 3 if ($request_method = POST){ return 405 } \u53d8\u91cf\u4e0e\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d ~:\u533a\u5206\u5927\u5c0f\u5199\u7684\u5339\u914d\uff0c\u5339\u914d\u6210\u529f\u4e3atrue ~*:\u4e0d\u533a\u5206\u5927\u5c0f\u5199\u7684\u5339\u914d\uff0c\u5339\u914d\u6210\u529f\u4e3atrue !~:\u533a\u5206\u5927\u5c0f\u5199\u7684\u5339\u914d\uff0c\u5339\u914d\u5931\u8d25\u4e3atrue !~*:\u4e0d\u533a\u5206\u5927\u5c0f\u5199\u7684\u5339\u914d\uff0c\u5339\u914d\u5931\u8d25\u4e3atrue \u5728\u6b63\u5219\u8868\u8fbe\u5f0f\u4e2d\u53ef\u4ee5\u7528\u5c0f\u62ec\u53f7\u5bf9\u53d8\u91cf\u8fdb\u884c\u622a\u53d6\uff0c\u5728\u82b1\u62ec\u53f7\u4e2d\u4f7f\u7528$1-$9\u5f15\u7528\u622a\u53d6\u7684\u503c\u3002\u5982\u679c\u6b63\u5219\u8868\u8fbe\u5f0f\u5305\u542b\u201c } \u201d\u6216\u201c ; \u201d\u5b57\u7b26\uff0c\u5219\u6574\u4e2a\u8868\u8fbe\u5f0f\u5e94\u5305\u542b\u5728\u5355\u5f15\u53f7\u6216\u53cc\u5f15\u53f7\u4e2d\u3002 bash if ($request_uri ~ /a/b/c/d) { return 200 \"$request_method $request_uri\"; } \u4f7f\u7528\u201c -f\u201d\u548c\u201c !-f\u201d\u8fd0\u7b97\u7b26\u68c0\u67e5\u6587\u4ef6\u662f\u5426\u5b58\u5728; \u4f7f\u7528\u201c -d\u201d\u548c\u201c !-d\u201d\u8fd0\u7b97\u7b26\u68c0\u67e5\u76ee\u5f55\u662f\u5426\u5b58\u5728; \u4f7f\u7528\u201c -e\u201d\u548c\u201c !-e\u201d\u8fd0\u7b97\u7b26\u68c0\u67e5\u6587\u4ef6\uff0c\u76ee\u5f55\u6216\u7b26\u53f7\u94fe\u63a5\u662f\u5426\u5b58\u5728; \u4f7f\u7528\u201c -x\u201d\u548c\u201c !-x\u201d\u8fd0\u7b97\u7b26\u68c0\u67e5\u53ef\u6267\u884c\u6587\u4ef6\u3002 2.break \u00b6 \u4f5c\u7528\uff1astops processing the current set of ngx_http_rewrite_module directives; \u4e2d\u65ad\u5f53\u524d\u76f8\u540c\u4f5c\u7528\u57df\u4e2d\u5176\u4ed6Nginx\u914d\u7f6e\uff0c\u4f4d\u4e8e\u5b83\u524d\u9762\u7684\u6307\u4ee4\u914d\u7f6e\u751f\u6548\uff0c\u4f4d\u4e8e\u540e\u9762\u7684\u6307\u4ee4\u914d\u7f6e\u65e0\u6548\u3002\u670d\u52a1\u5668\u5728\u6839\u636e\u914d\u7f6e\u5904\u7406\u8bf7\u6c42\u7684\u8fc7\u7a0b\u4e2d\u9047\u5230\u8be5\u6307\u4ee4\u65f6\u3002\u56de\u5230\u4e0a\u4e00\u5c42\u4f5c\u7528\u57df\u7ee7\u7eed\u5411\u4e0b\u8bfb\u53d6\u914d\u7f6e\u3002 \u4f4d\u7f6e\uff1aserver, location, if \u8bed\u6cd5\uff1abreak; \u5b9e\u4f8b\uff1a 3.return \u00b6 \u4f5c\u7528\uff1a\u5b8c\u6210\u5bf9\u8bf7\u6c42\u7684\u5904\u7406\uff0c\u76f4\u63a5\u5411\u5ba2\u6237\u7aef\u8fd4\u56de\u54cd\u5e94\u72b6\u6001\u7801\u3002\u5904\u4e8e\u8be5\u6307\u4ee4\u540e\u7684\u6240\u6709Nginx\u914d\u7f6e\u90fd\u662f\u65e0\u6548\u7684\u3002 \u4f4d\u7f6e\uff1aserver\uff0clocation\uff0cif \u8bed\u6cd5\uff1a return code [ text ]; return code URL ; return URL ; \u5b9e\u4f8b\uff1a 1 2 3 4 default_type application/json ; if ( $http_appversion ! = \"\" ){ return 200 '{\"code\":-2, \"message\":\"\u7248\u672c\u8fc7\u65e7\uff0c\u9700\u8981\u5f3a\u5236\u5347\u7ea7\"}' ; } 4.rewrite \u00b6 \u4f5c\u7528\uff1a\u901a\u8fc7\u6b63\u5219\u8868\u8fbe\u5f0f\u6765\u6539\u53d8URI\u3002\u53ef\u4ee5\u540c\u65f6\u5b58\u5728\u4e00\u4e2a\u6216\u591a\u4e2a\u6307\u4ee4\uff0c\u6309\u7167\u987a\u5e8f\u4f9d\u6b21\u5bf9URL\u8fdb\u884c\u5339\u914d\u548c\u5904\u7406\u3002 \u4f4d\u7f6e\uff1aserver \uff0c location \uff0c if \u8bed\u6cd5\uff1arewrite regex replacement [flag] ; \u200b regex **\uff1a\u7528\u4e8e\u5339\u914dURI\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u3002\u4f7f\u7528()\u6807\u8bb0\u8981\u622a\u53d6\u7684\u5185\u5bb9 \u200b replacement \uff1a\u5339\u914d\u6210\u529f\u540e\u7528\u4e8e\u66ff\u6362URI\u4e2d\u88ab\u622a\u53d6\u5185\u5bb9\u7684\u5b57\u7b26\u4e32\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5982\u679c\u8be5\u5b57\u7b26\u4e32\u7531\u201chttp://\u201d\uff0c\u201chttps://\u201d\u6216\u201c$scheme\u201d \u5f00\u5934\uff0c\u5219\u5904\u7406\u505c\u6b62\u5e76\u5c06\u91cd\u5b9a\u5411\u8fd4\u56de\u7ed9\u5ba2\u6237\u7aef\u3002 \u200b flag \uff1a\u7528\u6765\u8bbe\u7f6erewrite\u5bf9URI\u7684\u5904\u7406\u884c\u4e3a\u3002 \u200b last\uff1a\u7ec8\u6b62\u7ee7\u7eed\u5728 \u672clocation \u4e2d\u5904\u7406\u63a5\u6536\u5230\u7684URI\uff0c\u5e76\u5c06\u6b64\u5904\u91cd\u5199\u7684URI\u4f5c\u4e3a\u65b0\u7684URI\u3002\u4f7f\u7528\u5404location\u5757\u8fdb\u884c\u5904\u7406\u3002\u8be5\u6807\u8bc6\u5c06\u91cd\u5199\u540e\u7684URI\u91cd\u65b0\u548bserver\u5757\u4e2d\u6267\u884c\uff0c\u4e3a\u91cd\u5199\u540e\u7684URI\u63d0\u4f9b\u4e86\u8f6c\u5165\u5176\u4ed6location\u5757\u7684\u673a\u4f1a\u3002 \u200b \u5b9e\u4f8b\uff1a 1 2 3 4 location / { rewrite ^ ( /download/.* ) /media/ ( .* ) \\. .*$ $1 /mp3/ $2 .mp3 last ; # \u5339\u914d\u6210\u529f\u540e\u540e\u9762\u7684\u4e0d\u6267\u884c rewrite ^ ( /download/.* ) /audio/ ( .* ) \\. .*$ $1 /mp3/ $2 .ra last ; } \u200b break\uff1a\u5c06\u6b64\u5904\u91cd\u5199\u7684URI\u4f5c\u4e3a\u65b0\u7684URI\uff0c\u5728\u672c\u5757\u4e2d\u7ee7\u7eed\u8fdb\u884c\u5904\u7406\u3002\u8be5\u6807\u8bc6\u540e\u5c06\u91cd\u5199\u540e\u7684\u5730\u5740\u5728\u5f53\u524d\u7684location\u5757\u4e2d\u7ee7\u7eed\u6267\u884c\uff0c\u4e0d\u4f1a\u5c06\u65b0\u7684URI\u8f6c\u5411\u5230\u5176\u4ed6location\u5757\u3002 \u200b \u5b9e\u4f8b\uff1a 1 2 3 4 location /download { rewrite ^ ( /download/.* ) /media/ ( .* ) \\. .*$ $1 /mp3/ $2 .mp3 break ; # \u5339\u914d\u6210\u529f\u540e\u4f7f\u7528\u8fdb\u5165\u7b2c3\u884c rewrite ^ ( /download/.* ) /audio/ ( .* ) \\. .*$ $1 /mp3/ $2 .ra break ; } \u200b \u5982\u679c\u628abreak\u66ff\u6362\u4e3alast\uff0c\u91cd\u5199\u540e\u7684URI\u8fd8\u53ef\u80fd\u4f1a\u88ab\u8be5location\u5339\u914d\u5230\uff0cNginx\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u56de\u5c1d\u8bd510\u6b64\u5faa\u73af\u540e\u8fd4\u56de\u9519\u8bef\u72b6\u6001\u7801500. \u200b redirect\uff1a\u5c06\u91cd\u5199\u540e\u7684URI\u8fd4\u56de\u7ed9\u5ba2\u6237\u7aef\uff0c\u72b6\u6001\u4ee3\u7801\u4e3a302\u3002\u4e3b\u8981\u7528\u5728replacement\u53d8\u91cf\u4e0d\u662f\u4ee5\u201chttp://\u201d\uff0c\u201chttps://\u201d\u5f00\u5934\u7684\u60c5\u51b5\u4e0b\u3002 \u200b permanent\uff1a\u5c06\u91cd\u5199\u540e\u7684URI\u8fd4\u56de\u7ed9\u5ba2\u6237\u7aef\uff0c\u72b6\u6001\u7801\u662f301.\u6307\u660e\u662f\u6c38\u4e45\u91cd\u5b9a\u5411\u3002 \u6ce8\u610f\uff1a\u2460rewrite\u63a5\u6536\u5230\u7684URI\u4e0d\u5305\u542bhost\u5730\u5740\uff1b\u2461\u4e0d\u5305\u542bURL\u4e2d\u7684\u8bf7\u6c42\u6307\u4ee4\uff08\u4e0d\u5305\u542b?arg1=value1&arg2=value2\uff09 \u5b9e\u4f8b1\uff1a\u57df\u540d\u8df3\u8f6c 1 2 3 4 5 6 7 server { listen 9988;# default_server; server_name localhost; charset utf-8; rewrite_log on; rewrite ^/ http://www.baidu.com/; } 5.rewrite_log \u00b6 \u4f5c\u7528\uff1a\u914d\u7f6e\u662f\u5426\u5f00\u542fURL\u91cd\u5199\u65e5\u5fd7\u7684\u8f93\u51fa\u529f\u80fd\uff0c\u65e5\u5fd7\u5c06\u4ee5notice\u7ea7\u522b\u8f93\u51fa\u5230error_log \u8bed\u6cd5\uff1arewrite_log on|off; 6.set \u00b6 \u4f5c\u7528\uff1a\u8bbe\u7f6e\u4e00\u4e2a\u65b0\u7684\u53d8\u91cf \u8bed\u6cd5\uff1aset var vaule; \u5b9e\u4f8b\uff1a 1 2 3 4 5 set $newIp \"\" ; if ( $http_appversion = \"1.0.16\" ){ set $newIp \"192.168.1.11:8080\" ; } proxy_pass \"http:// $newIp \" ; 7.uninitialized_variable_warn \u00b6 \u4f5c\u7528\uff1a\u914d\u7f6e\u4f7f\u7528\u672a\u521d\u59cb\u5316\u7684\u53d8\u91cf\u65f6\uff0c\u662f\u5426\u8bb0\u5f55\u8b66\u544a\u65e5\u5fd7 \u8bed\u6cd5\uff1auninitialized_variable_warn on|off; \u9ed8\u8ba4on rewrite\u5e38\u7528\u5168\u5c40\u53d8\u91cf \u6240\u6709Nginx\u53d8\u91cf\uff1ahttp://nginx.org/en/docs/varindex.html http://nginx.org/en/docs/http/ngx_http_proxy_module.html \u4e00\u3001\u6b63\u5411\u4ee3\u7406 \u00b6 \u4e0d\u5e38\u7528 \u4e8c\u3001\u53cd\u5411\u4ee3\u7406 \u00b6 \u6a21\u5757\uff1angx_http_proxy_module \u7279\u70b9\uff1a\u9ad8\u6548\u3001 \u6700\u5927\u8fde\u63a5\u6570\uff1dworker_processes * worker_connection/4 \u914d\u7f6e\uff1a\u4e00\u822c\u5355\u72ec\u914d\u7f6e\u4e00\u4e2aserver\u5757 \u57fa\u672c\u8bbe\u7f6e\uff1a proxy_pass URL \u4f5c\u7528\uff1a\u8bbe\u7f6e\u88ab\u4ee3\u7406\u670d\u52a1\u5668\u7684\u5730\u5740 \u683c\u5f0f\uff1a\u4e3b\u673a\u540d\u3001IP\u5730\u5740:\u7aef\u53e3\u53f7\u3001URI \u534f\u8bae\uff1ahttp\u3001https\u3001UNIX-domain socket \u3000\u3000\u4f8b\uff1a 1 2 proxy_pass http://localhost:8000/uri/ ; proxy_pass http://unix:/tmp/backend.socket:/uri/ ; 1 \u5982\u679c\u88ab\u4ee3\u7406\u670d\u52a1\u5668\u662f\u4e00\u7ec4\u670d\u52a1\u5668\uff0c\u53ef\u4ee5\u4f7f\u7528upstream\u6307\u4ee4\u914d\u7f6e\u540e\u7aef\u670d\u52a1\u5668\u7ec4\u3002 \u4f8b\uff1a 1 proxy_hide_header \u4f5c\u7528\uff1a\u7528\u4e8e\u8bbe\u7f6eNginx\u5728\u53d1\u9001HTTP\u54cd\u5e94\u662f\uff0c\u9690\u85cf\u4e00\u4e9b\u5934\u57df\u4fe1\u606f \u4f4d\u7f6e\uff1ahttp\u3001server\u3001location \u8bed\u6cd5\uff1aproxy_hide_header field proxy_pass_header \u4f5c\u7528\uff1a\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cNginx\u5728\u53d1\u9001\u54cd\u5e94\u62a5\u6587\u65f6\uff0c\u62a5\u6587\u5934\u4e2d\u4e0d\u5305\u542b\u201dDate\u201c,\"Server\",\u201dX-Accel-...\u201c\u7b49\u6765\u81ea\u88ab\u4ee3\u7406\u670d\u52a1\u5668\u7684\u5934\u57df\u4fe1\u606f\uff0c\u8be5\u6307\u4ee4\u53ef\u4ee5\u8bbe\u7f6e\u8fd9\u4e9b\u5934\u57df\u4fe1\u606f\u4e00\u88ab\u53d1\u9001\u3002 \u8bed\u6cd5\uff1aproxy_pass_header field proxy_pass_request_body \u4f5c\u7528\uff1a\u914d\u7f6e\u662f\u5426\u5c06\u8bf7\u6c42\u7684\u8bf7\u6c42\u4f53\u53d1\u9001\u7ed9\u4ee3\u7406\u670d\u52a1\u5668\uff0c\u9ed8\u8ba4\u4e3a on \u8bed\u6cd5\uff1aproxy_pass_request_body on|off; proxy_pass_request_headers \u4f5c\u7528\uff1a\u914d\u7f6e\u662f\u5426\u5c06\u8bf7\u6c42\u7684\u8bf7\u6c42\u5934\u53d1\u9001\u7ed9\u4ee3\u7406\u670d\u52a1\u5668\uff0c\u9ed8\u8ba4\u4e3a on \u8bed\u6cd5\uff1aproxy_pass_request_header on|off; proxy_set_header \u4f5c\u7528\uff1a\u66f4\u6539Nginx\u670d\u52a1\u5668\u63a5\u6536\u5230\u7684\u5ba2\u6237\u7aef\u8bf7\u6c42\u7684\u5934\u4fe1\u606f\uff0c\u7136\u540e\u5c06\u4fe1\u606f\u7684\u8bf7\u6c42\u5934\u53d1\u7ed9\u88ab\u4ee3\u7406\u670d\u52a1\u5668 \u8bed\u6cd5\uff1a proxy_set_header field value ; \u9ed8\u8ba4\u914d\u7f6e\uff1a 1 2 proxy_set_header Host $proxy_host; proxy_set_header Connection close; proxy_set_body \u4f5c\u7528\uff1a\u66f4\u6539Nginx\u670d\u52a1\u5668\u63a5\u6536\u5230\u7684\u5ba2\u6237\u7aef\u5f3a\u6c42\u7684\u8bf7\u6c42\u4f53\u4fe1\u606f\uff0c\u7136\u540e\u5c06\u65b0\u7684\u8bf7\u6c42\u4f53\u53d1\u9001\u7ed9\u88ab\u4ee3\u7406\u670d\u52a1\u5668 \u8bed\u6cd5\uff1aproxy_set_body value; proxy_connect_timeout \u4f5c\u7528\uff1a\u914d\u7f6eNginx\u670d\u52a1\u5668\u4e0e\u540e\u7aef\u4ee3\u7406\u670d\u52a1\u5668\u5c1d\u8bd5\u5efa\u7acb\u8fde\u63a5\u7684\u8d85\u65f6\u65f6\u95f4\uff0c\u9ed8\u8ba460s\u3002 \u8bed\u6cd5\uff1aproxy_connect_timeout time; proxy_read_timeout \u4f5c\u7528\uff1a\u914d\u7f6eNginx\u670d\u52a1\u5668\u4e0e\u540e\u7aef\u4ee3\u7406\u53d1\u51faread\u8bf7\u6c42\u540e\uff0c\u7b49\u5f85\u54cd\u5e94\u7684\u8d85\u65f6\u65f6\u95f4\u3002\u9ed8\u8ba460s\u3002 \u8bed\u6cd5\uff1aproxy_read_timeout time; proxy_send_timeout \u4f5c\u7528\uff1a\u914d\u7f6eNginx\u670d\u52a1\u5668\u4e0e\u540e\u7aef\u4ee3\u7406\u53d1\u51fawrite\u8bf7\u6c42\u540e\uff0c\u7b49\u5f85\u54cd\u5e94\u7684\u8d85\u65f6\u65f6\u95f4\u3002\u9ed8\u8ba460s\u3002 \u8bed\u6cd5\uff1aproxy_send_timeout time; proxy_http_verson \u4f5c\u7528\uff1a\u914d\u7f6eNginx\u670d\u52a1\u5668\u63d0\u4f9b\u4ee3\u7406\u670d\u52a1\u7684HTTP\u534f\u8bae\u7248\u672c\uff0c\u9ed8\u8ba41.0 \u8bed\u6cd5\uff1aproxy_http_verson 1.0|1.1; proxy_method \u4f5c\u7528\uff1a\u8bbe\u7f6eNginx\u670d\u52a1\u5668\u8bf7\u6c42\u88ab\u4ee3\u7406\u670d\u52a1\u5668\u65f6\u4f7f\u7528\u7684\u8bf7\u6c42\u65b9\u6cd5\uff0c\u8bbe\u7f6e\u4e86\u8be5\u6307\u4ee4\uff0c\u5ba2\u6237\u7aef\u8bf7\u6c42\u7684\u65b9\u6cd5\u88ab\u5ffd\u7565 \u8bed\u6cd5\uff1aproxy_method method; proxy_ignore_client_abort \u4f5c\u7528\uff1a\u8bbe\u7f6e\u5728\u5ba2\u6237\u7aef\u4e2d\u65ad\u7f51\u7edc\u8bf7\u6c42\u65f6\uff0cNginx\u670d\u52a1\u5668\u662f\u5426\u4e2d\u65ad\u88ab\u4ee3\u7406\u670d\u52a1\u5668\u7684\u8bf7\u6c42,\u9ed8\u8ba4off(\u4e2d\u65ad) \u8bed\u6cd5\uff1aproxy_ignore_client_abort on|off proxy_redirect \u4f5c\u7528\uff1a \u4e0eproxy_pass\u914d\u5408\u4f7f\u7528\uff0c\u4fee\u6539\u88ab\u4ee3\u7406\u670d\u52a1\u5668\u8fd4\u56de\u7684\u54cd\u5e94\u5934\u4e2d\u7684Location\u5934\u57df\u548cRefresh\u5934\u57df \u8bed\u6cd5\uff1a bash proxy_redirect default;(\u9ed8\u8ba4) proxy_redirect off; proxy_redirect redirect replacement;","title":"Nginx\u8d1f\u8f7d\u5747\u8861"},{"location":"web/%E8%BD%AF%E4%BB%B6/Nginx/#nginx","text":"Nginx\u652f\u6301\u4e03\u5c42\u8d1f\u8f7d\uff08HTTP\uff09\u548c\u56db\u5c42\u8d1f\u8f7d\uff08TCP and UDP\uff09\uff0c\u8fd9\u91cc\u4e3b\u8981\u4ecb\u7ecdHTTP\u8d1f\u8f7d \u5b9e\u73b0\u65b9\u6cd5\uff1a\u5229\u7528Nginx\u53cd\u5411\u4ee3\u7406\u7684\u529f\u80fd\u5b9e\u73b0\u540e\u7aef\u670d\u52a1\u7684\u8d1f\u8f7d\u5747\u8861 \u6307\u4ee4\uff1aproxy_pass\u3001upstream","title":"Nginx\u8d1f\u8f7d\u5747\u8861"},{"location":"web/%E8%BD%AF%E4%BB%B6/Nginx/#_1","text":"Nginx\u8d1f\u8f7d\u5747\u8861\u6a21\u5f0f\u67096\u79cd\uff08\u5f00\u6e90\u72484\u79cd+Plus\u72482\u79cd\uff09 \u8f6e\u8be2(Round Robin) \u9ed8\u8ba4\u65b9\u5f0f\uff0c\u8bf7\u6c42\u5728\u540e\u7aef\u670d\u52a1\u5668\u4f9d\u6b21\u8f6e\u8be2\uff0c\u901a\u8fc7weights\u53c2\u6570\u6539\u53d8\u8f6e\u8be2\u7684\u6743\u91cd\u3002 1 2 3 4 upstream backend { server backend1.example.com ; server backend2.example.com ; } \u6700\u5c11\u8fde\u63a5\u6570(Least Connections) \u5ba2\u6237\u7aef\u8bf7\u6c42\u53d1\u7ed9\u8fde\u63a5\u6570\u6700\u5c11\u7684\u670d\u52a1\u5668\uff0c\u540c\u65f6\u53ef\u4ee5\u901a\u8fc7weight\u6307\u5b9a\u6743\u91cd 1 2 3 4 5 upstream backend { least_conn ; server backend1.example.com ; server backend2.example.com ; } IP\u54c8\u5e0c(IP Hash) \u6839\u636e\u5ba2\u6237\u7aef\u7684IP\u5730\u5740\u89c9\u5f97\u53d1\u7ed9\u540e\u7aef\u7684\u54ea\u4e2a\u670d\u52a1\u5668\uff0c\u540c\u4e00IP\u5730\u5740\u7684\u8bf7\u6c42\u90fd\u53d1\u7ed9\u540e\u7aef\u7684\u540c\u4e00\u670d\u52a1\u5668\uff0c\u9664\u975e\u540e\u7aef\u670d\u52a1\u5668\u4e0d\u53ef\u7528\u3002 1 2 3 4 5 upstream backend { ip_hash ; server backend1.example.com ; server backend2.example.com ; } \u81ea\u5b9a\u4e49\u54c8\u5e0c(Generic Hash,1.7.2\u4ee5\u4e0a) 1 2 3 4 5 upstream backend { ea hash $request_uri consistent ; server backend1.example.com ; server backend2.example.com ; } \u6700\u77ed\u54cd\u5e94\u65f6\u95f4(Least Time,1.7.10\u4ee5\u4e0a) \u8bf7\u6c42\u53d1\u7ed9\u54cd\u5e94\u65f6\u95f4\u6700\u77ed\u548c\u8fde\u63a5\u6570\u6700\u5c11\u7684\u670d\u52a1\u5668\u3002 \u968f\u673a\u9009\u62e9(Random\uff0c1.15.1\u4ee5\u4e0a) \u6839\u636e\u968f\u673a\u7b56\u7565\u9009\u62e9\u540e\u7aef\u670d\u52a1\u5668","title":"\u4e00\u3001\u8d1f\u8f7d\u5747\u8861\u7b56\u7565"},{"location":"web/%E8%BD%AF%E4%BB%B6/Nginx/#_2","text":"1 2 3 upstream name { server address [parameters]; } 1 2 3 4 5 6 7 8 \u53c2\u6570\uff1a weight\uff1a \u8bbe\u7f6e\u670d\u52a1\u5668\u6743\u91cd\uff0c\u9ed8\u8ba4\u4e3a1\u3002\u4f8b\uff1aweight=1\uff1b max_fails:\u8bbe\u7f6e\u4e0e\u88ab\u4ee3\u7406\u670d\u52a1\u5668\u8fde\u63a5\u5931\u8d25\u7684\u6b21\u6570\uff0c\u9ed8\u8ba4\u4e3a1\u3002\u4f8b\uff1amax_fails=3 fail_timeout\uff1a\u8fde\u63a5\u8d85\u65f6\u65f6\u95f4\uff0c\u9ed8\u8ba4\u4e3a10s\u3002\u4f8b\uff1afail_timeout=5 backup\uff1a\u628a\u88ab\u4ee3\u7406\u670d\u52a1\u5668\u6807\u8bb0\u4e3a\u5907\u4efd\u670d\u52a1\u5668\uff0c\u5f53\u4e3b\u670d\u52a1\u5668\u5b95\u673a\u4e4b\u540e\u542f\u7528 down\uff1a\u628a\u88ab\u4ee3\u7406\u670d\u52a1\u5668\u6807\u8bb0\u4e3a\u4e0d\u53ef\u7528\u72b6\u6001 slow_start\uff1a\u6162\u542f\u52a8\uff0c\u670d\u52a1\u5728\u542f\u52a8\u540e\u7ecf\u8fc7\u4e00\u6bb5\u65f6\u95f4\u624d\u6807\u8bb0\u4e3a\u53ef\u7528\uff0c\u9ed8\u8ba4\u4e3a0\uff08\u7981\u7528\uff09**\u6ce8\u610f**\uff1a\u4e0d\u80fd\u4e0ehash\u548cip_hash\u4e00\u8d77\u4f7f\u7528 max_conns\uff081.29~1.11.5\uff0c\u5546\u4e1a\u7248\u4e2d\uff09\uff1a\u9650\u5236\u548c\u88ab\u4ee3\u7406\u670d\u52a1\u5668\u7684\u6700\u5927\u6d3b\u52a8\u8fde\u63a5\uff0c\u9ed8\u8ba4\u4e3a0\uff0c\u4e0d\u9650\u5236\u3002\u4f8b\uff1amax_conns=25","title":"\u4e8c\u3001\u540e\u7aef\u670d\u52a1\u5668\u914d\u7f6e"},{"location":"web/%E8%BD%AF%E4%BB%B6/Nginx/#_3","text":"\u5bf9\u6240\u6709\u8bf7\u6c42\u5b9e\u73b0\u4e00\u822c\u8f6e\u8be2\u89c4\u5219\u7684\u8d1f\u8f7d\u5747\u8861\u3002 1 2 3 4 5 6 7 8 9 10 11 12 13 upstream patapi { server 192 .168.1.130:9900 ; server 192 .168.1.131:9901 ; } server { listen 9988 ; location / { proxy_pass http://patapi ; ... } } \u5bf9\u6240\u6709\u8bf7\u6c42\u5b9e\u73b0\u52a0\u6743\u8f6e\u8be2\u89c4\u5219\u7684\u8d1f\u8f7d\u5747\u8861 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 upstream patapi { server 192 .168.1.130:9900 weight = 5 ; server 192 .168.1.131:9901 weight = 2 ; } server { listen 9988 ; location / { proxy_pass http://patapi ; ... } } https://docs.nginx.com/nginx/admin-guide/load-balancer/http-load-balancer/#metho_hasj","title":"\u4e09\u3001\u914d\u7f6e\u5b9e\u4f8b"},{"location":"web/%E8%BD%AF%E4%BB%B6/Nginx/#nginx-rewrite","text":"\u5b98\u65b9\u94fe\u63a5\uff1ahttp://nginx.org/en/docs/http/ngx_http_rewrite_module.html#rewrite \u6a21\u5757\uff1angx_http_rewrite_module \u529f\u80fd\uff1a\u5b9e\u73b0URL\u91cd\u5199 \u4f9d\u8d56\uff1a\u4f9d\u8d56PCRE(Perl Compatible Regular Expressions)","title":"Nginx rewrite"},{"location":"web/%E8%BD%AF%E4%BB%B6/Nginx/#_4","text":"\u533a\u522b \u91cd\u5199 \u8f6c\u53d1 \u5ba2\u6237\u7aef\u6d4f\u89c8\u5668\u5730\u5740\u680f\u4e2d\u7684\u5730\u5740 \u6539\u53d8(\u53d8\u4e3a\u771f\u5b9e\u63d0\u4f9b\u670d\u52a1\u7684\u5730\u5740) \u4e0d\u53d8 \u8bf7\u6c42\u6b21\u6570 \u4e24\u6b21 \u4e00\u6b21 \u4f4d\u7f6e \u6ca1\u6709\u9650\u5236 \u540c\u4e00\u7ad9\u70b9\u9879\u76ee\u5185 \u8f6c\u53d1\u5230\u7684\u9875\u9762\u8def\u5f84\u540d\u8868\u793a \u5b8c\u6574\u7684\u8def\u5f84\u540d \u53ef\u4ee5\u4e0d\u7528\u5168\u8def\u5f84\u540d request\u8303\u56f4\u5185\u5c5e\u6027\u7684\u4f20\u9012 \u4e0d\u53ef\u4ee5 \u53ef\u4ee5\u4f20\u9012\u7ed9\u65b0\u9875\u9762 \u901f\u5ea6 \u6162 \u5757","title":"\u8f6c\u53d1\u4e0e\u91cd\u5199\u7684\u533a\u522b\uff1a"},{"location":"web/%E8%BD%AF%E4%BB%B6/Nginx/#_5","text":"","title":"\u914d\u7f6e\u6307\u4ee4"},{"location":"web/%E8%BD%AF%E4%BB%B6/Nginx/#1-if","text":"\u4f4d\u7f6e\uff1aserver, location \u8bed\u6cd5\uff1a if (condition) { ... } condition\u7684\u683c\u5f0f\uff1a \u53d8\u91cf\u540d\uff1a\u5982\u679c\u53d8\u91cf\u7684\u503c\u4e3a\u7a7a\u5b57\u7b26\u4e32\u6216\u201c 0 \u201d\uff0c\u5219\u4e3afalse ; \u4f7f\u7528\u201c =\u201d\u548c\u201c !=\u201d\u8fd0\u7b97\u7b26\u6bd4\u8f83\u53d8\u91cf\u548c\u5b57\u7b26\u4e32; 1 2 3 if ($request_method = POST){ return 405 } \u53d8\u91cf\u4e0e\u6b63\u5219\u8868\u8fbe\u5f0f\u5339\u914d ~:\u533a\u5206\u5927\u5c0f\u5199\u7684\u5339\u914d\uff0c\u5339\u914d\u6210\u529f\u4e3atrue ~*:\u4e0d\u533a\u5206\u5927\u5c0f\u5199\u7684\u5339\u914d\uff0c\u5339\u914d\u6210\u529f\u4e3atrue !~:\u533a\u5206\u5927\u5c0f\u5199\u7684\u5339\u914d\uff0c\u5339\u914d\u5931\u8d25\u4e3atrue !~*:\u4e0d\u533a\u5206\u5927\u5c0f\u5199\u7684\u5339\u914d\uff0c\u5339\u914d\u5931\u8d25\u4e3atrue \u5728\u6b63\u5219\u8868\u8fbe\u5f0f\u4e2d\u53ef\u4ee5\u7528\u5c0f\u62ec\u53f7\u5bf9\u53d8\u91cf\u8fdb\u884c\u622a\u53d6\uff0c\u5728\u82b1\u62ec\u53f7\u4e2d\u4f7f\u7528$1-$9\u5f15\u7528\u622a\u53d6\u7684\u503c\u3002\u5982\u679c\u6b63\u5219\u8868\u8fbe\u5f0f\u5305\u542b\u201c } \u201d\u6216\u201c ; \u201d\u5b57\u7b26\uff0c\u5219\u6574\u4e2a\u8868\u8fbe\u5f0f\u5e94\u5305\u542b\u5728\u5355\u5f15\u53f7\u6216\u53cc\u5f15\u53f7\u4e2d\u3002 bash if ($request_uri ~ /a/b/c/d) { return 200 \"$request_method $request_uri\"; } \u4f7f\u7528\u201c -f\u201d\u548c\u201c !-f\u201d\u8fd0\u7b97\u7b26\u68c0\u67e5\u6587\u4ef6\u662f\u5426\u5b58\u5728; \u4f7f\u7528\u201c -d\u201d\u548c\u201c !-d\u201d\u8fd0\u7b97\u7b26\u68c0\u67e5\u76ee\u5f55\u662f\u5426\u5b58\u5728; \u4f7f\u7528\u201c -e\u201d\u548c\u201c !-e\u201d\u8fd0\u7b97\u7b26\u68c0\u67e5\u6587\u4ef6\uff0c\u76ee\u5f55\u6216\u7b26\u53f7\u94fe\u63a5\u662f\u5426\u5b58\u5728; \u4f7f\u7528\u201c -x\u201d\u548c\u201c !-x\u201d\u8fd0\u7b97\u7b26\u68c0\u67e5\u53ef\u6267\u884c\u6587\u4ef6\u3002","title":"1. if"},{"location":"web/%E8%BD%AF%E4%BB%B6/Nginx/#2break","text":"\u4f5c\u7528\uff1astops processing the current set of ngx_http_rewrite_module directives; \u4e2d\u65ad\u5f53\u524d\u76f8\u540c\u4f5c\u7528\u57df\u4e2d\u5176\u4ed6Nginx\u914d\u7f6e\uff0c\u4f4d\u4e8e\u5b83\u524d\u9762\u7684\u6307\u4ee4\u914d\u7f6e\u751f\u6548\uff0c\u4f4d\u4e8e\u540e\u9762\u7684\u6307\u4ee4\u914d\u7f6e\u65e0\u6548\u3002\u670d\u52a1\u5668\u5728\u6839\u636e\u914d\u7f6e\u5904\u7406\u8bf7\u6c42\u7684\u8fc7\u7a0b\u4e2d\u9047\u5230\u8be5\u6307\u4ee4\u65f6\u3002\u56de\u5230\u4e0a\u4e00\u5c42\u4f5c\u7528\u57df\u7ee7\u7eed\u5411\u4e0b\u8bfb\u53d6\u914d\u7f6e\u3002 \u4f4d\u7f6e\uff1aserver, location, if \u8bed\u6cd5\uff1abreak; \u5b9e\u4f8b\uff1a","title":"2.break"},{"location":"web/%E8%BD%AF%E4%BB%B6/Nginx/#3return","text":"\u4f5c\u7528\uff1a\u5b8c\u6210\u5bf9\u8bf7\u6c42\u7684\u5904\u7406\uff0c\u76f4\u63a5\u5411\u5ba2\u6237\u7aef\u8fd4\u56de\u54cd\u5e94\u72b6\u6001\u7801\u3002\u5904\u4e8e\u8be5\u6307\u4ee4\u540e\u7684\u6240\u6709Nginx\u914d\u7f6e\u90fd\u662f\u65e0\u6548\u7684\u3002 \u4f4d\u7f6e\uff1aserver\uff0clocation\uff0cif \u8bed\u6cd5\uff1a return code [ text ]; return code URL ; return URL ; \u5b9e\u4f8b\uff1a 1 2 3 4 default_type application/json ; if ( $http_appversion ! = \"\" ){ return 200 '{\"code\":-2, \"message\":\"\u7248\u672c\u8fc7\u65e7\uff0c\u9700\u8981\u5f3a\u5236\u5347\u7ea7\"}' ; }","title":"3.return"},{"location":"web/%E8%BD%AF%E4%BB%B6/Nginx/#4rewrite","text":"\u4f5c\u7528\uff1a\u901a\u8fc7\u6b63\u5219\u8868\u8fbe\u5f0f\u6765\u6539\u53d8URI\u3002\u53ef\u4ee5\u540c\u65f6\u5b58\u5728\u4e00\u4e2a\u6216\u591a\u4e2a\u6307\u4ee4\uff0c\u6309\u7167\u987a\u5e8f\u4f9d\u6b21\u5bf9URL\u8fdb\u884c\u5339\u914d\u548c\u5904\u7406\u3002 \u4f4d\u7f6e\uff1aserver \uff0c location \uff0c if \u8bed\u6cd5\uff1arewrite regex replacement [flag] ; \u200b regex **\uff1a\u7528\u4e8e\u5339\u914dURI\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u3002\u4f7f\u7528()\u6807\u8bb0\u8981\u622a\u53d6\u7684\u5185\u5bb9 \u200b replacement \uff1a\u5339\u914d\u6210\u529f\u540e\u7528\u4e8e\u66ff\u6362URI\u4e2d\u88ab\u622a\u53d6\u5185\u5bb9\u7684\u5b57\u7b26\u4e32\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u5982\u679c\u8be5\u5b57\u7b26\u4e32\u7531\u201chttp://\u201d\uff0c\u201chttps://\u201d\u6216\u201c$scheme\u201d \u5f00\u5934\uff0c\u5219\u5904\u7406\u505c\u6b62\u5e76\u5c06\u91cd\u5b9a\u5411\u8fd4\u56de\u7ed9\u5ba2\u6237\u7aef\u3002 \u200b flag \uff1a\u7528\u6765\u8bbe\u7f6erewrite\u5bf9URI\u7684\u5904\u7406\u884c\u4e3a\u3002 \u200b last\uff1a\u7ec8\u6b62\u7ee7\u7eed\u5728 \u672clocation \u4e2d\u5904\u7406\u63a5\u6536\u5230\u7684URI\uff0c\u5e76\u5c06\u6b64\u5904\u91cd\u5199\u7684URI\u4f5c\u4e3a\u65b0\u7684URI\u3002\u4f7f\u7528\u5404location\u5757\u8fdb\u884c\u5904\u7406\u3002\u8be5\u6807\u8bc6\u5c06\u91cd\u5199\u540e\u7684URI\u91cd\u65b0\u548bserver\u5757\u4e2d\u6267\u884c\uff0c\u4e3a\u91cd\u5199\u540e\u7684URI\u63d0\u4f9b\u4e86\u8f6c\u5165\u5176\u4ed6location\u5757\u7684\u673a\u4f1a\u3002 \u200b \u5b9e\u4f8b\uff1a 1 2 3 4 location / { rewrite ^ ( /download/.* ) /media/ ( .* ) \\. .*$ $1 /mp3/ $2 .mp3 last ; # \u5339\u914d\u6210\u529f\u540e\u540e\u9762\u7684\u4e0d\u6267\u884c rewrite ^ ( /download/.* ) /audio/ ( .* ) \\. .*$ $1 /mp3/ $2 .ra last ; } \u200b break\uff1a\u5c06\u6b64\u5904\u91cd\u5199\u7684URI\u4f5c\u4e3a\u65b0\u7684URI\uff0c\u5728\u672c\u5757\u4e2d\u7ee7\u7eed\u8fdb\u884c\u5904\u7406\u3002\u8be5\u6807\u8bc6\u540e\u5c06\u91cd\u5199\u540e\u7684\u5730\u5740\u5728\u5f53\u524d\u7684location\u5757\u4e2d\u7ee7\u7eed\u6267\u884c\uff0c\u4e0d\u4f1a\u5c06\u65b0\u7684URI\u8f6c\u5411\u5230\u5176\u4ed6location\u5757\u3002 \u200b \u5b9e\u4f8b\uff1a 1 2 3 4 location /download { rewrite ^ ( /download/.* ) /media/ ( .* ) \\. .*$ $1 /mp3/ $2 .mp3 break ; # \u5339\u914d\u6210\u529f\u540e\u4f7f\u7528\u8fdb\u5165\u7b2c3\u884c rewrite ^ ( /download/.* ) /audio/ ( .* ) \\. .*$ $1 /mp3/ $2 .ra break ; } \u200b \u5982\u679c\u628abreak\u66ff\u6362\u4e3alast\uff0c\u91cd\u5199\u540e\u7684URI\u8fd8\u53ef\u80fd\u4f1a\u88ab\u8be5location\u5339\u914d\u5230\uff0cNginx\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u56de\u5c1d\u8bd510\u6b64\u5faa\u73af\u540e\u8fd4\u56de\u9519\u8bef\u72b6\u6001\u7801500. \u200b redirect\uff1a\u5c06\u91cd\u5199\u540e\u7684URI\u8fd4\u56de\u7ed9\u5ba2\u6237\u7aef\uff0c\u72b6\u6001\u4ee3\u7801\u4e3a302\u3002\u4e3b\u8981\u7528\u5728replacement\u53d8\u91cf\u4e0d\u662f\u4ee5\u201chttp://\u201d\uff0c\u201chttps://\u201d\u5f00\u5934\u7684\u60c5\u51b5\u4e0b\u3002 \u200b permanent\uff1a\u5c06\u91cd\u5199\u540e\u7684URI\u8fd4\u56de\u7ed9\u5ba2\u6237\u7aef\uff0c\u72b6\u6001\u7801\u662f301.\u6307\u660e\u662f\u6c38\u4e45\u91cd\u5b9a\u5411\u3002 \u6ce8\u610f\uff1a\u2460rewrite\u63a5\u6536\u5230\u7684URI\u4e0d\u5305\u542bhost\u5730\u5740\uff1b\u2461\u4e0d\u5305\u542bURL\u4e2d\u7684\u8bf7\u6c42\u6307\u4ee4\uff08\u4e0d\u5305\u542b?arg1=value1&arg2=value2\uff09 \u5b9e\u4f8b1\uff1a\u57df\u540d\u8df3\u8f6c 1 2 3 4 5 6 7 server { listen 9988;# default_server; server_name localhost; charset utf-8; rewrite_log on; rewrite ^/ http://www.baidu.com/; }","title":"4.rewrite"},{"location":"web/%E8%BD%AF%E4%BB%B6/Nginx/#5rewrite_log","text":"\u4f5c\u7528\uff1a\u914d\u7f6e\u662f\u5426\u5f00\u542fURL\u91cd\u5199\u65e5\u5fd7\u7684\u8f93\u51fa\u529f\u80fd\uff0c\u65e5\u5fd7\u5c06\u4ee5notice\u7ea7\u522b\u8f93\u51fa\u5230error_log \u8bed\u6cd5\uff1arewrite_log on|off;","title":"5.rewrite_log"},{"location":"web/%E8%BD%AF%E4%BB%B6/Nginx/#6set","text":"\u4f5c\u7528\uff1a\u8bbe\u7f6e\u4e00\u4e2a\u65b0\u7684\u53d8\u91cf \u8bed\u6cd5\uff1aset var vaule; \u5b9e\u4f8b\uff1a 1 2 3 4 5 set $newIp \"\" ; if ( $http_appversion = \"1.0.16\" ){ set $newIp \"192.168.1.11:8080\" ; } proxy_pass \"http:// $newIp \" ;","title":"6.set"},{"location":"web/%E8%BD%AF%E4%BB%B6/Nginx/#7uninitialized_variable_warn","text":"\u4f5c\u7528\uff1a\u914d\u7f6e\u4f7f\u7528\u672a\u521d\u59cb\u5316\u7684\u53d8\u91cf\u65f6\uff0c\u662f\u5426\u8bb0\u5f55\u8b66\u544a\u65e5\u5fd7 \u8bed\u6cd5\uff1auninitialized_variable_warn on|off; \u9ed8\u8ba4on rewrite\u5e38\u7528\u5168\u5c40\u53d8\u91cf \u6240\u6709Nginx\u53d8\u91cf\uff1ahttp://nginx.org/en/docs/varindex.html http://nginx.org/en/docs/http/ngx_http_proxy_module.html","title":"7.uninitialized_variable_warn"},{"location":"web/%E8%BD%AF%E4%BB%B6/Nginx/#_6","text":"\u4e0d\u5e38\u7528","title":"\u4e00\u3001\u6b63\u5411\u4ee3\u7406"},{"location":"web/%E8%BD%AF%E4%BB%B6/Nginx/#_7","text":"\u6a21\u5757\uff1angx_http_proxy_module \u7279\u70b9\uff1a\u9ad8\u6548\u3001 \u6700\u5927\u8fde\u63a5\u6570\uff1dworker_processes * worker_connection/4 \u914d\u7f6e\uff1a\u4e00\u822c\u5355\u72ec\u914d\u7f6e\u4e00\u4e2aserver\u5757 \u57fa\u672c\u8bbe\u7f6e\uff1a proxy_pass URL \u4f5c\u7528\uff1a\u8bbe\u7f6e\u88ab\u4ee3\u7406\u670d\u52a1\u5668\u7684\u5730\u5740 \u683c\u5f0f\uff1a\u4e3b\u673a\u540d\u3001IP\u5730\u5740:\u7aef\u53e3\u53f7\u3001URI \u534f\u8bae\uff1ahttp\u3001https\u3001UNIX-domain socket \u3000\u3000\u4f8b\uff1a 1 2 proxy_pass http://localhost:8000/uri/ ; proxy_pass http://unix:/tmp/backend.socket:/uri/ ; 1 \u5982\u679c\u88ab\u4ee3\u7406\u670d\u52a1\u5668\u662f\u4e00\u7ec4\u670d\u52a1\u5668\uff0c\u53ef\u4ee5\u4f7f\u7528upstream\u6307\u4ee4\u914d\u7f6e\u540e\u7aef\u670d\u52a1\u5668\u7ec4\u3002 \u4f8b\uff1a 1 proxy_hide_header \u4f5c\u7528\uff1a\u7528\u4e8e\u8bbe\u7f6eNginx\u5728\u53d1\u9001HTTP\u54cd\u5e94\u662f\uff0c\u9690\u85cf\u4e00\u4e9b\u5934\u57df\u4fe1\u606f \u4f4d\u7f6e\uff1ahttp\u3001server\u3001location \u8bed\u6cd5\uff1aproxy_hide_header field proxy_pass_header \u4f5c\u7528\uff1a\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cNginx\u5728\u53d1\u9001\u54cd\u5e94\u62a5\u6587\u65f6\uff0c\u62a5\u6587\u5934\u4e2d\u4e0d\u5305\u542b\u201dDate\u201c,\"Server\",\u201dX-Accel-...\u201c\u7b49\u6765\u81ea\u88ab\u4ee3\u7406\u670d\u52a1\u5668\u7684\u5934\u57df\u4fe1\u606f\uff0c\u8be5\u6307\u4ee4\u53ef\u4ee5\u8bbe\u7f6e\u8fd9\u4e9b\u5934\u57df\u4fe1\u606f\u4e00\u88ab\u53d1\u9001\u3002 \u8bed\u6cd5\uff1aproxy_pass_header field proxy_pass_request_body \u4f5c\u7528\uff1a\u914d\u7f6e\u662f\u5426\u5c06\u8bf7\u6c42\u7684\u8bf7\u6c42\u4f53\u53d1\u9001\u7ed9\u4ee3\u7406\u670d\u52a1\u5668\uff0c\u9ed8\u8ba4\u4e3a on \u8bed\u6cd5\uff1aproxy_pass_request_body on|off; proxy_pass_request_headers \u4f5c\u7528\uff1a\u914d\u7f6e\u662f\u5426\u5c06\u8bf7\u6c42\u7684\u8bf7\u6c42\u5934\u53d1\u9001\u7ed9\u4ee3\u7406\u670d\u52a1\u5668\uff0c\u9ed8\u8ba4\u4e3a on \u8bed\u6cd5\uff1aproxy_pass_request_header on|off; proxy_set_header \u4f5c\u7528\uff1a\u66f4\u6539Nginx\u670d\u52a1\u5668\u63a5\u6536\u5230\u7684\u5ba2\u6237\u7aef\u8bf7\u6c42\u7684\u5934\u4fe1\u606f\uff0c\u7136\u540e\u5c06\u4fe1\u606f\u7684\u8bf7\u6c42\u5934\u53d1\u7ed9\u88ab\u4ee3\u7406\u670d\u52a1\u5668 \u8bed\u6cd5\uff1a proxy_set_header field value ; \u9ed8\u8ba4\u914d\u7f6e\uff1a 1 2 proxy_set_header Host $proxy_host; proxy_set_header Connection close; proxy_set_body \u4f5c\u7528\uff1a\u66f4\u6539Nginx\u670d\u52a1\u5668\u63a5\u6536\u5230\u7684\u5ba2\u6237\u7aef\u5f3a\u6c42\u7684\u8bf7\u6c42\u4f53\u4fe1\u606f\uff0c\u7136\u540e\u5c06\u65b0\u7684\u8bf7\u6c42\u4f53\u53d1\u9001\u7ed9\u88ab\u4ee3\u7406\u670d\u52a1\u5668 \u8bed\u6cd5\uff1aproxy_set_body value; proxy_connect_timeout \u4f5c\u7528\uff1a\u914d\u7f6eNginx\u670d\u52a1\u5668\u4e0e\u540e\u7aef\u4ee3\u7406\u670d\u52a1\u5668\u5c1d\u8bd5\u5efa\u7acb\u8fde\u63a5\u7684\u8d85\u65f6\u65f6\u95f4\uff0c\u9ed8\u8ba460s\u3002 \u8bed\u6cd5\uff1aproxy_connect_timeout time; proxy_read_timeout \u4f5c\u7528\uff1a\u914d\u7f6eNginx\u670d\u52a1\u5668\u4e0e\u540e\u7aef\u4ee3\u7406\u53d1\u51faread\u8bf7\u6c42\u540e\uff0c\u7b49\u5f85\u54cd\u5e94\u7684\u8d85\u65f6\u65f6\u95f4\u3002\u9ed8\u8ba460s\u3002 \u8bed\u6cd5\uff1aproxy_read_timeout time; proxy_send_timeout \u4f5c\u7528\uff1a\u914d\u7f6eNginx\u670d\u52a1\u5668\u4e0e\u540e\u7aef\u4ee3\u7406\u53d1\u51fawrite\u8bf7\u6c42\u540e\uff0c\u7b49\u5f85\u54cd\u5e94\u7684\u8d85\u65f6\u65f6\u95f4\u3002\u9ed8\u8ba460s\u3002 \u8bed\u6cd5\uff1aproxy_send_timeout time; proxy_http_verson \u4f5c\u7528\uff1a\u914d\u7f6eNginx\u670d\u52a1\u5668\u63d0\u4f9b\u4ee3\u7406\u670d\u52a1\u7684HTTP\u534f\u8bae\u7248\u672c\uff0c\u9ed8\u8ba41.0 \u8bed\u6cd5\uff1aproxy_http_verson 1.0|1.1; proxy_method \u4f5c\u7528\uff1a\u8bbe\u7f6eNginx\u670d\u52a1\u5668\u8bf7\u6c42\u88ab\u4ee3\u7406\u670d\u52a1\u5668\u65f6\u4f7f\u7528\u7684\u8bf7\u6c42\u65b9\u6cd5\uff0c\u8bbe\u7f6e\u4e86\u8be5\u6307\u4ee4\uff0c\u5ba2\u6237\u7aef\u8bf7\u6c42\u7684\u65b9\u6cd5\u88ab\u5ffd\u7565 \u8bed\u6cd5\uff1aproxy_method method; proxy_ignore_client_abort \u4f5c\u7528\uff1a\u8bbe\u7f6e\u5728\u5ba2\u6237\u7aef\u4e2d\u65ad\u7f51\u7edc\u8bf7\u6c42\u65f6\uff0cNginx\u670d\u52a1\u5668\u662f\u5426\u4e2d\u65ad\u88ab\u4ee3\u7406\u670d\u52a1\u5668\u7684\u8bf7\u6c42,\u9ed8\u8ba4off(\u4e2d\u65ad) \u8bed\u6cd5\uff1aproxy_ignore_client_abort on|off proxy_redirect \u4f5c\u7528\uff1a \u4e0eproxy_pass\u914d\u5408\u4f7f\u7528\uff0c\u4fee\u6539\u88ab\u4ee3\u7406\u670d\u52a1\u5668\u8fd4\u56de\u7684\u54cd\u5e94\u5934\u4e2d\u7684Location\u5934\u57df\u548cRefresh\u5934\u57df \u8bed\u6cd5\uff1a bash proxy_redirect default;(\u9ed8\u8ba4) proxy_redirect off; proxy_redirect redirect replacement;","title":"\u4e8c\u3001\u53cd\u5411\u4ee3\u7406"},{"location":"web/%E8%BD%AF%E4%BB%B6/Tomcat/","text":"servlet\uff1a\u7c7b\u5e93\uff0c\u5bb9\u5668\uff0c\u80fd\u8ba9\u57fa\u4e8eservlet\u5f00\u53d1\u7684\u7a0b\u5e8f\u80fd\u5728servlet\u4e0a\u8fd0\u884c\u3002 JSP\uff1a\u7c7b\u5e93\uff0c\u80fd\u5c06java\u5199\u7684\u7a0b\u5e8f\u5d4c\u5165html\u4e2d\u3002 tomcat=JDK+servlet+jsp java EE\u7684\u4e0d\u5b8c\u6574\u5b9e\u73b0\uff0ctomcat\u662f\u4e00\u4e2aweb container\u3002 \u4e00\u3001Tomcat \u4ecb\u7ecd \u00b6 1. Tomcat \u6765\u5386 \u00b6 Sun \u65e9\u671f\u4e3a\u4e86\u80fd\u4e3a\u65e9\u671f\u63d0\u51fa\u7684\u5404\u79cd\u89c4\u8303\u505a\u4e00\u4e2a\u6f14\u793a\uff0c\u5bf9Servlet \u63d0\u4f9b\u4e86\u4e00\u4e2a\u53c2\u8003\u6027\u5b9e\u73b0\u53eb Java Web Server\uff1b ASF\u4e5f\u521b\u5efa\u4e86\u4e00\u4e2a\u53ebJServ\u3002\u540e\u6765\u5408\u5e76\u53ebTomcat 3.0, Tomcat 4.0\uff0c\u6709\u4e00\u4e2a\u9879\u76ee\u540d\u79f0\u53ebCatalina,\u540e\u6765\u7684Tomcat\u53d1\u578b\u7248\u4e2d\u9ed8\u8ba4\u7684Service\u5c31\u53ebCatalina\u3002 2. JDK \u79cd\u7c7b \u00b6 Oracle\uff1aJDK Oracle\uff1aJRockit Open\uff1a OpenJDK 3. Java EE Application Servers \u00b6 1. \u5546\u4e1a\u8f6f\u4ef6 \u00b6 Websphere IBM Weblogic Oracle JBoss Redhat oc4j Oracle 2. \u5f00\u6e90\u8f6f\u4ef6 \u00b6 Jetty Tomcat Apache Resin 4. Tomcat\u7684\u7ec4\u4ef6 \u00b6 \u9876\u7ea7\u7ec4\u4ef6\uff1a\u4f4d\u4e8e\u6574\u4e2a\u914d\u7f6e\u7684\u9876\u5c42 \u5bb9\u5668\u7c7b\u7ec4\u4ef6\uff1a\u53ef\u4ee5\u5305\u542b\u5176\u4ed6\u7ec4\u4ef6 \u8fde\u63a5\u5668\u7ec4\u4ef6\uff1a\u8fde\u63a5\u7528\u6237\u8bf7\u6c42\u81f3Tomcat \u88ab\u5d4c\u5957\u7c7b\u7ec4\u4ef6\uff1a\u4f4d\u4e8e\u4e00\u4e2a\u5bb9\u5668\u4e2d\uff0c\u4e0d\u80fd\u5305\u542b\u5176\u4ed6\u7ec4\u4ef6 4.1 \u5bb9\u5668\u7c7b \u00b6 engine\uff1a\u6838\u5fc3\u5bb9\u5668\uff1aCatalina\u5f15\u64ce\u3002\u901a\u8fc7connector\u63a5\u53d7\u7528\u6237\u8bf7\u6c42 host:\u7c7b\u4f3c\u4e8eapache\u7684\u865a\u62df\u4e3b\u673a\u3002\u652f\u6301\u57fa\u4e8eFQDN\u7684\u865a\u62df\u4e3b\u673a context\uff1a\u6700\u5185\u5c42\u7684\u5bb9\u5668\u7c7b\u7ec4\u4ef6\uff0c\u4e00\u4e2acontext\u4ee3\u8868\u4e00\u4e2aweb\u5e94\u7528\u7a0b\u5e8f\uff0c\u914d\u7f6econtext\u7684\u4e3b\u8981\u76ee\u7684\u662fwebapp\u7684\u6839\u76ee\u5f55\u3002\u8fd8\u80fd\u914d\u7f6e\u4e00\u4e9b\u989d\u5916\u7684\u5c5e\u6027\uff0c\u5982\u90e8\u7f72\u65b9\u5f0f\u3002 service\uff1a\u5c06\u8fde\u63a5\u5668\u5173\u8054\u81f3engine\uff0c\u4e00\u4e2aService\u5185\u90e8\u53ea\u80fd\u6709\u4e00\u4e2aengine\uff0c\u53ef\u4ee5\u6709\u591a\u4e2aconnector\u3002 4.2 \u9876\u7ea7\u7ec4\u4ef6 \u00b6 server:\u4e00\u4e2a\u8fd0\u884c\u4e0eJVM\u4e2d\u7684Tomcat\u5b9e\u4f8b 4.3 \u5d4c\u5957\u7c7b\u7ec4\u4ef6 \u00b6 valve\uff1a\u62e6\u622a\u8bf7\u6c42\uff0c\u5e76\u5728\u5c06\u5176\u8f6c\u81f3\u5bf9\u5e94\u7684webapp\u4e4b\u95f4\u8fdb\u884c\u9b54\u79cd\u5904\u7406\u64cd\u4f5c\u3002\u53ef\u7528\u4e8e\u4efb\u4f55\u5bb9\u5668\u4e2d access log valve\uff1a remote address filter vlave\uff1a\u57fa\u4e8eIP\u505a\u8bbf\u95ee\u63a7\u5236 logger\uff1a\u65e5\u5fd7\u8bb0\u5f55\u5668\uff0c\u7528\u4e8e\u8bb0\u5f55\u7ec4\u4ef6\u5185\u90e8\u7684\u72b6\u6001\u4fe1\u606f\uff1b\u53ef\u7528\u4e8e\u9664context\u4e4b\u5916\u7684\u4efb\u4f55\u5bb9\u5668\u4e2d\u3002 realm\uff1a\u53ef\u7528\u4e8e\u4efb\u4f55\u5bb9\u5668\u7c7b\u7ec4\u4ef6\u4e2d\u3002\u5173\u8054\u4e00\u4e2a\u7528\u6237\u8ba4\u8bc1\u5e93\uff0c\u5b9e\u73b0\u8ba4\u8bc1\u548c\u6388\u6743\u3002 UserDatabaseRealm\uff1a\u57fa\u4e8eJNDI\u81ea\u5b9a\u4e49\u7684\u7528\u6237\u8ba4\u8bc1 MemoryRealm:tomcat-users.xml JDBCRealm\uff1a\u57fa\u4e8eJDBC\u8fde\u63a5\u81f3\u6570\u636e\u5e93\u4e2d\u67e5\u627e\u7528\u6237 \u4e8c\u3001Tomcat \u5b89\u88c5 \u00b6 \u4e09\u3001Tomcat \u76ee\u5f55\u7ed3\u6784 \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 apache-tomcat-8.5.35/ \u251c\u2500\u2500 bin \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u542f\u52a8\u548c\u5173\u95edTomcat\u7684\u811a\u672c\u6587\u4ef6 \u251c\u2500\u2500 BUILDING.txt \u251c\u2500\u2500 conf\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000Tomcat\u7684\u914d\u7f6e\u6587\u4ef6 \u251c\u2500\u2500 CONTRIBUTING.md \u251c\u2500\u2500 lib\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000 \u5b58\u653eTomcat\u8fd0\u884c\u9700\u8981\u7684\u5e93\u6587\u4ef6 \u251c\u2500\u2500 LICENSE \u251c\u2500\u2500 logs\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u5b58\u653eTomcat\u6267\u884c\u65f6\u7684log\u6587\u4ef6 \u251c\u2500\u2500 NOTICE \u251c\u2500\u2500 README.md \u251c\u2500\u2500 RELEASE-NOTES \u251c\u2500\u2500 RUNNING.txt \u251c\u2500\u2500 temp \u5b58\u653eTomcat\u6267\u884c\u65f6\u7684LOG\u6587\u4ef6 \u251c\u2500\u2500 webapps \u5b58\u653eTomcat\u7684\u5e94\u7528\u6587\u4ef6 \u2514\u2500\u2500 work \u5b58\u653eTomcat\u8fd0\u884c\u65f6\u4ea7\u751f\u7684class\u6587\u4ef6 bin\u76ee\u5f55\u7ed3\u6784 bin\u4e0b\u7684\u811a\u672c\u4e3b\u8981\u6709\u4e24\u79cd\uff0c\u4e00\u79cd\u4ee5.bat\u7ed3\u5c3e\u7684\u662f\u5728Windows\u73af\u5883\u4e0b\u8fd0\u884c\u7684\uff0c\u4e00\u79cd\u4ee5.sh\u7ed3\u5c3e\u7684\u662f\u5728Linux\u73af\u5883\u4e0b\u8fd0\u884c\u7684\u3002\u8fd9\u91cc\u4ee5Linux\u4ecb\u7ecd\u811a\u672c\u7684\u7528\u9014 1 2 3 4 5 6 7 8 9 10 bin \u251c\u2500\u2500 catalina.sh\u3000\u3000\u3000\u3000Tomcat\u7684\u4e3b\u8981\u811a\u672c\uff0c\u4f1a\u6267\u884cjava\u547d\u4ee4\u4ee5\u8c03\u7528Tomcat\u7684\u542f\u52a8\u548c\u505c\u6b62\u7c7b \u251c\u2500\u2500 configtest.sh \u251c\u2500\u2500 daemon.sh \u251c\u2500\u2500 digest.sh\u3000\u3000\u3000\u3000\u3000\u751f\u4ea7Tomcat\u5bc6\u7801\u7684\u52a0\u5bc6\u6458\u8981\u503c\uff0c\u7528\u4e8e\u751f\u6210\u52a0\u5bc6\u8fc7\u7684\u5bc6\u7801 \u251c\u2500\u2500 setclasspath.sh\u3000\u3000\u552f\u4e00\u7528\u4e8e\u7cfb\u7edf\u5185\u90e8\u4ee5\u8bbe\u5b9aTomcat\u7684classpath\u53ca\u8bb8\u591a\u5176\u4ed6\u73af\u5883\u53d8\u91cf\u7684\u811a\u672c\u3000\u3000 \u251c\u2500\u2500 shutdown.sh\u3000\u3000\u3000\u3000\u8fd0\u884ccatalina\u4ee5\u505c\u6b62Tomcat\u8fd0\u884c \u251c\u2500\u2500 startup.sh\u3000\u3000\u3000\u3000\u3000\u8fd0\u884ccatalina\u4ee5\u542f\u52a8Tomcat\u8fd0\u884c \u251c\u2500\u2500 tool-wrapper.sh\u3000\u3000\u7528\u4e8edigest\u811a\u672c\u7cfb\u7edf\u5185\u90e8\uff0c\u7528\u4e8e\u5c01\u88c5\u53ef\u7528\u4e0e\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\u7684\u811a\u672c\uff0c\u5e76\u8c03\u7528Classpath\u4e2d\u8bbe\u7f6e\u7684\u5b8c\u5168\u7b26\u5408\u8bbe\u5b9a\u7684\u4e3b\u8981\u65b9\u6cd5 \u2514\u2500\u2500 version.sh\u3000\u3000\u3000\u3000\u3000\u8f93\u51faTomcat\u7684\u7248\u672c\u4fe1\u606f conf\u76ee\u5f55\u7ed3\u6784 \u5b58\u653eTomcat\u76f8\u5173\u7684\u914d\u7f6e\u6587\u4ef6 1 2 3 4 5 6 7 8 9 10 11 12 13 conf/ \u251c\u2500\u2500 Catalina\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u7528\u4e8e\u5b58\u50a8\u81ea\u5b9a\u4e49\u90e8\u7f72Web\u5e94\u7528\u7684\u8def\u5f84 \u2502 \u2514\u2500\u2500 localhost \u251c\u2500\u2500 catalina.policy \u251c\u2500\u2500 catalina.properties \u251c\u2500\u2500 context.xml \u251c\u2500\u2500 jaspic-providers.xml \u251c\u2500\u2500 jaspic-providers.xsd \u251c\u2500\u2500 logging.properties \u251c\u2500\u2500 server.xml \u251c\u2500\u2500 tomcat-users.xml \u251c\u2500\u2500 tomcat-users.xsd \u2514\u2500\u2500 web.xml \u56db\u3001Tomcat\u751f\u547d\u5468\u671f\u7ba1\u7406 \u00b6 1.\u542f\u52a8 \u00b6 2. \u5173\u95ed \u00b6 3.\u8fdb\u7a0b\u7ba1\u7406 \u00b6 \u901a\u8fc7java\u81ea\u5e26\u7684jps\u547d\u4ee4\u67e5\u627eTomcat\u7684JVM\u4e0a\u662f\u5426\u4fdd\u7559Tomcat\u8fdb\u7a0b 1 $ jps | grep Bootstrap \u4e94\u3001\u914d\u7f6e\u6587\u4ef6\u89e3\u91ca \u00b6 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 <?xml version='1.0' encoding='utf-8'?> <Server port= \"8005\" shutdown= \"SHUTDOWN\" > <Listener className= \"org.apache.catalina.startup.VersionLoggerListener\" /> <Listener className= \"org.apache.catalina.security.SecurityListener\" /> <Listener className= \"org.apache.catalina.core.AprLifecycleListener\" SSLEngine= \"on\" /> <Listener className= \"org.apache.catalina.core.JreMemoryLeakPreventionListener\" /> <Listener className= \"org.apache.catalina.mbeans.GlobalResourcesLifecycleListener\" /> <Listener className= \"org.apache.catalina.core.ThreadLocalLeakPreventionListener\" /> <!-- \u5168\u5c40\u547d\u540d\u8d44\u6e90--> <GlobalNamingResources> <Resource name= \"UserDatabase\" auth= \"Container\" type= \"org.apache.catalina.UserDatabase\" description= \"User database that can be updated and saved\" factory= \"org.apache.catalina.users.MemoryUserDatabaseFactory\" pathname= \"conf/tomcat-users.xml\" /> <!--\u52a0\u8f7dconf/tomcat-users.xml\u4e2d\u7684\u5185\u5bb9--> </GlobalNamingResources> <Service name= \"Catalina\" > <!--\u5b9a\u4e49\u4e00\u4e2aHTTP\u7c7b\u578b\u7684\u8fde\u63a5\u5668\uff0c\u7aef\u53e3\u4e3a8080\uff0c\u7b49\u5f85\u5ba2\u6237\u7aef\u53d1\u9001\u8bf7\u6c42\u7684\u8d85\u65f6\u65f6\u95f4\uff0c\u5355\u4f4d\u4e3a\u6beb\u79d2--> <Connector port= \"8080\" protocol= \"HTTP/1.1\" connectionTimeout= \"20000\" redirectPort= \"8443\" /> <!--\u5b9a\u4e49\u4e00\u4e2aAJP\u7c7b\u578b\u7684\u8fde\u63a5\u5668--> <Connector port= \"8009\" protocol= \"AJP/1.3\" redirectPort= \"8443\" /> <!--\u5b9a\u4e49\u5f53\u524d\u5f15\u64ce\u7684\u540d\u5b57\u548c\u9ed8\u8ba4\u4e3b\u673a--> <Engine name= \"Catalina\" defaultHost= \"localhost\" > <!--\u5b9a\u4e49\u5bf9\u5f53\u524d\u5bb9\u5668\u5e94\u7528\u7a0b\u5e8f\u7684\u8bbf\u95ee\u8ba4\u8bc1\u65b9\u5f0f--> <Realm className= \"org.apache.catalina.realm.LockOutRealm\" > <Realm className= \"org.apache.catalina.realm.UserDatabaseRealm\" resourceName= \"UserDatabase\" /> <!--\u901a\u8fc7UserDatabase\u8fdb\u884c\u8ba4\u8bc1 --> </Realm> <!--\u5b9a\u4e49\u4e3b\u673a\u540d\uff0c \u5e94\u7528\u7a0b\u5e8f\u7684\u76ee\u5f55\uff08e.g:/web\uff09,\u9ed8\u8ba4\u5b89\u88c5\u76ee\u5f55\u4e0b\u7684webapps uppackWaRs\u5b9a\u4e49\u662f\u4e0d\u662f\u5b50\u81ea\u52a8\u89e3\u538bwar\u5305\uff0cautoDeploy\u5b9a\u4e49\u662f\u591f\u81ea\u52a8\u90e8\u7f72webapps\u4e0b\u7684\u5e94\u7528--> <Host name= \"localhost\" appBase= \"webapps\" unpackWARs= \"true\" autoDeploy= \"true\" > <!--\u53ef\u9009\uff1a\u5b9a\u4e49\u522b\u540d--> <Alisa> www.example.com </Alisa> <!--\u66f4\u6539\u8bbf\u95ee\u9ed8\u8ba4\u8def\u5f84--> <Context path= \"\" docBase= \"/web/sample\" reloadable= \"true\" /> <!-- \u5b9a\u4e49\u4e00\u4e2aValve\u7ec4\u4ef6\uff0c\u7528\u6765\u8bb0\u5f55tomcat\u7684\u8bbf\u95ee\u65e5\u5fd7\uff0c\u65e5\u5fd7\u5b58\u653e\u76ee\u5f55\u4e3a\u5b89\u88c5tomcat\u4e0b\u7684logs,\u540e\u7f00\u4e3a.txt--> <Valve className= \"org.apache.catalina.valves.AccessLogValve\" directory= \"logs\" prefix= \"localhost_access_log\" suffix= \".txt\" pattern= \"%h %l %u %t &quot;%r&quot; %s %b\" /> <Valve className= \"org.apache.catalina.valves.RemoteAddrValve\" allow= \"192.168.1.*\" /> <!-- \u5b9a\u4e49\u8fdc\u7a0b\u5730\u5740\u8bbf\u95ee\u7b56\u7565\uff0c\u4ec5\u5141\u8bb8192.168.1.*\u7f51\u6bb5\u8bbf\u95ee\u8be5\u4e3b\u673a\uff0c\u5176\u4ed6\u7684\u5c06\u88ab\u62d2\u7edd\u8bbf\u95ee --> </Host> <Host name= 'www.gaoyuanzhi.xyz' appBase= '/www/webapps' unpackWARs= \"true\" autoDeploy= \"true\" > <Valve className= \"org.apache.catalina.valves.AccessLogValve\" directory= \"logs\" prefix= \"gaoyuanzhi.xyz_access_log\" suffix= \".txt\" pattern= \"%h %l %u %t &quot;%r&quot; %s %b\" /> </Host> </Engine> </Service> </Server> Tomcat\u4f18\u5316 \u5185\u5b58\u7a7a\u95f4\u4f18\u5316\uff1a -x -XX jinfo -Xmx \uff1a\u5806\u5185\u5b58\u7a7a\u95f4\u7684\u6700\u5927\u503c -Xms \u5806\u5185\u5b58\u521d\u59cb\u5316\u5927\u5c0f \u5b9a\u4e49\u5728\u5806\u5185\u90e8\u5982\u4f55\u4f7f\u7528\u5185\u5b58\u7a7a\u95f4 -XX:NewSize: \u65b0\u751f\u4ee3\u521d\u59cb\u5316\u5927\u5c0f -XX MaxNewSize :\u65b0\u751f\u4ee3\u7a7a\u95f4\u6700\u5927\u503c \u8001\u5e74\u4ee3\u521d\u59cb\u5316\u7a7a\u95f4=-Xms --XX:NewSize -XX:SurvivorRatio\uff1a\u5e74\u8f7b\u4ee3\u4e2dEden\u533a\u4e0eSurvivor\u533a\u7684\u5927\u5c0f\u6bd4\u503c -XX PermSize: \u6301\u4e45\u4ee3\u521d\u59cb\u5316\u503c -XX MaxPermSize: \u6301\u4e45\u4ee3\u6700\u5927\u503c \u76d1\u63a7\uff1a jstat gc jstat -gc 1576 1000 jconsole visualvm jprofiler janalyzer \u516d\u3001tomcat APR\u6a21\u5f0f\u914d\u7f6e \u00b6 1. \u73af\u5883 \u00b6 \u64cd\u4f5c\u7cfb\u7edf\uff1aUbutnu 14 1 2 ubuntu@ubuntu:~$ uname -a Linux ubuntu 4 .4.0-31-generic #50~14.04.1-Ubuntu SMP Wed Jul 13 01:07:32 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux JDK 1.8 1 2 3 4 5 6 ubuntu@ubuntu:~$ java -version java version \"1.8.0_141\" Java ( TM ) SE Runtime Environment ( build 1 .8.0_141-b15 ) Java HotSpot ( TM ) 64 -Bit Server VM ( build 25 .141-b15, mixed mode ) ubuntu@ubuntu:~$ whereis java java: /usr/local/java /usr/share/java Tomcat 8.5.35 1 2 3 4 5 6 7 8 9 10 11 12 13 14 root@ubuntu:~# /var/www/demo/bin/version.sh Using CATALINA_BASE: /var/www/demo Using CATALINA_HOME: /var/www/demo Using CATALINA_TMPDIR: /var/www/demo/temp Using JRE_HOME: /usr/local/java/jre Using CLASSPATH: /var/www/demo/bin/bootstrap.jar:/var/www/demo/bin/tomcat-juli.jar Server version: Apache Tomcat/8.5.35 Server built: Nov 3 2018 17 :39:20 UTC Server number: 8 .5.35.0 OS Name: Linux OS Version: 4 .4.0-31-generic Architecture: amd64 JVM Version: 1 .8.0_141-b15 JVM Vendor: Oracle Corporation 2. \u5b89\u88c5 \u00b6 1. \u5b89\u88c5\u7f16\u8bd1\u9700\u8981\u7684\u73af\u5883 \u00b6 1 $ sudo apt install gcc make 2. \u5b89\u88c5 native\u3000\u7f16\u8bd1\u6240\u9700\u8981\u7684\u4f9d\u8d56\u5305 \u00b6 1 2 3 4 5 6 7 8 9 # apache apr $ sudo apt install libapr1-dev # openssl,\u81ea\u5e26\u7684 openssl\u7248\u672c\u8f83\u4f4e\uff0c\u9700\u8981\u7f16\u8bd1\u5b89\u88c5 $ wget https://www.openssl.org/source/openssl-1.1.1a.tar.gz $ sudo mkdir /usr/local/openssl $ tar zxf openssl-1.1.1a.tar.gz $ ./config --prefix = /usr/local/openssl $ make $ sudo make install 3.\u4e0b\u8f7d\u5b89\u88c5native \u00b6 1 2 3 4 5 $ wget http://mirrors.hust.edu.cn/apache/tomcat/tomcat-connectors/native/1.2.19/source/tomcat-native-1.2.19-src.tar.gz $ cd tomcat-native-1.2.19-src/native/ $ ./configure --with-ssl = /usr/local/openssl $ make $ sudo make install 3. \u914d\u7f6eTomcat \u00b6 1 2 root@ubuntu:/var/www/demo# cat bin/setenv.sh export JAVA_OPTS = \" $JAVA_OPTS -Djava.library.path=/usr/local/apr/lib\" 1 2 3 4 5 6 <Connector port = \"8080\" protocol = \"org.apache.coyote.http11.Http11AprProtocol\" connectionTimeout = \"20000\" redirectPort = \"8443\" /> ... <!--<Connector port = \"8009\" protocol = \"AJP/1.3\" redirectPort = \"8443\" /> --> 4. \u542f\u52a8Tomcat \u00b6 1 2 3 4 5 root@ubuntu:/var/www/demo# bin/catalina.sh run ..... 28 -Jan-2019 15 :55:09.140 INFO [ localhost-startStop-1 ] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [ /var/www/demo/webapps/docs ] has finished in [ 13 ] ms 28 -Jan-2019 15 :55:09.153 INFO [ main ] org.apache.coyote.AbstractProtocol.start Starting ProtocolHandler [ \"http-apr-8080\" ] 28 -Jan-2019 15 :55:09.172 INFO [ main ] org.apache.catalina.startup.Catalina.start Server startup in 803 ms 5. \u7f16\u8bd1\u65b9\u5f0f\u5b89\u88c5apr \u00b6 1. \u5b89\u88c5\u7f16\u8bd1\u9700\u8981\u7684\u73af\u5883 \u00b6 1 $ sudo apt install -y gcc make libtool libexpat1-dev 2. \u5b89\u88c5Apache Portable Runtime (apr) \u00b6 \u5b98\u65b9\u5730\u5740\uff1ahttps://apr.apache.org/compiling_unix.html 1. \u7f16\u8bd1\u5b89\u88c5apr \u00b6 1 2 3 4 5 6 wget http://mirrors.shu.edu.cn/apache//apr/apr-1.6.5.tar.gz tar zxf apr-1.6.5.tar.gz cd apr-1.6.5/ ./configure --prefix = /usr/local/apache-apr make sudo make install 2. \u7f16\u8bd1\u5b89\u88c5apr-iconv \u00b6 1 2 3 4 5 6 wget http://mirrors.shu.edu.cn/apache//apr/apr-iconv-1.2.2.tar.gz tar zxf apr-iconv-1.2.2.tar.gz cd apr-iconv-1.2.2/ ./configure --prefix = /usr/local/apache-apr-iconv --with-apr = /usr/local/apache-apr make sudo make install 3. \u7f16\u8bd1\u5b89\u88c5apr-util \u00b6 1 2 3 4 5 6 wget http://mirrors.shu.edu.cn/apache//apr/apr-util-1.6.1.tar.gz ubuntu@ubuntu:~/apr-util-1.6.1$ ./configure --prefix = /usr/local/apache-apr-util --with-apr = /usr/local/apache-apr --with-apr-iconv = /usr/local/apache-apr-iconv/bin/apriconv tar zxf apr-util-1.6.1.tar.gz cd apr-util-1.6.1/ make sudo make install 3. \u7f16\u8bd1\u5b89\u88c5openssl \u00b6 1 2 3 4 5 6 7 wget https://www.openssl.org/source/openssl-1.1.1a.tar.gz $ sudo mkdir /usr/local/openssl $ tar zxf openssl-1.1.1a.tar.gz $ ./config --prefix = /usr/local/openssl cd openssl-1.1.1a $ make $ sudo make install 4. \u7f16\u8bd1\u5b89\u88c5native \u00b6 1 2 3 4 5 6 wget http://mirrors.hust.edu.cn/apache/tomcat/tomcat-connectors/native/1.2.19/source/tomcat-native-1.2.19-src.tar.gz tar zxf tomcat-native-1.2.19-src.tar.gz $ cd tomcat-native-1.2.19-src/native/ $ ./configure --prefix = /usr/local/native --with-ssl = /usr/local/openssl --with-apr = /usr/local/apache-apr/bin/apr-1-config $ make $ sudo make install","title":"Tomcat"},{"location":"web/%E8%BD%AF%E4%BB%B6/Tomcat/#tomcat","text":"","title":"\u4e00\u3001Tomcat \u4ecb\u7ecd"},{"location":"web/%E8%BD%AF%E4%BB%B6/Tomcat/#1-tomcat","text":"Sun \u65e9\u671f\u4e3a\u4e86\u80fd\u4e3a\u65e9\u671f\u63d0\u51fa\u7684\u5404\u79cd\u89c4\u8303\u505a\u4e00\u4e2a\u6f14\u793a\uff0c\u5bf9Servlet \u63d0\u4f9b\u4e86\u4e00\u4e2a\u53c2\u8003\u6027\u5b9e\u73b0\u53eb Java Web Server\uff1b ASF\u4e5f\u521b\u5efa\u4e86\u4e00\u4e2a\u53ebJServ\u3002\u540e\u6765\u5408\u5e76\u53ebTomcat 3.0, Tomcat 4.0\uff0c\u6709\u4e00\u4e2a\u9879\u76ee\u540d\u79f0\u53ebCatalina,\u540e\u6765\u7684Tomcat\u53d1\u578b\u7248\u4e2d\u9ed8\u8ba4\u7684Service\u5c31\u53ebCatalina\u3002","title":"1. Tomcat \u6765\u5386"},{"location":"web/%E8%BD%AF%E4%BB%B6/Tomcat/#2-jdk","text":"Oracle\uff1aJDK Oracle\uff1aJRockit Open\uff1a OpenJDK","title":"2. JDK \u79cd\u7c7b"},{"location":"web/%E8%BD%AF%E4%BB%B6/Tomcat/#3-java-ee-application-servers","text":"","title":"3. Java EE Application Servers"},{"location":"web/%E8%BD%AF%E4%BB%B6/Tomcat/#1","text":"Websphere IBM Weblogic Oracle JBoss Redhat oc4j Oracle","title":"1. \u5546\u4e1a\u8f6f\u4ef6"},{"location":"web/%E8%BD%AF%E4%BB%B6/Tomcat/#2","text":"Jetty Tomcat Apache Resin","title":"2. \u5f00\u6e90\u8f6f\u4ef6"},{"location":"web/%E8%BD%AF%E4%BB%B6/Tomcat/#4-tomcat","text":"\u9876\u7ea7\u7ec4\u4ef6\uff1a\u4f4d\u4e8e\u6574\u4e2a\u914d\u7f6e\u7684\u9876\u5c42 \u5bb9\u5668\u7c7b\u7ec4\u4ef6\uff1a\u53ef\u4ee5\u5305\u542b\u5176\u4ed6\u7ec4\u4ef6 \u8fde\u63a5\u5668\u7ec4\u4ef6\uff1a\u8fde\u63a5\u7528\u6237\u8bf7\u6c42\u81f3Tomcat \u88ab\u5d4c\u5957\u7c7b\u7ec4\u4ef6\uff1a\u4f4d\u4e8e\u4e00\u4e2a\u5bb9\u5668\u4e2d\uff0c\u4e0d\u80fd\u5305\u542b\u5176\u4ed6\u7ec4\u4ef6","title":"4. Tomcat\u7684\u7ec4\u4ef6"},{"location":"web/%E8%BD%AF%E4%BB%B6/Tomcat/#41","text":"engine\uff1a\u6838\u5fc3\u5bb9\u5668\uff1aCatalina\u5f15\u64ce\u3002\u901a\u8fc7connector\u63a5\u53d7\u7528\u6237\u8bf7\u6c42 host:\u7c7b\u4f3c\u4e8eapache\u7684\u865a\u62df\u4e3b\u673a\u3002\u652f\u6301\u57fa\u4e8eFQDN\u7684\u865a\u62df\u4e3b\u673a context\uff1a\u6700\u5185\u5c42\u7684\u5bb9\u5668\u7c7b\u7ec4\u4ef6\uff0c\u4e00\u4e2acontext\u4ee3\u8868\u4e00\u4e2aweb\u5e94\u7528\u7a0b\u5e8f\uff0c\u914d\u7f6econtext\u7684\u4e3b\u8981\u76ee\u7684\u662fwebapp\u7684\u6839\u76ee\u5f55\u3002\u8fd8\u80fd\u914d\u7f6e\u4e00\u4e9b\u989d\u5916\u7684\u5c5e\u6027\uff0c\u5982\u90e8\u7f72\u65b9\u5f0f\u3002 service\uff1a\u5c06\u8fde\u63a5\u5668\u5173\u8054\u81f3engine\uff0c\u4e00\u4e2aService\u5185\u90e8\u53ea\u80fd\u6709\u4e00\u4e2aengine\uff0c\u53ef\u4ee5\u6709\u591a\u4e2aconnector\u3002","title":"4.1 \u5bb9\u5668\u7c7b"},{"location":"web/%E8%BD%AF%E4%BB%B6/Tomcat/#42","text":"server:\u4e00\u4e2a\u8fd0\u884c\u4e0eJVM\u4e2d\u7684Tomcat\u5b9e\u4f8b","title":"4.2 \u9876\u7ea7\u7ec4\u4ef6"},{"location":"web/%E8%BD%AF%E4%BB%B6/Tomcat/#43","text":"valve\uff1a\u62e6\u622a\u8bf7\u6c42\uff0c\u5e76\u5728\u5c06\u5176\u8f6c\u81f3\u5bf9\u5e94\u7684webapp\u4e4b\u95f4\u8fdb\u884c\u9b54\u79cd\u5904\u7406\u64cd\u4f5c\u3002\u53ef\u7528\u4e8e\u4efb\u4f55\u5bb9\u5668\u4e2d access log valve\uff1a remote address filter vlave\uff1a\u57fa\u4e8eIP\u505a\u8bbf\u95ee\u63a7\u5236 logger\uff1a\u65e5\u5fd7\u8bb0\u5f55\u5668\uff0c\u7528\u4e8e\u8bb0\u5f55\u7ec4\u4ef6\u5185\u90e8\u7684\u72b6\u6001\u4fe1\u606f\uff1b\u53ef\u7528\u4e8e\u9664context\u4e4b\u5916\u7684\u4efb\u4f55\u5bb9\u5668\u4e2d\u3002 realm\uff1a\u53ef\u7528\u4e8e\u4efb\u4f55\u5bb9\u5668\u7c7b\u7ec4\u4ef6\u4e2d\u3002\u5173\u8054\u4e00\u4e2a\u7528\u6237\u8ba4\u8bc1\u5e93\uff0c\u5b9e\u73b0\u8ba4\u8bc1\u548c\u6388\u6743\u3002 UserDatabaseRealm\uff1a\u57fa\u4e8eJNDI\u81ea\u5b9a\u4e49\u7684\u7528\u6237\u8ba4\u8bc1 MemoryRealm:tomcat-users.xml JDBCRealm\uff1a\u57fa\u4e8eJDBC\u8fde\u63a5\u81f3\u6570\u636e\u5e93\u4e2d\u67e5\u627e\u7528\u6237","title":"4.3 \u5d4c\u5957\u7c7b\u7ec4\u4ef6"},{"location":"web/%E8%BD%AF%E4%BB%B6/Tomcat/#tomcat_1","text":"","title":"\u4e8c\u3001Tomcat \u5b89\u88c5"},{"location":"web/%E8%BD%AF%E4%BB%B6/Tomcat/#tomcat_2","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 apache-tomcat-8.5.35/ \u251c\u2500\u2500 bin \u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u542f\u52a8\u548c\u5173\u95edTomcat\u7684\u811a\u672c\u6587\u4ef6 \u251c\u2500\u2500 BUILDING.txt \u251c\u2500\u2500 conf\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000Tomcat\u7684\u914d\u7f6e\u6587\u4ef6 \u251c\u2500\u2500 CONTRIBUTING.md \u251c\u2500\u2500 lib\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000 \u5b58\u653eTomcat\u8fd0\u884c\u9700\u8981\u7684\u5e93\u6587\u4ef6 \u251c\u2500\u2500 LICENSE \u251c\u2500\u2500 logs\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u5b58\u653eTomcat\u6267\u884c\u65f6\u7684log\u6587\u4ef6 \u251c\u2500\u2500 NOTICE \u251c\u2500\u2500 README.md \u251c\u2500\u2500 RELEASE-NOTES \u251c\u2500\u2500 RUNNING.txt \u251c\u2500\u2500 temp \u5b58\u653eTomcat\u6267\u884c\u65f6\u7684LOG\u6587\u4ef6 \u251c\u2500\u2500 webapps \u5b58\u653eTomcat\u7684\u5e94\u7528\u6587\u4ef6 \u2514\u2500\u2500 work \u5b58\u653eTomcat\u8fd0\u884c\u65f6\u4ea7\u751f\u7684class\u6587\u4ef6 bin\u76ee\u5f55\u7ed3\u6784 bin\u4e0b\u7684\u811a\u672c\u4e3b\u8981\u6709\u4e24\u79cd\uff0c\u4e00\u79cd\u4ee5.bat\u7ed3\u5c3e\u7684\u662f\u5728Windows\u73af\u5883\u4e0b\u8fd0\u884c\u7684\uff0c\u4e00\u79cd\u4ee5.sh\u7ed3\u5c3e\u7684\u662f\u5728Linux\u73af\u5883\u4e0b\u8fd0\u884c\u7684\u3002\u8fd9\u91cc\u4ee5Linux\u4ecb\u7ecd\u811a\u672c\u7684\u7528\u9014 1 2 3 4 5 6 7 8 9 10 bin \u251c\u2500\u2500 catalina.sh\u3000\u3000\u3000\u3000Tomcat\u7684\u4e3b\u8981\u811a\u672c\uff0c\u4f1a\u6267\u884cjava\u547d\u4ee4\u4ee5\u8c03\u7528Tomcat\u7684\u542f\u52a8\u548c\u505c\u6b62\u7c7b \u251c\u2500\u2500 configtest.sh \u251c\u2500\u2500 daemon.sh \u251c\u2500\u2500 digest.sh\u3000\u3000\u3000\u3000\u3000\u751f\u4ea7Tomcat\u5bc6\u7801\u7684\u52a0\u5bc6\u6458\u8981\u503c\uff0c\u7528\u4e8e\u751f\u6210\u52a0\u5bc6\u8fc7\u7684\u5bc6\u7801 \u251c\u2500\u2500 setclasspath.sh\u3000\u3000\u552f\u4e00\u7528\u4e8e\u7cfb\u7edf\u5185\u90e8\u4ee5\u8bbe\u5b9aTomcat\u7684classpath\u53ca\u8bb8\u591a\u5176\u4ed6\u73af\u5883\u53d8\u91cf\u7684\u811a\u672c\u3000\u3000 \u251c\u2500\u2500 shutdown.sh\u3000\u3000\u3000\u3000\u8fd0\u884ccatalina\u4ee5\u505c\u6b62Tomcat\u8fd0\u884c \u251c\u2500\u2500 startup.sh\u3000\u3000\u3000\u3000\u3000\u8fd0\u884ccatalina\u4ee5\u542f\u52a8Tomcat\u8fd0\u884c \u251c\u2500\u2500 tool-wrapper.sh\u3000\u3000\u7528\u4e8edigest\u811a\u672c\u7cfb\u7edf\u5185\u90e8\uff0c\u7528\u4e8e\u5c01\u88c5\u53ef\u7528\u4e0e\u8bbe\u7f6e\u73af\u5883\u53d8\u91cf\u7684\u811a\u672c\uff0c\u5e76\u8c03\u7528Classpath\u4e2d\u8bbe\u7f6e\u7684\u5b8c\u5168\u7b26\u5408\u8bbe\u5b9a\u7684\u4e3b\u8981\u65b9\u6cd5 \u2514\u2500\u2500 version.sh\u3000\u3000\u3000\u3000\u3000\u8f93\u51faTomcat\u7684\u7248\u672c\u4fe1\u606f conf\u76ee\u5f55\u7ed3\u6784 \u5b58\u653eTomcat\u76f8\u5173\u7684\u914d\u7f6e\u6587\u4ef6 1 2 3 4 5 6 7 8 9 10 11 12 13 conf/ \u251c\u2500\u2500 Catalina\u3000\u3000\u3000\u3000\u3000\u3000\u3000\u7528\u4e8e\u5b58\u50a8\u81ea\u5b9a\u4e49\u90e8\u7f72Web\u5e94\u7528\u7684\u8def\u5f84 \u2502 \u2514\u2500\u2500 localhost \u251c\u2500\u2500 catalina.policy \u251c\u2500\u2500 catalina.properties \u251c\u2500\u2500 context.xml \u251c\u2500\u2500 jaspic-providers.xml \u251c\u2500\u2500 jaspic-providers.xsd \u251c\u2500\u2500 logging.properties \u251c\u2500\u2500 server.xml \u251c\u2500\u2500 tomcat-users.xml \u251c\u2500\u2500 tomcat-users.xsd \u2514\u2500\u2500 web.xml","title":"\u4e09\u3001Tomcat \u76ee\u5f55\u7ed3\u6784"},{"location":"web/%E8%BD%AF%E4%BB%B6/Tomcat/#tomcat_3","text":"","title":"\u56db\u3001Tomcat\u751f\u547d\u5468\u671f\u7ba1\u7406"},{"location":"web/%E8%BD%AF%E4%BB%B6/Tomcat/#1_1","text":"","title":"1.\u542f\u52a8"},{"location":"web/%E8%BD%AF%E4%BB%B6/Tomcat/#2_1","text":"","title":"2. \u5173\u95ed"},{"location":"web/%E8%BD%AF%E4%BB%B6/Tomcat/#3","text":"\u901a\u8fc7java\u81ea\u5e26\u7684jps\u547d\u4ee4\u67e5\u627eTomcat\u7684JVM\u4e0a\u662f\u5426\u4fdd\u7559Tomcat\u8fdb\u7a0b 1 $ jps | grep Bootstrap","title":"3.\u8fdb\u7a0b\u7ba1\u7406"},{"location":"web/%E8%BD%AF%E4%BB%B6/Tomcat/#_1","text":"1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 <?xml version='1.0' encoding='utf-8'?> <Server port= \"8005\" shutdown= \"SHUTDOWN\" > <Listener className= \"org.apache.catalina.startup.VersionLoggerListener\" /> <Listener className= \"org.apache.catalina.security.SecurityListener\" /> <Listener className= \"org.apache.catalina.core.AprLifecycleListener\" SSLEngine= \"on\" /> <Listener className= \"org.apache.catalina.core.JreMemoryLeakPreventionListener\" /> <Listener className= \"org.apache.catalina.mbeans.GlobalResourcesLifecycleListener\" /> <Listener className= \"org.apache.catalina.core.ThreadLocalLeakPreventionListener\" /> <!-- \u5168\u5c40\u547d\u540d\u8d44\u6e90--> <GlobalNamingResources> <Resource name= \"UserDatabase\" auth= \"Container\" type= \"org.apache.catalina.UserDatabase\" description= \"User database that can be updated and saved\" factory= \"org.apache.catalina.users.MemoryUserDatabaseFactory\" pathname= \"conf/tomcat-users.xml\" /> <!--\u52a0\u8f7dconf/tomcat-users.xml\u4e2d\u7684\u5185\u5bb9--> </GlobalNamingResources> <Service name= \"Catalina\" > <!--\u5b9a\u4e49\u4e00\u4e2aHTTP\u7c7b\u578b\u7684\u8fde\u63a5\u5668\uff0c\u7aef\u53e3\u4e3a8080\uff0c\u7b49\u5f85\u5ba2\u6237\u7aef\u53d1\u9001\u8bf7\u6c42\u7684\u8d85\u65f6\u65f6\u95f4\uff0c\u5355\u4f4d\u4e3a\u6beb\u79d2--> <Connector port= \"8080\" protocol= \"HTTP/1.1\" connectionTimeout= \"20000\" redirectPort= \"8443\" /> <!--\u5b9a\u4e49\u4e00\u4e2aAJP\u7c7b\u578b\u7684\u8fde\u63a5\u5668--> <Connector port= \"8009\" protocol= \"AJP/1.3\" redirectPort= \"8443\" /> <!--\u5b9a\u4e49\u5f53\u524d\u5f15\u64ce\u7684\u540d\u5b57\u548c\u9ed8\u8ba4\u4e3b\u673a--> <Engine name= \"Catalina\" defaultHost= \"localhost\" > <!--\u5b9a\u4e49\u5bf9\u5f53\u524d\u5bb9\u5668\u5e94\u7528\u7a0b\u5e8f\u7684\u8bbf\u95ee\u8ba4\u8bc1\u65b9\u5f0f--> <Realm className= \"org.apache.catalina.realm.LockOutRealm\" > <Realm className= \"org.apache.catalina.realm.UserDatabaseRealm\" resourceName= \"UserDatabase\" /> <!--\u901a\u8fc7UserDatabase\u8fdb\u884c\u8ba4\u8bc1 --> </Realm> <!--\u5b9a\u4e49\u4e3b\u673a\u540d\uff0c \u5e94\u7528\u7a0b\u5e8f\u7684\u76ee\u5f55\uff08e.g:/web\uff09,\u9ed8\u8ba4\u5b89\u88c5\u76ee\u5f55\u4e0b\u7684webapps uppackWaRs\u5b9a\u4e49\u662f\u4e0d\u662f\u5b50\u81ea\u52a8\u89e3\u538bwar\u5305\uff0cautoDeploy\u5b9a\u4e49\u662f\u591f\u81ea\u52a8\u90e8\u7f72webapps\u4e0b\u7684\u5e94\u7528--> <Host name= \"localhost\" appBase= \"webapps\" unpackWARs= \"true\" autoDeploy= \"true\" > <!--\u53ef\u9009\uff1a\u5b9a\u4e49\u522b\u540d--> <Alisa> www.example.com </Alisa> <!--\u66f4\u6539\u8bbf\u95ee\u9ed8\u8ba4\u8def\u5f84--> <Context path= \"\" docBase= \"/web/sample\" reloadable= \"true\" /> <!-- \u5b9a\u4e49\u4e00\u4e2aValve\u7ec4\u4ef6\uff0c\u7528\u6765\u8bb0\u5f55tomcat\u7684\u8bbf\u95ee\u65e5\u5fd7\uff0c\u65e5\u5fd7\u5b58\u653e\u76ee\u5f55\u4e3a\u5b89\u88c5tomcat\u4e0b\u7684logs,\u540e\u7f00\u4e3a.txt--> <Valve className= \"org.apache.catalina.valves.AccessLogValve\" directory= \"logs\" prefix= \"localhost_access_log\" suffix= \".txt\" pattern= \"%h %l %u %t &quot;%r&quot; %s %b\" /> <Valve className= \"org.apache.catalina.valves.RemoteAddrValve\" allow= \"192.168.1.*\" /> <!-- \u5b9a\u4e49\u8fdc\u7a0b\u5730\u5740\u8bbf\u95ee\u7b56\u7565\uff0c\u4ec5\u5141\u8bb8192.168.1.*\u7f51\u6bb5\u8bbf\u95ee\u8be5\u4e3b\u673a\uff0c\u5176\u4ed6\u7684\u5c06\u88ab\u62d2\u7edd\u8bbf\u95ee --> </Host> <Host name= 'www.gaoyuanzhi.xyz' appBase= '/www/webapps' unpackWARs= \"true\" autoDeploy= \"true\" > <Valve className= \"org.apache.catalina.valves.AccessLogValve\" directory= \"logs\" prefix= \"gaoyuanzhi.xyz_access_log\" suffix= \".txt\" pattern= \"%h %l %u %t &quot;%r&quot; %s %b\" /> </Host> </Engine> </Service> </Server> Tomcat\u4f18\u5316 \u5185\u5b58\u7a7a\u95f4\u4f18\u5316\uff1a -x -XX jinfo -Xmx \uff1a\u5806\u5185\u5b58\u7a7a\u95f4\u7684\u6700\u5927\u503c -Xms \u5806\u5185\u5b58\u521d\u59cb\u5316\u5927\u5c0f \u5b9a\u4e49\u5728\u5806\u5185\u90e8\u5982\u4f55\u4f7f\u7528\u5185\u5b58\u7a7a\u95f4 -XX:NewSize: \u65b0\u751f\u4ee3\u521d\u59cb\u5316\u5927\u5c0f -XX MaxNewSize :\u65b0\u751f\u4ee3\u7a7a\u95f4\u6700\u5927\u503c \u8001\u5e74\u4ee3\u521d\u59cb\u5316\u7a7a\u95f4=-Xms --XX:NewSize -XX:SurvivorRatio\uff1a\u5e74\u8f7b\u4ee3\u4e2dEden\u533a\u4e0eSurvivor\u533a\u7684\u5927\u5c0f\u6bd4\u503c -XX PermSize: \u6301\u4e45\u4ee3\u521d\u59cb\u5316\u503c -XX MaxPermSize: \u6301\u4e45\u4ee3\u6700\u5927\u503c \u76d1\u63a7\uff1a jstat gc jstat -gc 1576 1000 jconsole visualvm jprofiler janalyzer","title":"\u4e94\u3001\u914d\u7f6e\u6587\u4ef6\u89e3\u91ca"},{"location":"web/%E8%BD%AF%E4%BB%B6/Tomcat/#tomcat-apr","text":"","title":"\u516d\u3001tomcat APR\u6a21\u5f0f\u914d\u7f6e"},{"location":"web/%E8%BD%AF%E4%BB%B6/Tomcat/#1_2","text":"\u64cd\u4f5c\u7cfb\u7edf\uff1aUbutnu 14 1 2 ubuntu@ubuntu:~$ uname -a Linux ubuntu 4 .4.0-31-generic #50~14.04.1-Ubuntu SMP Wed Jul 13 01:07:32 UTC 2016 x86_64 x86_64 x86_64 GNU/Linux JDK 1.8 1 2 3 4 5 6 ubuntu@ubuntu:~$ java -version java version \"1.8.0_141\" Java ( TM ) SE Runtime Environment ( build 1 .8.0_141-b15 ) Java HotSpot ( TM ) 64 -Bit Server VM ( build 25 .141-b15, mixed mode ) ubuntu@ubuntu:~$ whereis java java: /usr/local/java /usr/share/java Tomcat 8.5.35 1 2 3 4 5 6 7 8 9 10 11 12 13 14 root@ubuntu:~# /var/www/demo/bin/version.sh Using CATALINA_BASE: /var/www/demo Using CATALINA_HOME: /var/www/demo Using CATALINA_TMPDIR: /var/www/demo/temp Using JRE_HOME: /usr/local/java/jre Using CLASSPATH: /var/www/demo/bin/bootstrap.jar:/var/www/demo/bin/tomcat-juli.jar Server version: Apache Tomcat/8.5.35 Server built: Nov 3 2018 17 :39:20 UTC Server number: 8 .5.35.0 OS Name: Linux OS Version: 4 .4.0-31-generic Architecture: amd64 JVM Version: 1 .8.0_141-b15 JVM Vendor: Oracle Corporation","title":"1. \u73af\u5883"},{"location":"web/%E8%BD%AF%E4%BB%B6/Tomcat/#2_2","text":"","title":"2. \u5b89\u88c5"},{"location":"web/%E8%BD%AF%E4%BB%B6/Tomcat/#1_3","text":"1 $ sudo apt install gcc make","title":"1. \u5b89\u88c5\u7f16\u8bd1\u9700\u8981\u7684\u73af\u5883"},{"location":"web/%E8%BD%AF%E4%BB%B6/Tomcat/#2-native","text":"1 2 3 4 5 6 7 8 9 # apache apr $ sudo apt install libapr1-dev # openssl,\u81ea\u5e26\u7684 openssl\u7248\u672c\u8f83\u4f4e\uff0c\u9700\u8981\u7f16\u8bd1\u5b89\u88c5 $ wget https://www.openssl.org/source/openssl-1.1.1a.tar.gz $ sudo mkdir /usr/local/openssl $ tar zxf openssl-1.1.1a.tar.gz $ ./config --prefix = /usr/local/openssl $ make $ sudo make install","title":"2. \u5b89\u88c5 native\u3000\u7f16\u8bd1\u6240\u9700\u8981\u7684\u4f9d\u8d56\u5305"},{"location":"web/%E8%BD%AF%E4%BB%B6/Tomcat/#3native","text":"1 2 3 4 5 $ wget http://mirrors.hust.edu.cn/apache/tomcat/tomcat-connectors/native/1.2.19/source/tomcat-native-1.2.19-src.tar.gz $ cd tomcat-native-1.2.19-src/native/ $ ./configure --with-ssl = /usr/local/openssl $ make $ sudo make install","title":"3.\u4e0b\u8f7d\u5b89\u88c5native"},{"location":"web/%E8%BD%AF%E4%BB%B6/Tomcat/#3-tomcat","text":"1 2 root@ubuntu:/var/www/demo# cat bin/setenv.sh export JAVA_OPTS = \" $JAVA_OPTS -Djava.library.path=/usr/local/apr/lib\" 1 2 3 4 5 6 <Connector port = \"8080\" protocol = \"org.apache.coyote.http11.Http11AprProtocol\" connectionTimeout = \"20000\" redirectPort = \"8443\" /> ... <!--<Connector port = \"8009\" protocol = \"AJP/1.3\" redirectPort = \"8443\" /> -->","title":"3. \u914d\u7f6eTomcat"},{"location":"web/%E8%BD%AF%E4%BB%B6/Tomcat/#4-tomcat_1","text":"1 2 3 4 5 root@ubuntu:/var/www/demo# bin/catalina.sh run ..... 28 -Jan-2019 15 :55:09.140 INFO [ localhost-startStop-1 ] org.apache.catalina.startup.HostConfig.deployDirectory Deployment of web application directory [ /var/www/demo/webapps/docs ] has finished in [ 13 ] ms 28 -Jan-2019 15 :55:09.153 INFO [ main ] org.apache.coyote.AbstractProtocol.start Starting ProtocolHandler [ \"http-apr-8080\" ] 28 -Jan-2019 15 :55:09.172 INFO [ main ] org.apache.catalina.startup.Catalina.start Server startup in 803 ms","title":"4. \u542f\u52a8Tomcat"},{"location":"web/%E8%BD%AF%E4%BB%B6/Tomcat/#5-apr","text":"","title":"5. \u7f16\u8bd1\u65b9\u5f0f\u5b89\u88c5apr"},{"location":"web/%E8%BD%AF%E4%BB%B6/Tomcat/#1_4","text":"1 $ sudo apt install -y gcc make libtool libexpat1-dev","title":"1. \u5b89\u88c5\u7f16\u8bd1\u9700\u8981\u7684\u73af\u5883"},{"location":"web/%E8%BD%AF%E4%BB%B6/Tomcat/#2-apache-portable-runtime-apr","text":"\u5b98\u65b9\u5730\u5740\uff1ahttps://apr.apache.org/compiling_unix.html","title":"2. \u5b89\u88c5Apache Portable Runtime (apr)"},{"location":"web/%E8%BD%AF%E4%BB%B6/Tomcat/#1-apr","text":"1 2 3 4 5 6 wget http://mirrors.shu.edu.cn/apache//apr/apr-1.6.5.tar.gz tar zxf apr-1.6.5.tar.gz cd apr-1.6.5/ ./configure --prefix = /usr/local/apache-apr make sudo make install","title":"1. \u7f16\u8bd1\u5b89\u88c5apr"},{"location":"web/%E8%BD%AF%E4%BB%B6/Tomcat/#2-apr-iconv","text":"1 2 3 4 5 6 wget http://mirrors.shu.edu.cn/apache//apr/apr-iconv-1.2.2.tar.gz tar zxf apr-iconv-1.2.2.tar.gz cd apr-iconv-1.2.2/ ./configure --prefix = /usr/local/apache-apr-iconv --with-apr = /usr/local/apache-apr make sudo make install","title":"2. \u7f16\u8bd1\u5b89\u88c5apr-iconv"},{"location":"web/%E8%BD%AF%E4%BB%B6/Tomcat/#3-apr-util","text":"1 2 3 4 5 6 wget http://mirrors.shu.edu.cn/apache//apr/apr-util-1.6.1.tar.gz ubuntu@ubuntu:~/apr-util-1.6.1$ ./configure --prefix = /usr/local/apache-apr-util --with-apr = /usr/local/apache-apr --with-apr-iconv = /usr/local/apache-apr-iconv/bin/apriconv tar zxf apr-util-1.6.1.tar.gz cd apr-util-1.6.1/ make sudo make install","title":"3. \u7f16\u8bd1\u5b89\u88c5apr-util"},{"location":"web/%E8%BD%AF%E4%BB%B6/Tomcat/#3-openssl","text":"1 2 3 4 5 6 7 wget https://www.openssl.org/source/openssl-1.1.1a.tar.gz $ sudo mkdir /usr/local/openssl $ tar zxf openssl-1.1.1a.tar.gz $ ./config --prefix = /usr/local/openssl cd openssl-1.1.1a $ make $ sudo make install","title":"3. \u7f16\u8bd1\u5b89\u88c5openssl"},{"location":"web/%E8%BD%AF%E4%BB%B6/Tomcat/#4-native","text":"1 2 3 4 5 6 wget http://mirrors.hust.edu.cn/apache/tomcat/tomcat-connectors/native/1.2.19/source/tomcat-native-1.2.19-src.tar.gz tar zxf tomcat-native-1.2.19-src.tar.gz $ cd tomcat-native-1.2.19-src/native/ $ ./configure --prefix = /usr/local/native --with-ssl = /usr/local/openssl --with-apr = /usr/local/apache-apr/bin/apr-1-config $ make $ sudo make install","title":"4. \u7f16\u8bd1\u5b89\u88c5native"}]}